{"version":3,"file":"app/page.js","mappings":"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O,SAASgB,EAAiB,CAA2C,EAA3C,aAAEF,CAAQ,CAAiC,CAA3C,EACzBpB,EAASD,IACf,KADwBA,CAEtB,UAACU,EAAAA,CAAsBT,OAAQA,WAASoB,GAE5C,2EC9EO,mCACA,+BACA,6BACA,6HCGP,kBAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,MAAqB,EACtB,cAGA,OAFA,yEACA,iDACA,CACA,CAAC,MAAyB,EAC1B,cAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,MAAqB,EACtB,cAgCA,OA/BA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,MAAyB,EAC1B,cAEA,OADA,wCACA,CACA,CAAC,MAAsB,EACvB,cAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,MAAiB,EAClB,cAKA,OAJA,4CACA,4DACA,0CACA,0BACA,CACA,CAAC,MAAoB,EACrB,cAEA,OADA,qCACA,CACA,CAAC,MAAiB,EAClB,cAEA,OADA,+BACA,CACA,CAAC,MAAe,EAChB,cAEA,OADA,gDACA,CACA,CAAC,MAAgC,EACjC,cAGA,OAFA,sDACA,sDACA,CACA,CAAC,MAA0B,EAC3B,cAEA,OADA,+BACA,CACA,CAAC,MAAqB,EAEf,OACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,GACP,oCACA,qCACA,wCACA,8CCpIO,IAAKG,EAAAA,SAAAA,CAAAA,SAAAA,WAAAA,gHAAAA,OAIX,4mBEiBM,SAASC,IAyBhB,sDC3CE,iBAAiE,qBEHnE,MAAM,YAAa,kEAAmE,IAAS,EAAK,GAAL,CAAK,KAAS,MAAM,EAMnH,M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F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,oBAAiC,eAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,mBA3IA,YACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,iBACA,CAKA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,IAGA,oBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,UACA,IACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAC5D,SAiBA,KAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,KAKA,aACA,uDACA,iBAAsB,yCAAmE,CACzF,CACA,8CACA,yBAA8B,iDAAiD,EAE/E,WACA,gDAAmE,EACnE,CACA,kCCrTA,6DAiBA,YAAQ,oEARR,EAAU,EAAQ,IAAoB,CAS/B,YATU,KASV,MACP,iBACA,mCACA,CACA,CAKA,cACA,CALO,kBACP,8BACA,eACA,EAEA,aACA,kCAEA,IACA,qBACA,qCAEA,aACA,aACA,iCACS,GAET,OACA,EACA,UACA,wCACA,IAEA,GACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,SAKA,oBACA,qCACA,CACA,aACA,QACA,CACA,0BACA,iBACA,KAEA,OADA,gBACA,CACA,CACA,qBACA,2CACA,CACA,6BACA,iBACA,uBAEA,WAEA,uBACA,kBACA,CACA,YACA,MACA,aAEA,CAAgB,gBAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,IAAwB,8DACrC,WAGA,oFACA,KACA,EAGU,mDACV,QAHA,iCACA,MAIA,MAhEA,IAsEA,OALA,cACA,mBACA,mBACA,iBAEA,4EACA,8FACA,OACA,YACA,6CAAiF,IAAgB,kBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,CACA,IACA,+CAAuG,IAEvG,IACA,cACA,sBAEA,WACA,GAAwB,OAAU,IAElC,kBACA,QAGA,IACyB,UAEzB,MADA,OACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,OACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACA,EAAa,EAAwB,kDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,wCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,gCAEA,CACA,wBACA,6BACA,eACA,CACA,0BACA,6BACA,UACA,IACA,UAEA,CACA,CACA,YACA,YACA,YACA,CAAC,YCtND,MAAM,YAAa,kEAAmE,IAAS,EAAK,GAAL,CAAK,KAAS,MAAM,EAMnH,MAAmJ,cAAoB,sBAAwB,iDAAqD,IAAwD,IAAxD,KAAS,EAAY,WAAiB,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,EAAc,GAqBlC,GAlBA,MAHkC,EAGlC,CACA,kBAGA,kBACA,MAMA,SAAyB,IAAU,uEAGnC,GACY,EAAiB,GAG7B,oJAEA,MAAyB,QAAS,wBAClC,IACA,qBACA,oCACA,aACA,KAA0B,IAAc,OACxC,kBACiB,GAEjB,IACA,GACA,MAEA,CACA,OAAe,EAAyB,WACxC,CACA,CCnLO,OACP,GDgLwC,MChLxC,IACA,4BACA,yBACA,YACA,0BACA,gBCHW,cACX,MAA+B,IAA0B,gCAMzD,CAHA,GACA,sBAEA,yCACA,CAGA,yBACA,mBACA,EAEA,sCACA,CACA,yCACA,mBACA,EAEA,mCACA,CACA,uCACA,mBACA,EAEA,IACA,CC7BA,OACA,cACA,cACA,cACA,mBACA,kBACA,EACO,uBACA,cACP,2BACA,mCEVA,yBAA+E,YAAiB,WAChG,WACA,oBACA,GACQ,QAA4B,MACpC,GACA,CAEA,gBACA,KACA,SAEA,SACA,KAmBA,OAlBA,2BACA,sBACA,WAAsD,GAAkB,8BACxE,OAEA,MACA,CAAK,EACL,OACA,GAQA,QAAmC,GAAkB,6BAAuD,GAAkB,2BAA6B,GAAkB,8BAE7K,CACA,CACO,mBAGP,gBAFA,GACA,GAEA,CACO,iBASP,cALA,GAGA,GACA,GAEA,CCxCO,QAVP,kBACA,YACA,aACA,mBACA,oBAEA,aAEA,SAIA,iBACA,aACA,sCEAA,QAAQ,cAAc,4CACtB,4FACA,eACA,yBACA,0BACA,eACA,0BACA,EACA,cACA,GACA,IACA,WACA,wBACA,8BACA,EALA,OAQO,8CACA,2CACA,yBACA,yBACA,yBACY,yBACZ,yBACA,0BACA,iCACA,6BACA,6BACA,0BACA,iCACA,YAAkC,EAAE,IAAI,IAAI,kBAC5C,0BACA,iCACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,yCCtDA,QACP,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAG,GAAK,MACnB,KAAU,GAAO,GAAD,CAAK,KACrB,UACA,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAM,EAAD,CAAK,MACrB,MAAW,GAAQ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oB,GAAY,oDAChC,GAEA,IACA,oBACA,WACA,CAAS,WAGT,IADA,EACA,MAIA,WACA,2FACA,aACA,cACA,eACA,CAAqB,EAIrB,IAAwB,8EAA0E,EAElG,GADA,MACA,GAEA,iCACA,KAEA,eACA,qBACA,CAAyB,MACH,CAGtB,mBACA,wBAeA,WAfA,EAvHA,GACY,GAAI,GA0HhB,yBACA,iBAGA,OACA,YACA,cACA,WACA,CACA,CAIA,CAJ0B,EAKR,IAIlB,MACA,YAEA,IACA,SACA,CAAsB,SACtB,WACA,CAIA,SACA,qBACA,QACA,SAAgC,WAAc,eAC9C,KACA,MAEA,SACA,CACA,MAAuC,GAAM,4BAC7C,MACA,MA5bA,YACA,6BACA,eACA,iBACA,cAEA,QACA,EAqbA,GACA,eACA,qBACA,CAAyB,CACzB,EAAsB,IACtB,eACA,qBACA,CAAyB,CAEzB,CACA,CA4IA,CA5Ic,EA4Id,CACA,YACA,CAAc,SACd,WACA,CAEA,MADA,iCACA,CACA,GACA,kCA9iBA,YAAsC,2BAAyB,EAC/D,MAWA,wDACA,KAAgC,SAAuB,0BACvD,mDACA,GACA,EACA,EACA,EACA,EA4hBA,GACA,YACA,cACA,CAAiB,CACjB,CAAa,EAEb,MAcA,WAdA,EACA,qBACA,gCAEA,oCACA,qBACA,CAAiB,EACjB,OACA,YACA,QACA,CACA,CAKA,CALc,CAMd,CAAM,SACN,GAAY,QAAe,KAC3B,MAAgC,QAAuB,IACvD,EAAiC,QAAwB,IAKzD,GAFA,aAA6B,IAAkB,UAC/C,aAAkC,IAAkB,UACpD,EACA,OACA,YACA,kDACA,EAIA,OADA,0BACA,CACA,YACA,OAAwB,GAAY,OAEpC,CAAU,GAAS,QAAyB,KAG5C,GAFA,aAA6B,QAA2B,IACxD,0BACA,GACA,wBACA,IAKA,OACA,CAAkB,MAElB,CACA,OACA,YACA,sBACA,cACA,eACA,qBACA,CAAqB,CACrB,CACA,CAEA,OACA,gBACA,CACA,CAGA,MAIA,iBACA,iBACA,wBACA,IAKA,OACA,CAAc,MAEd,CACA,OACA,YACA,sBACA,eAEA,oCACA,qBACA,CAAiB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e,EACrF,KADsE,CACtE,MACA,gEACA,CAAiB,CACjB,MAEA,IACA,6BACA,YACA,uDACA,CAAiB,CACjB,CAAc,SAGd,YACA,kDACA,CAAiB,CACjB,CAGA,MAAmB,GAAiB,OACpC,OADoC,EACpC,SACA,SAA2B,cAAgB,SAAS,GAAa,GAAO,EAAE,GAAmB,EAA5B,CAA4B,GAAY,EACzG,MAA6B,EADgE,CAChE,MAAI,WACjC,MACA,SACA,cACS,WAAY,EAAM,EAC3B,CAAK,KACL,8BACA,KACA,EACA,KACA,EMXsC,CACtC,mBACA,MACA,mBACA,cACA,aACA,yBACA,CAAK,EACL,mBAAyE,GAA+B,CACxG,MACA,cACA,OAHwG,MAGxG,KACA,cACA,YACA,CAAK,GACG,UAAc,CACtB,CACA,mBAAsE,GAA+B,CACrG,MACA,cACA,OAHqG,MAGrG,KACA,cACA,YACA,CAAK,KACL,mBAAqE,GAA+B,CACpG,MACA,cACA,OAHoG,MAGpG,KACA,cACA,YACA,CAAK,KACL,cACA,cACA,CAAY,mBAAgC,MAAQ,QAAS,SAAS,IAAkB,wBACxF,mBACA,mCACA,YACA,gBACA,CACA,CAAK,KAAM,GAAqB,IAGhC,UAGA,IANgC,EAMhC,GACA,gBAAwD,GAA+B,CACvF,MACA,cACA,OAHuF,MAGvF,KACA,cACA,YACA,CAAK,KACL,mBAA6E,GAA+B,CAC5G,MACA,cACA,OAH4G,MAG5G,KACA,cACA,YACA,CAAK,KACL,mBAAsF,GAA+B,CACrH,MACA,cACA,OAHqH,MAGrH,KACA,cACA,YACA,CAAK,KACL,8BACA,gBACA,mBAEU,yBAEV,gCAA4C,IAAqB,uUACjE,aACA,cACA,eACA,CAAa,CACb,MARA,WAUA,uBAIA,gBACA,6BACU,wBAGV,IAFA,kBAEA,4CAGA,+HACA,aACA,cACA,eACA,CAAiB,CAGjB,OAFA,oCACA,4BACA,CACA,OAEA,wBACA,kCASA,GANA,iDACA,6CAEA,0CACQ,SHxID,KACP,IGuI0B,GHrI1B,OACmC,KAAc,MACvC,6CAEA,cACV,+DAA+E,EAAc,QAAQ,EAAM,iEAC3G,aACA,cACA,eACA,CAAa,CAGb,CAAM,SAEN,gEACA,QAEA,MACA,CACA,EGkH0B,uCAE1B,iDACA,oBACA,EAA8B,uBAAoB,YAClD,KACA,eACA,gBACA,wBACA,uBACA,oBACA,gBACA,gBAaA,CAEA,gDAEA,sBACA,kCAAwE,EAAQ,QAChF,4BACA,oDACA,aACA,cACA,eACA,CAAa,CACb,CACA,CACA,4BAcA,gCACA,MAA2C,GAAc,cA0BzD,KAEA,IACA,sBACA,KACA,KACA,oBACA,EAGA,2BAEA,GAAiB,IAAmC,iCAA2D,CAAlB,CAAkB,CAE/G,KAAmE,SAAI,KAA4B,EAAkB,SAAI,KACzH,OACA,CAAK,EACL,kBACA,MACA,2BACA,aACA,UACA,MACA,CAAK,EACL,eACA,MACA,2BACA,aACA,UACA,MACA,CAAK,EACL,eACA,MACA,8BACA,aACA,UACA,MACA,CAAK,EAGL,kDACA,qBACA,OACA,cACA,cACA,cAIA,OAYA,SAAmC,GAAyB,KAiB5D,iBAjB4D,GAiB5D,EAiCA,GAnBA,UACA,aACA,gBACA,sBACA,cACA,aACA,0BAGA,2CACA,2CACA,MACA,eACA,mBACA,iBAGA,gCACA,CAAa,IACb,EAEA,MAA2C,SAAI,KAC/C,SAAoC,SAAI,KAA8B,CACtE,CAAS,EAkCT,OAjCiC,GAAuB,iBAC1B,GAAuB,cACrB,GAAuB,GADF,EACE,WACvD,GAA6C,CADU,EACa,qBA8BpE,CACA,EAC0B,SAAI,IAC9B,oBAEA,SACA,YA/BS,GAgCT,gBACA,SAKiB,EACjB,kBACA,mBACA,WACA,YACA,eA5JuE,GAAtC,CAA0C,CAAqC,CAgKnG,EACb,EACA,CACK,GAEL,MACA,MACA,iBACA,YACA,SACA,OACA,CACA,UAAiD,SAAI,MAAY,WACrC,GAAuB,gBAUnD,IAVmD,GAUnD,IACA,GACA,GACA,GACA,MAEA,IA/NA,GAgOA,OACA,GAC0B,UAAK,CAAC,UAAc,EAC9C,UACA,GACA,YACA,CACa,CAtZb,KAuZA,GACA,GACA,GACA,CAcA,6DACA,OACA,GAC0B,UAAK,CAAC,UAAc,EAC9C,UACkC,SAAI,IACtC,4CACA,cACqB,EACrB,GACA,CACa,CAnbb,KAobA,GACA,GACA,GACA,CAEA,Ob/cO,YACP,Ka8c+C,Cb9c/C,8BACA,wEACA,Ea4c+C,IAK/C,WAGA,EACA,MACA,OACA,YACA,OACA,EAA4C,SAAI,IAChD,UAxRA,GAyRA,eACA,UACA,UACA,EACA,EACA,CACiB,CACjB,EAAc,IACd,EAA4C,SAAI,IAChD,UAlSA,GAmSA,eACA,SACA,CAAiB,MAEP,CAGV,cAIA,SAGA,EAFgB,GA/ShB,IAiT4C,SAAI,CAjThD,CA+SkC,EAEc,CAChD,SACA,eACA,oBACA,CAAiB,EAE2B,SAAI,CAvThD,GAuTgD,CAChD,SACA,cACA,CAAiB,CAEjB,CACA,UAA6C,IAAmB,CAGhE,GAF6B,GAAuB,cAAuB,GAAuB,GAA9C,EAA8C,kBAOlG,OACA,GAC0B,UAAK,CAAC,OAPwD,GAO1C,EAC9C,UACA,EACA,EAV4F,CAW1D,UAAK,IACvC,UAC0C,SAAI,KAC9C,OACA,CAA6B,EAC7B,GACA,CACqB,EACrB,CACa,CAngBb,KAogBA,GACA,GACA,GACA,CACM,KAGN,EADA,8CAEA,OACA,MACA,OACA,YACA,EAA8C,SAAI,IAClD,UAlWA,GAmWA,SACA,UACA,SACA,CAAiB,CACjB,EAAc,IACd,EAA8C,SAAI,IAClD,UAzWA,GA0WA,SACA,SACA,CAAiB,EAEjB,MACA,MACA,EACA,EAMA,MACA,0BACA,gBACA,oBACA,eACA,iBA5XA,GA6XA,gBACA,CAAiB,EACjB,MACA,0BACA,gBACA,oBACA,eACA,iBApYA,GAqYA,gBACA,CAAiB,EACjB,MACA,0BACA,gBACA,oBACA,eACA,iBA5YA,GA6YA,gBACA,CAAiB,EAEjB,EADA,QACgD,UAAK,IACrD,WACA,YACA,eACA,UACA,GACA,EACA,CACqB,CAvkBrB,KAykBgD,UAAK,CAAC,UAAc,EACpE,UACA,GACA,EACA,CACqB,CA9kBrB,IAglBA,EAAc,IACd,EAA4C,UAAK,CAAC,UAAc,EAChE,UACA,GACA,EACA,CACiB,CAtlBjB,IAwlBA,EAAU,IACV,IACA,EADA,UAIA,EAFgB,GA5ahB,IA8a8C,SAAI,CA9alD,CA4akC,EAEgB,CAClD,MACA,SACA,sBACA,CAAiB,EAE6B,SAAI,CApblD,GAobkD,CAClD,MACA,QACA,CAAiB,EAQjB,EANA,EAM4C,UAAK,IACjD,YAA8D,UAAK,CAAC,UAAS,EAC7E,UACA,GAC0C,UAAK,CAnc/C,GAmc+C,CAC/C,SACA,UACA,GACA,GACA,CAC6B,EAC7B,CACqB,SACrB,UACA,GACA,EACA,CACiB,CA/nBjB,KAioB4C,UAAK,CAAC,UAAc,EAChE,UACA,GACA,EACA,CACiB,CAtoBjB,IAwoBA,CAQA,OAP+B,GAAuB,eAOtD,CACA,GAHS,CAL6C,CAUtD,GACA,GACA,GACA,CAEA,CACA,yBAAgC,EAAO,EACvC,UAEA,yBACA,oBACM,wBACN,QAEA,IACA,CAEA,oCAAgD,sFAAuG,SACvJ,EAI6B,UAAK,CAAC,UAAS,EAC5C,UACA,EAC8B,SAAI,IAClC,YACA,MARA,CACA,UACA,EAOA,QACA,CAAiB,EACjB,CACS,EAET,IACA,CAIA,mBACA,IAAY,0BAAoB,EAAQ,mBAAmB,GAAiB,GAC5E,OACA,EAF4E,SAG5E,mBACA,IACA,KACA,kBACA,EAEA,YAEA,EACM,WAQN,KAIA,cANA,CAQA,CACA,uBAAiD,+CAA8C,EAE/F,MAAoD,KAAnC,GAAmC,6BAA2D,CAAlB,CAAkB,CAC/G,iBAAY,GAAkB,eAC9B,IAA8C,UAAK,CAAC,UAAS,EAC7D,UAC0B,SAAI,KAAc,EAC5C,EACA,CACK,SAOL,OADK,EALgB,GAAuB,OAU5C,CC/vBW,YDqvBiC,GCrvBjC,uBAA+C,+OAAoP,EAC9S,IAAY,6BAAc,iBAAgC,2EAAwE,EAClI,UACA,iBACA,QAAY,GAAS,EAIrB,EAHA,YAGA,GAGA,OAEA,OACA,EACA,mBACA,KACA,mBACM,EACN,EAA0B,QAA4B,sBAGtD,EACA,IACA,CAAK,QAAY,UACjB,cACA,iBAeA,sCACA,4BAEA,+BACA,gBAAgD,GAAyB,IAWzE,OACA,CANA,GAGA,kBACA,6BAA8E,GAAuB,KAAmD,GAAqC,OAK7L,KALqG,CAOrG,KACA,KACA,CACA,GACA,CACA,CAIA,KAhB6L,CAgB7L,uBAGA,OACA,CAHA,qBACA,6BAA8E,GAAuB,KAAmD,GAAqC,OAK7L,KALqG,EAOrG,GACA,CACA,CAEA,MACA,SAGA,kBACA,EAA4B,GAC5B,OAEA,QAA+B,GAC/B,CACA,MACA,SAHkD,EAGlD,EACA,eACA,cACA,aACA,0BAEA,qBACA,mBACA,mBACA,mBACA,gCACA,yBACA,CAAS,EACT,OACA,CACA,EACA,EACA,EACA,EACA,GACA,CACA,CAKA,0BACA,aACA,aACA,aACA,IACQ,GAAoB,oCACpB,GAAmB,QAE3B,SAEA,gBACA,WAiBA,YAhBA,WACA,MACA,qBACA,eACA,6BACA,6BACA,UACA,cACA,aACA,0BACA,qBACA,mBACA,mBACA,mBACA,yBACA,EAAS,EAIT,OAA+B,IAAmB,yCAGlD,QACA,EACA,KACA,EACA,CAEA,CACA,QACA,CDshBA,eAA6B,KAAoB,CClhBjD,eACA,YACA,uCAGA,UAAgC,EAAe,2CElFxC,eAAeO,GACpBC,CAAiE,EAG/D,MAAM,qBAEL,CAFK,IAAI3jB,GAAAA,CAAcA,CACtB,oEADI,+DAEN,EA6BJ,CASO,SAAS4jB,KACd,MAAO,CACLnX,MAAO,IAAI9T,IACXkrB,MAAO,IAAIlrB,IACXmrB,QAJ0CF,WAItB,IAAIjrB,IACxBorB,mBAAoB,IAAIprB,GAC1B,CACF,CAqBO,SAASqrB,GACdC,CAGU,EAGR,MAAM,qBAEL,CAFK,IAAIjkB,GAAAA,CAAcA,CACtB,uEADI,+DAEN,EAqCJ,CCzNO,mBAOP,OAJA,mBAGA,mBACA,CACA,CAAC,GAAG,EACG,eAGP,OAFA,qBACA,mBACA,CACA,CAAC,GAAG,EACG,2BAKP,qBAJA,CACA,EACA,EACA,EAEA,kBAEA,SAAkB,SAAkB,GAAG,EAAW,EAAE,MAAM,GAAyB,GAA2B,IAAmB,EAGjI,YAHkF,MAA4B,EAG9G,CADA,eAGA,KAA+B,SAA0B,EAAE,EAAmB,EAAE,EAAW,EAE3F,SAAc,SAAuB,GAAG,EAAgB,EAAE,MAAM,GAAwB,GAAkB,EAEnG,gBAFiF,EAEjF,GACP,eAAoB,MAAM,GAAyB,GAA2B,IAAmB,EC1BjG,YD0BkD,MAA4B,CCzB9E,mBACA,GAAkH,OAIvG,SAJc,GAId,GAJmD,CAInD,EAJsD,CAAiD,IAKlH,YACA,KACA,SAGA,6BAAY,GACR,EAAQ,IAAiC,EAC7C,OACA,IAFW,aAEX,GACA,wBACA,8BACA,UAAoC,CAAb,CAAa,qBACpC,WADoC,KACpC,IACA,CAAS,CACT,OACA,CAAK,EAiCL,OADA,YACA,CACA,CASW,mBACX,yBAAoD,kBAAsB,cAC1E,gBACA,2BACA,QACA,CAAK,EAqCL,OApCA,oBACA,aACA,SACA,QAmCA,QAlCA,EAkCA,EAlCA,EAkCA,EAlCA,EAmCA,QACA,uBAA6C,EAAY,yCAAyC,EAAoB,gBAnHtH,EAmHsH,GAE1G,EAAE,qBAAqB,EAAoB,gBAnHvD,EAmHuD,EAGvD,GAAY,cAEZ,uBAA6C,EAAY,yCAAyC,EAAoB,gBA1HtH,EA0HsH,GAE1G,aA5CZ,CAAc,SAEd,UACA,CACA,CAAS,CACT,cACA,IACA,SAAwB,WAAc,eACtC,KACA,IACA,kBACA,SACA,CAAyB,EAGzB,SACA,CAAsB,MAEtB,SACA,CAEA,GACA,SAEA,CAAc,SAGd,UACA,CACA,CACA,CAAK,CAEL,CAeA,mBACA,MAEA,EADA,mBAC0B,EAAoB,gBAjI9C,EAmIA,EACA,GAO0B,EAAoB,gBAzI9C,EAwIA,iCAIA,GAEA,uBAAyC,EAAY,qBAAqB,EAAgB,aAC1F,mHC7HO,SAASkkB,GAAyB,CASV,MAebC,EA0DZ,EAlFmC,gBACvCC,CAAW,mBACXC,CAAiB,0BACjBC,CAAwB,uBACxBC,CAAqB,UACrBC,CAAQ,oBACRC,CAAkB,WAClBC,CAAS,aACTC,CAAW,CACkB,CATU,EAajCC,EAAsBN,EAAyB/B,IAAI,CAAC,KAEpDsC,EAAuBC,CAAAA,EAAAA,GAAAA,EAAAA,CAA0BA,CAACT,CAAiB,CAAC,EAAE,EACtE,CACJpC,KAAM8C,CAAW,CACjBC,SAAUb,CAAe,CACzBc,KAAMC,CAAW,CAClB,CAAGL,EAMEpY,EAAmB,CACvB0Y,SAAU,KACVC,IALUjB,MAAAA,EAAAA,KAAAA,EAAAA,CAAiB,CAAC,EAAE,CAM9BkB,YAAa,KACbJ,KAAM,KACNK,aAAc,KAEdC,eAAgBhB,EAChBiB,QAVcrB,OAAAA,EAAAA,QAAAA,KAAAA,EAAAA,CAAiB,CAAC,IAAlBA,EAAwB,KAWtCC,aACF,EAEMqB,EAGJjB,EAEIkB,CAAAA,EAAAA,GAAAA,CAAAA,CAAiBA,CAAClB,EAJtB,CAKII,EAENe,CAAAA,EAAAA,GAAAA,CAAAA,CAAwCA,CAACZ,EAAaU,GAEtD,IAAM9D,EAAgB,IAAIhpB,KAGI,OAA1B4rB,OAAkCA,EAAsB9rB,IAAI,GAAQ,CACtEmtB,EAAAA,GAAAA,CAAAA,CAA6BA,CAC3BxB,EACA3X,OACAvT,EACA6rB,EACAZ,EACAe,OACAhsB,GAIJ,IAAM2sB,EAAe,CACnB5D,KAAM8C,QACNtY,gBACAkV,EACAmE,QAAS,CACPC,UA5BgJ,GA4BnI,EACbC,cAAe,GAGfC,4BAA4B,CAC9B,EACAC,kBAAmB,CACjBhhB,OAAO,EACPihB,gBAAgB,EAChBC,aAAc,KACdC,aAAc,EAAE,eAElBZ,EACA1D,QAEE,OAACuE,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,CAAgCA,CAACvB,KAAgBP,MAAAA,EAAAA,KAAAA,EAAAA,EAAU1mB,QAAAA,CAAAA,CAAQ,CAAnEwoB,EACD,IACJ,EAEA,GAA8C9B,CAA1C3rB,CAAoD,CAOtD,GAPsB,CAOhBgpB,EAAM,IAAI0E,IACb,GAAE/B,EAAS1mB,QAAQ,CAAG0mB,EAASgC,MAAM,CACtChC,EAASiC,MAAM,EAGjBC,CAAAA,EAAAA,GAAAA,EAAAA,CAA8BA,CAAC,KAC7B7E,EACA5V,KAAM,CACJ0a,WAAY,CAAC9B,EAAqB,CAClCY,kBAAcvsB,EACdurB,mBAAoB,CAAC,CAACA,cACtBE,YACAD,EAOAkC,UAIEjC,CAHA,EAGe,CAAC9rB,CACZguB,GAAAA,CADmD,CAChCA,CACnB,CAAC,CACT,EACA5E,KAAM4D,EAAa5D,IAAI,CACvBN,cAAekE,EAAalE,aAAa,CACzCI,QAAS8D,EAAa9D,OAAO,CAC7BC,KAAM2C,EAAcmC,GAAAA,EAAYA,CAACC,IAAI,CAAGD,EAV0D,CAU1DA,EAAYA,CAACE,IAAI,EAE7D,CAEA,OAAOnB,CACT,gBEtJW,SAAS,GAAkC,KAEtD,gCAAwC,IAAc,iBAFA,8DAEA,qBACtD,aACA,cACA,eACA,CAAS,CAkBT,CAoCO,SACP,eACA,cACA,CACA,MACA,uBACA,wHACA,aACA,cACA,eACA,CAAa,EAEb,yBAEA,OADA,kBACA,KAEA,UACA,uBACA,4HACA,aACA,cACA,eACA,CAAa,EAEb,mBAEA,OADA,kBACA,CACA,CACA,CACO,eAAe,GAAgC,GACtD,SACA,SAAY,GAAU,QACtB,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,iBAEA,SAEA,CACA,CACO,qBACP,SACA,gBACA,QACA,SAAgB,WAAc,eAC9B,KACA,MAEA,SAEA,CACA,gBACA,CACO,SACP,gBACA,uBACA,gCAA4C,IAAc,aAAa,EAAW,0FAClF,aACA,cACA,eACA,CAAa,EAEb,oBAEA,iBACA,2BAEA,OADA,eACA,CACA,CACA,UACA,iBACA,CACA,eACA,cACA,CACA,oBAEA,UADA,yCAEA,CACA,2BAEA,UADA,iDAEA,CACA,WAEA,UADA,gCAEA,CACA,kBAEA,UADA,wCAEA,CACA,CACA,eACA,QACA,2BACA,cACA,YACA,iBAKA,CACA,CAAK,CACL,CACA,eACA,QACA,2BACA,cACA,WACA,kBAEA,SAEA,CACA,CAAK,CACL,CACO,eAAe,GAAc,GACpC,iBACA,gBACA,EAHoC,MAGpC,SAGA,OAFA,WAEA,CACA,UACA,eAHA,YAKA,CC/LO,SAAS,GAAyC,SAUzD,EARA,IAAQ,EAA0B,IAGlC,GAAQ,EAAsB,eAE9B,iBAIA,IATkC,CAFuB,OAK3B,CAM9B,+CAEA,IADA,YACA,0BACA,cACA,kBACA,SACA,2CAAuE,GAAO;AAC9E;AACA,kBAAkB,EAAQ,wBAC1B,aACA,cACA,eACA,CAAiB,CACjB,wCACA,iBACA,MACA,CACA,MACM,oBACN,MAEA,iBACA,uBAA+B,GAAO;AACtC;AACA,oBAAoB,EAAQ,GAG5B,uBAA2B,GAAO,0OAClC,iBAEA,eErCO,OAAM,GACb,cASA,MARA,CAFwB,GAExB,SACA,uBACA,kBACA,oBACA,oBACA,4BAGA,0BAA4C,IAAc,wHAC1D,aACA,cACA,eACA,CAAa,CAEb,CACA,sBACA,mBACA,oBACA,sBAEA,GADA,oBACA,gBACA,YAAmC,6BAAgC,IACnE,wBAEA,6BACA,CACA,CAAa,GAEb,mBACA,oBACA,gBAEA,GADA,oBACA,gBACA,YAAmC,wBAA2B,IAC9D,mBAEA,wBACA,CACA,CAAa,IAEb,CAIA,aACA,uBACA,4BACA,gBACA,0BAEA,CAAS,CACT,CAKA,aACA,uBACA,uBACA,gBACA,0BAEA,CAAS,CACT,CACA,YAEA,GADA,aACA,8BACA,oCACA,aAGA,CACA,UACA,kBACA,gCAA4C,IAAc,qFAC1D,aACA,cACA,eACA,CAAa,EAYb,GAJA,aACA,gBACA,2BAEA,8BACA,oCACA,WAGA,CACA,aACA,iBAEA,8BAEA,OADA,YACA,CACA,CACA,oBACA,YACA,gCAA4C,IAAc,kEAC1D,aACA,cACA,eACA,CAAa,CAEb,gCACA,iCAEA,8BAGA,YAAuB,aAAgB,IACvC,cAEA,6CACA,CACA,wBACA,wBAGA,gCAIA,CACA,CCxIW,iBACX,KACA,sBAA+B,EAAK,iBACpC,CCAO,eACP,SACA,+BACA,EACA,IAEA,KACA,WAA0B,YAAkB,EAAM,MAAQ,GAAG,qBAAqB,sHAClF,CACA,2BCTA,cAIA,OAHA,GACA,OAAmC,EAAW,EAE9C,CACA,CAuBW,SAAS,GAAmB,GAMvC,GAhC8C,CAgC9C,2BAGA,sBACA,kCGkCA,OAAkH,OA8DlH,SA9DyB,GA8DzB,GA9D8D,GAAG,CAAiD,GA8D9F,wCAA8C,QAKlE,KAJA,YACA,yBAGA,EAC6B,SAAI,SACjC,cACA,iBACA,CAAS,EAET,IACA,CAKA,uBAOA,SACA,CAAY,cAAgB,wEAAgF,kHAA4G,EACxN,wCACA,mCAEA,iBAAgB,kFAA0F,GAC1G,OACA,cACA,oBACA,gBAA6B,EAAqB,cAClD,KADkD,sBAClD,EACA,yBACA,YACA,mBACA,mBACA,wBACA,CAAS,EACT,SAA4B,GAA6B,CACzD,MACA,mBAFyD,EAGzD,eAA4B,CAC5B,oBAEA,QAAmC,UAAK,CAAC,UAAc,EACvD,UACkC,SAAI,KACtC,oBACA,4BACA,gDACqB,EACa,SAAI,KAAiB,CAtHvD,OAuHkC,SAAI,KAAiB,GAtHvD,KAuHA,CACa,CA1Hb,KA2HA,oBACA,mBACA,gCACA,sBACA,mBACA,mBACA,iBApCA,GAqCA,yBACA,EAAS,oBAET,OAIA,gCACA,CACA,iBACA,IACA,2BAIA,CACA,0BACA,IACA,uBAEA,CACA,qBVlOO,EUmOP,OACA,wBACA,qBAEA,qDACA,eACA,iBVxOA,CADO,EUyOsC,aVxO7C,IUwO6C,gBVxO7C,CACA,YAEA,eACA,cUqOA,CACA,CAIA,2BACA,mBAIA,EAAoB,EAAmC,QAHvD,YACA,uIACA,GAEA,QAA6B,uBAAoB,eAQjD,WAAe,EALkB,gBAKA,OALoB,wFACrD,UACA,yDACA,mBACA,CAAK,EAC4B,CACjC,sCACK,CACL,CACA,2BACA,cAAY,GAAY,EACxB,eAKA,EAAoB,EAAmC,GAJvD,YACA,kBAGuD,0BAHvD,mDACA,wCACA,GAEA,KACA,mBACA,CAAY,mBAAgB,EAAM,+BAA+B,EACjE,EjB4cA,MiB5coC,KAAb,EAGc,IAGrC,gBADA,KACA,QANoC,GAMpC,YAHmE,EAInE,qBAFA,KAEA,2BAMA,OALA,UACA,wCACA,aACA,YAAsB,IAAwB,MAE9C,IAAe,EAAkB,mBACjC,CACA,iCACA,iBAAY,4BAAsC,EAClD,yBAAY,kBAAwC,EACpD,MAKA,0BAIA,sBAGA,MAA4B,GAC5B,GACA,kBAFuC,OAGvC,eACA,aACA,eACA,sBACA,aAIA,cAEA,qBAGA,aACA,SACA,MAAe,KAAc,CAC7B,SACA,OACA,CACA,wBACA,2BACA,sBACA,yBAEA,yBAEA,UACA,WACA,EAGA,QAAuC,uBAAoB,UAC3D,EAAuC,uBAAoB,sCAC3D,oBACA,YACA,MAA2B,EAA0B,GACrD,KACA,UAEA,kBAIc,oEACE,GAAyC,UAEzD,CAAS,CAGT,kBAIA,gBACK,EAQL,GANI,GAAmB,GACvB,qBACA,UACA,UAGA,2BACA,iCAEA,IACA,aAAqB,GAAgC,EACrD,CAAM,SAQN,OAPA,oCAEU,oEAGE,GAAyC,WAErD,IACA,CACA,CACA,mCACA,WANqD,MAMzC,gBAA2B,EACvC,yBAAY,0DAA8E,EAC1F,MACA,YACA,KACA,sBACA,EAAkC,QAA0B,IAC5D,CAAY,qBDnYL,SAASoB,EAId,IAFIzsB,EACAwG,EACEqY,EAAU,IAAI9e,CC+XqF,OD/X1E,CAAC2sB,EAAKC,KACnC3sB,EAAU0sB,EACVlmB,EAASmmB,CACX,GACA,MAAO,CAAE3sB,QAASA,EAAUwG,OAAQA,UAASqY,CAAQ,CACvD,IC2XA,GACA,yBACA,eACA,aACA,eACA,sBACA,aAEA,iBACA,kBAGA,aACA,SACA,MAAe,KAAc,CAC7B,SACA,OACA,CACA,2BACA,wBACA,sBACA,yBAEA,sBAEA,UACA,WACA,EACA,QAAkC,uBAAoB,UACtD,KACA,QTlYW,gBAEX,gCAAwC,IAAc,8GACtD,aACA,cACA,eACA,CAAS,CAqBT,ESuWqE,UAErE,YAAsC,uBAAoB,sCAC1D,oBACA,UACA,gBACS,EAET,OADA,KACA,CACA,CAAK,MAQL,GACA,CAAK,MAEL,qBAGA,KACA,MACA,CACA,GAGA,OAEA,SACA,CAAK,EAEL,MADI,QAAsB,IAC1B,CACA,SAGA,gBACA,YACA,iCACA,yBACA,0BACA,qBAEA,CAOA,uBACA,4BAAY,uFAAuH,EACnI,uBAAY,4CAAoE,EAChF,MACA,gCAAwC,IAAc,wGACtD,aACA,cACA,eACA,CAAS,EAET,MjBwPA,MiBxPoC,KAAb,CAAa,IAIpC,EAAoB,EAAmC,GAHvD,YACA,WAFoC,EAEpC,KAEuD,EAFvD,gDACA,GAIA,EAAqC,KACrC,sBACA,qBAFmE,CAGnE,sBACA,MAA4B,GAC5B,GACA,iBACA,CAHuC,KAGvC,SACA,aACA,eACA,sBACA,aACA,cACA,qBACA,wBACA,WAAoB,KAAc,CAClC,OAAgB,KAAc,CAC9B,MAAe,KAAc,CAC7B,QACA,2BACA,2BACA,yBAAoC,IAA4B,EAChE,sCAIA,wBACA,EACA,QAA6B,uBAAoB,aAmBjD,OAhBI,uBAAoB,mDACxB,oBACA,UACA,gBACK,EAED,GAAmB,GACvB,qBAEA,sBAHuB,IAGvB,MAEA,UACA,UAIA,IAAe,EAAkB,IACjC,YADiC,CACjC,eACA,sBAA+B,GAA2B,EAC1D,CAAK,CACL,CAMA,eACA,IAT0D,EAS1D,gCACA,CAEA,yBACA,IAGA,EAHA,UACA,UACA,UAMA,4BAAY,0EAA2E,wCAA8D,oBAAmB,EACxK,EAAwB,GAAqC,OAC7D,2BAD6D,YAC7D,CACA,6BACA,cAAY,kFAA0F,GACtG,OAMA,mCACA,cACA,oBACA,gBAAyB,EAAqB,cAC9C,KAD8C,sBAC9C,EACA,yBACA,YACA,mBACA,mBACA,wBACA,CAAK,EACL,KACA,QAA2B,GAAmB,CAC9C,MACA,SAF8C,EAE9C,EACA,eAAwB,CACxB,cACA,aACA,0BACA,sBACA,mBACA,mBACA,eACA,mBACA,wDACA,yBACA,CAAK,EAIL,0BACA,iCAAqF,IAAQ,EAC7F,EAAsC,UAAK,CAAC,UAAc,EAC1D,UAC0B,SAAI,KAC9B,oBACA,4BACA,gDACa,EACa,SAAI,KAAiB,EACrB,SAAI,KAAiB,EAC/C,CACK,CAvhBL,KAwhBA,aAAY,YAAyC,cAOrD,yEACA,OAEA,EAAyB,SAAI,KAC7B,kBACA,CAAS,EACT,0BACA,gBACA,QACA,MACA,GACA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,IACA,GACA,EACA,EACA,CACA,0CACA,uBAEA,CAMA,8BAAwB,EAAkB,EAE1C,OADA,kBACA,IACA,CAEA,2BACA,+BAAY,0EAA2E,wCAA8D,oBAAmB,EACxK,wCACA,cAAY,kBAA6B,GACzC,OACA,cACA,oBACA,gBAAyB,EAAqB,cAC9C,KAD8C,KAC9C,EACA,6BACA,yBACA,YACA,mBACA,mBACA,wBACA,CAAK,EACL,EAAsC,UAAK,CAAC,UAAc,EAC1D,UAC0B,SAAI,KAC9B,oBACA,4BACA,gDACa,EACa,SAAI,KAAiB,EACnC,GAIc,GAJwB,EAIxB,IAAI,KAAiB,EAC/C,CACK,CAlmBL,GA4lBoE,CAGtD,CAId,EAAwB,GAAqC,MAE7D,KACc,EAAO,qBAHwC,IAGxC,kCACrB,aACA,cACA,eACA,EAAS,EAIT,OACA,KACsB,UAAK,SAC3B,oBACA,UAC8B,SAAI,UAAW,EACf,SAAI,SAClC,SAIsB,CAJQ,GAK9B,CAAiB,EALyD,CAOjE,EACT,EAAU,CACV,KACA,GACA,CACA,EAZ2F,CAIrE,UAQV,YAAyC,cACrD,yEACA,OACA,0BACA,gBACA,QACA,SACA,KACA,GACA,CACA,EACA,EACA,EACA,EACA,CACA,CACA,GACA,EACA,EACA,CACA,0CACA,uBAEA,CACA,eACA,MACA,gCAAwC,IAAc,yEACtD,aACA,cACA,eACA,CAAS,CAET,CAEA,+BAAe,kFAA+F,EAC9G,IACA,MAAqB,KAAS,CAAC,GAAe,QAC9C,EAAyB,EADqB,CACG,CAGjD,eACA,KAJiD,aAIjD,IACA,6BACA,8BAGA,cACA,uBACA,cACA,gBACK,EACL,EAAwB,SAAwB,SAChD,oBAAY,GAAqB,EAAU,IAAsD,EACjG,MAAyB,KADiB,GACjB,CAAI,aAC7B,OACA,UACA,OACA,CAAS,CACT,SAAgC,SAAI,IACpC,SAAoC,SAAI,CAAC,UAAS,EAClD,cACA,qBACA,gBACa,CACb,CAAS,CACT,CAAK,CACL,CAIA,+BAAoB,kFAA+F,EACnH,IACA,MAAqB,KAAS,CAAC,GAAe,QAC9C,EAAyB,EADqB,CACG,CAGjD,eACA,KAJiD,aAIjD,IACA,6BACA,8BAGA,cACA,uBACA,cACA,gBACK,EACL,EAAwB,SAAwB,SAChD,MAAyB,SAAI,IAC7B,SAAgC,SAAI,CAAC,UAAS,EAC9C,cACA,qBACA,gBACS,CACT,CAAK,CACL,CACA,+CA5qBA,MA4yBA,EA/HA,YACA,IACA,mBAMA,iBACA,yBAAY,+GAAkI,EAG9I,mBACA,MAA6B,QAAyB,IAKtD,OACA,mCACA,SAEA,SACA,SAEA,MAAkC,uBAAoB,YACtD,MACA,SAEA,eACA,gBACA,uBACA,wBACA,YACA,oBACA,QACA,qBACA,uBACA,cACA,qBACA,QAGA,CACA,CAUA,6BATA,SACA,sBAKA,OAJA,KH50BO,YACP,WAGA,GAAQ,QAAU,KAGlB,yBACA,cACA,CACA,EGo0BkC,GAElC,CACA,EAWA,+BARA,SACA,wBAIA,OAHA,KHx1BA,eGy1BqC,GAErC,CACA,CAGA,CA+BA,OACA,uBACA,EACA,0CACA,MACA,MAA4B,QAAqB,EACjD,uBACA,CAAK,EACD,SAA8B,EAClC,YACA,0BACA,wBACA,iBACA,CAAK,EACL,eAEA,IAAY,+BAAyC,CACrD,IACA,gGAEA,kBACA,8BAEA,GACA,MAEI,OAAoB,IACxB,sBAAY,6GAAwH,EACpI,oBAAY,GAAqB,EAMjC,EADA,EACoB,GAAM,wCAA0C,GAAM,8BAE1E,oBAOA,OAvzBA,EAszBA,aArzBA,SACA,GACA,MAA6B,EAAe,GAC5C,MACA,IAF4C,GAE5C,KAEA,cACA,EAAiC,CAAiB,SAClD,MAAe,SAAe,OA8yB9B,IA7yBA,GA8yBA,EAAoC,QAAyB,IAC7D,QAA+B,OAAe,aAC9C,GACA,eACA,MACA,aACA,YACA,uBACA,6BACA,QACA,aACA,yBACA,mBACA,yBACA,oBACA,YACA,WACA,0BACA,cACA,iBACA,QACA,MACA,gBACA,cACA,EAEA,GADI,QAAS,wCACb,GAGA,MAA6C,QAAS,QAAQ,IAAa,gBAC3E,kCAA+C,EAAS,EACxD,YACA,cACA,CACA,CAAS,KACT,uBAIA,oBAAsC,QAAmB,4CAEzD,aADY,GAAI,6CACiB,QAAwB,mBACzC,GAAI,GAKpB,8BAEA,KADY,QAAyB,+BACrC,IAAsB,IAAqB,CAE3C,2BACA,8CACA,YACA,CAEA,uBACA,0BlD5zBA,CAAY,EkD4zByD,ClD5zBzD,IAAY,CkD4zB4D,IlD5zB5D,CAAU,IkD4zBkD,ClD5zBlD,EAAmB,CkD4zB+B,IlD5zB/B,CAAU,OAAiB,CkD4zBI,IACpF,YACA,CACA,OACA,WACA,YAAyB,KAAwB,EAGjD,8EACA,MAAmC,QAAkB,iBACrD,sCACA,0DAEA,CAAa,CACb,aACA,eAEA,aAEA,CAKA,OAJA,UACA,yBACA,kDAEA,IAAmB,GAAY,OAAO,QAAc,aACpD,CAAM,KAEN,oEACA,EjBrTA,MiBqTwC,KAAb,yBAAa,EACxC,EAA4C,MADJ,EACI,CAAc,wCAC1D,EAA6B,QAA2B,qDAaxD,KACA,eACU,KACV,KACA,wBAEA,iBAGA,MAA0C,QAAS,QAAQ,IAAa,gBACxE,+BAA4C,EAAS,EACrD,YACA,cACA,CACA,CAAS,KACT,OACA,MAEA,YAA8C,GAAY,CAC1D,MACA,EAF0D,EAE1D,EACA,eACA,kBACA,kBACA,YACA,eACA,gBACA,MACA,UACA,CAAa,EACb,KACA,0BACA,eAh9BA,GACA,WACA,0BACA,OACA,GACA,CACA,UACgB,IAAgB,CAChC,EAAkB,CAClB,CACA,4CAEA,CACS,CAET,OACA,EAg8BA,EACA,kBACA,iBACA,iCACA,WAA+B,GAAY,IAC3C,WACA,YAAqC,KAAwB,CACxC,CACrB,EAAkB,uBAClB,YAEA,OADA,2BACA,cACsB,aACtB,eAEA,CAEA,CACA,OACA,WACA,YAAyB,KAAwB,EAEjD,6BAIA,qCACA,iCAGA,8EACA,MAAmC,QAAkB,iBACrD,sCACA,0DAEA,CAAa,CACb,aACA,eAEA,aAEA,CAEA,WAAmB,GAAY,KAC/B,CACA,CACO,6BACP,MACA,UACA,sEACA,aACA,cACA,eACA,CAAS,EAET,MAAgB,QAAgB,kBAGhC,EAviCA,cACA,yBAIA,aAA4D,IAA2B,EACvF,EAAwE,MAAxE,EAA6C,IAA2B,EACxE,OAAwD,IAAxD,EAAiC,IAAuB,EAExD,KAAiE,SAAjE,EAAuD,IAAU,EAEjE,EADA,2BACsI,OAAvE,OAAiC,GAAS,GAA6B,GAEtI,eAA+C,IAAmC,EAClF,yEAGA,OACA,oBACA,oBACA,2BACA,6BACA,eACA,eACA,qBACA,MAVA,mBAA4C,S9C7FrC,GACP,MACA,M8C2FoE,E9C1FpE,QAAa,oBAGb,aAJkE,CAIlE,kEAEA,MACA,OAGA,4BACA,0BACA,oFAEA,MAMA,GAAQ,EAAY,QACpB,EADoB,IACpB,gNACA,aACA,cACA,eACA,CAAS,EAET,SACA,E8C+DoE,UAWpE,0BAVsC,SAA4B,mBAWlE,CACA,EA2gCA,WACA,cACA,wDACA,8DACK,EACL,CAAY,iDAA+C,EAC3D,OAGA,iCACA,KACA,gCAA4C,IAAc,kGAC1D,aACA,cACA,eACA,CAAa,EAEb,EAAyB,SbnmClB,KACP,KakmC4C,GbjmC5C,EAsBA,EArBA,kDACA,MACA,wEAAwF,EAAM,wBAC9F,aACA,cACA,eACA,CAAa,EAEb,kBAGA,mCACA,EAAsC,GAA2B,uBACjE,CADiE,EACjE,CACA,cACA,OACA,OACA,uBACA,EAEA,qBAEA,iDACA,MACA,wEAAgG,kBAAgC,wBAChI,aACA,cACA,eACA,CAAqB,EAGrB,kBACA,8BACA,aACA,sBACA,kBACA,gCACA,iCACA,mBACA,CACA,OACA,OACA,mBACA,uBACA,CACA,CACA,OACA,OACA,mBACA,uBACA,CACA,CAAU,SAEV,OADA,mDACA,CACA,OACA,uBACA,CACA,CACA,CAAM,SAEN,OADA,mDACA,CACA,OACA,sBAAmC,IACnC,CACA,CACA,Ea+hC4C,qBAC5C,CACA,kBbpiCiE,CaoiCjE,kDACA,gCAAwC,IAAc,oHACtD,aACA,cACA,eACA,CAAS,EAET,MAAsB,OAAe,EACrC,mCACA,aAEA,oBACA,kBACA,2BACA,CAAK,EACL,OAAW,kBAAgB,OAC3B,GACA,wBACA,EACA,mBACA,KACA,kBACA,wCAGA,8BACA,gBACA,UAAqB,IAA6B,IAGlD,8CACA,gBACA,aACA,aACA,EAGA,gBACA,oCAAwD,QAAc,sBACtE,0BAAgD,KAAc,2BAI9D,oDACA,sBACA,sCACA,0BACA,CAEA,CACA,qCACA,gBAAY,mCAA2C,EACvD,UAAY,iQAAsQ,EAClR,MACA,+BAAY,8BAAyD,KACrE,EAAsC,GAA4B,GAClE,EAA4B,GAAkB,QAAS,MAAV,GADqB,UAD2B,OAEtC,0BACvD,mFACA,OAAoB,EAAY,SAAS,EAAS,EAAE,GAAmB,MAAa,EACpF,QADuE,EACvE,oBACA,cACA,YACA,OACA,EAAS,EACT,MAA8C,GAAkB,EAEhE,MAA4D,GAAmB,IAFf,EAEe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,QAUrE,KACA,SACA,CAAiB,EACjB,OACA,CAAiB,EACjB,YACA,kBAAuE,QAA2B,KAE5E,oEAGE,GAAyC,UAEjE,CAAiB,EAGD,GAAmB,GACnC,qBACA,SACA,CACA,YAJmC,CAL8B,aAUjE,sBACA,GACA,iBACA,eACA,aACA,sBACA,eAGA,sBAIA,+BAEA,iBACA,qBACA,wBACA,WAA4B,KAAc,CAC1C,OAAwB,KAAc,CACtC,MAAuB,KAAc,CACrC,SACA,OACA,CACA,2BACA,wBACA,sBACA,wBACA,EACA,QAAiD,uBAAoB,kCACrE,EAA0C,QAA0B,IACpE,KACA,MACA,iBACA,eACA,aACA,sBACA,eACA,sBACA,aAEA,iBACA,kBACA,wBACA,WAA4B,KAAc,CAC1C,OAAwB,KAAc,CACtC,MAAuB,KAAc,CACrC,SACA,OACA,CACA,2BACA,wBACA,sBACA,wBACA,EACA,KACA,WAAyE,GAAiC,GAAkC,UAC5I,MAA+C,uBAAoB,KACnE,EACA,OAHyG,IAGzG,CAH4I,EAI5I,iBACA,oBACA,WACA,KAEA,gBACiB,EAIjB,uCACA,SACA,CAAiB,EACjB,OACA,CAAiB,EACjB,cAEA,OADA,KACA,CACA,CAAa,MACb,qBAGA,KACA,MACA,CACA,GAGA,OAEA,SACA,CAAa,GACb,EAA0C,QAA0B,IACpE,uBACA,uBACA,IACA,wBACA,eACA,aACA,sBACA,eACA,uBACA,cAEA,iBACA,kBACA,wBACA,WAA4B,KAAc,CAC1C,OAAwB,KAAc,CACtC,MAAuB,KAAc,CACrC,SACA,OACA,CACA,2BACA,wBACA,sBACA,wBACA,EACA,GAAoC,QAA4B,GAChE,GAA8B,WAAqC,CACjD,yBAAyC,MAAQ,GAAkC,KACrG,MAAiD,uBAAoB,WAAyD,SAAI,KAClI,wCACA,iBACA,0BACA,6BACA,OACA,CAAiB,GACjB,iBACA,gBACA,GAA4B,QAA2B,wBACvD,uBACA,oBACgC,QAAyB,WAEzD,MACA,CACA,cACA,CAAqB,CACrB,cACA,kBACA,OACA,CAAyB,CACzB,CAAqB,CACrB,mBACA,kBACA,EACA,CACiB,EA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OAAOjL,GAEFiL,IAAoBjL,EAK/B,UAAiC,OAAtBA,GAGJiL,CAAe,CAAC,EAAE,GAAKjL,CAAO,CAAC,EAAE,EAAIiL,CAAe,CAAC,EAAE,GAAKjL,CAAO,CAAC,EAAE,qiBEf/E,SACA,mBACA,eACA,eACA,WACA,YACA,WACA,CACA,CAIA,QACA,cACA,eACA,cACA,CACA,CAkBW,QACX,iBACA,mBACA,iBACA,eACA,qBAGA,gBACA,gBACA,yBACA,wBACA,CAKA,aACA,iBACA,sBAEA,sBACA,gBACA,CAKA,cAEA,mBACA,mBAKA,cACA,mBACA,iBACA,CAKA,aACA,qBAGA,OADA,mBACA,CACA,CASA,SACA,2EACA,8BACA,iDAGA,wBACA,KAEA,SACA,uCACA,SACA,uBACU,CAEV,mBACA,oBACA,kBACA,iBACA,CAEA,sDACA,wBACA,yBACA,uBAEA,CAMA,OACA,wBACA,CAMA,OACA,wBACA,KAGA,OADA,mBACA,OAKA,qBACA,qBACA,wBAEA,OACA,OACA,MACA,OACA,CACA,SAEA,CAMA,UACA,wBACA,IACA,mBACA,qBACA,uBACA,CAGA,WACA,uBAKA,kBACA,qBACA,CACA,2IC7KO,SACP,aAAkB,oCAAiC,EACnD,4BACA,iBACA,eACA,mBACA,sBAAiC,MACjC,0BACA,CACA,SACA,GAAY,OAAU,IACtB,gBACA,IAEA,mEACU,wBAEV,yBAEA,8GACA,YACA,cACA,eACA,CAAa,CAEb,CACA,eAEA,gBACA,IAEA,MAA8B,sBAAoB,WAClD,IACA,2BAEA,MAA+B,GAAqB,YAKpD,yBACA,uBAGA,kCACA,2DACA,iDAOA,MAAgC,QAAY,WAC5C,IACA,MAAsB,GAAqB,MAC3C,oBACA,CAAiB,SACjB,CAAc,SACd,kCACA,CACA,CAAS,EACT,yBACA,CACA,4BAEA,OADA,sCACA,mBACA,CACA,qBACA,sCACA,iCACA,gBAEA,MAA0B,kBAAgB,YAC1C,MACA,gCAA4C,GAAc,wEAC1D,aACA,cACA,eACA,CAAa,EAEb,MAAe,OAAsB,QACrC,2BACA,6BAEA,CACA,qBAIA,GADA,gIACA,iB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A,kBACA,oBACA,OAA6B,kDAA4F,EAEzH,SACA,EACA,IAAoD,eAAkB,SAAa,EAWnF,GAkFA,8BAKA,0BA0DA,QACA,eAEA,qBACA,gBACA,sBACA,KAEA,eADA,KAEA,yBAAiC,UAAa,CAG9C,CACA,oBACA,sCACA,CAIA,WACA,yBAEA,UACA,2CACA,0BACA,CACA,aACA,MACA,+BACA,aACA,yBAEA,8DACA,6CACA,CACA,OACA,0BACA,CACA,UACA,+CACA,eAMA,OALA,cAAoB,UAAa,EACjC,kBACA,SACA,yCAA4E,IAE5E,KAKA,UACA,mBACA,qDAKA,OAJA,kBACA,SACA,yCAA0E,IAE1E,CACA,CAIA,QAEA,OADA,6CACA,KAKA,8CACA,wBAA6B,iDAAiD,EAE9E,WACA,2CAAoD,OAAO,GAAG,4BAA4B,WAAW,EACrG,CACA,EAGA,QACA,mBAGA,KADA,sBAEA,gBACA,+FAEA,aADA,mBA3IA,YACA,MACA,SACA,IAEA,EACA,EACA,EACA,EACA,EANA,KACA,IAMA,aACA,yCACA,KAEA,kBAMA,kBAGA,IAFA,IACA,KACA,KAEA,SADA,gBACA,CAKA,IAJA,IACA,KACA,IACA,IACA,YAZA,MADA,iBACA,EAAkC,IAAlC,GAAkC,SAalC,IAEA,gCACA,KACA,IACA,yBACA,KAEA,KAEA,EAAQ,IACR,IAGA,oBACA,+BAEA,CACA,QACA,EAyFA,GACA,CACA,UACA,IACA,0BACA,CACA,CAIA,UACA,2CACA,0BACA,CAIA,aACA,MACA,wCACA,aACA,SAEA,8DACA,8BACA,CACA,OACA,0BACA,CAIA,UACA,sDACA,eAGA,OAFA,iBAyBA,GAAoC,iBAAqB,EAUzD,MATA,4BACA,gCAEA,UACA,8CAEA,kCACA,aAEA,CACA,EApCA,MAAoC,eAAwB,GAC5D,SAiBA,KAEA,cADA,uBACA,IACA,WACA,wBACA,CACA,EAvBA,iBACA,IACA,CAIA,aACA,uDACA,iBAAsB,yCAAmE,CACzF,CACA,8CACA,yBAA8B,iDAAiD,EAE/E,WACA,gDAAmE,EACnE,CACA,gDCvTA,mCACO,cACP,kDACA,4ECHO,mCACA,+BACA,6BACA,8HCEQ,SAASC,IACtB,IAAMh/B,EAAWnB,CAAAA,EAAAA,EAAAA,UAAAA,CAAUA,CAACogC,EAAAA,eAAeA,EAC3C,MAAO,+BAAGj/B,GACZ,8DCPA,OACA,YACA,EAEA,qBAAqB,OAAW,CAAkB,OAAW,MAI7D,EAA0E,aAqB/D,EArBY,MAAmC,CAqB/C,EArBkD,CAqBlD,EACX,sBAkBA,EAjBA,QAmBA,CACA,CAxCA,EACA,IACA,IACA,YACA,EAAM,OACN,cACA,CACA,CAAC,kECnBM,uBACP,kBAAkB,EAAM,EACxB,yBAAiC,EAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,CACO,sBACP,cACA;AACA;AACA,IACA,CACA,geElBO,SAASc,EAAoB6qB,CAAa,EAC/C,OAAOA,EAAMrB,OAAO,CAAC,MAAO,KAAO,GACrC,gGCIA,IAAI8D,EAA4C,KAEzC,SAASvqB,EAAwBwe,CAAsB,EAC5D,GAAI+L,MAAmB,GACrB,MAAM,qBAEL,CAFK,MACJ,2EADI,+DAEN,GAEFA,EAAS/L,EACX,CAEO,SAAS6c,EACdjR,CAAiC,EAEjC,GAAM,CAACpuB,EAAOC,EAAS,CAAGR,EAAAA,QAAc,CAAe2uB,EAAYpuB,KAAK,EAyBxE,OAJEuuB,EAAW,GACTH,EAAYG,QAAQ,CAAC/L,EAAQviB,GAG1B6uB,CAAAA,EAAAA,EAAAA,CAAAA,CAAUA,CAAC9uB,GAASgN,CAAAA,EAAAA,EAAAA,GAAAA,CAAGA,CAAChN,GAASA,CAC1C,oDEnDA,CAOA,KAA8B,CAL9B,GAAM,EAAQ,IAA0D,EAK1C,WALjB,WAKiB,CAC9B,IAAmB,eACiB,+BACpC,IAAoB,gBACpB,IAAuB,mBACQ,0BAC/B,IAA+B,2BACA,0BAC/B,IAAmC,msC5IjBnC,IAAMqjB,EAAqB,sBAEpB,OAAMC,UAA2BtgB,MAGtC5C,YAA4Bka,CAAmB,CAAE,CAC/C,KAAK,CAAE,yBAAwBA,GAAAA,IAAAA,CADLA,WAAAA,CAAAA,EAAAA,IAAAA,CAF5BM,MAAAA,CAAoCyI,CAIpC,CACF,CAEO,SAASE,EAAqBrlB,CAAY,QAE9B,UAAf,OAAOA,GACC,OAARA,CACA,CAAE,YAAYA,GAAAA,CAAE,SAChB,OAAOA,EAAI0c,MAAM,EAKZ1c,EAAI0c,MAAM,GAAKyI,CACxB,6B8IVA,OAA6B,eAC7B,cACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,oBACA,cACA,+CACA,6BACA,+BACA,kCACA,+BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,kCACA,gBACA,kBACA,YACA,OACA,WACA,OACA,MACA,sBACA,OACA,CACA,CAIA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CA+IA,kBACA,oBACA,SACA,IAIA,OArHA,sBACA,IA1DA,IAnBA,EA6EA,UACA,4CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QAtGA,EAwGA,EAxGA,EAyGA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EAtGA,qBAkHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IAEzC,MADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBArJA,QADA,EAsJA,IArJA,wBAIA,kBAHA,GACA,SACA,iBACA,MAiJA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SACA,SA5HA,GACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,mBACA,WACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,EACA,GACA,oBAJA,cAKA,mBAA+B,8BAAyC,EACxE,GAGA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBAEA,CADA,OACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,UAEA,aACA,kBACA,CACA,aACA,OAAW,2BACX,CACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,6BACA,QACA,CACA,EACA,UAAgB,GAChB,UAAgB,GAChB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,OAAa,aACb,kBACA,UACA,qCACA,0BAEA,UADA,cAEA,mBACA,IACA,2BAAmC,IAAW,KAC9C,mBACA,GACA,sBACA,6BACA,CACA,iBACA,uBAEA,SADA,cAEA,kBACA,EAAQ,IACR,gBACA,gBAEA,SADA,cAEA,OACA,WACA,CACA,sBACA,qBACA,IACA,8BAGA,MADA,CADA,KACA,IACA,KACA,CAAM,SACN,sBACA,CACA,CACA,EACA,aAAmB,YACnB,UACA,6BACA,EACA,mBAAyB,YACzB,WACA,EACA,cAAoB,iBACpB,WACA,sBACA,UAAuB,UACvB,QACA,WACA,wCACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,oBACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,eACA,EACA,WAAiB,YACjB,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ACdb,CAA2C,CAC3CngB,CAAkB,SAElB,EAAmBihB,mBAAmB,CAC7Bd,CAD+B,CAChBc,mBAAmB,CAAC3vB,IAAI,CAAC,IAAM0O,GAEhDA,CACT,mUqC30BO,gBACP,MAA0B,sBAAoB,YAC9C,KACA,eACA,gBACA,uBACA,oBACA,uBACA,eACA,aACA,oBACA,qBACA,gCAAgD,GAAc,wFAC9D,aACA,cACA,eACA,CAAiB,CACjB,yBACA,gCAAgD,GAAc,6FAC9D,aACA,cACA,eACA,CAAiB,CACjB,eAQA,OAkLA,EAlLA,EAIA,CAEI,mCAA6B,EACjC,CACO,QAEA,gBACP,MAA0B,sBAAoB,YAC9C,KACA,eACA,gBACA,uBACA,oBACA,uBACA,eACA,aACA,oBACA,qBACA,gCAAgD,GAAc,4FAC9D,aACA,cACA,eACA,CAAiB,CACjB,yBACA,aACA,eAQA,OA6IA,EA7IA,EAIA,CAEI,mCAA6B,EACjC,CACO,gBACP,MAA0B,sBAAoB,YAC9C,KACA,eACA,gBACA,uBACA,oBACA,uBACA,eACA,aACA,oBACA,qBACA,gCAAgD,GAAc,oGAC9D,aACA,cACA,eACA,CAAiB,CACjB,yBACA,aACA,eAQA,OA0GA,EA1GA,EAIA,CAEI,mCAA6B,EACjC,CACO,cACP,MAAsB,kBAAgB,YACtC,MACA,gCAAwC,GAAc,oFACtD,aACA,cACA,eACA,CAAS,EAET,MAA0B,sBAAoB,YAC9C,KACA,eACA,gBACA,uBACA,4BACA,KACA,gBACA,YAKA,MAAmC,QAAkB,mCAErD,CAEA,KACA,aACA,oBACA,qBACA,gCAAgD,GAAc,uGAC9D,aACA,cACA,eACA,CAAiB,CAQjB,CAKA,yBACA,CACA,kBACA,eACA,gBACA,uBACA,CACA,4BACA,KACA,gBACA,YAKA,KA2EA,EA3EA,EA2EA,EA3EA,EA2EA,EA3EA,EA4EA,eACA,KACA,SAEA,gBAA8B,QAAkB,uCAEhD,OADA,WACA,CAlFA,CAEA,CAEA,KACA,CACA,oBACA,CACA,4BACA,KACA,gBACA,YACA,OAwEA,kBACA,eACA,KACA,SAEA,OACA,MAKA,qBA4DA,OA3DA,WACA,2BACY,IAAmB,UAI/B,UACA,2BACA,MACA,MAA2C,QAA4B,YAOvE,0BAE4B,QAAoB,8BAGpB,QAAgC,OAE5D,CAAqB,CACrB,aACA,CAAiB,EACjB,2BACA,MACA,MAA2C,QAA4B,YAOvE,0BAE4B,QAAoB,8BAGpB,QAAgC,OAE5D,CAAqB,CACrB,OACA,2BACA,QACA,YACA,aACA,CAAyB,CACzB,CAAqB,CACrB,cACA,eACA,CAAiB,GAGjB,UAGA,CAAK,EACL,CACA,EAhJA,QAEA,CAGA,CAKA,CAIA,WAEA,CACA,gBACA,MAAW,QAAsB,GAA2F,KAC5H,CAsBA,OAvBiD,GAuBjD,GAvBoF,GAAG,CAAqC,CAwB5H,GACA,oBACA,2CACA,MAAmC,GAAc,YACjD,QACA,aACA,MAAkC,GAAyB,YAQ3D,OAPA,GACA,4HACA,aACA,cACA,eACA,CAAyB,GAEzB,yBACA,CACA,EAAa,GACb,CACA,OAAe,GAAc,WAC7B,CACA,EAmFA,cACA,eACA,KACA,SAKA,yBAWA,OAVA,WACA,2BACY,IAAmB,SAK/B,WAEA,CAAK,EACL,CACA,CAwI0B,OAA2C,CAErE,cACA,kBAAqC,EAAM,kBAC3C,sCAA8C,EAAO,OAAO,EAAW,kJACvE,aACA,cACA,eACA,CAAK,CACL,GARqC,OAA2C,CAShF,gBACA,kBAAqC,EAAM,kBAC3C,sCAA8C,EAAO,OAAO,EAAW,iLAAqM,SAM5Q,GACA,iBACA,OACA,gCAA4C,GAAc,6GAC1D,aACA,cACA,eACA,CAAa,CACb,QACA,WAAwB,KAAc,SACtC,EACA,WAAwB,KAAc,WAAW,KAAc,YAE/D,CACA,SACA,YAA+B,aAA2B,IAC1D,QAAwC,KAAc,MAGtD,OADA,aAA0C,cAAkC,IAG5E,CACA,EA5B4Q,GAA+C,iEAApP,EAAoP,qBAC3T,aACA,cACA,eACA,CAAK,CACL,8yDEtfO,SAASyyB,EAAiBtmC,CAAY,CAAEqiB,CAAc,EAa3D,GAAI,CAAC0H,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,CAAC/pB,EAAMqiB,GACvB,MADgC,CACzBriB,EAIT,IAAMumC,EAAgBvmC,EAAKiD,KAAK,CAACof,EAAOxc,MAAM,SAG9C,EAAkB1F,UAAU,CAAC,KACpBomC,CAD0B,CAM3B,IAAGA,CACb,gDCnCO,IAAMC,EAAqB,CAChCrhC,KAAM,KAAO,CACf,EAAsB,iECLtB,qIACA,aACA,cACA,eACA,CAAC,CACD,SACA,UACA,OACA,CACA,WAGA,CACA,MACA,OACA,CACA,OACA,OACA,CACA,YACA,OACA,CACA,eACA,QACA,CACA,CACA,mEACO,oBACP,EACA,MAEA,KACA,CACO,qBACP,EACA,UAEA,SACA,CACO,oBACP,EACA,aAEA,iBACA,cACA,CACA,wDC7CA,IAAMshC,EAAiB,kCAGhB,OAAM1B,UAA0BxiC,MAGrC5C,YAA4BgN,CAAc,CAAE,CAC1C,KAAK,CAAE,sCAAqCA,GAAAA,IAAAA,CADlBA,MAAAA,CAAAA,EAAAA,IAAAA,CAFZwN,MAAAA,CAASssB,CAIzB,CACF,CAGO,SAASC,EAAoBjpC,CAAY,QAC9C,UAAI,OAAOA,GAAoBA,QAAgB,CAAE,YAAYA,GAAAA,CAAE,CAIpD0c,CAJwD,KAIlD,GAAKssB,CACxB,+BChBE,iBAAsE,8BCHjE,SAASze,EACd7D,CAA8C,CAC9CwiB,CAA2B,EAE3B,OAFAA,KAAAA,IAAAA,IAAAA,GAAuB,GAEhBxiB,EAAI/jB,QAAQ,CAAG+jB,EAAI2E,MAAM,EAAI6d,CAAAA,CAAcxiB,EAAI7jB,IAAI,CAAG,GAC/D,CADgE,kDWFhE,E6FDA,yDnFyHA,EiE5GA,E0BdA,o4E/GCA,yBACA,wBACA,qBACA,SACA,iBACA,WACA,WACA,gBACA,UACA,EAAU,CACV,gBACA,YAEA,CAEA,eACA,SACA,4BAEA,CAEA,yBACA,UACA,CACA,aACA,6BAIA,MADA,qBACA,GAIA,wBAEA,CACA,CAIO,kBACP,eACA,MACA,wDACA,uBAMA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CAKA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,4CCpEA,kCACA,WACA,IACA,IACA,IACA,IACA,IACA,EACA,gBACA,MACA,kDACA,2CACA,yGACA,aACA,cACA,eACA,CAAa,EAEb,SACA,iCACA,mCACA,UAEA,kDACA,CACA,CAKW,yBACX,kBAA+B,EAC/B,WACA,mBAEA,YADA,IAA4B,IAAe,IAC3C,CACA,WACA,UACA,aACA,UAEA,eACA,8BACA,iBAKA,OAJA,aAAsD,IAAe,EACrE,kDAAyG,QAAe,gBAExH,OACA,CACA,CAEA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,UACA,UACA,cAAgC,GAAO,QACvC,QAAyB,QAAyB,IAClD,wBACa,QACb,CACA,CACA,8CACA,OACA,qBACA,aAEA,eACA,uBACA,yCACA,WACA,2BACA,mBACA,2BACA,eAEA,CACA,cACA,uBAEA,iBACA,yBACA,sBACA,CACA,qBACA,0DACA,aACA,+HACA,aACA,cACA,eACA,CAAa,EAEb,8BACA,wCAEA,OADA,iBAAgC,QAAW,KAC3C,YACA,KACA,UACA,QACA,CAAS,CACT,CACA,oBACA,4CAGA,OAFA,6BAA4C,QAAW,KACvD,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,eACA,4CAGA,OAFA,+BACA,OACA,YACA,KACA,SACA,CAAS,CACT,CACA,CChHO,SAASsmC,EACdziB,CAAiB,CACjB0iB,CAAkB,EAElB,IAAMC,EAA0B,UAAhB,OAAOD,EAAoB,IAAIhe,IAAIge,GAAQA,EACrDE,EAAW,IAAIle,IAAI1E,EAAK0iB,GAGxBG,EAAaD,EAAShe,MAAM,GAAK+d,EAAQ/d,MAAM,CAErD,MAAO,CACL5E,IAAK6iB,EACDD,EAAS94B,QAAQ,GAAGhL,KAAK,CAAC6jC,EAAQ/d,MAAM,CAACljB,MAAM,EAC/CkhC,EAAS94B,QAAQ,GACrB+4B,YACF,CACF,2FCHO,SACP,WACA,iBACA,uGACA,aACA,cACA,eACA,CAAa,EAEb,wCACA,gBACA,CACA,gBACA,iBACA,wGACA,aACA,cACA,eACA,CAAa,CAEb,mBACA,8CAEA,gBACA,CACA,cACA,4BACA,iBACA,gBACA,CACA,uBCpDA,uDCgBO,iBAA8B,GAAW,CAChD,eACA,sBACA,uBAEA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,cACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,YACA,gCAAwC,IAAkB,EAC1D,qBACS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,CACA,OACA,6BACA,2BACA,EACA,SACmB,QAAS,GAC5B,qCAEA,KAYO,wBACP,MAyGA,EACA,EArHA,QACA,KACA,+CACA,sBAAoB,wBAAwC,EACxC,GAA6C,EACjE,IACA,MACA,CAMA,CATmB,KAST,OAA+B,GAEzC,0CACA,eAAyB,OAAe,gBACxC,iDAAgF,GAAO,gBACvF,0BACA,gCACK,EAML,YAHA,IACA,sBACA,CACA,CACA,+BACA,EAA8B,QAAuB,IACrD,MAEA,aADA,yBACA,GACA,2BAEA,wBACA,CACA,CAEA,qCACA,iBACA,gBACA,cAEA,MAA2B,QAA2B,oBACtD,yBACA,cAA4C,IAAU,CACtD,2BACA,iBAEA,cAEA,MACA,aAA6B,IAAc,EAC3C,cACA,YACA,WACA,YAEA,CAGA,MADqG,EACrG,iBAAkD,IAAoB,EACtE,SACA,YAEA,MAAe,OAAyB,CAL6D,GAK7D,WACxC,MACA,oBACA,UACA,wBACA,gCACA,uBACA,CACA,CAAK,CAKL,IACA,oCACA,cACA,QACA,CAAS,EAKT,0DAEA,uDACA,0CACA,aAAyB,EACzB,UAD6C,UACZ,EAAyC,CAC1E,KAAiB,EACjB,UADqC,KACrC,kBACA,yBACA,EACA,WACA,SAA8B,CAC9B,gBAAqC,CACrC,kBACA,QAA6B,yBAAmB,EAChD,EAEA,EAAS,EAIT,qCAAqF,WD1KrF,aC0K6G,GD1K7G,IACA,6BACA,GCwK6G,sBAC7G,MAAsB,EAAc,CACpC,UACA,CAFoC,IAEpC,OACA,WACA,WACA,EAAU,MACV,CAAK,EA+DL,IA5DA,iBAGA,GADA,mDACA,CAIA,0BACA,MAAwC,EACxC,MAAmB,QAAS,SAAS,IAAc,UACnD,uBAAwC,UAAgB,EAAE,mBAAyB,EACnF,YACA,iCACA,uBAEA,CAAa,WACb,IACA,YAIA,MAAyC,yBAAmB,GAI5D,QAA+C,OAAe,CAH9D,IAG8D,UAD9D,MAEA,EAAyC,QAAwB,eARjE,IACA,GACA,EAMiE,GACjE,EAAsC,OAAe,EACrD,KANA,IAOA,YACA,8FACA,cACA,qBACA,mBACA,mGACA,CAA6B,CAC7B,2BACA,YACA,0BACA,uBACA,CAAyB,CACzB,sCAA+D,IAA2B,EAC1F,cACA,6BACqB,EACrB,aAAiC,kBAAgB,WAAoB,sBAAoB,sBACzF,EAAkB,OAKlB,gBACA,iBACA,CAAqB,GACrB,CACA,CAAa,CACb,CACA,qBACA,EAAK,GAEL,yBACA,8GACA,aACA,cACA,eACA,CAAS,CAET,OACA,8BAOA,2DACA,kBACA,UAAgC,GAAO,IACvC,eACA,0BACA,gCACS,EACkD,GAC3D,0BACA,uBACA,iDAOA,IAAgB,oBAAuC,EAAkB,0BACzE,QAIA,oCAKA,OACA,yBACA,cAAqC,IAA0B,aAE/D,qBACA,cAAqC,IAA2B,CAChE,mBAGA,CAUA,eACA,iBACA,mBAAyC,IAAoB,IAC7D,mBAAwC,IAAoB,IAC5D,mDAEA,CAKA,+CACA,aACA,UAAgC,GAAO,IACvC,eACA,0BACA,gCACS,EAIT,yBAEA,kBACA,uBACA,wCAOA,IACA,6BACA,kCH3SmBJ,CG2SmC,CAAc,eH3ShCziB,KAAK0iB,GG2S2B,IH1SlD1iB,GAAG,EG4SrB,CACA,SAAgD,EAAY,OAE5D,GAF4D,CAE5D,6CACA,KACA,MACA,iBACA,sCAA8D,EAAI,KAClE,SAEA,aACA,gEAEA,CACA,OACA,WACA,UL7TA,4BK6T+C,IL7T/C,IK6T+C,CL7T/C,yBAAgH,WK6TjE,kBAC/C,2BACA,CACA,yBCvWW,EAAS,YAkBpB,MAlBoB,CAGpB,gBAGA,wBAIA,sBAIA,wBAGA,gBACA,CACA,CAAC,GAAG,EEbJ,cAaA,OAZA,2CACA,uBACA,yBACA,2CACA,6BACA,6EACA,iDACA,yCACA,uCACA,2DACA,mDACA,mCACA,CACA,CAAC,MAAqB,EACtB,cAGA,OAFA,yEACA,iDACA,CACA,CAAC,MAAyB,EAC1B,cAKA,OAJA,mDACA,mCACA,+DACA,2CACA,CACA,CAAC,MAAqB,EACtB,cAgCA,OA/BA,2CACA,yCACA,2DACA,iEACA,+DACA,6DACA,iEACA,6DACA,iEACA,qDACA,6CACA,iCACA,iCACA,yCACA,iDACA,2CACA,uDACA,yDACA,mDACA,yEACA,uDACA,6CACA,2CACA,uDACA,uCACA,+CAEA,gBACA,0BACA,4BACA,gCACA,CACA,CAAC,MAAyB,EAC1B,cAEA,OADA,wCACA,CACA,CAAC,MAAsB,EACvB,cAMA,OALA,iDACA,yCACA,yCACA,yCACA,6CACA,CACA,CAAC,MAAiB,EACd,GAAa,YAKjB,OAJA,CADiB,CACjB,0CACA,4DACA,0CACA,0BACA,CACA,CAAC,CAAC,IAAa,EAAM,EACrB,eAEA,OADA,qCACA,CACA,CAAC,OAAiB,EACd,GAAQ,YAEZ,GAFY,IACZ,+BACA,CACA,CAAC,CAAC,IAAQ,EAAM,EAChB,UADU,EACV,GAEA,OADA,gDACA,CACA,CAAC,OAAgC,EACjC,eAGA,OAFA,sDACA,sDACA,CACA,CAAC,OAA0B,EAC3B,eAEA,OADA,+BACA,CACA,CAAC,OAAqB,EAEf,QACP,qBACA,2BACA,4BACA,wBACA,kBACA,0BACA,wBACA,kBACA,mCACA,mCACA,mCACA,qCACA,oCACA,uCACA,+BACA,wCACA,CAGO,IACP,oCACA,qCACA,wCACA,CEjHA,SAAQ,yCAA2C,iCAA2B,EARpE,EAAQ,IAAoB,CAS/B,YATU,MASV,MACP,iBACA,mCACA,CACA,CAKA,eACA,CALO,kBACP,8BACA,eACA,GAEA,aACA,kCAEA,IACA,qBACA,qCAEA,aACA,KAAkB,GAAc,MAChC,YADgC,EAChC,mBACS,GAET,OACA,EACA,WACA,yCACA,KAEA,IACA,WACA,QACA,MACA,OACA,CAAS,CACT,CACA,CACA,UAKA,oBACA,sCACA,CACA,aACA,SACA,CACA,0BACA,kBACA,KAEA,OADA,kBACA,CACA,CACA,qBACA,8CACA,CACA,6BACA,kBACA,wBAEA,WAEA,wBACA,mBACA,CACA,YACA,MACA,aAEA,IAAgB,aAAc,sBAC9B,KACA,UACA,EAAU,CACV,KACA,SACA,KAEA,EACA,gBACA,IAAa,GAAwB,6DACrC,WAGA,oFACA,KACA,EAGU,oDACV,QAHA,oCACA,MAIA,MAhEA,KAsEA,OALA,cACA,mBACA,mBACA,iBAEA,8EACA,8FACA,OACA,aACA,6CAAiF,GAAgB,iBACjG,uBAA+C,yCAAyC,QAAQ,kEAAoF,GACpL,QACA,qBACA,CAAyB,CAEzB,CACA,IACA,gDAAuG,IAEvG,IACA,cACA,uBAEA,WACA,GD9HIxI,CC8HoB,MAAU,GD7HX,CC6HW,SD7H9B,OAAOA,GACP,SC4H8B,CD5HpBA,EACc,YAAxB,OC2H8B,ED3HfxW,IAAI,CC6HvB,kBACA,QAGA,IACyB,UAEzB,MADA,QACA,CACA,CAAyB,aAKzB,OAHA,QACA,IAEA,CACA,CAAkB,SAGlB,MAFA,QACA,IACA,CACA,CACA,CAAa,EACb,CACA,WACA,WACA,wBACA,KACA,EAAc,CACd,KACA,QACa,GAAwB,iDAGrC,WACA,OACA,6CACA,4BAEA,yBACA,eACA,wBAUA,+CAVA,EACA,yCACA,2BACA,yBAEA,OADA,cACA,uBACA,EACA,yBAEA,CAGA,CAHc,CAlBd,CAsBA,CACA,gBACA,WACA,gFACA,gDACA,CACA,kBAEA,OADA,kCAEA,CACA,wBACA,+BACA,gBACA,CACA,0BACA,+BACA,WACA,IACA,UAEA,CACA,CACA,IAAM,GAAS,MACf,OADe,GACf,GACA,YACA,CAAC,GCrNM,yCACA,SAAS,GAAc,KAC9B,gBACA,GAF8B,GAE9B,yBACA,C9LJO,IAAM8hC,GAAgB,cAAsB,GAKR,uBAA+B,GAUnC,mBAA2B,GAEpC,OAbe,yBAgB3CC,GARqC,mBADrC,+BAYD,CAAS,GAK8B,oBiM7BjC,CjM6B8D,MiM7BxD,GACb,kBACA,CAF2B,GAE3B,2BACA,qBACA,UAEA,CACA,CACA,oBACA,2BACA,CACA,gBACA,uBACA,CACA,2BACA,kCACA,CACA,CCdW,uBACX,cACA,2GACA,CACA,kBACA,YACA,CACA,CACO,MAAM,WAAc,QAC3B,GAD2B,SAC3B,GAGA,QACA,0BACA,WAIA,sBACA,OAA2B,GAAc,WAEzC,sBAIA,8CAEA,cAEA,OAAuB,GAAc,UACrC,CAAa,CACb,OAFqC,CAErC,KACA,sBACA,OAA2B,GAAc,aAEzC,MAFyC,EAEzC,cAIA,8CAEA,OAAuB,GAAc,eACrC,CAAa,CACb,EAFqC,EAErC,KACA,6BAAqD,GAAc,SACnE,UADmE,SACnE,GAIA,qDAEA,YAEuB,GAAc,QACrC,CAAa,CACb,SAFqC,MAErC,KACA,6BAAqD,GAAc,oBACnE,sBAIA,qDAEA,YAEuB,GAAc,mBACrC,CACA,CAAS,CACT,CAIA,eACA,oBACA,WACA,UACA,aACA,aACA,UACA,kBACA,SACA,OAA+B,GAAc,UAC7C,CACA,CACA,CAAS,CACT,CAOA,IAX6C,EAW7C,UACA,8BACA,CACA,CAMA,sBACA,uBACA,IAAmB,GAAc,EACjC,CACA,YACA,IAHiC,EAGjC,gBACA,mBACA,iBACA,EACA,EACA,CACU,iBACV,UAEA,iBAEA,CACA,UACA,sBACA,CACA,OACA,6BACA,yBACA,IACA,CACA,OACA,+BACA,CACA,SACA,iBACA,CACA,aACA,8BACA,kBAEA,CACA,WACA,wCACA,sBAGA,aACA,OACA,EACA,EACA,CAEA,CACA,QACA,wCACA,qBACA,QACA,CACA,CACA,UACA,wCAGA,iBACA,QACA,CACA,CACA,oBACA,qBACA,CACA,CCzJO,2BA6DP,IAGA,gBAIA,4BAGA,0BAGA,+BAGA,mBAGA,mBAGA,wBAGA,wBAGA,uBAGA,oCAGA,oCAGA,8BAGA,6BACA,EACA,EACA,MACA,OACA,cACA,yBACA,iBACA,CACA,YACA,yBACA,iBACA,cACA,cACA,CACA,eAEA,WACA,WACA,CACA,YACA,uBACA,mBACA,CACA,SACA,yBACA,iBACA,uBACA,mBACA,UACA,cACA,cACA,CACA,UAEA,yBACA,uBACA,mBACA,iBAEA,EACA,ECpGO,OAFA,uBAGA,cAJA,oCErDA,UACP,mBACA,cACA,WACA,WACA,CAEA,kBDNW,SCOX,4BACA,cAA+B,CDRpB,ECQmC,aDP9C,WACA,WAAgB,GAAS,EACzB,MACA,SAEA,IAAgB,SAAuB,EAAU,GAA2B,EAC5E,YADgD,GAChD,qBAAoE,KACpE,ICCA,CACA,CACO,SACP,eACA,kBACA,CAEA,cAQA,OAPA,6BACA,kBAGA,IAA2B,IAAkB,oBAC7C,4BAAyC,MAAM,EAAY,GAE3D,KAEA,CCzBO,iBAA8B,GACrC,YADoD,EACS,aAC7D,EAD6D,CAE7D,KACA,gKAA4O,GAAiB,IAAO,UAAP,KAAO,GACpQ,CACA,sBAMA,OAHA,UAAkB,GAAiB,MAAS,GAAiB,CAC7D,IADmC,CACnC,QAD6D,CAC7D,SACA,+BACA,UAEA,uBACA,WACA,CAOA,SACA,kBACA,sHACA,aACA,cACA,eACA,CAAa,EAGb,OADA,kBACA,oBACA,UACA,wBACA,4BACA,CAAiB,EACjB,wBACA,SACA,CAAiB,EACjB,yBACA,UACA,CAAiB,CACjB,CACA,CAAS,CACT,CACA,CACO,iBAA+B,GACtC,aADsD,SACtD,CAIA,OAHY,MAAsB,MAClC,UADkC,CACZ,GAAsB,MAAS,GAAsB,EAE3E,QAF4C,CAE5C,CAEA,eACA,yCACA,CACA,WACA,iDAEA,iBACA,4BAEA,kBACA,sBACA,CACA,oBACA,+BAEA,qBACA,yBACA,CACA,eAEA,OADA,yBACA,KAEA,gBAEA,OADA,0BACA,KAEA,mBACA,6BACA,cACA,2BACA,EACA,sBACA,CACA,aACA,6BACA,CACA,aACA,8BACA,0CACA,CACA,aACA,6BACA,CACA,kBACA,kCAOA,OANA,eACA,0BACA,EACA,EACA,EAEA,KAEA,QAEA,OADA,gBACA,KAEA,OACA,4BACA,CACA,WACA,mCACA,CACA,CEoSyC,YAAW,CAAlC,OAAOprC,aAGtB,CAAC,OAAQ,UAAW,mBAAmB,CAAWklC,KAAK,CACtD,GAA2C,YAA/B,OAAOllC,WAAW,CAACu7B,EAAO,CAGnC,OAAM8P,WAAoB5kC,MAAO,SCzZxC,mBGRasqB,GAA6B,CA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A,aACA,0BACA,CACA,cACA,QACA,6GACA,uFAAuG,EAAO,yBAC9G,aACA,cACA,eACA,CAAa,CAEb,kBACA,CACA,oBACA,8BAEA,mBACA,6BAEA,mBACA,iCAEA,WACA,yBAEA,YACA,mBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,WACA,yBAEA,YACA,mBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,WACA,4BACA,sBACA,SAAkB,cAAc,IAAI,UAAU,EAAE,EAAS,EAAE,EAAO,EAAE,UAAU,EAE9E,YACA,mBACA,cACA,CACA,aACA,2BAEA,eACA,6BAEA,gBACA,uBACA,CACA,WACA,yBAEA,YACA,mBACA,CACA,aACA,2BAEA,cACA,qBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,eACA,6BAEA,gBACA,uBACA,CACA,eACA,yBAEA,gBACA,0CAAsE,EAAM,CAC5E,CACA,WACA,iBAEA,SACA,iBAEA,8CACA,OACA,eACA,mBACA,uBACA,uBACA,uBACA,eACA,uBACA,eACA,uBACA,mBACA,+BACA,cACA,CACA,CACA,QACA,4CACA,CACA,SGlLsB,2BAKM,QAyB5B,0CC9BO,wBACA,wBACP,kBACA,wBACA,CACA,CCJW,MAAM,GACjB,cACA,MACA,CAEA,QALgC,KAKhC,qBACA,IACA,GACA,CAAS,EAGT,eACA,aACA,CACA,CClBA,SACA,KACA,KCEO,SAAS,GAAY,GAC5B,wEAA+F,EAC/F,CAqFO,gBAtF2G,EAsF3G,OACP,IAEA,IAAgB,uBAAqB,EACrC,eAGA,MAA2B,SHnFhB,GACX,SGkFgD,CHlFhD,gBAQA,OAJA,oBACA,oBACA,eACA,CAAK,EACL,CACA,EGyEgD,GAChD,EA5FA,cACA,SAGA,MAAsB,GACtB,aACA,WACA,CACA,IAJqC,CAIrC,WAGA,oBACA,iBACA,WACA,CAAK,EAGL,UAAyB,GAKzB,OAJA,qBACA,CAFwC,CAExC,SACA,CAAK,EAEL,oBACA,gBAIA,OAEA,GADA,KACA,sEACA,MDLO,aAAqD,EAC5D,gBCImE,EDJnE,GACA,4BACA,4BACA,2BACA,EAMA,OALA,UACA,KACA,KACA,MAEA,CACA,GCNA,IACA,uBAA+C,yCAAyC,iCACxF,iCACA,0DACyB,CAEzB,CACA,iBACgB,KAAS,MAAS,EAAkB,GAA3B,UAA2B,EACpD,CADoD,QACpD,gBACA,CAAiB,YACjB,CACA,IACA,gBAGA,0CACA,UAIA,IACA,gBAEA,MAAkC,GAElC,CAAc,SAEd,MADA,QACA,KAJiD,EAIjD,0DACA,OACA,CAAiB,uBACjB,aACA,cACA,eACA,CAAiB,CACjB,CACA,CAAS,CACT,UACA,oBACA,YACA,CAAS,CACT,gBAMA,GAHA,GACA,SAEA,mBAEA,OADA,QACA,UAEA,CAAK,CACL,EASA,IACA,mBACA,eACA,CAAS,CACT,CAAM,SAEN,GAAY,GAAY,SACxB,cADwB,cACxB,kCACA,OACA,CAAS,uBACT,aACA,cACA,eACA,CAAS,CACT,CACA,sBChHe,OAAM,GACrB,UAGA,aAJiC,EAIV,GAAY,MACnC,WAAoB,CACpB,KAFmC,OAEnC,IACA,CAAK,SAOL,gBACA,WAAmB,GAAY,GAC/B,WAAwB,CACxB,QAF+B,IAE/B,CACA,CAAS,CACT,CACA,2BAA4B,yBAAkC,EAC9D,gBACA,mBACA,gBACA,gBACA,CACA,kBACA,8BACA,CAIA,aACA,2BACA,CAIA,gBACA,qCAEA,wBACA,wBAGA,SAEA,mCACA,MACA,gCAAgD,IAAc,yFAC9D,aACA,cACA,eACA,CAAiB,EAEjB,OAAmB,GAAc,cACjC,CACA,qBAIA,sBACA,qBAGA,oBACA,SACA,SACA,CACA,CAAa,EAEb,+BACmB,GAAgB,eAEvB,GAAM,wBACC,GAAgB,eAGnC,6BlBhEO,YkBiEwB,ClBjExB,EAGP,gBACA,2BACA,SACA,SACA,CACA,CAAS,EAGT,gBACA,YAEA,aAAY,cAAqB,oBAGjC,iBACA,eACA,CAAK,EACL,IACA,KAAU,aAAwB,KAClC,WACA,yBACA,eACA,CAAa,EACb,CAGA,WAKA,MAJA,4BAGA,UACA,CACA,KkB8B+B,eAE/B,cAOA,gBACA,qBAGA,GAEA,+BACA,CACgB,GAAgB,eAChC,CAC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ACA,cACA,eACA,CAAa,CACb,QACA,WAAwB,KAAc,SACtC,EACA,WAAwB,KAAc,WAAW,KAAc,YAE/D,CACA,SACA,YAA+B,aAA2B,IAC1D,QAAwC,KAAc,MAGtD,OADA,aAA0C,cAAkC,IAG5E,CACA,EA5BuS,GAAoB,iEAApP,EAAoP,qBAC3T,aACA,cACA,eACA,CAAK,CACL,uCChgBO,eACP,cACA,CCCO,kBAAgB,+BAAgC,SACvD,gBAC6B,UAAI,SACjC,MACA,MACA,EAAc,CACd,UACA,CAAa,CACb,MACA,OACA,EAAc,OACd,yCACA,CAAS,EAET,IACA,CACO,eACP,SACA,eACA,iBACA,mBAAoC,KACjB,GAAW,GADiB,CAE/C,IAD8B,EAC9B,IAGA,QACA,CAMA,gBACA,WACA,gBACA,WACA,WACA,EACA,wBAIA,qBACA,GAEA,iDACA,KAlBA,+BACA,yBACA,CAAK,CAgBL,EAEA,QACA,CAeO,4BAAqB,0BAAsC,SAClE,QACA,KAEA,YACA,yDACA,IACA,MACA,UACA,EAAkB,CAClB,MACA,CAAiB,CACjB,SACA,CAAa,EA3Bb,kBAAsB,gCAAqC,SAC3D,EACA,kCACA,oBACA,OACA,gBACA,CAAa,CACb,OACA,YACA,CAAa,CACb,wDACA,CAAS,IAVT,IAYA,EAgBA,CACA,aACA,iBACA,SACA,CAAa,GAGb,CCzFO,QACP,cACA,gBACA,6BACA,6BACA,6BACA,2BACA,6BACA,sCACA,EACO,IACP,OACA,WACA,QACA,QACA,CCfA,sBACA,iBACA,EAEA,CACA,EACA,CAEA,eACA,WAGA,YACA,CCiLA,QACA,YACA,OACA,UACA,QACA,MACA,CCjMA,wBAAyB,OAAsB,SAC/C,MACyB,UAAI,SAC7B,KACA,aACA,cACS,CACT,qBACA,CAAK,EAPL,IAQA,CCyTA,iBAA0B,SAAW,EACrC,QACA,OACQ,GAAI,MACZ,oBAAsC,EAAK,EAC3C,eACS,EACD,GAAI,MACZ,kBAAoC,EAAK,EACzC,gBACS,EACD,GAAI,MACZ,mBAAqC,EAAK,EAC1C,2DACA,CAAS,EACT,gBCjVA,kBAA8B,EAAM,EACpC,QAAY,qBAA8B,EAC1C,MAAyB,UAAI,SAC7B,MACA,kBACA,KACK,CACL,CACA,iBAAoB,SAAW,EAC/B,2CAEA,MADA,qBACA,IACA,MACA,CAAS,CACH,EACN,mBACA,MAA6B,UAAI,SACjC,MACA,MACA,CAAS,CACT,CACA,2BEvBA,eACA,0CACA,CACA,cAEA,8CAEA,kBADA,iBAC+B,eAAe,sBAAyB,EACvE,CA4BA,iBACA,6BACA,kBACA,IAGA,OADA,UAEA,CAAM,OACN,GACA,SAGA,qBAEA,eADuB,UAAU,WACjC,EACA,CASA,0EAKA,iCAAuE,EAAe,MAZtF,EAQA,EAMA,EAbA,iBADA,EAcA,IAbA,mBACe,UAAU,SAYzB,EAZyB,GAEzB,EAaA,SACA,cASA,GAPA,EADA,mBACA,EAEA,iCAKA,qBACA,wBACA,kBACA,KACA,KACA,OACA,IACA,iBACA,+BA3BA,EA4BA,aA3BA,UA4BA,CAAc,MAEd,IACA,CACA,GACA,oBAA8D,EAAY,GAE1E,CACA,QACA,CCpGA,iBACA,6BACA,CACO,iBAEP,IADA,EACA,8DAWA,CAVA,mBACA,UACM,IACN,eACA,oBAEA,4BACA,gBAGA,uBACA,CACA,WACA,cACA,EAEA,CACA,kBACA,UACA,CAEA,CEZA,QAAQ,cAAc,4CACtB,4FACA,eACA,yBACA,0BACA,eACA,0BACA,EACA,cACA,GACA,IACA,WACA,wBACA,8BACA,EALA,OAQO,8CACA,2CACA,yBACA,yBACA,yBACY,yBACZ,yBACA,0BACA,iCACA,6BACA,6BACA,0BACA,iCACA,YAAkC,EAAE,IAAI,IAAI,kBAC5C,0BACA,iCACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,yBCrDP,UACA,mBACA,eACA,eACA,WACA,YACA,WACA,CACA,CAIA,SACA,cACA,eACA,cACA,CACA,CAkBW,SACX,iBACA,mBACA,iBACA,eACA,qBAGA,iBACA,iBACA,yBACA,yBAMA,aACA,iBACA,sBAEA,sBACA,gBACA,CAKA,cAEA,mBACA,mBAKA,cACA,mBACA,iBACA,CAKA,aACA,qBAGA,OADA,mBACA,CACA,CASA,SACA,2EACA,8BACA,iDAGA,wBACA,KAEA,SACA,uCACA,SACA,uBACU,CAEV,oBACA,oBACA,kBACA,iBACA,CAEA,sDACA,wBACA,yBACA,sBACA,CACA,CAMA,OACA,wBACA,CAMA,OACA,wBACA,KAGA,OADA,mBACA,OAKA,qBACA,qBACA,wBAEA,OACA,OACA,MACA,OACA,CACA,SAEA,CAMA,UACA,wBACA,IACA,mBACA,qBACA,uBACA,CAGA,WACA,uBAKA,kBACA,qBACA,CACA,CCnLO,QACP,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAG,GAAK,MACnB,KAAU,GAAO,GAAD,CAAK,KACrB,UACA,KAAU,GAAM,EAAD,CAAK,MACpB,MAAW,GAAM,EAAD,CAAK,MACrB,MAAW,GAAQ,GAAI,CAAL,OAClB,EACA,IACA,UACA,YACA,aACA,EAgCO,mBACP,SAhCA,QACA,0CACA,UAEA,0BACA,OAEA,cACA,eAIA,oCACA,2BAEA,sBAGA,EAcA,YACA,CAaA,WAA0B,GAAQ,iBCzDlC,IACA,SACA,UACA,OACA,CACA,MACA,SACA,YACA,CACA,UACA,SACA,YACA,CACA,OACA,WACA,CACA,OACA,SACA,YACA,UACA,OACA,CACA,OACA,SACA,eACA,aACA,kBACA,QACA,SACA,EAgDO,mBACP,MAA2B,GAAyB,GACpD,eACA,IAFoD,EAEpD,GACA,gBACA,MAnDA,gBACA,aACA,MAAsB,GAAa,GACnC,OADmC,CACnC,IACA,aASA,2BAUA,aATA,GAA2D,IAA3D,IJ/CA,OI+C0E,OJ/C1E,KI+C0E,IAS1E,SACA,MNnCW,YACX,WACA,EAjBA,SMkDuE,ENjDvE,4DACA,4BAAuC,EAAO,SAC9C,IAeA,aAbA,gDACA,4BAAuC,EAAO,SAC9C,IAkBA,OAF+B,GAAqC,4CAGpE,EMwBuE,EASvE,CADA,MAEY,QAAQ,CDPb,KCKkF,CDJzF,ICI8H,EDJ9H,ECIkI,CAA0B,GDJ5J,MACA,YACA,YACA,SAEA,ECCoB,iHAAkH,SAA4B,4FAElK,GACA,CACA,UACA,IAAa,GAAU,IACvB,EAAM,CADiB,GAEvB,EAEA,IAAa,GAAU,IACvB,CACA,EAMA,OACA,GACA,SACA,CACA,QACA,CACA,QACA,mBACA,gBACA,qBACA,sBACA,6BACA,+BACA,uBACA,0BAMO,sBACP,kBAaA,OACA,KACA,MAAe,GAAY,UAC3B,EAGA,OAlBA,kBANA,EASA,YARA,CADA,EAOA,8BANA,QACA,uBADA,SAUA,GADA,KACA,WADA,EACA,CACA,QAFA,EAEA,CACA,EAHA,EAGA,GAAsC,GAAY,OAClD,CAEA,CAHkD,CAGlD,iDACA,EAKA,KACA,YAAmC,GAA8B,wBACjE,CACA,EACA,IACA,OACA,SACA,UACA,YACA,cACA,CACO,eACP,MACA,kBACA,+BACA,GACA,KACA,MAAe,GAAY,UAC3B,EACA,gBACA,gBAKA,GAHA,oDACA,4EACA,SACA,WACA,eACA,aAEA,UAAuC,GAAyB,eAChE,KAEA,EAHgE,GAGhE,MAEA,eAQA,CAEA,QACA,ECzKO,qBACP,IAIA,EACA,EACA,EANA,QAAY,wBAA4B,KACxC,aACA,aACA,4BtKuBgD,EsKvBhD,KAiBA,IAjBkF,GAIlF,GACA,aALqG,EAMrG,WACA,QACM,GACN,eACA,SACA,QACM,IACN,eACA,SACA,QAEA,CACA,MACA,UACA,UACA,CACA,CACO,uBACP,IAAY,OAAuB,KACnC,cACA,mBAGA,CEhCA,qBAGA,qBACA,mBACA,uDACA,GACA,CACA,OAAW,GAA8B,QACzC,CACO,WACP,MACA,CAJyC,EAIzC,eACA,SAUA,OAT2D,MAA3D,GAAkC,GAAyB,mBAC3D,GAD2D,OAC3D,iBACA,OACA,CAAS,EACT,4BACA,cACA,cACS,CACT,CAAK,EACL,CACA,EACA,2BACA,kBACA,SACA,iCACA,yCACA,aACA,OACA,CACA,eACA,EACA,EACU,oBACV,QACA,cACA,kBACA,qBACA,UACA,MACA,cAEA,CAAa,CACb,CAEA,QACA,CACA,kCACA,EAIA,CACA,OAJA,6CAIA,EAHA,QAGA,EACA,EANA,IAOA,CACO,wBACP,kBACA,kCACA,8BACA,0BAQA,MANA,CACA,YACA,YACA,QACA,MALA,uBAMA,CAEA,EACA,IACA,YACA,YACA,eACA,UACA,cACA,kBACA,uBACA,oBACA,oBACA,oBACA,cACA,CACA,OACA,kBACA,+BACA,SAKA,aAJA,wBACA,6CACA,0BACA,+CACA,KACA,gBACA,eACA,gCAA8D,EAAI,GAAG,EAAM,EAE3E,CACA,mBACA,EACO,MACP,EACA,CACA,YACA,iDACA,EAJA,KAMA,IACA,SACA,QACA,SACA,KACA,QACA,CACO,OACP,kBACA,SACA,iBACA,WACA,KACA,eAEA,aADA,WACA,SACA,MAAuC,GAAyB,WAChE,WADgE,CAChE,MACA,MACc,KAAgB,GAAyB,EAEvD,CACA,QACA,EACO,OACP,EANuD,EAMvD,EACA,kBACA,UACA,OACA,UACA,EAEA,8BAAiF,GAAyB,qDAC1G,KACA,EAAU,QACV,OACA,sCACA,oBACA,eACA,0CACA,CACA,EACO,OACP,kBACA,eAEA,KAAwB,GAAyB,MAEjD,QACA,EACO,MAJ0C,GAI1C,UACP,EACA,CACA,cACA,8DACA,EAJA,KAMO,MACP,EACA,CACA,cACA,OAAgB,GAAyB,SACzC,EAJA,KAMO,MAHkC,GAGlC,UACP,EACA,qEACA,wDACA,GChLO,sBACP,GAAqB,IACrB,KACA,CAFqB,EAGrB,iBACA,EACA,CACO,WACP,MACA,YAEA,OACA,QACA,UAEA,oBACA,sCACM,GAAS,GAAa,GAC5B,OAD4B,CAE5B,MACA,MAEA,aAA0B,GAAQ,CAClC,IADkC,EACP,GAAyB,KACpD,iBADoD,EACpD,CACA,CAEA,QACA,ECRA,iCACA,QACA,eACA,SAAY,4CAA4C,EASxD,GAPA,GACA,WAEA,GACA,YAGA,sEACA,MAAgC,GAAc,CAC9C,UAD8C,EAC9C,CACA,QACA,CAAS,iBACT,KACA,4BACA,CAAS,WACT,YACA,CAEA,2EACA,YAAwC,GAAgB,CACxD,YADwD,EACxD,CACA,QACA,CAAS,mBACT,KACA,4BACA,CAAS,aACT,cACA,CAIA,OAHA,GACA,eAEA,CACA,CAEA,8BAAgD,0GAA0G,EAE1J,6EACA,eAEA,OADA,GAEA,YAEA,QAAmC,GAAY,iBAC/C,KAEA,kBAEA,mBAA8C,GAAiB,oBAC/D,KAEA,iBAEA,kBAA6C,GAAgB,+BAC7D,KAEA,eAEA,UAAqC,GAAc,yBACnD,KAEA,gBACA,WAAkC,GAAe,iBAEjD,oBACA,eAAsC,GAAmB,qBAEzD,aAEA,QAAmC,GAAY,cAG/C,mBACA,cAAqC,GAAkB,oBAEvD,gBACA,WAAkC,GAAe,iBAEjD,cAEA,SAAoC,GAAa,eAGjD,gBACA,aACA,gBACA,eAEA,EAjDA,EAiDA,CAAkC,GAAyB,EAjD3D,EAiD2D,EAC3D,KAEA,WAH2D,IAK3D,EAtDA,EAsDA,CAAkC,GAAyB,WAC3D,KAEA,MAH2D,QAK3D,EA3DA,EA2DA,OAAwC,GAAa,gBACrD,KAEA,kBAEA,mBAA8C,GAAiB,oBAC/D,KAGA,gBACA,sBACA,kBACA,gBACA,cACA,gBACA,eACA,qBACA,eACA,sBACA,eACA,gBAEA,EAjFA,EAiFA,GAjFA,EAiFA,OACA,KACA,aACA,wBAA+C,kBAC/C,KACA,oBACA,iBACA,KACA,8BAEA;AAAA,mFACA,KAEA,oCAEA;AAAA,mFACA,KAEA,kBACA,kBACA,eACA,QAtGA,EAsGA,EACA,uCAAoE,GAAK,sCAAsC,EAAM;AAAA,kFAOrH,CAEA,wBACA,CA+BA,mBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,GAAmB,EAA5B,cAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,mBACA,0CACA,UAAgB,GAAQ,EACxB,UAAyB,KAAS,MAAS,GAAmB,EAA5B,cAA4B,EAC9D,6BAA8C,EAAM,EACpD,YACA,aACA,CACA,CAAa,6BACb,CACA,uBACA,CACA,yBACA,MACA,iCACA,6BH7O8B,MG6OmC,EH5OjE,CAD8B,EG6OiD,YH5O/E,aG4O+E,MAC/E,iFACA,CACA,uBACA,aAAY,GAAW,EACvB,kBACA,gCACA,eACA,gBACA,oBACA,kBACA,EAQA,MAPA,CACA,OACA,QACA,YACA,UACA,oBAGA,CAEA,wBAAiC,wEAAuE,EAGxG,IAFA,EACA,EACA,iBACA,KACA,QAAoB,GAAsB,YAC1C,OAD0C,CAEpC,CACN,IAAgB,iBAAqD,MAAQ,GAAqB,GAClG,IACA,GACA,CACA,GACA,IALkG,CAKlG,GAAqB,GAAQ,EAE7B,uBACA,YACA,OACA,CAAK,OAKL,GAJA,QACA,EACA,EACA,EACA,MACA,YAA+B,GAAsB,KACrD,YACA,EAFqD,IAErD,CACA,CAAS,MACT,QACA,MACA,CACA,CAEA,wBAAiC,2EAA0E,EAG3G,IAFA,EACA,EACA,iBACA,KACA,QAAoB,GAAsB,YAC1C,OAD0C,CAEpC,CACN,IAAgB,iBAAqD,MAAQ,GAAqB,GAClG,IACA,GACA,CACA,GACA,IALkG,CAKlG,GAAqB,GAAQ,EAE7B,gBACA,OACA,CAAK,OAEL,GADA,UACA,MACA,YAA+B,GAAsB,IAIrD,WAHA,IADqD,CACrD,KACA,OACA,CAAS,MAET,CACA,CACA,OAA6B,YAAK,2BAQlC,UANA,GAMA,EADA,OANA,GAOA,IALA,CACA,KACA,KACA,CAEA,IACA,CAAC,EACD,qCACA,IAoBA,EApBA,MAAsC,OAAM,IAC5C,kBACA,EACA,EACA,EACA,EACA,CAGA,OAGA,GACA,oBACA,IACA,KACA,kBACA,EAEA,MAAmB,GAA6B,KAqBhD,aAlBA,EAfA,MAYgD,GAZhD,EAeA,CACA,SACA,cACA,EAEA,CACA,QACA,EAEA,UACA,OACA,gBACA,oBACA,kBACA,QACA,QACA,cAA2B,IAAgB,SAC3C,CAAK,EADsC,EAE3C,CACA,iBACA,qBACA,CAMA,OALA,8BAGA,UAEA,CACA,CACA,OAA6B,YAAK,2BAOlC,UALA,GAKA,EADA,OALA,GAMA,IAJA,CACA,YACA,EAEA,IACA,CAAC,EACD,qCACA,IAoBA,EApBA,WAAsC,EAAM,IAC5C,kBACA,EACA,EACA,EACA,EACA,CAGA,OAGA,GACA,oBACA,IACA,KACA,iBACA,GAEA,MAAmB,GAA6B,KAqBhD,aAlBA,EAfA,MAYgD,GAZhD,EAeA,CACA,SACA,cACA,EAEA,CACA,QACA,EAEA,UACA,OACA,gBACA,uBACA,kBACA,QACA,QACA,cAA2B,IAAgB,SAC3C,CAAK,EADsC,EAE3C,CACA,iBACA,qBACA,CAMA,OALA,8BAGA,kBAEA,CACA,CACA,wCACA,iCACA,iBACA,IACA,eACA,kBAEA,+BACA,8BAGA,CAiFA,iBACA,yBACA,mCACA,UACA,sBAKA,WACA,EACA,aACA,GAGA,EAAM,sBACN,UAEA,YAEA,CAWO,2BACP,IASA,EATA,EZ3iBA,CAEA,cACA,EYwiB2B,SZxiB3B,KACA,OYuiBgD,KZviBhD,KACA,kBAEA,WACA,iBACA,qBACA,aACA,eACA,cACA,cACA,aACA,eACA,YACA,cACA,YACA,eACA,eACA,WACA,UACA,CAAS,CACT,WACA,eACA,aACA,eAAwB,CACxB,iBACA,qBACA,YACA,cACA,eACA,cACA,cACA,cACA,YACA,eACA,cACA,oBACA,YACA,cACA,SACA,CAAS,CACT,QACA,EY+fA,GACA,WACA,aACA,cACA,EACA,GACA,gBACA,EAIA,GACA,QACA,UAEA,WAtEA,GAIA,SACA,YAAmB,WAA0B,IAE7C,KADA,SAGA,QACA,EA4DA,GACA,IACA,YAAmB,WAA0B,SAC7C,EAKA,EAkCA,MAhmBA,MA8kBA,EApBA,UAGA,UA7jBA,EA6jBA,wCAxjBA,gGAwjBA,CAEA,gDACA,aACA,CACA,aACA,yBAIA,QAGA,SACA,IACA,CAIA,EADA,MACA,QAEA,EAEA,gBACA,SACA,SACA,kBACA,sBACA,iBACA,aACA,wBACA,CAAS,EAGT,cAEA,IACA,kDACA,gEACA,2DACA,EAEA,CAgBA,GAfA,qCACA,WACA,SACA,QACA,UAEA,iBACA,gCAEA,kBACA,mCAKA,kBACA,wBACY,GAAQ,GAGpB,OAhMA,kBACA,cAAY,aAAqB,EACjC,MAGA,SACA,QACA,+BACA,4DAUA,GATA,KACA,YACA,gBACc,sBACd,mBAGA,wDACA,uBACA,yBACA,MAAmC,GAAc,6BACjD,WACA,0BAAmD,YACnD,QACA,6BACqB,CACrB,QACA,wCACA,CAAqB,CACrB,QACA,8BACA,EACiB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A,sBACS,EACD,GAAI,MACZ,mBACA,0BACS,KACT,4BACA,MAA2C,UAAI,SAC/C,aACA,qBACA,CAAiB,OACD,GAAI,MACpB,SACA,eACiB,EACjB,KACA,WAA0C,UAAI,SAC9C,eACA,2BAGA,0EACA,CAAS,OACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,MACZ,WACA,+CACA,CAAS,EACD,GAAI,MACZ,WACA,mBACS,EACD,GAAI,MACZ,UACA,kBACS,EACD,GAAI,MACZ,YACA,oBACS,EACD,GAAI,CACZ,cACA,0CACS,EACD,GAAI,MACZ,YACA,8CACS,EACD,GAAI,MACZ,WACA,kBACA,CAAS,KACT,6BAA8E,UAAI,SAClF,eACA,MACA,CAAa,SACb,yBAAwE,UAAI,SAC5E,aACA,MACA,CAAa,SACb,+BAAiF,UAAI,SACrF,gBACA,MACA,CAAa,SACb,cACA,sBAAyD,UAAI,SAC7D,WACA,2BACa,OACb,kBAAqD,UAAI,SACzD,WACA,uBACa,OACb,IACQ,GAAI,CACZ,gBACA,mBACS,EACD,GAAI,MACZ,iBACA,yBACS,KACT,6CACA,iBACA,SAAkD,GAAI,MACtD,EACA,SACA,CAAqB,GAEE,GAAI,MAC3B,EACA,SACA,CAAiB,GAER,GACT,CACA,EkByCiB,CACjB,SAHA,EArBA,MAAmC,GAAe,cAyBlD,CAAS,EjBzLF,kBiB0LmB,GjB1LW,EAAY,EACjD,kBACA,cAAY,+BAAqC,EACjD,OAAW,GAAU,CACrB,MADqB,IAErB,YACA,YACA,CAAS,OACT,iEACA,gBACA,WACA,YACA,CAAiB,SACjB,iEACA,gBACA,QACA,YACA,CAAiB,SACjB,iEACA,gBACA,OACA,YACA,CAAiB,SACjB,CACA,EiBkK0B,CAC1B,wBACS,ElB7CF,UkB8CW,OlB9CW,EAAQ,EACrC,kBACA,UAAY,iBAAqB,EACjC,YAA4B,EAAM,EAIlC,OAHA,GACA,sBAAqC,GAAY,EAExB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EkBmCkB,CAClB,gBACS,ElBpCF,YkBqCa,OlBrCW,EAAU,EACzC,kBACA,UAAY,YAAgB,EAC5B,OAAW,GAAU,CACrB,EAA8B,IADT,EACS,IAAI,SAClC,qBACA,SACA,CAAS,UACT,WAAsD,UAAI,SAC1D,qBACA,SACA,CAAa,MACb,CACA,EkBwBoB,CACpB,mBACA,CAAS,ElBzBF,UAAyB,GkB0BX,QlB1BW,CAAW,EAC3C,8BACA,YAAY,GAAU,EACtB,MAAyB,UAAI,SAC7B,8BACA,oBACA,CAAK,CACL,EkBmBqB,CACrB,sBACS,ElBbF,mBkBcoB,OlBdW,EAAiB,EACvD,kBACA,SACA,gBACA,SACA,aACA,MAA0B,EAAI,MAG9B,MAAyB,UAAI,SAC7B,wBACA,SACA,CAAK,CACL,EkBC2B,CAC3B,kCACS,EACD,SlBoBD,OkBpBiB,OlBoBW,EAAc,SACjD,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,MACjB,2BACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,QACA,iBACS,EACD,GAAS,CACjB,KADiB,MACjB,sBACA,kBACS,EACD,GAAS,CACjB,KADiB,MACjB,KACA,cACS,KACT,6CAAuF,GAAS,CAChG,KADgG,MAChG,EACA,UACA,CAAa,MACb,EAtBA,IAuBA,EkB5CwB,CACxB,4BACS,ElBLF,ekBMgB,OlBNW,EAAa,EAC/C,kBACA,YAAY,2CAA+C,EAC3D,OAAW,GAAU,CACrB,EAAkB,GAAI,CADD,KAErB,yBACA,aACA,CAAS,OACD,GAAI,MACZ,6BACA,SACA,CAAS,EACT,WAA+D,UAAI,SACnE,WACA,cACA,+BACA,CAAa,QACb,EAAyB,GAAI,MAC7B,wCACA,SACA,CAAS,OACT,CACA,EkBhBuB,CACvB,0BACS,EhB1NF,iBgB2NkB,GhB3NW,EAAW,MAC/C,MAiBA,MAiFA,MA9FA,EAHA,MACA,YAGA,eACA,aACA,UACA,cACA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACrB,CACA,KACA,eAEA,GACoB,GAAI,CACxB,mBACA,iBACA,CAAqB,EACD,GAAI,UACxB,yBACA,qDACA,CAAqB,EACD,GAAI,UACxB,wBACA,oDACA,CAAqB,EACD,GAAI,UACxB,0BACA,sDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,mBACqB,EACD,GAAI,UACxB,kBACA,iBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,gBACqB,EACrB,CACA,KACA,YACA,GACoB,GAAI,CACxB,mBACA,cACA,CAAqB,EACD,GAAI,UACxB,YACA,cACA,CAAqB,EACD,GAAI,UACxB,oBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,WACA,gBACqB,EACrB,CACA,KACA,eACA,GACoB,GAAI,UACxB,UACA,iBACA,CAAqB,EACD,GAAI,UACxB,qBACA,oBACqB,EACD,GAAI,UACxB,oBACA,mBACqB,EACD,GAAI,UACxB,mBACA,mBACqB,EACD,GAAI,CACxB,0BACA,iBACqB,EACrB,CACA,KACA,kBAEA,GACoB,GAAI,CACxB,mBACA,oBACA,CAAqB,EACD,GAAI,UACxB,iBACA,gDACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAI,CACxB,8BACA,sBACqB,EACrB,CACA,KACA,sBACA,GACoB,GAAI,CACxB,mBACA,wBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,aACA,iBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,2BACA,GACoB,GAAI,UACxB,UACA,6BACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,gBACA,oBACqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,UACxB,UACA,qBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,mBACqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,UACxB,qBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,cACA,kBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,iBACA,qBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,eACA,mBACqB,EACD,GAAI,UACxB,iBACA,mBACqB,EACD,GAAI,UACxB,qBACA,sBACqB,EACD,GAAS,CAC7B,KAD6B,UAC7B,YACA,gBACqB,EACD,GAAI,UACxB,eACA,iBACqB,EACrB,CACA,KACA,qBACA,GACoB,GAAI,UACxB,UACA,uBACA,CAAqB,EACrB,CACA,KACA,mBACA,GACoB,GAAI,CACxB,mBACA,qBACA,CAAqB,EACrB,CACA,KACA,SAEA,6DADA,EACkG,wBAClG,aACA,cACA,eACA,CAAiB,CACjB,CACA,CACA,OAAW,GAAU,CACb,GAAI,GADS,OAErB,gBACA,qBACS,EACD,GAAI,UACZ,WACA,4CACS,EACD,GAAI,UACZ,iBACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAI,UACZ,eACA,mBACS,EACD,GAAI,UACZ,YACA,iBACS,EACD,GAAI,UACZ,kBACA,sBACS,EACD,GAAI,UACZ,SACA,2CACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,iBACS,EACD,GAAS,CACjB,KADiB,UACjB,WACA,iBACA,CAAS,EACD,GAAS,CACjB,KADiB,UACjB,kBACA,wBACS,EACD,GAAS,CACjB,KADiB,UACjB,gBACA,sBACS,EACD,GAAS,CACjB,KADiB,UACjB,sBACA,2BACS,KACT,MACA,CACA,EgBxGyB,CACzB,sBACS,EhBwHF,egBvHgB,GhBuHW,EAAS,EAC3C,MACA,kBACA,SAAY,GAAO,EACnB,OAAW,GAAU,CACb,GAAI,GADS,GAErB,eACA,SACA,CAAS,EACD,GAAI,CACZ,oBACA,eACS,EACD,GAAI,MACZ,kBACA,iBACS,EACD,GAAI,MACZ,kBACA,iBACA,CAAS,EACD,GAAI,MACZ,qBACA,oBACS,EACD,GAAI,MACZ,gBACA,4CACS,EACD,GAAI,MACZ,sBACA,sBACS,EACD,GAAS,CACjB,KADiB,MACjB,gBACA,kBACS,KACT,mCACgB,GAAI,MACpB,iBACA,8BACA,CAAiB,EACD,GAAI,MACpB,wBACA,8BACA,CAAiB,EACD,GAAI,MACpB,uBACA,eACA,CAAiB,EACD,GAAI,MACpB,wBACA,iBACiB,EACjB,QACA,WACA,IACA,UACA,aACA,CAAa,EACb,IACA,UACA,WACA,CAAa,EACb,IACA,UACA,iBACA,CAAa,EACb,IACA,CACA,EgB7LuB,CACvB,kBACS,EhB4LF,YgB3La,OhB2LW,EAAU,SACzC,EACW,GAAU,CACb,GAAS,CACjB,EAFqB,GACJ,UACjB,SACA,eACS,EACD,GAAS,CACjB,KADiB,UACjB,YACA,kBACS,EACD,GAAS,CACjB,KADiB,UACjB,UACA,gBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,mBACS,EACD,GAAS,CACjB,KADiB,UACjB,mBACA,yBACS,EACD,GAAS,CACjB,KADiB,UACjB,aACA,mBACS,EACD,GAAS,CACjB,KADiB,UACjB,uBACA,6BACS,EACD,GAAS,CACjB,KADiB,UACjB,SACA,eACS,EACT,EAlCA,IAmCA,EgB/NoB,CACpB,oBACS,Ef3MF,ae4Mc,Gf5MW,EAAO,EACvC,kBACA,iBACA,SACA,UACA,UACA,wHACA,EACW,GAAU,CACrB,MADqB,CACrB,QACA,oBACA,MACA,CAAa,QACb,eACA,WACA,MACA,CAAa,QACb,eACA,uBACA,MACA,CAAa,QACb,eACA,MACA,CAAa,QACb,EAAgC,UAAI,CAAC,WAAQ,GAAI,OACjD,EAlBA,IAmBA,Eek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CA,OACA,QAIA,CACA,OACA,YAKA,kBACA,QACA,uBAEA,EAvEA,UFzFwC,GEyF0G,GAClJ,OAD0H,CAC1H,eAIA,IAEA,CACA,GARkJ,KAQlJ,EACA,OACA,OACA,gBACA,WACA,CAEA,CAyDA,2BAIA,WAEA,GACA,UACA,MACA,QAJA,KAKA,uBACA,EAIA,sBACI,KAA6B,oBACjC,IADiC,QACrB,GAAyB,MAAQ,QAAS,MACtD,oBACA,gBACA,UACA,CAAK,EACL,QAAgC,GAAc,SAC9C,EAD8C,GAC9C,EACA,CACA,UACA,EAHuB,CAMvB,CACA,EACA,EACA,CAGA,iBAZ+C,CAY/C,KAMA,SACA,sBAiBA,OAhBI,KAA6B,UAGjC,KACA,SACA,CAAK,EACL,MAAU,QAAS,MACnB,oBACA,gBACA,WAAqB,CACrB,aAGA,IACA,CACA,CAAK,EACL,CACA,CCxOA,cAqBW,eAGX,WACA,OACA,EACA,EACA,CAEA,sBACA,kBACA,gBACA,wBACA,kBACK,EACL,+BACA,YAEA,gBACA,cACA,WACA,CAAK,EAcL,WACA,kCAEA,sBACA,gBACA,wBACA,kBACK,EAQL,OAPA,+BACA,YAEA,gBACA,cACA,WACA,CAAK,EACL,CACA,EACA,EACA,CAxEA,iCACA,gCACA,eACA,eACA,+DAEA,EAAK,wBEGE,gCA0DP,iBACA,4BAGA,oBACA,qBACA,KACA,6CACA,oBACA,CAAK,EACL,CACA,+BAIA,4BACA,GACA,gDACA,KAAc,GAAM,2BACpB,gBACA,WAaA,OATA,GACA,eACA,KAAkB,GAAe,MACjC,OACA,KAFiC,MAEjC,CACA,CAAS,IAET,UAEA,gBACA,kBACA,gBACA,uBACA,CAAK,CACL,CACA,qCAIA,SAA+B,GAAa,GAI5C,OAJ4C,QAI5C,kBACA,MAA2B,GAAM,QACjC,GACA,IAFiC,IAEjC,wCACA,0BACA,gBACA,SACA,CACA,qBACA,GACA,eACA,KAAsB,GAAe,MACrC,OACA,KAFqC,MAErC,CACA,CAAa,GAEb,CAAK,qEACL,eAA8C,EAAS,EAgBvD,OAfA,0BACA,2BAGA,8BAEA,uCACA,MAGA,8CA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BACA,uBACA,wBAKA,OAJA,IACA,YACA,QAEuC,SAAkB,kCAUzD,CAEoB,SAAyB,4BAAkD,GAAO,EAAE,QAAgB,EACxH,CAIA,UACA,gBAEA,CACA,8BAEA,kBAAoB,GAAmB,EACvC,KAEA,KACA,eACA,cACA,YACA,oBACA,qBACA,6BAaA,aACA,IACA,mCACA,CAAkB,SAClB,mDACA,CAEA,sBACA,mBACA,aACA,eACA,OACA,QACA,cACA,UACA,YACA,YACA,SACA,OACA,WACA,WACA,iBACA,SACA,YAEA,MACA,SACA,CACA,CACA,MACA,QACA,GACA,sBACA,EACA,eAEA,UAEA,sBACA,EAAkB,UAClB,YAA4B,wBAAuC,EACnE,GACA,KACA,UACA,iBACA,CACA,CAEA,OACA,KACA,MACA,yBACA,mBACA,UACA,CACA,EACA,6BAYA,GAXA,OACA,MACA,QACA,MACA,iBACA,mCACA,eACA,gBACA,sBACA,CAAyB,EAEzB,8BACA,SzFliBO,WAJA,KyFsiBiE,GAA+B,EACvG,KACA,IAFsF,GAAG,IAEzF,GACA,OAHuG,EAGvG,EACA,WACA,OACA,0BACA,EAA0B,OAC1B,8BACA,gBACA,uBACA,wBACA,sBACA,qBACA,uBACA,cACA,YACA,oBACA,qBACA,YACA,4BAGA,CACA,CAIA,OADA,UACA,CACA,CAAiB,YAEjB,MADA,IACA,CACA,CAAiB,CACjB,EAEA,KACA,KACA,SACA,MAKA,GAJA,OACA,WACA,MAEA,OACA,kBACA,iDACA,KAA8B,GAAoB,MAClD,aACA,IAFkD,KAElD,EACA,WACA,OACA,+BACqB,EACrB,QACA,eACA,gBACA,uBACA,wBAMA,MAAsC,IAWtC,CAQA,GANA,EACA,UAGA,SAjBmE,kCAmBnE,yCAAuF,GAAe,MAGtG,YAHsG,KAGtG,YACA,SAC0B,CAC1B,eACA,0BACA,2BACA,4BACA,2BACA,kBACA,gBACA,wBACA,CAAyC,eACzC,0BACA,mCACqC,EAGrC,uBACA,yBACA,CAEA,cACA,CAEA,CACA,MACA,GACA,MACA,QACA,MACA,cACA,0BACA,eACA,qBACA,uCACA,CAAyB,EAEzB,mBAAkD,GAAM,uBACxD,kBACA,gBACqB,EAIrB,OAHA,+BACA,YACqB,EACrB,CACA,CACA,CACA,gDACA,IAAwB,SAAQ,EAGhC,GADA,eACA,gBAEA,KACA,eACA,gBACA,uBACA,wBAKA,OAJA,IACA,YACA,QAEuC,SAAkB,kCAUzD,CAEoB,SAAyB,uBAA6C,GAAO,EAAE,QAAgB,EACnH,CACA,iBACA,MAAwB,MAAY,EACpC,gEACA,qBAEA,KACA,eACA,gBACA,uBACA,wBACA,MAA2C,SAAkB,kCAU7D,CAEwB,SAAyB,4BAAkD,GAAO,EAAE,QAAgB,EAC5H,CACA,iCACA,2BAEA,CACA,iBAKA,UAgDA,cAhDA,EACA,OACA,2BACA,8BACA,MACA,cACA,4BACA,kBACA,gBACA,wBACqB,CACrB,CASA,cAIA,KAAsB,IAsBtB,MArBA,GADmC,EACnC,eACA,WACA,OACA,2BACA,kBACA,gBACA,wBAEA,CAAiB,eACjB,MAGA,8CAGA,gCACiB,EAGjB,YAA8C,EAC9C,0BACA,eACA,CAGA,CAHc,EAId,KACA,IACA,cACA,EAAc,OACd,GACA,WAEA,CAEA,QACA,EAeA,OAVA,mBACA,6BACA,uBACA,kBAGA,gCACA,cACA,WACA,CAAK,EACL,CACA,EAUA,IC1yBA,CATA,4CCFA,OACA,CACA,GACA,CACA,uBAAiC,EACjC,MArCA,IAAoB,sCAAuG,CAqC3H,sEAES,EACF,CACP,CACA,QA/CA,IAAsB,sCAAyG,CA+C/H,wEACA,gBA/CA,IAAsB,sCAAwF,CA+C9G,uDACA,aA/CA,IAAsB,sCAAqF,CA+C3G,oDACA,WA/CA,IAAsB,sCAAqF,CA+C3G,oDACA,cA/CA,IAAsB,qCAAwF,CA+C9G,wDAGA,CAEA,0EAQO,IACP,QAH6B,EAI7B,UAHA,OADgD,KAChD,SAIA,EASO,OAAwB,oBAAkB,EACjD,YACA,KAAc,EAAS,SACvB,SADuB,IAEvB,aAEA,cACA,YACA,YACK,CACL,UACA,aACA,CAAK,CACL,iDACA,8DACA,CAAC,EACM,6BACP,EtFjFW,EdZJ,EoG8FP,aAMM,eAEN,QAGA,MAA6B,GAAc,eAE3C,EAAwB,GAAc,IAFK,aAG3C,OADsC,CACtC,gBACA,UACA,mBAN+B,EAO/B,CAAK,EACL,MAIA,OAHA,iBACA,qBACA,yDACA,KAEA,IAAY,kVAAgU,EAC5U,kBACA,EAA8B,GAAgB,GAC9C,oBAD8C,EACpC,GAAuB,EACjC,gBACA,gBACA,wBACA,8BACA,EAAoB,GAAU,GAC9B,EzEjHA,EyEgH8B,OzEjHV,CyEkHE,EzEnHtB,OAC8B,EAD9B,KyEmHsC,SzEnHtC,MyEuHA,EAAmC,GAAc,2BAAwE,MAAxE,UAA6C,GAA2B,CAGzH,EAAyB,GAAc,kBAHkF,CAGlF,Y9RtIb,G8RsIoE,CAC9F,EtE/GA,IsE8G8F,KtErIvF,OACP,EACA,CACA,IsEmImC,MtEnInC,mBsEmI4D,EtElI5D,gBAAmC,KAAa,KAChD,GADgD,CAChD,8BAEA,YAA+B,GAAa,OAC5C,GAD4C,CAC5C,+BAEA,iEACA,8EACA,oDAEA,OACA,WACA,qBACA,oBACA,gBACA,uBANA,WAOA,CACA,EsEiH4D,GtE/G5D,uBsE4HA,EtFtIA,UAFW,EsF+HuC,sBtF3HlD,sBAGA,oBsFiIA,wFAQA,EAdqC,GAerC,EAfqC,GAmBrC,EAnBiJ,EAmBjJ,EAnBqJ,CAAe,IAmBpK,EAIA,WAKA,EAAkC,GAAc,+BAKhD,MzE9KO,cACP,cyE6KiF,EzE7Kf,GAA6B,YAE/F,cAF+F,EyE6Kd,qBACjF,OACA,KACA,MAGA,MAEA,eAEA,IAEA,oBAEA,EAEA,OACA,MACA,oBACA,MAMA,QACA,gBACA,OAKA,wB9F1MW,YACX,M8F0M0B,E9F1M1B,KAAyB,GACzB,a8FyM0B,WAE1B,QACA,GAAW,CAAS,CACpB,QACA,SACA,WAAmB,YACnB,WACA,eACA,eACA,CAIA,O5ErJO,SAAwC,MAC7ChgB,CAAI,c4EqJgC,W5EpJpCsgB,CAAuB,uBACvBC,CAAqB,iBACrB9P,CAAe,CAYhB,MAEyC9gB,EAAxC,IAAM6wB,EAAAA,OAAkC7wB,EAAAA,UAAU,CAChDksB,GAAAA,EACD,OAFuClsB,EAErC6wB,+BAA+B,CAKlC7wB,UAAU,CAACksB,GAAkC,CAAG,CAC9C2E,gCAAiC,CAC/B,GAAGA,CAA+B,CAClC,CAACrhB,GAAiBa,GAAM,CAAEsgB,CAC5B,kBADmBnhB,MAEnBohB,kBACA9P,CACF,CACF,E4EqHsC,CACtC,OACA,0BACA,wBACA,gBvE3NO,qBuE2N2C,WvE3NV,EAAuB,EAC/D,mBAAuB,EACvB,gBACA,IAmDA,MA7CA,EALA,EAAkI,MAAlI,KAAgH,IAAkB,KAAN,IAAM,YAAlB,EAAkB,YAClI,MACA,OAEA,MAA8B,kBAAgB,YAc9C,KAXA,EADA,EACA,EA4CQ,GADR,EA3CA,OA4CqB,OACrB,EAEA,QA/CA,CASA,wBAGA,OAEA,aAAoB,WAAkB,EACtC,OACA,KACA,OACA,UACA,OACA,CACA,CACA,CAAK,CACL,EuEyLkD,CAClD,uBACA,CAAa,CACb,CAAS,EAET,uBACA,GAAmB,KACnB,WAD4B,aAC5B,GACA,IACA,4BACA,sBACA,mBACA,UAAgC,GAAe,GAC/C,MAAgC,GADe,GAe/C,UAdgD,MAchD,qBACA,aACA,iBACA,gCACA,aACA,CAAiB,EACjB,iCAEA,MACA,OAEA,6BAAiE,EAAc,0BAC/E,2CAA+D,wBAAyC,wEAGxG,0BACA,MACA,SAAoC,IAAQ,EAAE,EAAM,EACpD,iBACA,eACA,eACA,kBACA,CAAqB,EACrB,eACA,EAAkB,IAClB,gBAAuC,IAAQ,EAAE,MAAQ,EAEzD,CAAa,CACb,EACA,cAAkC,oCAAsC,IACxE,OACA,QACA,SACA,OACA,eACA,SACA,CAAiB,CACjB,yBAA0C,GAAc,8BACxD,sBACA,YACA,aACA,kBACA,aAAkC,CAClC,gBACA,UAA6C,CAAd,E/FvS/B,S+FuS6C,GAC7C,SACA,eACA,OACA,YACA,uBACA,yBACA,8CACA,gBACA,mBACA,wBACA,+BACA,wBACA,0BACA,2CACA,IAAgK,GAAM,IAAxG,GAAG,CAAqG,MAAc,GAAG,sBAA+B,EACtN,cACA,uBACA,UACA,uBACA,yBACA,0BACA,0BACA,0BACA,8BACA,uBACA,4BACA,oCACA,kCACA,6DACA,8CACA,sBACA,iBAAsC,GAAc,sBACpD,EADoD,gBACpD,yBACA,oBACA,2CACA,MACA,cACA,2BACA,sBACA,gBACA,wBACA,EAAsB,EAAI,CAC1B,cACA,oBACA,wBACA,qCACA,iDACA,uDACA,uDACA,+CACA,qCACA,+CACA,2DACqB,CACrB,sBACA,YACA,eACA,CAAqB,CACrB,uBAA4C,CAC5C,kEACA,IAAyB,GAAc,iBACvC,OADuC,KACvC,CAEA,EACA,eACA,CAAoB,YAAW,EAC/B,cAAoB,cAA0B,CAC9C,aAAmC,EAUnC,GATA,GACA,GAAwB,GAAsB,IAI9C,eAJ8C,EAI9C,aAIA,qDACA,0BACA,gFAA8G,EAAiB,EAAE,4CAAoF,cAA8B,KAAO;AAAA,kGAC1P,aACA,cACA,eACA,CAAiB,EACjB,2BACA,cACA,8CACA,CACA,OACA,CACA,OACA,OACA,KAA0B,GAAe,SACzC,OACA,EAFyC,MAEzC,EACA,qBACA,sBACA,oBACA,0BACiB,CACjB,cACA,CACA,EACA,qBAA2C,+CAAuD,IAClG,IAaA,EAbA,gBACA,qBAGA,gBAOA,MANA,6BACA,wBAEA,iBACA,uCAEA,KAuBA,GApBA,GACA,G9C1YW,YACX,M8CyYiD,O9CzYjD,SACA,kBACM,YACN,+BACM,UACN,kBACM,cAGN,8DAA0E,EAAc,sFACxF,aACA,cACA,eACA,CAAS,CAET,E8C0XiD,aAKjD,IAAiC,GAAY,aAAc,KAAK,S1EtZhC9iB,K0EsZgC,KAChE,SACA,GAAmC,GAAY,wBAG/C,iCACA,OAKA,QAA0D,GAAY,eACtE,GAA+B,GAAY,wBAE3C,QAAiD,GAAY,oDAS7D,EANA,GAEA,QACA,IAAiC,GAAY,UAC7C,UAA8B,GAG9B,UACA,EAJ6C,EAI7C,kEAwBA,GArBA,2BACA,WACA,MACA,aACA,UAAmC,EAAS,SAC5C,SAD4C,EAC5C,GACA,oBACA,oBACA,8BACA,OAGA,iBACA,oBAGA,KAAuE,GAAsB,OAC7F,CAA6B,EAC7B,SAF6F,CAE7F,WACA,CAAqB,EAErB,qBAEA,KAIA,OADA,sBACA,CAEA,CACA,CAGA,wBAGA,iBACA,OACA,cACA,aACA,aACA,CAAqB,CACrB,OACA,KAA8B,GAAe,MAC7C,KAA8B,GAAY,IADG,CACH,CAC1C,WAAoC,CACpC,KAF0C,GAE1C,OACA,aACA,CACA,EAKA,aAA+E,GAAc,6BAAwD,GAAsB,QAE3K,UACA,CAH2K,IAG3K,EACA,YACA,qBACA,CAAa,CACb,EACA,gBACA,IAsCA,EAsDA,EAsBA,MArDA,EA5DA,2BACA,WACA,wBACA,OACA,KACqB,EACrB,UAA2B,EAAS,SACpC,SADoC,YACpC,EACA,oBACA,MACA,aACA,oBACA,sBACa,EAQb,GAPA,GACA,uFAGA,UACA,yDAEA,IACA,KAMA,4GACA,YACA,cACA,eACA,CAAqB,EAErB,WACA,CACA,uCAAuG,GAAe,SAEtH,SAFsH,IAEtH,gFAAiH,gCAAmF,wBACpM,aACA,cACA,eACA,CAAiB,EAEjB,yCACA,GAGA,cACA,GAGA,sFAIA,Y9R3hBwC,qB8R2hBc,MAEtD,IAAoB,SAAoB,EAKxC,KACA,GACA,aACA,aACA,OACc,eACd,GACA,aACA,aACA,OACc,aAEd,KACA,GACA,aACA,aACA,OACkB,KAOA,mBAGlB,+CAEA,+BACA,gFAAgH,2BAAoC,2BACpJ,YACA,cACA,eACA,CAA6B,EAE7B,GACA,qCACA,gEAEA,EAAsB,IACtB,GACA,W3FjlBO,C2FilBiC,OACxC,OADsD,KACtD,CACA,CAEA,MA5BA,8BACA,IACA,aACA,aACA,GA2BA,GADA,iBACA,8CAAiH,GAAe,yBAWhI,YAA8B,GAAwB,KAGtD,gBAHsD,CAGtD,kBAAiH,GAAsB,CACvI,kBADuI,CACvI,UACA,YAAkC,GAAsB,GAExD,gBAFwD,GAExD,eACA,WAE2B,GAAgB,CAC3C,MACA,MAF2C,cAG3C,gBACA,kCACA,OAAgC,GAAY,aAA4B,IACxE,MAD4C,OAC5C,MAD+F,QAC/F,CACqB,GAQrB,iBACuB,GAAgB,CACvC,MACA,MAFuC,cAGvC,gBACA,kCACA,OAA4B,GAAY,MACxC,iBADwC,UACxC,CACiB,EACjB,CAGA,MAAiC,GAAc,kBAC/C,MAD+C,MAE/C,GACA,KAGA,OACA,WACA,WACA,CACA,CAAiB,EACjB,IAAyB,GAAc,YACvC,CAAiB,EAGjB,SAJuC,GASvC,QACA,+HACA,aACA,cACA,eACA,CAAiB,EAEjB,cACA,OACA,cAKA,eAHA,MACA,SAAmC,GAAsB,CAEzD,kBAFyD,CAGzD,cACA,oBACA,eACA,wBAEsB,oBACtB,iBAGA,mBAGA,CAGA,mCAA2G,GAAsB,CAsBjI,GArBA,eADiI,IACjI,UACA,YAA8B,GAAsB,GAKpD,gBALoD,CAMpD,wBAGA,cAAqD,IAAkB,eACvE,mBAGA,GACA,YAA8B,GAAwB,KAMtD,OAEA,SARsD,GAQtD,WACA,eACA,wGACA,aACA,cACA,eACA,CAAyB,EAEzB,OAA2B,GAAgB,CAC3C,MACA,MAF2C,cAG3C,gBACA,kCACA,cAMA,gBACA,aACA,aACA,EAA0B,eACL,CACrB,CAGA,OAAuB,GAAgB,CACvC,MACA,MAFuC,cAGvC,gBACA,kCACA,OAA4B,GAAY,qBAAgC,EAAhC,EACxC,mBAD+F,QAC/F,CACiB,CACjB,CAEA,aAIA,YAUA,OAAuB,GAAgB,CACvC,MACA,MACA,8BACA,kCACA,SACA,4BACiB,EAMjB,KASA,OANA,2BACA,SACA,UAA2C,GAAY,sBACvD,SACA,CACA,CAAiB,GACM,GAAgB,CACvC,MACA,MAFuC,cAGvC,gBACA,kCACA,SACA,cACA,aACA,aACA,CACA,CAAiB,EAWjB,0BAqCA,OApCA,mBAIA,GACA,OACA,sBAGA,wBACA,CAAa,qBACb,EASA,EARA,MACA,sGACA,aACA,cACA,eACA,CAAqB,EAErB,uCAA+F,GAAe,SAE9G,SAF8G,IAE9G,iEAAsG,gCAAuE,wBAC7K,aACA,cACA,eACA,CAAqB,CAGrB,sCACA,CAAa,YAGb,8BACA,6CACA,CAAiB,CACjB,CAAa,EACM,GAAgB,CACnC,MACA,MACA,8BACA,kCACA,SAIA,cACA,aACA,aACA,CACA,CAAa,CACb,EAGA,OAGA,6DAAoF,EAAc,eAClG,YAAiC,IAAQ,EAAE,MAAQ,EACnD,KAA0B,GAAQ,OAClC,YACA,iBACA,oBAEA,CAAiB,IATjB,YAWA,CAAM,SAcN,MAZA,iBAA4C,IAC5C,WAD2D,YAC3D,MACA,wBACA,YACA,mBACA,iBpGn5BA,CADO,EoGo5B8C,CACrD,eACA,CAFqD,oBAErD,CACA,CAAiB,EpGt5BjB,qBACA,YAEA,eACA,coGm5BA,CAAa,IAGb,CACA,CACA,yDC35BO,OAAM,GACb,mBACA,GAF4B,CAE5B,UACA,WACA,WACA,CAEA,qBACA,4BACA,cAA+B,QAAe,gBAC9C,CACA,CACO,MAAM,GACb,eACA,QAF6B,QAE7B,EACA,CAEA,cAQA,OAPA,6BACA,kBAGA,IAA2B,IAAkB,oBAC7C,4BAAyC,MAAM,EAAY,GAE3D,KAEA,0BCxBO,kBAA6B,GACpC,eACA,OAFmD,GAEnD,WAKA,eAJA,6DACA,eACA,iCACA,gBACA,qBACA,iBAEA,CACA,mBACA,0GACA,aACA,cACA,eACA,CAAS,CACT,CACA,CACO,iBAA8B,GACrC,uBADqD,UACrD,EACA,gHAAqK,EAAe,qBAA2B,IAAe,cAC9N,CACA,eAEA,aADA,uBACA,oBACA,EACA,EACA,yBAEA,YAEA,gBAEA,OADA,uBACA,KAEA,mBACA,MAEA,4EACA,CACA,aACA,kCACA,CACA,aACA,MAAe,QAAyB,cACxC,CACA,aACA,0BACA,CACA,kBAEA,OADA,yBACA,KAEA,QAEA,OADA,gBACA,KAEA,OACA,2BACA,aACA,CACA,WACA,kBAEA,uB1GpEU,C0GsEV,2CACA,mDACA,IASA,MANA,CADA,oBACA,oC1G3EU,E0G6E8B,KACxC,oCACA,CAAa,CAFb,E1G5EA,S0G4EuB,C1G5EvB,O0G4EwC,E1GrExC,O0GqEwC,W1G1ExC,qBACA,gB0GyEwC,G1GxExC,GACA,IAIA,SAGO,KAQP,0BACA,UAEA,OADA,+BACA,Y0GqDwC,E1GnExC,I0GuEA,gBACA,qBACA,uBACA,8BACS,CACT,CACA,WACA,iCACA,gCAA4C,IAAc,yFAC1D,aACA,cACA,eACA,CAAa,EAEb,sCACA,CACA,sCEhFA,SAAuB,GACvB,QAAoB,MAAQ,sBAA0B,sBAA2B,aAAe,kDAAyD,sPAAyR,2RAAuT,kBAAkB,QAAQ,uEAAgF,gBAAkB,uBAAyB,kBAAoB,uCAA6C,MAAQ,iBAAmB,2BAA+B,gHAAkI,uBAAyB,4FAA0G,aAAiB,WAAa,YAAc,sEAA6E,uBAAuB,iCAAmC,QAAQ,EAAE,SAAW,oBAAsB,QAAQ,GAAG,0DAA8D,4BAAmC,SAAW,2CAAiD,UAAY,gCAAsC,UAAY,oCAA0C,QAAU,uCAA6C,OAAS,yCAA+C,QAAU,0CAAiD,MAAQ,+CAAsD,iBAAmB,2kCAAkyC,qBAAyB,ylDAAqoD,seAAmf,4BAE15K,mDACA,IAFA,2BAEA,2BACA,SACI,SAA8B,EAClC,aACA,2BACA,yBACA,gBAAyB,QAAqB,EAC9C,wBACA,CAAS,CACT,CAAK,EAEE,OAAqB,EAC5B,uBACA,cACA,CAHmC,CAGL,OAAgB,IAC9C,KAA2B,mBAAqB,EAAE,iBAAmB,EACrE,MAAwB,GAAc,GACtC,MAAwB,EADc,CACC,QAEvC,IAFuC,IAEvC,mBACA,UACA,qBACA,CAAK,EACL,MACA,mCACA,UACA,CAAS,EAET,UAAY,gRAAwQ,EACpR,EAAmC,QAAyB,IAC5D,EAAoB,SAAU,kCAC9B,sBAAY,GAAuB,CAAE,QAAyB,cAC9D,MAAgC,EAChC,GACA,OACA,GAH+C,GAG/C,EACA,SACA,eACA,SACA,CAAS,CACT,yBACA,YACA,aACA,kBACA,aAA0B,CAC1B,gBACA,UAAqC,CAAd,EDpEvB,SCoEqC,GACrC,eACA,KAFqC,EAErC,EACA,OACA,iBACA,wBACA,0BACA,2BACA,gBACA,mBACA,wBACA,+BACA,qBACA,wBACA,0BACA,2CACA,0BACA,UACA,eACA,gBACA,uBACA,yBACA,2BACA,2BACA,2BACA,+BACA,uBACA,6BACA,qCACA,mCACA,8DACA,+CACA,sBACA,4CACA,qBACA,4CACA,cACA,qBACA,yBACA,sCACA,kDACA,wDACA,wDACA,gDACA,sCACA,gDACA,4DACa,CACb,sDACA,8BACA,YACA,YACA,CAAa,CACb,uBAAoC,CACpC,kEACA,aAEA,EACA,MA8DA,YACA,IACA,0CACA,aACA,iBACA,qBACA,aACA,CAAiB,EACjB,gCAEA,MAGA,6BAAiE,IAAc,2BAC/E,2CAA+D,wBAAyC,wEAIxG,GADA,EACA,CACA,SAAoC,UAAY,EAFhD,EAEwD,EACxD,iBACA,aAJA,EAKA,aALA,EAMA,kBACA,CAAqB,EACrB,eACA,EAAkB,IAClB,gBAAuC,UAAY,EAAE,EAAY,GAEjE,CAAa,EACb,MA3FA,KACA,4BAEA,YAGA,OAFA,MACA,kBACA,mBACA,UACA,CAAa,EAGb,aAAgB,GAAW,EAC3B,cACA,kCACA,8BAEA,iCAA8D,eAO9D,eANA,wBACA,4BACA,GACA,gBAGA,gBACA,kBACA,aACS,GACT,cACA,oBAEA,eACA,2BAGA,mBAKA,iBACA,4BAGA,OAFA,mEACA,kBACA,gBACA,SACA,SACA,CAAa,CACb,CAGA,aAAgB,cAAqB,oBAMrC,OAHA,sBACA,yDACA,CAAS,iCACT,gBACA,SACA,SACA,CAAS,CACT,GA+BA,EACA,CAAU,SAQV,MAPA,MApL4B,GAoL5B,QApL+C,MAoL/C,MACA,wBACA,YACA,mBACA,uBACA,CAAa,EAEb,CACA,CACA,EACA,EAAmB,QAAS,GAC5B,qDAAsE,IAAc,gBACpF,YAAyB,UAAY,EAAE,EAAY,EACnD,KAAkB,IAAQ,QAC1B,YACA,uBACA,gBACA,cACA,CACA,CAAS,IACT,CACe,eACf,OAAW,EAAO,CAClB,KACA,gBAAwB,KACxB,WACA,wBAtOA,IAuOA,CAAK,CACL,oLCzPO,OAEP,SAEA,qBACA,GACA,IACA,IACA,IACA,IACA,EAEA,qBACA,GACA,GACA,IACA,IACA,IACA,CACA,CAAK,CACL,QAEA,qBACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,EAEA,qBACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,EAEA,qBACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,EAEA,8BACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,CACA,CAAK,CACL,MAIA,0BACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,CACA,CACA,ECnGW,gBACX,yBACA,6CAEA,YAAmB,qBAA0B,KAC7C,SAEA,YAAuB,WAAc,IAErC,kBACA,KACA,KACA,CAEA,KACA,QAEA,CACA,SACA,CAGW,gBACX,gCACA,YAAmB,WAAc,IACjC,wBAEA,QACA,CAOW,gBACX,aACA,qCACA,WAMA,QANA,EACA,wCAGA,OAFA,oBACA,6BACA,CACA,CAGA,CAHM,IE9BA8yB,EAAiB,kBAAkB,WAAW,UCPpD,aAIA,CAIA,sBACO,iBAGP,gBACA,2BACA,SACA,SACA,CACA,CAAS,EAGT,gBACA,YAEA,aAAY,cAAqB,oBAGjC,iBACA,eACA,CAAK,EACL,IACA,KAAU,aAAwB,KAClC,WACA,yBACA,eACA,CAAa,EACb,CAGA,WAKA,MAJA,4BAGA,SACA,CACA,CACO,cACP,2BACA,SACA,uBACA,SACA,CACA,CAAK,CACL,CACO,cACP,2BACA,SACA,aACA,SACA,CACA,CAAK,CACL,CACO,oBACP,oBACA,KACA,QACA,IAAgB,gBAAc,eAC9B,KACA,MAEA,SACA,CACA,OAAW,EAAM,SACjB,CACO,sBACP,+BACA,QACA,CAAK,EACL,KACA,sBACA,4BACA,SAEA,eACA,SACA,CAAS,CACT,CAEA,OADA,YAEA,CACO,aACP,IAEA,EAFA,KACA,IA+BA,4BACA,eAEA,UACA,gBAEA,CAnCA,IAEA,YACA,UAA6B,GAAe,CAC5C,IACQ,QAAiB,MACzB,IACA,wBACA,IACA,YAA+B,WAA2B,KAC1D,WACA,WACA,gBAIA,WACA,IACA,YACA,CAAc,MAId,EAAc,OACd,SACA,WACA,CACA,CAAS,CACT,GAOA,EACA,CAAS,CACT,QACA,KACA,iBAEA,CAAK,CACL,CACA,gBAMA,SACA,4BACA,eACA,kBACA,KAOA,ODnIqCC,EC6HrC,UD7HyD,GCmIjB,GANxC,SACA,QACA,CAAiB,EACjB,UACA,SACA,CAAiB,EDjIf,CADyDrD,ECmIC,GDhIhDtkB,EAH8D,MAGtD,CAAC,UACjB,CAEA,CAAC2nB,EAAaxsC,UAAU,CAACusC,GAOlBC,EAGFA,EAAa3iB,OAAO,CACzB0iB,CAf0D,CAK1D,EAWiB,SAASE,CArBrBC,EAHmB5pC,KAAK,CAAC,EARN,CAQS6pC,GAGlB9iB,OAAO,CAAC,KAAM,GAO6C,EAcvB,WCkHvD,uBACA,MACA,CACA,YACA,CACA,CAAK,CACL,CACO,2BAAqC,4BAAwC,EACpF,MAAW,QAAS,SAAS,IAAa,+DAC1C,CACA,cACA,SACA,KACA,4BACA,qBACA,SACA,KAEA,GADA,IACA,cACA,aAGA,QAEA,WAEA,QADA,GAAgC,EAAiB,EAAQ,EAAY,WAApB,GAAoB,GACrE,YACA,YAOA,UAFA,GAAqC,EAAY,uBAEjD,CACA,KAGA,GAGA,CAEA,SAEA,IADA,EAAkC,EAAiB,EAAQ,EAAY,aACvE,QAIA,QACA,iCAEA,uBACA,yBACA,GACA,EAAsB,IAEtB,gBACA,cACA,WACA,+BACA,uBACA,WACA,2BACA,GACA,CACA,IACA,MAEc,CAGd,gBACA,cACA,WAEA,+BAEA,uBAEA,WAEA,2BACA,IACA,IACA,CACA,YACA,CACA,CAAK,CACL,CACA,cACA,SAGA,KACA,4BACA,qBACA,KACA,gBACA,MACA,MACA,kBACA,YACA,CACA,YACA,EAAc,IAEd,MAA8B,EAAiB,EAAQ,EAAY,WAApB,EAG/C,WACA,MACA,kBAMA,oCAEA,oBAEA,WAEA,6BACA,YACA,EAAsB,IACtB,aAEA,IACA,EAAkB,IAOlB,GACA,uBAEA,aACA,IAEA,CACA,CAAS,CACT,eAEA,MACA,eACA,IACA,sBAEA,CACA,CACA,CAAK,CACL,CAuCA,gBACA,SACA,OACA,KACA,cAIA,OAHA,GACA,SAEA,CACA,CACA,oBACA,mBACA,IAUA,MAAkB,QAAc,GAEhC,IACA,QACA,SAAwB,WAAc,eACtC,MACA,KACA,MACA,CAIA,MACA,MAA0B,QAAc,GAExC,YACA,CACA,CAAU,SACV,UACA,CACA,CACA,4BACA,SACA,GACA,IAEA,CAAS,CACT,eACA,aAEA,GACA,IAEA,CAAS,CACT,SAEA,GADA,MACA,EAGA,WACA,CACA,CAAK,CACL,CACA,uBAKA,aACA,SACA,4BACA,eACA,KACA,oBAEA,MAA0B,EAAiB,EAAQ,EAAY,WAApB,SAAoB,EAC/D,SAIA,GAHA,KAGA,WAAqC,EAAY,4BACjD,OAGA,mBAIA,GAHA,aAGA,SAAmC,EAAY,+BAE/C,gBAAsD,EAAY,6BAClE,YACA,CACA,EAAc,IACd,YAEA,CAAS,CACT,SAGA,UAA+B,EAAY,qBAC3C,CACA,CAAK,CACL,CA+DO,2BAAkD,wJAAuJ,EAEhN,IA5MA,EADA,EAuKA,EACA,EAqCA,wBAEA,IACA,qBAbA,EAeA,CAEA,IAEA,OAEA,KAEA,qBA1NA,KAkBA,qBACA,eAGA,GAFA,cAEA,GAEA,KArBA,UAA6B,GAAe,CAC5C,IACQ,QAAiB,MACzB,IACA,mBAmNA,GAlNA,CAAc,MAId,EAAc,OACd,SACA,WACA,CACA,CAAS,EAUT,CAAS,CACT,SACA,sBACA,GAEA,mBA2LA,GA1LA,CACA,CAAK,GAyLL,KAEA,eAEA,GAvDA,KACA,KACA,qBACA,qBAEA,IAA8B,EAAiB,EAAQ,EAAY,WAApB,CAAoB,MACnE,OAEA,IAA8B,EAAiB,EAAQ,EAAY,WAApB,CAAoB,MACnE,OAEA,YACA,CAAS,CACT,SACA,SACA,kBACA,kBACA,UACA;;iDAEiD,aAAyB,EAAE,iCAAiD;;;;;WAI7H,EACA,CACA,CAAK,GA6BL,KAEA,IAIA,KACA,CAjCA,MAcA,EAbA,eACA,GACA,qBAEA,QA6BA,CACO,0CAA2D,8BAAkD,EACpH,SACA,6BA3FA,qBACA,eAMgB,EAAuB,EAAQ,EAAY,iBAApB,GAAoB,GAA0B,EAAuB,EAAQ,EAAY,cAAiB,EAAuB,CAA5D,CAAoE,EAAY,eAO5L,EAAoB,EAAoB,EAAQ,EAAY,aAC5D,CADwC,CACpB,EAAoB,EAAQ,EAAY,aAC5D,CADwC,CACxC,WACA,CACA,CAAK,GA0EL,kBACA,iBACA,CACO,oBAA0D,4GAAuG,EACxK,SACA,iBACA,oBACA,kBACA,kBACA,qBACA,gBACA,CACO,iDAAyD,0EAAmG,EACnK,SACA,iBACA,kBACA,kBACA,oBACA,gBACA,CACO,aACP,WACA,qEChkB4F,sBAC5F,MACA,WAIA,WACA,IACA,gBACA,EAAM,OAEN,MAiBA,cACA,wCACA,qCACA,OACA,qEACA,wHACA,sEACA,CACA,EAzBA,OACA,aACA,CACA,CACA,cACA,OACA,oDACA,yBACA,IACA,oBACA,wBACS,CACT,sDACA,0BACA,IAEA,CAUA,sBACA,gBACA,OAEA,SACA,GACA,2BAEA,MAAqB,QAAgB,GACrC,KACA,eACA,0BAGA,qBACA,CACO,sBACP,8EACA,kEACA,4EACA,oBACA,2BACA,oBACA,EACA,CACA,2ECvDO,IAAM+iB,EAAW,IAIf,UAAC7O,OAAAA,CAAKx7B,KAAK,uECXpB,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAYF,SANA,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,uBACA,QACA,CAAK,CACL,0BACA,QACA,CAAK,CACL,kBACA,QACA,CACA,CAAC,EACD,MAAiB,EAAQ,IAAW,EACpC,GACA,OACA,CAHwB,CAGxB,IAEA,cACA,gBAEA,EAkBA,sBACA,IAAY,iHAAsG,EAClH,OACA,WACA,YACA,SACA,MACA,SACA,YACA,cACA,CACA,kBA5BA,WACA,sCAEA,YAAmB,WAAkB,IACrC,kBACA,aACA,KACA,CAQA,OADA,GAFA,EAFA,4CAEA,YAEA,2DACA,YACA,IAcA,CACA,CACA,OAAyB,EAAM,oDAC/B,QACA,cACA,YACA,OACA,WACA,WACA,gBACA,CACA,CACA,CAQA,sBACA,gCACA,MAEA,YAEA,aAAY,eAAsB,EAClC,eACA,8BAAyD,EAAU,GACnE,cACA,uBACA,MAEA,WACA,CACA,CAAK,EACL,SACA,2DAAuE,SAAY,wBACnF,aACA,cACA,eACA,CAAS,EAET,qBACA,KAAY,GAAM,EAClB,UACA,eACA,WACA,aACA,gBACA,4DAA4E,UAAgB,EAAE,MAAY,yBAC1G,aACA,cACA,eACA,CAAa,CACb,aAzCA,WAAY,oBAAwB,WACpC,sBAA+B,EAAM,uBACrC,SACA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sBAIA,8CAEA,cAEA,OAAuB,GAAc,WACrC,CAAa,CACb,aACA,sBACA,OAA2B,GAAc,cAEzC,sBAIA,8CAEA,OAAuB,GAAc,gBACrC,CAAa,CACb,SACA,6BAAqD,GAAc,UACnE,sBAIA,qDAEA,YAEuB,GAAc,SACrC,CAAa,CACb,oBACA,6BAAqD,GAAc,qBACnE,sBAIA,qDAEA,YAEuB,GAAc,oBACrC,CACA,CAAS,CACT,CAIA,eACA,oBACA,WACA,UACA,aACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CAOA,gBACA,8BACA,CACA,CAMA,sBACA,uBACA,QACA,CACA,YACA,sBACA,mBACA,iBACA,EACA,EACA,CACU,iBACV,UAEA,iBAEA,CACA,UACA,uBAEA,OACA,6BACA,yBACA,IACA,CACA,OACA,+BACA,CACA,SACA,iBACA,CACA,aACA,8BACA,kBAEA,CACA,WACA,wCACA,sBAGA,aACA,OACA,EACA,EACA,CAEA,CACA,QACA,wCACA,qBACA,QACA,CACA,CACA,UACA,wCAGA,iBACA,QACA,CACA,CACA,oBACA,qBACA,CACA,+BvI5JO,SAAS0nC,EAAoBjpC,CAAY,QAC9C,UAAI,OAAOA,GAAoBA,QAAgB,CAAE,YAAYA,GAAAA,CAAE,EAAI,kCAI5DA,EAAI0c,MACb,KADwBssB,0CwIiBxB,IAutHA,IAvtHA,EAAY,EAAQ,IAA0B,EAC9C,EAAa,EAAQ,IAA8B,EACnD,CAFmB,CAEnB,SADoB,CACpB,+BACA,6BACA,+BACA,kCACA,+BACA,+BACA,8BACA,kCACA,+BACA,oCACA,2BACA,2BACA,4BACA,+BACA,oCACA,0CACA,sCACA,kBACA,qBACA,kCAIA,kBAHA,GACA,SACA,iBACA,MACA,CACA,oBACA,gBACA,iBACA,aACA,IACA,QAAiB,KAAc,CAC/B,GAD+B,CAC/B,EACA,oBACA,2BACA,4BACA,2BACA,KASA,GAHA,EACA,kBAFA,IAJA,EACA,qBACA,kCACA,IACA,UAEA,oCACA,EAIA,SADA,YADA,gBACA,6BACA,oCACA,CAEA,OADA,IACA,GACA,OACA,8BACA,QACA,6BACA,QACA,uBAMA,GACA,kBAFA,GAJA,GACA,qBACA,kCACA,IACA,UAEA,EACA,iCAEA,CAUA,OATA,YACA,UACA,EACA,uDACA,EACA,UAIA,CAHA,GACA,uDACA,GACA,WACA,CACA,cACA,sBACA,OACA,CAAG,CACH,CACA,cACA,EACA,kCACA,eACA,YACA,gBACA,QACA,QACA,CAAS,CACT,OACA,IACA,gBACA,oBACA,qBACA,KACA,WACA,8BAEA,uBACA,KACA,iBACA,CACA,gBACA,iBACA,OACA,aACA,0BACA,aACA,iBACA,uBACA,KACA,WACA,gBAEA,CACA,gBAEA,OADA,OACA,EACA,CACA,cACA,GACA,KACA,yCACA,OACA,IACA,CACA,sBACA,cACA,kBACA,CACA,cACA,kBACA,CACA,cACA,oBAEA,gBACA,2BACA,WACA,SACA,CACA,oBACA,kCACA,SACA,iZAEA,IAAgC,CAChC,KACA,oBACA,gBAEA,cACA,UACA,SACA,QACA,IACA,CACA,cACA,i7BACA,MAGA,WACA,mCACA,kBACA,2BACA,8BACA,iCACA,2CACA,6BACA,mCACA,2BACA,yBACA,yBACA,6CACA,4DACA,iCACA,qCACA,yCACA,yCACA,+BACA,yBACA,6BACA,iCACA,6BACA,yBACA,sCACA,+BACA,2BACA,+BACA,6BACA,2BACA,8DACA,0DACA,4BACA,kCACA,qCACA,mCACA,mCACA,2BACA,2BACA,+BACA,yCACA,2CACA,6BACA,wBACA,mCACA,uCACA,qCACA,2BACA,+BACA,mDACA,qDACA,uCACA,yCACA,mCACA,qCACA,yCACA,mCACA,+BACA,6BACA,qCACA,mCACA,uCACA,2CACA,6CACA,+BACA,iCACA,8BACA,+BACA,yBACA,iCACA,mCACA,iCACA,0BACA,gCACA,gCACA,+BACA,+BACA,6BACA,uBACA,EACA,YACA,cACA,GACA,qBACA,oBACA,mBAEA,WACA,OACA,gBACA,MACA,IACA,EADA,KAEA,IACA,cAA8B,WAAqB,KACnD,wBACA,QACA,SAAyB,EACzB,KACA,SACA,QAAwB,EACxB,KACA,SACA,SAAyB,EACzB,KACA,SACA,OAAuB,EACvB,KACA,SACA,OAAuB,EACvB,KACA,SACA,QACA,CACA,yBACA,MACA,IACA,CACA,wBACA,CACA,QACA,CACA,iBACA,SACA,EACA,2HACA,eACA,oBACA,8FACA,CACA,CACA,OACA,kEACA,GACA,+DACA,IACA,WACA,UACA,YACA,WACA,CAAG,CACH,QACA,MACA,OACA,OACA,EA89EA,YACA,WACA,MACA,IAMA,IANA,mBACA,gBACA,wBACA,mCACA,uBAIA,GAHA,eAIA,wBAGA,GACA,IACA,eACA,GACA,IAEA,IAAkB,kBAPlB,EAQA,sCACA,EACA,sBACA,qCACA,kBACA,SACA,CAAmC,0BAAiC,EACpE,uBAEA,MAEA,EAAI,WACJ,EA//EA,EAggFA,cACA,WACA,MACA,uBACA,gBACA,0BACA,IASA,IATA,EACA,sBACA,cACA,mBACA,YACA,UACA,0CACA,8BAIA,GAHA,eAIA,yBAEA,EACA,IACA,eACA,GACA,IAEA,IAAgB,gBAChB,oBAKA,OAAkC,eAJlC,eACA,GACA,IAEkC,KAGlC,IADA,EAEA,sCAEA,EACA,6BACA,qCACA,kBACA,CACA,GADA,KACA,CACA,iBACA,OACA,aACA,CAAa,EACb,uBAEA,KACA,CACA,EAAI,aACJ,EApjFA,EAqjFA,gBACA,WACA,MACA,uBACA,gBACA,SACA,UACA,YACA,KACA,IAUA,EAVA,gBACA,eACA,kBAEA,QACA,eACA,EACA,4CACA,wBACA,eAGA,uBACA,oBACA,YACA,aACA,sCACA,sBACA,qBACA,4BACA,wBACA,SAGA,EACA,CAAoB,mCAA2D,CAC/E,IAGA,WACA,2BACA,uBACA,6BACA,KACA,aACA,6CAEA,GADA,KAGA,GAAqB,0BAAoC,KAEzD,oBACA,GACA,iCACA,8BAEA,4BADA,GAEA,gCACA,sBACA,KACA,cACA,8CACA,KACA,4BACA,sBACA,GACA,EACA,GAAqB,0BAAoC,KAEzD,qBACA,GACA,iCACA,8BAEA,4BADA,GAEA,KACA,SACA,wCACA,IACA,0BACA,kBAEA,YAEA,IAA6B,CAC7B,uBACA,SAEA,eACA,uBACA,YACA,aACA,sCAEA,qBACA,gBACA,uBACA,oBAKA,GAFA,KACA,KAA+B,0BAAoC,KADnE,SAGA,GAGA,sBAGA,qBAEA,CACA,KACA,CACA,EAAI,eACJ,EAtqFA,EAuqFA,cACA,WACA,MACA,uBACA,gBACA,MACA,MACA,uCACA,GACA,WADA,GAEA,oDACA,KACA,2BACA,GACA,iCACA,8BAEA,4BADA,GAEA,uCAGA,+CACA,4BACA,6BACA,EAAY,IACZ,IAA2B,CAC3B,8BACA,KACA,QAEA,QAAgC,2BAAkC,KAClE,sBACA,KACA,CACA,EAAI,aACJ,EAzsFA,EAkvFA,cACA,WACA,MACA,uBACA,gBACA,MACA,0CACA,qBACA,MACA,WACA,2BACA,KAA4B,eAAqB,IACjD,GACA,eACA,QACA,8BACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,EAxwFA,EAysFA,gBACA,WACA,MACA,uBACA,gBACA,MACA,eACA,sBACA,qCACA,oBACA,MACA,WACA,0BACA,GACA,IACA,mBACA,SACA,SACA,cACA,CAAW,CACX,mBACA,GACA,QACA,QACA,CAAc,4CAA8D,CAC5E,EAEA,CAAS,CACT,GACA,eACA,cACA,mCACA,WACA,WACA,WACA,kBACA,MACA,CACA,EAAI,eACJ,EA/uFA,EAwwFA,cACA,WACA,MACA,uBACA,gBACA,MACA,6CACA,GAEA,2BACA,MACA,WACA,iCACA,KAA4B,6BAAqC,IACjE,GACA,eACA,QACA,oCACA,aACA,KACA,iBACA,QACA,MACA,CACA,EAAI,aACJ,CAhyFA,EACA,UACA,QACA,mBACA,oBACA,mBACA,sBACA,oCACA,iBACA,qBACA,uBACA,6BACA,eACA,yBACA,qBACA,0CACA,CACA,SACA,6BAEA,mBACA,YACA,EACA,EACA,EACA,EACA,EACA,GAIA,MACA,SAHA,GACA,kCAGA,GACA,EACA,kBACA,KACA,KAEA,uCACA,EACA,WACA,GACA,EACA,2BAEA,aACA,KACA,2BACA,qBACA,qBAoEA,GAnEA,YACA,WACA,QACA,OACA,GACA,EACA,uBAEA,GACA,EACA,KACA,YACA,YACA,OACA,EACA,wCAGA,YACA,IACA,CACA,eACA,gBACA,qBACA,kBACA,4BACA,EACA,KACA,GACA,4BACA,wBACA,yBACA,oBACA,mBACA,cACA,2BACA,kBACA,kBACA,YACA,UACA,QACA,OAAc,CACd,MAAa,CACb,SAAiB,UAAW,aAAe,gBAAmB,CAC9D,QAAe,CACf,QACA,CAAK,CACL,iBACA,kBACA,mBACA,oBACA,qBACA,0BACA,eACA,yBACA,gBACA,qBACA,UACA,eACA,oBACA,gBACA,qBACA,CAAK,CACL,OAAa,iBAAkD,CAC/D,oBACA,gBACA,EACA,WACA,QAAwB,WAAqC,IAC7D,OACA,WACA,GACA,cACA,YACA,oBACA,OACA,CAAS,CACT,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,wCACA,OACA,kCACA,kBACA,IACA,IACA,IACA,0BACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,QACA,IAEA,GACA,OACA,GACA,QACA,IAEA,oBACA,OACA,GACA,QACA,IAEA,oBACA,OACA,GACA,QACA,IAEA,QACA,WACA,cACA,QAAoB,WAAiC,IACrD,OACA,WACA,GACA,oBACA,oBACA,OACA,CAAS,CACT,mBACA,WACA,gBACA,cACA,6BACA,YACA,OACA,gBACA,wCACA,OACA,kCACA,kBACA,IACA,IACA,IACA,0BACA,gCAEA,GADA,KACA,GACA,0BACA,OACA,GACA,QACA,IAEA,GACA,OACA,GACA,QACA,IAEA,oBACA,OACA,GACA,QACA,IAEA,oBACA,OACA,GACA,QACA,IAEA,QACA,WACA,QACA,CACA,YACA,EACA,EACA,EACA,EACA,GAEA,OACA,yBACA,aACA,kBACA,yBACA,mBACA,mBACA,eACA,WACA,WACA,mBAAwB,CACxB,eAAoB,CACpB,kBAAwB,UAAW,aAAe,gBAAmB,CACrE,iBAAsB,CACtB,iBAAsB,CACtB,kBAAuB,CACvB,yBAA8B,CAC9B,wBACA,CACA,CACA,cACA,OAAW,gDACX,CACA,YACA,EACA,EACA,EACA,GAEA,OACA,gBACA,gBACA,WACA,gBACA,CACA,CACA,eACA,UACA,iCACA,EAEA,EADA,2CAGA,KACA,EACA,KAEA,CACA,mBACA,qBACA,UACA,eACA,0BACA,cACA,UACA,EACA,qCACA,EACA,KAEA,WACA,wBACA,eACA,0BACA,YACA,wBACA,qBACA,wBACA,aACA,wBACA,aACA,YACA,YACA,wBACA,gBACA,wBACA,UACA,wBACA,YACA,qBACA,yBACA,KACA,YACA,uBACA,wBACA,CACA,6CACA,kBACA,eACA,GACA,gBACA,gBACA,EACA,MAEA,CACA,CACA,eACA,gBACA,KACA,CACA,gBACA,aACA,YACA,eACA,gBACA,oBACA,SACA,CACA,CACA,iBAEA,OADA,qCACA,GACA,gBACA,gBACA,cACA,qBAEA,CACA,iBACA,UACA,gBACA,gBACA,cACA,qBAEA,CACA,2BACA,2BACA,UACA,cACA,gBACA,GACA,CACA,eACA,iBACA,UACA,OAA8C,GAC9C,iBACA,sBACA,YACA,wGAA8G,8BAA8B,kBAE5I,IACA,EADA,KAEA,WACA,gBACA,WACA,GACA,SACA,qBACA,OACA,CACA,wBACA,cACA,IACA,iBAEA,EAAU,IACV,KACA,IADA,eAEA,KACA,EACA,EACA,iBACA,cACA,oBAGA,aACA,EACA,mBACA,gBACA,QACA,UACA,EACA,iBAEA,GACA,MACA,OACA,GACA,EACA,GACA,EACA,EACA,iBACA,CACA,CACA,aACA,CACA,cACA,WACA,UACA,YACA,mBACA,GACA,sBACA,oBACA,kBACA,CACA,mBACA,sBACA,oBACA,qBACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,SACA,EACA,qEAGA,6BACA,iBACA,cACA,MACA,kBACA,mBACA,aACA,CACA,eACA,sBACA,YACA,kGAEA,CACA,iBACA,uCACA,qBACA,eACA,IACA,yBACA,MACA,mBACA,gBACA,CACA,QACA,CAAM,SACN,2DACA,OACA,CACA,CACA,WACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,WACA,yBACA,aACA,UACA,UACA,eACA,YACA,WACA,WACA,UACA,QACA,GACA,gBACA,GACA,GACA,IAEA,eACA,QACA,CAMA,OALA,wBACA,8BACA,+BACA,8BACA,8BACA,CACA,CACA,mBACA,UACA,gBACA,gBACA,KACA,gBACA,mBACA,KACA,WACA,WACA,cACA,YACA,aACA,UACA,KACA,aACA,QACA,KACA,WACA,WACA,eACA,cACA,iBACA,GACA,SACA,sBACA,oBACA,oBAEA,MACA,WACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,qBACA,gBACA,qCACA,+BACA,UACA,KACA,iBACA,eACA,YACA,wBACA,KACA,iBACA,GACA,sBACA,oBACA,oBAEA,MACA,WACA,OACA,GACA,gBACA,GACA,QACA,IAEA,KACA,uBACA,iBACA,gBACA,YACA,kBACA,gCACA,gBACA,oBACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,aACA,sBACA,YACA,eACA,eACA,cACA,YACA,eACA,8BACA,4BACA,qBACA,aACA,WACA,eACA,iBACA,WACA,kBACA,eACA,eACA,eACA,aACA,eACA,gBACA,GACA,sBACA,oBACA,OACA,GACA,KACA,IAEA,KACA,eACA,eACA,OACA,OACA,GACA,KACA,IAEA,QACA,sBACA,oBACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,YACA,WACA,WACA,WACA,sBACA,oBACA,WACA,MACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,eACA,YACA,sBACA,oBACA,UACA,OACA,GACA,KACA,GACA,QACA,IAEA,KACA,oBACA,wBACA,KACA,oBACA,wBACA,KACA,iBACA,qBACA,KACA,iBACA,qBACA,KACA,kBACA,sBACA,KACA,iBACA,qBACA,KACA,eACA,mBACA,KACA,eACA,mBACA,KACA,gBACA,oBACA,KACA,SACA,GACA,gBACA,wBACA,yBAEA,kBACA,iBACA,eACA,aACA,MACA,eACA,iCACA,kCACA,CACA,OACA,GACA,KACA,GACA,QACA,GAEA,CACA,CACA,CACA,cACA,WACA,mBACA,YACA,WACA,YACA,sEAEA,uCACA,YACA,uDAA+D,YAAY,yFAG3E,OADA,cAGA,eACA,CACA,CAQA,yBACA,KACA,uCAA2C,wBAAwB,4CAA4C,MAAM,mCAAmC,sBAAsB,kVAAkV,EAAE,GAElgB,iBACA,2BACA,mBACA,iBACA,oBACA,2CACA,6BACA,QACA,OACA,GACA,GACA,GACA,EACA,UACA,oBACA,GACA,GACA,GAEA,CACA,CACA,4BACA,uBACA,iBAEA,aADA,mBACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,iGAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,4BACA,qBACA,sCACA,CACA,mBAEA,aADA,cACA,EACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,EACA,6FAEA,SACA,SACA,CACA,CAEA,OADA,WACA,IACA,CACA,iBACA,oBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAcA,OAbA,WAMA,kBALA,oBACA,WACA,KACA,KACA,IAEA,oBAEA,MADA,GAEA,mBACA,UACA,oBACA,IACA,CACA,OACA,uBACA,0BACA,0BACA,iBACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAQA,OAPA,WACA,UACA,oBACA,OACA,0BAEA,qBACA,IACA,CACA,mBACA,cACA,IACA,EADA,SAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAGA,OAFA,WACA,UACA,CACA,CACA,mBACA,cACA,IACA,EADA,SAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,SACA,SACA,CACA,CAGA,OAFA,WACA,UACA,mBACA,uBACA,CACA,CACA,eACA,iCACA,WACA,eACA,gBACA,eACA,8CACA,WACA,WACA,CACA,QACA,CACA,4BA0hCA,WACA,eACA,gBAIA,OAHA,YACA,iBACA,aACA,CACA,CACA,iBAEA,QADA,cACA,YACA,cACA,4BACA,qBACA,cACA,4BACA,qBACA,cACA,2BACA,CACA,iBACA,oBACA,YAAkB,aAA4B,IAC9C,UACA,qBACA,QACA,WACA,OAEA,CACA,SACA,kCAAsC,sBAAsB,EAAE,GAE9D,uBACA,sBACA,uBACA,wBACA,uBACA,KACA,iCAEA,sBACA,GACA,qBACA,wBACA,kBACA,GACA,OACA,GACA,kBACA,iBACA,kBACA,mBACA,OACA,kBACA,mBAEA,GADA,QACA,SACA,YACA,sEAIA,OAFA,sBACA,uBACA,OACA,CACA,6BACA,WACA,eACA,KACA,qDAEA,WACA,eACA,KACA,sDAEA,WACA,gBACA,2BACA,WACA,iBACA,kCACA,WACA,yBACA,+BACA,WACA,sBACA,KACA,gCAEA,WACA,4BAkFA,KACA,mBAAuB,6BAA6B,6BAA6B,gCAAgC,aAAa,2CAA2C,6BAA6B,QAEtM,cACA,YACA,qBACA,sCACA,kBACA,SACA,QAAU,gBAAgB,sBAAsB,YAAY,WAAW,MAAM,oBAAoB,iDAAiD,mBAAmB,MAAM,4BAA4B,GAAG,sBAAsB,aAAa,qCAAqC,SAAS,wDAAwD,gBAAgB,iBAAiB,IAAI,SAAS,KAAK,aAAa,gCAAgC,WAAW,qDAAqD,YAAY,oBAAoB,8SAA8S,GAEj0B,EACA,mBAAqB,gBAAgB,wBAAwB,wLAAwL,kBAAkB,IAAI,qCAAqC,MAAM,qCAAqC,OAAO,cAAc,QAAQ,WAAW,uDAAuD,WAAW,KAAK,WAAW,mCAAmC,SAAS,QAAQ,WAAW,MAAM,0BAA0B,MAAM,gCAAgC,qCAAqC,IAAI,QAAQ,EAAE,EAAE,mBAAmB,aAAa,2BAA2B,SAAS,+CAA+C,wBAAwB,IAAI,2CAA2C,4BAA4B,mCAAmC,uCAAuC,QAAQ,WAAW,KAAK,oDAAoD,oDAAoD,gBAAgB,uCAAuC,EAAE,iFAAiF,IAAI,iCAAiC,EAAE,EAAE,kCAAkC,gDAAgD,uBAAuB,8EAA8E,yEAAyE,MAAM,qEAAqE,kBAAkB,KAAK,2EAA2E,KAAK,WAAW,GAAG,MAAM,gCAAgC,kCAAkC,sGAAsG,mBAAmB,+BAA+B,iCAAiC,gBAAgB,4DAA4D,0BAA0B,uCAAuC,IAAI,UAAU,EAAE,2BAA2B,qBAAqB,KAAK,MAAM,qBAAqB,4BAA4B,6BAA6B,0DAA0D,EAAE,8BAA8B,0EAA0E,EAAE,OAAO,QAAQ,UAAU,KAAK,gBAAgB,GAE75E,kBACA,KACA,aAAiB,oBAAoB,cAAc,aAAa,IAAI,+GAA+G,SAAS,uIAAuI,IAAI,KAAK,QAAQ,UAAU,EAAE,MAAM,aAAa,OAAO,KAAK,IAAI,SAAS,aAAa,aAAa,iBAAiB,WAAW,KAAK,KAAK,0BAA0B,SAAS,qBAAqB,kCAAkC,SAAS,0BAA0B,iCAAiC,qBAAqB,sBAAsB,EAAE,aAAa,0BAA0B,yCAAyC,cAAc,KAAK,SAAS,YAAY,oCAAoC,2BAA2B,cAAc,aAAa,WAAW,uFAAuF,8DAA8D,+EAA+E,QAExlC,cACA,YACA,WACA,UACA,oBACA,sCACA,sCACA,kBACA,kBACA,SACA,yBAA6B,iCAAiC,yIAAyI,GAEvM,KACA,yBAA6B,iCAAiC,0IAA0I,QAExM,cACA,UACA,UACA,oBACA,sCACA,mBACA,kBACA,mBACA,oBACA,0BAoBA,wBACA,eACA,iCACA,GACA,YACA,UACA,QACA,eACA,SACA,eACA,SACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,mMAEA,CACA,EAEA,CACA,SACA,sCAEA,sBACA,WACA,iBACA,MACA,MACA,eACA,cACA,UACA,IACA,aAIA,IAHA,4BACA,WACA,qBACA,WAAsD,aAAsB,IAC5E,wBAGA,IAFA,aACA,WACA,IAAgB,WAAkB,iBAClC,KACA,KACA,IAEA,MACA,WACA,UACA,CACA,CACA,eACA,oBACA,OAEA,CACA,mBASA,OARA,MACA,MACA,KACA,uBACA,QACA,0BACA,IACA,qBACA,EACA,CACA,eACA,YAAkB,WAAqB,gBACvC,WACA,CACA,UACA,eACA,eACA,YAAkB,YAAoC,IACtD,aACA,aACA,SACA,CACA,+BACA,sBACA,UACA,WACA,iBACA,eACA,sBACA,0BACA,iBACA,cACA,UACA,iBAKA,GAJA,4BACA,WACA,qBACA,IACA,UACA,IACA,WACA,aACA,IAEA,wBACA,YACA,CAEA,IADA,WACA,IAAyB,WAA2B,IACpD,aACA,WACA,WACA,UACA,CACA,CACA,eACA,gBACA,UACA,cAYA,IAXA,OACA,cACA,WACA,kBACA,0BACA,8BACA,sBACA,cACA,oBACA,gCACK,EAEL,IACA,YACA,IAEA,aACA,YACA,CACA,CACA,eACA,0BACA,gBACA,CACA,gCACA,2BACA,kBACA,iBACA,wBACA,oBACA,OACA,GACA,0BACA,GACA,CACA,CACA,cACA,WACA,UACA,UA8GA,cACA,OAAW,mCACX,CA2UA,iBACA,0CACA,qCACA,CACA,mBAUA,aADA,MARA,kBACA,GACA,GACA,EAKA,IAAwB,aAAa,MAJrC,kBACA,GACA,GACA,EACqC,IACrC,EACA,aAEA,gBADA,UAEA,IACA,GAAa,EACb,gBACA,KACA,eACA,GACA,IAEA,KACA,QACA,CACA,mBACA,eACA,UACA,QACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,sMAEA,CACA,CACA,YAAqD,SACrD,eACA,UACA,QACA,WACA,SACA,WACA,OAAW,EACX,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,YACA,wNAEA,CACA,CACA,eACA,kBACA,CACA,eACA,uBACA,CACA,iBACA,uBACA,2BACA,CACA,+BACA,wCACA,iCACA,wCACA,eACA,uBACA,wBACA,uBACA,KACA,4BACA,+BACA,UACA,OACA,gBACA,QACA,gBACA,QACA,kBACA,QACA,gBACA,QACA,oBACA,QACA,gBACA,CACA,sBACA,mBACA,OACA,cACA,QACA,+BACA,QACA,qDACA,QACA,eAKA,MAHA,CADA,kBAEA,CACA,OADA,8BACA,kCACA,CACA,QACA,OACA,+BAEA,EACA,kBAEA,QACA,aACA,UACA,IACA,eACA,CAAU,UACV,CACA,WACA,CACA,SAA2B,CAC3B,QACA,iBACA,UACA,sCACA,WACA,eACA,YACA,aACA,YACA,2EACA,KACM,CACN,YACA,YACA,4EAEA,OACA,CACA,+BACA,CACA,CAiCA,eACA,QACA,QACA,UA9BA,cACA,sBACA,QACA,iCA4BA,GACA,SArCA,cACA,sCAEA,OADA,cACA,IACA,EAkCA,GACA,kBACA,QACA,gBA/BA,gBAGA,GAFA,sCAEA,OADA,aAEA,YACA,0FAEA,mBACA,QACA,MACA,EAsBA,KACA,SAtBA,OACA,eACA,YACA,YACA,0FAEA,mBACA,QACA,OACA,iCAaA,KACA,KACA,CACA,QACA,8BAEA,OADA,sBACA,sBACA,CAAK,CACL,kCACA,sBACA,WACA,YACK,CACL,+BACA,CAAG,CACH,IAAuB,kBACvB,mBACA,WACA,aACA,iBACA,WACA,KACA,iBACA,SACA,YAOA,OANA,GACA,EACA,UACA,aACA,MACA,KACA,CACA,GACA,cACA,KACA,EACA,YACA,CACA,CACA,OACA,eACA,UACA,CACA,CACA,6BAGA,YAEA,UADA,SACA,oBACA,EALA,YACA,YAKA,eACA,aACA,kaA2CA,QACA,cACA,aACA,YACA,gFAEA,SAEA,OADA,QACA,CACA,CAIA,8CAHA,cACA,2CACA,EAEA,QACA,QACA,QACA,QACA,QACA,QACA,MACA,MACA,KACA,KACA,MACA,KACA,QACA,QACA,KACA,cACA,aACA,YACA,ibAEA,SACA,CACA,cACA,QACA,mEACA,OAAW,wCACX,CACA,cAUA,OATA,UACA,UACA,OACA,YACA,cACA,eACA,OACA,iBACA,mBACA,EACA,CACA,cACA,SAEA,OADA,QACA,CACA,CACA,cACA,GACA,GACA,GACA,GACA,KACA,MACA,QACA,KACA,UACA,CACA,iBACA,iCACA,CACA,mBAGA,GAFA,QACA,QACA,IACA,eAEA,GADA,aAEA,WACA,uBACA,CACA,aACA,mBACA,kCACA,UAEA,OADA,mBACA,MAEA,2BAiBA,OAfA,EACA,OACA,qBACA,IACA,EACA,WACA,KACA,EACA,mBAEA,EADA,aAAyC,0BACzC,iBACA,KACA,GACA,GAEA,qBAEA,iBAIA,GAHA,QACA,QACA,oBACA,WACA,uBACA,uBACA,WACA,uBACA,CACA,YAAwB,uBAAwC,IAChE,mBACA,KACA,OACA,CACA,IACA,CACA,iBAEA,CAGA,OAFA,MACA,uBACA,CACA,CACA,mBACA,UACA,YACA,wFAEA,UACA,GACA,MACA,GAA6B,mBAA4B,CACzD,wBAEA,SADA,cAGA,gBACA,CACA,QAA2B,eAAqB,SAChD,QACA,CACA,CACA,cACA,wEACA,CACA,cACA,8DACA,CACA,mBACA,KACA,WACA,KACA,uCACA,WACA,KACA,cACA,6BACA,mCACA,WACA,qBASA,IARA,GACA,WACA,MACA,IACA,EACA,2BACA,EACA,GAEA,MACA,OACA,CACA,qBA2BA,OA1BA,cACA,IACA,EACA,oCACA,6BACA,qBACA,YACA,mBACA,aAgBA,OAfA,GACA,WACA,GACA,WACA,MACA,IACA,EACA,gBACA,EACA,KACA,EACA,EACA,EACA,EACA,2BACA,CACA,GACA,QACA,CACA,qBACA,OACA,EACA,YACA,IACA,CAAK,CACL,GACA,CAEA,eACA,SACA,MACA,uBAvQA,EAwQA,GAxQA,EAwQA,EAxQA,EAwQA,EAnQA,OAHA,SADA,SAEA,UACA,2BACA,UACA,gBACA,mBACA,WACA,cACA,SAqBA,OApBA,0BACA,cACA,OACA,iBACA,OACA,YACA,yBACA,OACA,sBACA,SACA,CACA,CAAa,CACb,YACA,yBACA,OACA,qBACA,UACA,CACA,EACA,EACA,UACA,gBACA,mBACA,WACA,eAGA,MADA,KACA,EACA,CAkOA,CACA,cACA,iEACA,CACA,QACA,wBACA,uBACK,CACL,gBACA,iCACA,0CACA,yCAEA,kEACA,CAAK,CACL,uBAEA,OADA,KACA,gBACK,CACL,WACA,cACA,mBACA,QAEA,MADA,UACA,cACA,gBACA,IAA6B,UAAuB,CACpD,oBACA,CACA,CAAK,CACL,qBACA,eACA,CAAK,CACL,sBACA,mBACA,0BACA,qBACA,QACA,CAAO,GACP,CAAK,CACL,uBACA,aACA,iBACA,+BAEA,OADA,KACA,cACA,CAAK,CACL,yBAEA,OADA,KACA,QACK,CACL,iBACA,qBACA,aAEA,EACA,CAFA,SAIA,kBACA,eACA,SACA,YACA,YACA,2FAMA,OAJA,OACA,EACA,sBACA,6BACA,KACA,CAAK,CACL,qCACA,cACA,YACA,8GAEA,UACA,CAAK,CACL,0BAEA,OADA,KACA,OACK,CACL,kBACA,gBACA,mCAEA,OADA,KACA,EACA,CAAK,CACL,yBACA,uBAA0C,IAAU,IACpD,OACA,QACA,CAAK,CACL,2BACA,SACA,CACA,CAAG,CACH,QACA,IACA,2BACA,+BACA,CAAK,CACL,uBACA,+BACA,CACA,EACA,iBACA,yCACA,YAAkB,WAAiC,IACnD,+BACA,QACA,CAEA,eACA,cACA,IACA,aACA,CAAM,SACN,2CACA,cACA,EACA,+BACA,iBACA,wBACA,eACA,EACA,CACA,gBACA,CACA,UACA,iBACA,mBACA,MACA,8BACA,2BACA,IACA,OACA,uCACA,IACA,MACA,iBACA,aACA,EAMA,GALA,2CACA,eACA,aACA,CACA,CAAa,EACb,6CACA,IACA,uBACA,CAAgB,SAChB,OACA,CACA,yBACA,EAAc,IACd,IACA,QACA,CAAgB,SAChB,GACA,CACA,mBACA,CACA,EAAY,IACZ,IACA,aACA,CAAc,SACd,GACA,CACA,SACA,4BACA,oBAAuC,CACvC,CACA,CAAU,SACV,kCACA,wBAEA,kBAEA,CACA,2CACA,8BACA,sCACA,8BACA,OAEA,IACA,gBACA,sBACA,8BACA,OACA,CAAU,sCAEV,sCACA,OACA,OACA,SACA,oBACA,gBACA,IACA,MACA,YACA,+CAGA,IACA,KAEA,YACA,eACA,gCAIA,IACA,GACA,cACA,aAEA,IACA,aACA,aACA,MACA,MACA,aAGA,IACA,KAEA,WACA,QAEA,gBACA,gBACA,GACA,GACA,IACA,IACA,KACA,OACA,KACA,CACA,MACA,KACA,gCAIA,OAHA,eACA,2BACA,2CACA,CACA,OACA,YAEA,KACA,CACA,CACA,EAAI,OACJ,+BACA,CACA,qCACA,MACA,EACA,CAgEA,iBACA,gDAEA,eACA,GACA,oBACA,UACA,mCACA,CACA,wBAEA,iBADA,MACA,IACA,SACA,EACA,EACA,oCACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,SACA,EACA,EACA,8BACA,qBAA+B,gEAAgE,eAAe,oCAAoC,oBAClJ,UACA,IAEA,mBACA,+BAEA,EAAI,qBACJ,WACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,aACA,uBACA,uBACA,sBACA,mBACA,yBACA,0BACA,mBACA,eACA,qBACA,gEACA,8DACA,gBACA,sBACA,oBACA,iCACA,4BACA,0BACA,2BACA,6BACA,gCACA,gCACA,kCACA,kCACA,kCACA,gCACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA2CA,MA5BA,MAbA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAIA,EACA,KACA,EACA,GACA,GACA,EACA,iBAkBA,GAjBA,KACA,EACA,KACA,EACA,GACA,KACA,EACA,KACA,KACA,iBACA,KACA,EACA,KACA,GACA,KACA,OAGA,sBACA,CACA,CAmCA,YACA,cACA,gBACA,OACA,oBACA,aACA,CACA,WACA,CACA,iBACA,sBACA,0BACA,uCACA,yCACA,aACA,YACA,CAAS,EACT,sBACA,YACA,CAAS,IACT,CACA,YACA,EACA,EACA,EACA,EACA,GA6BA,OA3BA,GACA,SACA,iBACA,iBACA,eACA,MACA,qBACA,WACA,yBACA,iBACA,kBACA,mBACA,kBACA,mBACA,2BACA,wBACA,EACA,UACA,kBAEA,OADA,kBAEA,qBACA,iBACA,WAEA,OADA,2BAEA,sBACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,2BACA,OACA,YACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,iBACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,MACA,iBACA,eACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,oBACA,SACA,qBACA,iBACA,2BACA,iBACA,OACA,SACA,OACA,aACA,gBACA,cACA,CAAK,CACL,kBACA,oBACA,qBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,MACA,iBACA,eACA,EAEA,OADA,SACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,OACA,SACA,iBACA,MACA,QACA,UACA,YACA,oBACA,sBACA,WACA,iBACA,cACA,CACA,CACA,eACA,aACA,8BACA,aACA,GACA,mBAAgC,qCAEhC,CACA,YACA,GAEA,gBACA,KACA,CAAQ,yCACR,CACA,eACA,SAwBA,OAvBA,GACA,0CACA,gBACA,cACA,eACA,IACA,SACA,IACA,GACA,GAvaA,cACA,mCACA,wBACA,iDACA,SACA,SACA,iCACA,mBACA,OACA,sBACA,QACA,oBACA,QACA,QACA,aACA,UACA,IACA,MACA,CAAU,SACV,iBACA,CACA,WACA,CACA,4BACA,GACA,SACA,QACA,sBACA,GACA,SACA,2BACA,2BACA,UACA,0BACA,gDACA,gBAEA,KADA,qBACA,iBAEA,KADA,2CACA,0BAIA,MADA,OADA,GADA,6BACA,mBACA,gBACA,YACA,CACA,SACA,OACA,CACA,KACA,oBAEA,CACA,QACA,CACA,CACA,UACA,OACA,yBACA,QACA,qBACA,CACA,QACA,EAyWA,QACA,iBACA,GACA,OACA,CAAU,SACV,EACA,oDAKA,OAHA,0CACA,OACA,CAAS,EACT,CACA,CACA,CAAK,EACL,CACA,CACA,mBAGA,SADA,IADA,aACA,OACA,2BACA,CACA,iBACA,qBACA,iBACA,KACA,KACA,qBACA,iCACA,4BACA,CACA,iBACA,yBACA,CACA,mBACA,KAAS,UAAuB,CAChC,UADgC,CAEhC,mBACA,yBACA,mBACA,aACA,kBACA,YAAsB,WAAgC,KACtD,kBACA,GACA,qBACA,iBACA,CACA,CAEA,GADA,iBACA,uBACA,eACA,SAEA,CACA,iBACA,mBACA,wCACA,iBAAkD,WAAuB,KACzE,WACA,GACA,oBACA,iBACA,QACA,CACA,KACA,KACA,CACA,CACA,GACA,oBACA,CACA,CACA,eACA,OACA,eACA,gBACA,gBACA,yBACA,YACA,SACA,EAMA,OALA,UACA,kBACA,kBACA,gBACA,UACA,CACA,CACA,uBACA,gBACA,gBACA,QACA,YACA,WACA,WACA,oBACA,qBACA,gCACA,YAAsB,IAAa,KACnC,MACA,iBACA,gCACA,EACA,MACA,OACA,WACA,GAEA,wBACA,WACA,mBACA,eACA,aACA,YACA,qBACA,OACA,MAEA,QAA4B,IAAuB,IACnD,EAKA,EALA,EACA,iBACA,gCACA,EACA,MACA,CACA,QACA,MACA,wBACA,YACA,qBACA,OACA,EAAI,OACJ,iBACA,gCAEA,QAA0B,IAAuB,IACjD,OACA,QACA,MACA,iBACA,EACA,EACA,GAEA,YACA,qBACA,YACA,CAIA,IAFA,EADA,qBACA,gBACA,kBACA,MAA0B,KAAQ,KAClC,OACA,WACA,GAEA,wBACA,KACA,EACA,EACA,KACA,gBACA,wBACA,IAEA,yBACA,mBACA,IACA,YACA,kBACA,gBACA,kBACA,WACA,0BACA,qBACA,OACA,CAAQ,SACR,MACA,2BACA,CAEA,CACA,CACA,mBACA,mBACA,CACA,UACA,UACA,kBACA,4BACA,gBACA,QACA,WACA,CACA,yBACA,sBAUA,IATA,qBACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SAA8C,IAC9C,MACA,QACA,MACA,KACA,CAL4E,GAK5E,EACA,QACA,SAEA,OADA,KACA,CACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,SACA,8BACA,uBACA,aACA,KACA,WACA,YAAsB,IAAsB,IAC5C,MACA,WACA,UACA,CACA,CACA,YACA,YACA,EACA,iBACA,wBACA,aACA,iBACA,EACA,aACA,aACA,WACA,CACA,yBACA,wBACA,8CACA,QACA,aAEA,aADA,KACA,EACA,uBAEA,qBACA,KAEA,aADA,cAAmD,OACnD,EACA,eACA,YAEA,IACA,KAEA,gBADA,mBAEA,UACA,oBAEA,eADA,eACA,mBAmBA,GAlBA,aACA,UACA,UACA,GAAuB,qBACvB,oBACA,gBACA,UACA,6BACA,gBACA,GAEA,kBADA,gCAEA,GAEA,MAFA,WAGA,EACA,IAAuB,MACvB,WAEA,+CACA,8CACA,iDACA,yCAEA,GACA,UACA,yCACA,uBACA,gDACA,8BACA,aACA,uBACA,EACA,QACA,MAEA,iCAEA,GACA,UACA,YACA,aACA,aACA,gBAEA,iBACA,CAGA,IAFA,iBACA,KACA,OAAoC,WAAmB,IACvD,MACA,GACA,kBAFA,SAGA,qBACA,IAEA,GACA,MACA,MAA+C,OAC/C,OACA,UACA,MACA,aAEA,GADA,aACA,yBACA,YACA,YACA,aACA,WACA,EAAM,IAEN,GADA,uBACA,yBACA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,GAEA,MACA,sBACA,+BACA,aACA,kBACA,YACA,0BACA,YACA,aACA,kBACA,gBACA,CAgBA,GAfA,EA/3GA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,UACA,UACA,WACA,UACA,WAkCA,QACA,QACA,SA22BA,qBACA,oBACA,gBACA,oBACA,oBACA,uBACA,qBACA,oBAr5BA,KACA,SACA,gBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,YACA,OACA,gBACA,UACA,KACA,SACA,SACA,CACA,CAGA,GAFA,WACA,UACA,oBACA,gBACA,UACA,EAAQ,QACR,QAKA,cACA,qBACA,IAEA,EAFA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,+BACA,IACA,KACA,oBACA,YACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CAGA,OAFA,WACA,UACA,CACA,cACA,sBACA,qBACA,IAIA,EAJA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,gBACA,IACA,KACA,+BACA,IACA,KACA,aACA,GACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,YACA,IAlUA,EACA,EAiUA,EACA,SACA,MApUA,EAqUA,EApUA,KACA,iCACA,eACA,CAAG,EACH,GAiUA,QACA,aAA0B,WAA0B,IACpD,gBACA,WACA,KACA,CACA,KAEA,UACA,UACA,EAAQ,kBAGR,OAFA,WACA,UACA,CACA,gBACA,uBACA,IAGA,EAHA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,IACA,KACA,aACA,IACA,KACA,oBACA,IACA,KACA,+BACA,YACA,+DAEA,SACA,GACA,EACA,EACA,EAEA,CACA,CAKA,GAJA,UACA,UACA,MACA,WACA,SACA,WACA,YACA,uEAEA,SACA,cACA,2DACA,UAEA,MACA,CAQA,MAPA,oBACA,aACA,WACA,UACA,OACA,YAEA,IACA,aACA,oBACA,IASA,EATA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAEA,WACA,gBACA,WACA,WACA,UACA,eACA,8BACA,YACA,kGAEA,YACA,IACA,KACA,kBACA,IACA,KACA,mBACA,IACA,KACA,kBACA,IACA,KACA,kBACA,IACA,KACA,sBACA,IACA,KACA,oBACA,IACA,KACA,eACA,IACA,KACA,aACA,IACA,KACA,SACA,GACA,EACA,EACA,EAEA,CACA,CACA,SACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAaA,OAXA,SACA,kBACA,UACA,kBACA,SACA,gBACA,UACA,gBACA,WACA,SACA,gBACA,IACA,cACA,qBACA,IAOA,EAPA,QACA,QACA,QACA,QACA,QACA,QACA,QAEA,WACA,gBACA,YACA,YACA,UACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,MACA,KACA,kBACA,MACA,KACA,mBACA,MACA,KACA,kBACA,MACA,KACA,kBACA,MACA,KACA,SACA,GACA,EACA,EACA,GAEA,CACA,CACA,UACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,IAMA,GAJA,WACA,UACA,iBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,YACA,mBACA,IAMA,GANA,QACA,QACA,QACA,QACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,cACA,MACA,KACA,eACA,MACA,KACA,cACA,MACA,KACA,cACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,YACA,QACA,0BACA,UACA,EACA,GAEA,WACA,kBACA,cACA,aACA,aACA,WACA,YACA,QACA,GACA,YACA,GACA,GACA,IAEA,GACA,GACA,GACA,GACA,KACA,QACA,CAiBA,GAhBA,UACA,kBACA,UACA,mBACA,UACA,kBACA,UACA,kBACA,WACA,WACA,YACA,gBACA,WACA,UACA,kBACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,gBAEA,cADA,uBACA,EACA,iBACA,aACA,YACA,WACA,eACA,8BACA,YACA,kEAEA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,OADA,WACA,IACA,cACA,qBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,YACA,iBACA,iBACA,OACA,GACA,UACA,GACA,SACA,IAEA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAGA,GAFA,WACA,YACA,qBACA,OACA,UAEA,WACA,EAAQ,UACR,SACA,aACA,oBACA,gBACA,GACA,qBACA,IACA,iBAEA,UACA,EACA,QAGA,GACA,QACA,yBACA,WACA,SACA,YACA,oBACA,gBACA,SACA,UACA,gBACA,GACA,qBACA,IACA,kBACA,qBACA,qBACA,QACA,CACA,QACA,WACA,EAAQ,4BACR,GACA,qBACA,kBACA,UACA,UAEA,MACA,EACA,OAEA,CACA,wBACA,uCACA,qBACA,OACA,cACA,0BACA,IACA,KACA,oBACA,SACA,SACA,cACA,CAAe,CACf,qBACA,QACA,QACA,UAA8B,IAC9B,+BACA,eACA,CAAe,CACf,EACA,OACA,eACA,gBACA,qCACA,iBACA,YACA,UACA,CACA,qBACA,wBACA,EAAY,WACZ,wBACA,KACA,GACA,qBACA,CACA,cACA,OACA,MAEA,oBACA,MACA,EACA,GAEA,eACA,MACA,KACA,yBACA,SACA,cACA,oBACA,WACA,GACA,wBACA,QACA,KACA,uBACA,qBACA,UACA,WACA,qBACA,IACA,iBAEA,UACA,EACA,OAEA,CACA,aACA,qBACA,+BACA,iCAEA,qBACA,sBACA,6BACA,OACA,OACA,cACA,YACA,SACA,OACA,eAEA,GADA,OAAuC,IACvC,IACA,iBACA,kBACA,CACA,UACA,kBACA,SACA,CACA,cACA,OACA,CACA,SACA,aACA,oBACA,gBACA,UACA,WACA,GACA,qBACA,IACA,kBACA,qBACA,qBACA,QACA,CACA,oBACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CACA,WACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,OACA,2BAEA,YACA,oBACA,WACA,EAAQ,IACR,wBACA,GACA,OACA,qCACA,qBACA,QACA,CACA,0BACA,IACA,KACA,aACA,OAEA,SACA,SACA,cACA,CAAa,CACb,qBACA,qBACA,iBACA,cACA,UAEA,IAGA,GAHA,YACA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,KACA,CACA,CACA,yBACA,YACA,MACA,KACA,EACA,wBACA,qBAEA,MADA,IAEA,QACA,EACA,yBAGA,YACA,CACA,CACA,IACA,GACA,iBACA,cACA,SACA,CACA,SACA,YACA,oBACA,gBACA,GACA,qBACA,IACA,iBAEA,UACA,EACA,EACA,aAGA,cACA,MACA,KACA,2BACA,6BACA,oBACA,8BACA,+BACA,SACA,eACA,UACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,YACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,SACA,GACA,EACA,GACA,GAEA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,sEAEA,GACA,qBACA,iBAEA,YACA,uDAAmE,YAAY,0FAE/E,uBACA,IAEA,gDACA,iBACA,iBACA,CAIA,MAHA,qBACA,cACA,WACA,EACA,WACA,oBACA,SACA,YACA,GACA,CACA,qBACA,UACA,+BACA,+BACA,yBACA,KAEA,sBACA,aACA,0BACA,0BACA,0BACA,2BACA,sBACA,aACA,0BACA,0BACA,0BACA,0BACA,CACA,+CACA,0BACA,qBACA,cACA,MAEA,2BACA,8BAEA,eACA,kCACU,GACV,qCACA,CACA,wBACA,IAQA,GARA,iBACA,GACA,oBACA,uBACA,GACA,GACA,OACA,aAEA,IACA,wBACA,2BACA,2BACA,kCACA,mBACA,qBACA,mBACA,eACA,sBACA,cACA,YACA,8BACA,+BACW,EACX,wCACA,uBACA,mDACA,0BACA,CACA,GADA,MACA,CACA,cACA,WACA,kBACA,eACA,cACA,eACA,sBACA,YACA,8BACA,gCACe,EACf,0BACA,4BACA,4BACA,wBACA,eACA,CACA,CACA,oBACA,YACA,WACA,SACA,UACA,YACA,SACA,aACA,YACA,aACA,YACA,UACA,gBAUA,YACA,sBACA,qBACA,iBACA,0DACA,WACA,WACA,iBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,YACA,sBACA,qBACA,iBACA,0DACA,WACA,WACA,iBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,YACA,wBACA,qBACA,iBACA,0DACA,WACA,WACA,mBACA,UACA,cACA,EACA,OAEA,EAAQ,IACR,MACA,EACA,EACA,QAEA,SACA,SACA,wBACA,cACA,IAEA,GAFA,QACA,QAEA,YACA,iBACA,aACA,aACA,UACA,WACA,eACA,MACA,KACA,+BACA,MACA,KACA,aACA,SACA,KACA,sCACA,+BACA,UACA,KACA,iBACA,UACA,SACA,GACA,OACA,uBACA,qBACA,QACA,CACA,sBACA,gCACA,OACA,GACA,MACA,GACA,SACA,GAEA,CACA,CACA,CACA,CAGA,OAFA,WACA,YACA,EACA,CACA,CACA,gBACA,EAw2EA,SACA,EACA,EACA,iBACA,cACA,kBACA,iBACA,gBACA,kBAEA,oBACA,kBACA,YACA,YAEA,IACA,4BACA,cACA,CACA,KACA,EACA,EACA,KACA,gBACA,GACA,IAEA,2BACA,mBACA,IACA,WACA,aACA,kBACA,gBACA,kBACA,WACA,yBACA,EAAU,OACV,kBACA,CACA,EAAQ,gBACR,mBACA,YACA,GAGA,OAFA,WACA,mBACA,GACA,YACA,YACA,aACA,WACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,aACA,WACA,WACA,YACA,aACA,YACA,UACA,OACA,YACA,uBACA,aACA,OACA,CACA,KACA,YACA,wBACA,aACA,OACA,CACA,KACA,YACA,6BACA,CACA,aACA,CACA,mBACA,KACA,CACA,UACA,OACA,OACA,OACA,OACA,YACA,YACA,sBACA,YACA,MACA,QAEA,OADA,qBAEA,mBACA,aACA,YACA,sBACA,aACA,mBACA,mBACA,oBACA,YACA,YACA,sBACA,YACA,kBACA,qBACA,MACA,QACA,GAGA,GAFA,aAGA,aAFA,mBAGA,iBACA,gCACA,CACA,SACA,cACA,OACA,CACA,aACA,eAEA,IADA,aACA,MACA,oBACA,SACA,aACA,CACA,OACA,CACA,CACA,eACA,aACA,QACA,mBACA,cACA,cACA,YACA,aACA,qBACA,QACA,YACA,QACA,UACA,kBACA,6BACA,aACA,YACA,aACA,YACA,CACA,MACA,QACA,OACA,oEACA,QACA,sBACA,YACA,kBACA,QACA,YACA,mBACA,iBACA,GAEA,WACA,aACA,IACA,YACA,EAAY,OACZ,YACA,kBACA,OACA,CACA,EAAU,IACV,YACA,kBACA,YACA,oBACA,oBACA,uBACA,mBACA,aACA,aACA,cACA,EACA,gCACA,GACA,EACA,MACA,EACA,KACA,MAEA,GACA,EACA,MACA,EACA,KACA,KAEA,4BACA,4BACA,SACA,EACA,gBACA,EACA,gBACA,GACA,IAEA,mBACA,oBACA,SACA,EACA,EACA,KACA,gBACA,GACA,IAGA,GADA,mBACA,2BACA,mBAEA,IADA,kCACA,kBACA,uCACA,wBACA,mBACA,qCACA,YACA,mBACA,iBACA,GAEA,iBACA,MACA,WACA,IACA,aACA,kBACA,gBACA,kBACA,WACA,SACA,CAAc,SACd,MACA,2BACA,CAEA,EAAc,OACd,mBACA,oBACA,YACA,iBACA,CAqBA,GApBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,kBACA,eACA,WACA,EACA,GACA,iBACA,iBAEA,UACA,cACA,KACA,IAGA,qBACA,EAAY,IACZ,oBACA,oCACA,gCACA,mBACA,YACA,mBACA,iBACA,GAEA,WACA,WACA,IACA,GACA,aACA,kBACA,gBACA,kBACA,WACA,UACA,QACA,iCAEA,IACA,WACA,SACA,CACA,UACA,qBACA,QACA,wBACA,mBACA,MACA,OACA,OAEA,UACA,YACA,OACA,CAAc,SACd,WACA,cACA,YACA,gBACA,YACA,KAOA,cALA,KACA,EACA,EAHA,wBAOA,OACA,EAAc,OACd,oBACA,oBACA,mBACA,mBACA,YACA,kBACA,OACA,CAuBA,GAtBA,KACA,EACA,KACA,EACA,GACA,EACA,EACA,mBACA,gBACA,EACA,gCACA,GACA,iBACA,iBAEA,UACA,cACA,MACA,GACA,oBAIA,qBACA,CACA,CACA,MACA,CACA,gCACA,mBACA,OACA,aACA,aAAiD,GACjD,WACA,iBACA,IACA,KACA,EACA,EACA,EACA,SACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,OACA,GACA,IAEA,MACA,QACA,qBACA,MACA,QAkBA,GAjBA,aACA,YACA,UACA,kBACA,kBAEA,MACA,OAFA,KAGA,2BACA,UACA,cACA,OACA,EACA,YACA,YACA,aAEA,OADA,OAEA,YACA,yEAEA,uCACA,cACA,YACA,YACA,MACA,QAEA,GADA,cACA,0BACA,YACA,YACA,aACA,YACA,MACA,QAGA,GADA,EADA,YACA,YACA,yBACA,gBACA,MACA,CACA,YACA,gIACA,yBAEA,CACA,CACA,uBACA,eACA,oBACA,KACA,EACA,EACA,KACA,gBACA,GACA,GAEA,QACA,mBACA,IACA,cACA,mBACA,YACA,WACA,UACA,SACA,yBACA,SACA,iBACA,4BACA,EAAI,OACJ,gCACA,CACA,CACA,qBACA,iDACA,2BACA,UACA,eACA,mBACA,MACA,QACA,mBACA,CACA,iBACA,aACA,eACA,aACA,uBACA,mBACA,OACA,aACA,QACA,UAEA,WADA,UACA,OACA,QACA,EACA,qBAEA,GADA,kBACA,gBACA,GACA,eAEA,QADA,UAC6B,WAA0B,KACvD,WACA,aACA,iBACA,sBACA,YACA,kCACA,KACA,2CACA,EACA,yEAEA,WACA,OACA,SACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,gBAEA,2BACA,wBAEA,YACA,sIAEA,wBACA,CAAsB,SACtB,GACA,oBACA,UACA,SACA,2BAEA,MACA,WACA,WACA,cACA,CAEA,yBACA,uBACA,IACA,oBAEA,OADA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EAEA,CACA,UACA,EAAoB,IACpB,SACA,YACA,kFACA,mBACA,yEAEA,GACA,SACA,OACA,OACA,OACA,EACA,uBACA,EACA,yBACA,gBACA,kBACA,QACA,WACA,oBACA,mBACA,aACA,aACA,SAiBA,CAhBA,GACA,gCACA,GACA,EACA,MACA,EACA,KACA,MAEA,GACA,EACA,MACA,EACA,KACA,KACA,EACA,iBACA,kBACA,oBACA,gCACA,YACA,mBACA,iBACA,GAEA,WACA,UACA,QACA,QACA,cACA,EACA,IAEA,GADA,aAEA,2BACA,wBAEA,YACA,uIAGA,GADA,wBACA,kCACA,WACA,8BACA,OACA,CACA,CAAwB,SACxB,WAEA,KACA,EACA,EAHA,wBAMA,gBACA,wBACA,kCACA,EAAwB,OACxB,oBACA,mBACA,WACA,YACA,kBACA,OACA,CA0BA,GAzBA,KACA,EACA,KACA,CACA,QACA,QACA,cACA,CAAyB,CACzB,EACA,GACA,EACA,gBACA,EACA,gCACA,GACA,iBACA,iBAEA,UACA,cACA,MACA,GACA,oBAIA,qBACA,CACA,CACA,cACA,OACA,CACA,CACA,MACA,gBACA,MACA,QACA,YACA,uIAEA,QAGA,GADA,EADA,YACA,YACA,yBACA,YACA,MACA,CACA,oBACA,YAGA,aACA,eAEA,IADA,aACA,MACA,KACA,oCACA,SACA,WACA,CACA,MACA,CACA,6BACA,OACA,qBACA,gBAEA,kBACA,UACA,EACA,EACA,gBACA,EAGA,aACA,kDACA,qBAHA,sCAIA,mBAAiC,8BAAqC,EACtE,GACA,4EAEA,CACA,mBACA,6BAEA,qBACA,SACA,EACA,cACA,iBACA,EACA,0CAEA,OADA,sBAEA,qBACA,SACA,KACA,cACA,iBACA,CACA,CACA,CACA,qBACA,gBACA,GACA,QACA,oCACA,iBACA,CACA,IACA,6BACA,WACA,IACA,CACA,WACA,aAGA,UAAwB,MAFxB,OAEwB,MADxB,OACwB,gBACxB,IAEA,GADA,aACA,mDACA,YACA,sIAEA,wBACA,CAAU,SACV,GACA,oBACA,UACA,oCAEA,OACA,yBACA,uBACA,wBAEA,OADA,EACA,GACA,GACA,EACA,EACA,EACA,EANA,EAQA,EAEA,CACA,WACA,cACA,KACA,CACA,CACA,YACA,MACA,CAGA,GAFA,gBACA,WAEA,iBACA,8CACA,CACA,QAAyB,IAA0B,IACnD,OACA,wBAEA,gBADA,SAEA,eACA,aACA,WACA,iBACA,YACA,MACA,CACA,QAAc,IAAiB,IAC/B,OACA,wBACA,WACA,iBACA,WACA,CACA,iBAEA,OADA,wBAGA,OADA,6BAGA,SADA,yBAEA,8BACA,CACA,mBACA,UACA,EACA,EACA,SACA,OACA,aACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,MACA,iBAEA,CACA,mBACA,uBACA,KACA,EACA,gBACA,KACA,gBACA,iBACA,IAIA,OAFA,mBACA,oBACA,GACA,EACA,EACA,OACA,aACA,kBACA,EACA,kBACA,iBACA,WACA,UACA,gBACA,UACA,cACA,MACA,iBAEA,CACA,qBACA,sBACA,YACA,YACA,gBACA,mBACA,mBACA,aACA,WACA,IACA,kBACA,CAAM,SACN,GACA,KACA,EACA,OACA,KACA,EACA,4CACA,CACA,8BAKA,SAJA,EACA,OACA,KACA,MACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,WACA,MACA,MACA,CACA,mDAKA,SAJA,EACA,OACA,KACA,MAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,WACA,MACA,MACA,CACA,CACA,CACA,EAAI,IACJ,wBACA,kBACA,IACA,kBACA,CAAM,SACN,GACA,KACA,oBACA,kBACA,EACA,OACA,KACA,EACA,4CACA,CACA,8BACA,IAKA,SAJA,EACA,OACA,KACA,MACA,KACA,YACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,mDAKA,SAJA,EACA,OACA,KACA,MAEA,sBACA,kBACA,YACA,YACA,gBACA,mBACA,MACA,MACA,CACA,CACA,CACA,CAMA,MALA,kBACA,YACA,YACA,gBACA,MACA,CACA,CACA,eACA,wBACA,0BACA,GACA,+BACA,CACA,YACA,EACA,EACA,EACA,EACA,EACA,GAEA,YAAkB,WAAkB,KACpC,WACA,gBACA,GACA,EACA,EACA,KACA,KACA,EACA,OAEA,CACA,OACA,IAEA,KAFA,EAIA,KACA,QACA,KACA,KAEA,oBACA,kBACA,WACA,cAXA,EAYA,iBACA,kCACA,CACA,CAEA,GADA,WACA,UACA,YACA,YACA,gFAOA,GALA,cACA,YACA,gBACA,iBACA,oCACA,6CACA,CACA,CAyDA,iBACA,IACA,oBACA,cACA,MACA,gBACA,MACA,eACA,oBAOA,GANA,gBACA,cACA,mBACA,qBACA,cACA,wBACA,IACA,wBACA,WACA,OAEA,+BACA,WAEA,IACA,8BACA,WACA,+BACA,WACA,CACA,cACA,UACA,SACA,UACA,qBACA,0BACA,sBACA,cACA,YACA,8BACA,gCACA,cACiB,EACjB,wCACA,qBACA,aACA,KACA,kBACA,gCACA,6BACA,4BACA,QACA,OACA,CACA,CACA,KAAiC,OAAkB,GAAgB,CACnE,CACA,CACA,CAAI,SACJ,SAA0C,CAC1C,CACA,CACA,eACA,oCACA,iCACA,kBACA,oBAEA,CACA,eACA,GACA,EACA,2BAEA,+BACA,mCAEA,MACA,kBAEA,CACA,iBACA,GACA,qBACA,uBACA,+BACA,sBACA,CACA,oBACA,UACA,mBACA,cACA,cACA,cACA,OACA,EAAI,+BACJ,CACA,mBACA,aACA,WACA,gBAAyC,WAAoB,IAC7D,0BACA,EACA,cACA,aACA,CACA,CACA,qBAMA,GALA,UACA,qBACA,QACA,qBACA,oBACA,UACA,8BACA,iCACA,YACA,8DAEA,yBACA,CACA,qBACA,6BACA,EAAI,qCACJ,sBACA,IACA,2BACA,UACA,iBACA,8BACA,QACA,iBACA,8BACA,aAEA,kBAEA,gCACA,SACA,kCACA,GACA,GAEA,iCACA,UACA,qBACA,SACA,wBACA,2BACA,0BACA,WAEA,GACA,cACA,iBACA,CACA,8BACA,qBACA,aACA,GACA,UACA,wBAEA,IACA,sBACA,WACA,IACA,CACA,WACA,IACA,IAIA,GAHA,WACA,kCAEA,OADA,4BAEA,YACA,8EAEA,4BACA,KACA,qBACA,YACA,IACA,KACA,KACA,EACA,KACA,EACA,gBACA,CACA,iBACA,EACA,GAEA,SAs2BA,SACA,oCACA,CACA,mBACA,UACA,aACA,uBACA,WACA,aACA,YACA,CACA,EAh3BA,EACA,KACA,EACA,EACA,QACA,sBACA,iBACA,CACA,CACA,qBACA,OACA,CACA,MAEA,UACA,kBACA,4BACA,SACA,gCACA,iBACA,6BAEA,OADA,WAEA,YACA,OACA,6BACA,CACA,eACA,iCACA,SACA,OACA,QACA,WACA,QACA,SACA,KACA,SACA,oBACA,IACA,IACA,EADA,gBAEA,QAAkB,WAAwB,KAC1C,WACA,IACA,mBACA,aACA,QACA,8BACA,cACA,IAUA,GATA,gCACA,GACA,EACA,EACA,eACA,OACA,cAEA,QAEA,2BACA,wBAEA,YACA,sIAEA,yBACA,qBACA,GACA,EACA,kBACA,MACA,KAEA,CAAc,SACd,KACA,MACA,OACA,KACA,EACA,GACA,oBACA,UACA,0BACA,CACA,aACA,YACA,gBACA,OACA,KACA,IACA,EAAgB,IAChB,wBACA,qBACA,2BACA,SACA,QACA,oBACA,EACA,cACA,aACA,EACA,iBACA,iBACA,KACA,EACA,EACA,GAEA,GACA,EACA,EACA,EACA,EACA,EACA,GAEA,qBACA,wBACA,MACA,oBACA,uBACA,KACA,CACA,EAAc,OACd,CACA,CACA,EAAU,OACV,SACA,IACA,aACA,CACA,WACA,cACA,wBACA,kBACA,IACA,QACA,kBACA,gBACA,kBACA,qBACA,WACA,0BACA,GACA,EACA,kBACA,MACA,EAEA,CAAY,SACZ,KACA,oBACA,kBACA,MACA,OACA,KACA,cACA,aACA,EACA,GACA,oBACA,UACA,0BACA,CACA,WACA,gBACA,OACA,KACA,KACA,aACA,WACA,EAAc,IACd,2BACA,qBACA,WACA,wBACA,QAUA,GATA,UACA,qBACA,QACA,oBACA,KACA,EACA,EACA,GAEA,sBACA,GACA,iBACA,aACA,CACA,WACA,gBACA,QACA,mBACA,GACA,qBACA,QACA,iBACA,mCACA,wBACA,2BACA,0BACA,KACA,CACA,4BACA,CACA,EAAY,OACZ,CACA,CACA,CACA,cACA,sBACA,mBACA,CAAM,SACN,SAAqD,EACrD,OACA,EAAM,OACN,KACA,OACA,OACA,cACA,IACA,CACA,CACA,CACA,YACA,EACA,EACA,GAEA,2BACA,2BACA,iBAAyC,oBAA6B,IACtE,EACA,GACA,EACA,cACA,IACA,EACA,QACA,CACA,YACA,EACA,EACA,GAEA,iBACA,YACA,UACA,EACA,EACA,GAEA,wBACA,qBACA,+BACA,iBACA,OAIA,GAHA,oBACA,uBAEA,CADA,2BAEA,YACA,+FAEA,UACA,EACA,EACA,EAEA,QACA,qCACA,QACA,gBACA,OACA,oBACA,GACA,EACA,EACA,EAGA,SACA,QACA,CACA,CACA,eACA,GACA,wBACA,mCACA,CACA,SACA,aACA,KACA,EACA,uBACA,GAEA,0BACA,kCACA,8BACA,YACA,CACA,CACA,qBAEA,OADA,mBACA,UACA,OACA,sBACA,QACA,OACA,OACA,oBACA,kBACA,gBACA,QACA,yBAEA,IADA,qBAEA,OAEA,QACA,WACA,SACA,WACA,IACA,aACA,YAA6B,WAA2B,KACxD,WAAoC,UAAoB,IACxD,UACA,aACA,CACA,KAAa,aAA8B,IAC3C,UAGA,OAFA,YACA,cACA,CACA,QACA,QACA,SACA,YACA,sGAEA,CACA,CACA,SACA,qBACA,iBACA,YACA,mBAEA,GADA,mBACA,cACA,mBACA,GACA,qBACA,QACA,gBACA,QACA,QACA,GACA,SACA,aACA,EACA,EACA,GACA,EACA,QACA,WACA,EAAI,oBACJ,kDACA,8BACA,4BACA,GACA,EACA,cACA,iBAEA,yBACA,iBACA,GACA,SACA,qCAEA,kCACA,8BACA,GACA,EACA,cACA,iBAEA,gBACA,CAUA,GATA,eACA,wBAEA,OADA,WAEA,SACA,qBACA,QACA,QAEA,IADA,wBACA,OACA,YACA,+FAEA,cACA,CACA,cACA,CACA,qBAh5HA,QA3DA,kBACA,wBACA,OACA,OACA,OACA,OACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,QACA,OACA,QACA,qBACA,uBACA,OAEA,SACA,8DACA,CACA,EAo5HA,EACA,cACA,sBACA,MAEA,YACA,sBAx5HA,eACA,OACA,OACA,OACA,OACA,SAm5HA,EAn5HA,GACA,QACA,SAi5HA,EAj5HA,GACA,QACA,SA+4HA,EA/4HA,GACA,QACA,SA64HA,EA74HA,GACA,QACA,SA24HA,EA34HA,GACA,QACA,SAy4HA,EAz4HA,GACA,QACA,SAu4HA,EAv4HA,GACA,SACA,8DACA,CAq4HA,CACA,mBACA,cACA,IACA,IA1qHA,EAEA,EAwqHA,0BACA,WACA,IAEA,GACA,EACA,EACA,EACA,KAEA,YAEA,OADA,WAEA,SACA,qBACA,QACA,GACA,EACA,eACA,eAEA,mBACA,gBACA,kBACA,iBACA,sBA8BA,OA7BA,mBACA,yBACA,QACA,EACA,wBACA,mBACA,SACA,uBACA,mBACA,SACA,sBACA,mBACA,SACA,SACA,wBACA,mBACA,SACA,SACA,oBACA,sBACA,OACA,QACA,qBACA,OACA,EACA,SA7tHA,EA8tHA,EA7tHA,EA6tHA,EA7tHA,IACA,KACA,kCACA,eACA,eACA,EAwtHA,EAxtHA,GACA,EAutHA,EArtHA,EACA,sBAGA,EAitHA,EAjtHA,IACA,SACA,CACA,EA8sHA,EA9sHA,GACA,iCACA,UAYA,aAVA,EA0sHA,EAxsHA,KAHA,uBAKA,OACA,EAqsHA,EArsHA,IACA,EAosHA,EAlsHA,UAEA,EACA,GACA,aACA,eAEA,UACA,WACA,UACA,iBACA,sBACA,KACA,gBACA,8BACA,YACA,iGAEA,UAcA,gBACA,sBACA,iBACA,eACA,aACA,MACA,CACA,UACA,gBACA,8BACA,qCACA,+BACA,YACA,UACA,MACA,iBACA,UACA,OACA,KACA,cACA,iBACA,KACA,KACA,WACA,WAEA,KADA,UAEA,KACA,SACA,GACA,YACA,0BACA,0BACA,MAEA,OACA,MACA,CACA,QACA,EACA,EACA,UAEA,QACA,EACA,EACA,SAEA,EAknHA,EA7qHA,EACA,EAEA,CACA,EAyqHA,EAzqHA,IACA,KACA,SACA,CACA,CAAG,EACH,EAoqHA,EApqHA,GAoqHA,EACA,QACA,UACA,UACA,CACA,YACA,EACA,EACA,EACA,GAEA,yBACA,qBACA,OACA,WACA,+BACA,YACA,6EAEA,kBACA,QACA,oBACA,aACA,YACA,mBAEA,IADA,kBACA,mBACA,QACA,sBACA,mBACA,SACA,QACA,qBAEA,IADA,qBAEA,QACA,yBACA,OACA,UAEA,CACA,iBACA,uBACA,IACA,IACA,4BACA,MACA,yBACA,aACA,uBACA,kCACA,mBACA,cACA,IAKA,EALA,mBACA,gBACA,aACA,eACA,eAEA,MACA,QAA+B,WAAgC,IAC/D,UACA,KACA,QAAiC,WAAgC,IACjE,eAEA,gBACA,OACA,EAAU,SACV,QAA+B,WAAgC,IAC/D,UACA,sBACA,QAA6B,WAAmC,IAChE,SACA,YACA,4BACA,sBACA,uBACA,QAA6B,WAAoC,IACjE,SACA,YACA,6BACA,uBACA,kCACA,4BACA,KACA,uBACA,QACA,wBACA,QAA6B,WAAqC,IAClE,SACA,YACA,iCACA,wBACA,kBACA,6BACA,uBACA,2BACA,wBACA,QAA6B,WAAqC,IAClE,UACA,IACA,aACA,WACA,IACA,CACA,WACA,QAAgC,WAA+B,IAC/D,iBACA,CACA,6BACA,eACA,mBACA,gBACA,mBACA,KACA,IACA,IACA,WACA,IAEA,UACA,eACA,4BACA,oBACA,GACA,uBACA,uCACA,kCACA,2BACA,0CACA,qCACA,CACA,uBACA,2BAGA,GAFA,mBACA,yBACA,wBACA,mBACA,0BACA,QACA,EACA,EACA,SAEA,OACA,CACA,QACA,QACA,OACA,CACA,CACA,OACA,CACA,oBACA,IACA,uBACA,IACA,IACA,WACA,IAEA,SACA,YACA,4BACA,sBACA,6BACA,uBACA,4BACA,GACA,GAEA,4BACA,uBACA,wBACA,kBACA,6BACA,uBACA,wBACA,IACA,IACA,WACA,IAEA,SACA,YACA,iCACA,QAAkB,WAAqC,KACvD,IA5kIA,EA4kIA,OACA,IACA,uBACA,gBACA,kBACA,gBACA,EACA,EACA,qBAEA,QACA,sBACA,mBACA,SACA,QACA,sBACA,uBACA,QACA,GACA,GACA,EACA,IAEA,EACA,EACA,GArmIA,EAsmIA,MArmIA,0BACA,GACA,YACA,UACA,QACA,eACA,cACA,eACA,cACA,eACA,SACA,YACA,oMAEA,CACA,KAwlIA,EACA,QACA,EACA,IAEA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAAgC,IAClD,GACA,cACA,CACA,mBACA,IACA,cACA,MACA,CACA,cACA,KACA,uBACA,IACA,0BACA,QAAkB,WAA8B,KAChD,WACA,GACA,IACA,IACA,cACA,0BACA,IACA,IACA,WACA,IAEA,GACA,IACA,EACA,EACA,EACA,MAEA,CACA,IACA,cACA,SACA,OACA,CACA,cACA,WACA,WACA,YACA,oBACA,oBACA,GACA,EACA,EACA,cAEA,kBACA,KACA,EACA,eACA,cAEA,CACA,OACA,mBACA,IACA,cACA,MACA,CACA,CACA,cACA,4BACA,QAAkB,WAA4B,IAC9C,kBACA,mBACA,IACA,cACA,MACA,CACA,aACA,CACA,EAAI,OACJ,uBACA,uCACA,iCACA,qBACA,qBACA,yBACA,2BACA,KACA,YACA,UACA,oBACA,IACA,CACA,CACA,eACA,sCACA,GACA,aACA,qBACA,CAAO,EACP,aACA,YACA,CAAO,EACP,sBACA,6BACA,2BACA,IACA,OACA,EACA,GACA,GAEA,MACA,CAAG,GACH,CACA,eACA,4BACA,CACA,eACA,uBACA,0BACA,sBACA,qBACA,sBACA,oBACA,EACA,QACA,mBACA,CAAK,IACL,CACA,iBACA,iBACA,mCACA,wCACA,gBACA,IACA,OACA,CAAM,SACN,SAA4C,SAC5C,CACA,CACA,CACA,iBACA,8CACA,IACA,uBACA,aACA,MACA,WACA,gEACA,oBACA,UACA,0BACA,8DACA,CACA,gBACA,sBACA,OArlCA,kBACA,wBACA,mBACA,aACA,sBACA,WACA,CAEA,GADA,uBACA,SACA,kCAEA,UADA,aACA,CACA,UACA,QACA,MACA,CACA,iBACA,oBACA,kBACA,aACA,GACA,EACA,KACA,QACA,QACA,EACA,EACA,EACA,qBACA,6BACA,OAEA,cACA,YACA,YACA,WACA,gBACA,QACA,iBACA,oCACA,iBAEA,OADA,WAEA,qBACA,QACA,6CACA,eACA,CAAO,EACP,gCAEA,QADA,WAEA,qBACA,QACA,oBACA,4BACA,EA8hCA,MACA,CAAO,EACP,SACA,CACA,sBACA,mBACA,CAAI,SACJ,SAA6C,SAC7C,CACA,CAaA,cACA,gBACA,yCACA,YACA,qIACA,EACA,6GAEA,CACA,KACA,KACA,WAAiB,eACjB,iCACA,IAtvFA,EAEA,EACA,EACA,EAmvFA,EADA,sBAEA,IACA,eACA,iBACA,EAAO,CACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,GAnwFA,EAowFA,EAlwFA,EAowFA,GACA,EACA,OACA,uCACA,qBACA,EACA,6BAzwFA,EA2wFA,4BA1wFA,EA2wFA,gCAnwFA,MACA,EAwvFA,EAtvFA,EACA,EACA,EA+vFA,mBACA,WAgBA,EAfA,CACA,2BACA,CACA,aACA,iBACA,OACA,CAAiB,CACjB,mBACA,mBACA,OACA,CACA,CAAe,CACf,CAAgB,iBAEhB,EAEA,CAAS,CACT,OACA,OACA,EACA,sBA9wFA,OACA,EACA,kBACA,mBACA,aACA,cACA,EACA,GAywFA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EACA,wBAA8B,eAC9B,iCACA,MACA,EAMA,EALA,4BACA,IACA,GACA,CAAO,EACP,sBAEA,IACA,eACA,iBACA,EAAO,CACP,SACA,4BACA,uCACA,kCACA,4BACA,6BAEA,KACA,EACA,EACA,GACA,EACA,iBACA,uCACA,qBACA,EACA,6BAEA,4BACA,gCACA,mBACA,EACA,WACA,yBACA,CACA,aACA,iBACA,OACA,CAAe,CACf,mBACA,mBACA,OACA,CACA,CAAa,CACb,CAAc,iBAEd,cACA,IACA,CAAS,CACT,YACA,oBAAuC,EACvC,IACA,CAAS,CACT,EACA,sBACA,sBAEA,gBACA,eACA,gCACA,CACA,iBACA,eACA,gCACA,EACA,6BACA,CACA,CACA,KACA,CAAG,CACH,EACA,SAAe,+HCv8NR,SAAS2H,EAAkB,CAWjC,EAXiC,cAChC16B,CAAS,OACT26B,CAAK,QACL/hB,CAAM,SACN,CACO,CAMR,CAXiC,CAYG,EACjC,IAGIgiB,EAHE,kBAAEpJ,CAAgB,CAAE,CACxBpmC,EAAQ,IAAqD,EAKzD4T,EAAQwyB,EAAiBvyB,OALtB7T,CAK8B,GACvC,GAAI,CAAC4T,EACH,KADU,CACJ,qBAEL,CAFK,IAAIpQ,EAAAA,CAAcA,CACtB,sGADI,+DAEN,GAGF,GAAM,wBAAEisC,CAAsB,CAAE,CAC9BzvC,EAAQ,IAA6B,EAGvC,OAFAwvC,EAAeC,EADNzvC,EACqC4T,GAEvC,UAACgB,EAAAA,CAAW,GAAG26B,CAAK,CAAE/hB,OAAQgiB,GACvC,CAMF,MANS,EAKN,qBCvCH,+CACA,6BACA,+BACA,kCACA,+BACA,+BACA,8BACA,kCACA,+BACA,2BACA,2BACA,kBAQA,GACA,qBACA,QACA,CAAK,CACL,+BAAsC,CACtC,gCAAuC,CACvC,4BACA,CAAG,CACH,gBACA,KACA,kBACA,aACA,eACA,YACA,iBACA,CAgBA,cAEA,kBACA,aACA,eACA,YACA,iBACA,CAtBA,gCACA,mCACA,GACA,oBACA,sBACA,QAEA,YACA,0GAEA,iDACA,EACA,oCACA,qDACA,EAEA,wBAOA,wBACA,gBACA,iBACA,0BACA,oBACA,cACA,OAA6B,4BAAoC,CACjE,kCACA,kBACA,YACA,OACA,WACA,OACA,MACA,sBACA,OACA,CACA,CAIA,cACA,MACA,oBACA,UACA,cAEA,CAUA,aACA,oBAVA,EACA,EAUA,iDAXA,EAYA,SAXA,GAAwB,mBAExB,IACA,8BACA,YACK,GAOL,cACA,CA8IA,kBACA,oBACA,SACA,IAIA,OApHA,sBACA,IA1DA,IAhEA,EA0HA,UACA,4CACA,SACA,sBAEA,UACA,aACA,aACA,aACA,KACA,KACA,cACA,mBACA,OACA,OACA,KACA,KACA,QACA,OACA,cAEA,YACA,EACA,EACA,EACA,EAGA,CACA,CACA,KACA,OACA,OACA,EACA,oBACA,KACA,MACA,SACA,GACA,wBACA,uBACA,QACA,EAAW,EACX,SACA,QAtGA,EAwGA,EAxGA,EAyGA,EACA,cACA,iBACA,GACA,mBACA,EACA,OACA,KACA,EAVA,EAtGA,qBAkHA,WACA,EAEA,IACA,uBACA,QACA,YAAoB,WAAqB,IACzC,EACA,IADA,OACA,GACA,KACA,EACA,EACA,EACA,EACA,QAEA,wBAlMA,QADA,EAmMA,IAlMA,wBAIA,kBAHA,GACA,SACA,iBACA,MA8LA,EACA,IACA,gBACA,oBAGA,EACA,IADA,UACA,KACA,KACA,EACA,EACA,EACA,EACA,QAEA,iBACA,6BACA,SACA,SA5HA,GACA,iBACA,gBACA,mBACA,WACA,uBAEA,OACA,0BACA,YACA,oBACA,OACA,YACA,sBACA,sBACA,UACA,CAAe,CACf,YACA,sBACA,gCACA,EACA,EACA,UAEA,gBACA,mBACA,WACA,eAEA,CACA,OACA,EA6FA,GACA,EACA,EACA,EACA,EAGA,aACA,kDACA,qBAHA,cAIA,mBAA+B,8BAAyC,EACxE,GACA,4EAEA,CACA,QACA,EAKA,sBACA,sBACA,CAAG,EACH,CACA,CACA,cACA,mBACA,gBACA,QACA,KACA,YACA,iCACA,yBACA,CAAO,CACP,YACA,iCACA,yBACA,GAEA,yCACA,CACA,gDACA,UAEA,MACA,+BACA,YACA,YACA,GACA,yBACA,qCACA,CACA,qCACA,WACA,cACA,QACA,oBACA,UACA,2BACA,kBACA,UACA,OACA,CAAW,EACX,kCACA,CAOA,CAPU,OAOV,QACA,EACA,UAAgB,EAChB,MACA,wBACA,EACA,EACA,WACA,uBACA,CAAO,CACP,EAEA,CAAG,CACH,kBACA,QAIA,OAHA,eACA,GACA,CAAK,EACL,CACA,CAAG,CACH,oBACA,OACA,gBACA,QACA,CAAO,MAEJ,CACH,iBACA,SACA,YACA,yEAEA,QACA,CACA,EACA,WAAiB,GACjB,UAAgB,GAChB,UAAgB,GAChB,eAAqB,GACrB,YAAkB,GAClB,UAAgB,GAChB,iEAAuE,CACvE,EACA,oBAA0B,EAC1B,eACA,cACA,0BACA,CACA,EACA,OAAa,aACb,kBACA,8BACA,CACA,EACA,aAAmB,YACnB,WACA,EACA,cAAoB,iBACpB,WACA,YACA,+DAEA,UAAuB,UACvB,QACA,WACA,wCACA,aACA,WACA,cACA,gBACA,6BACA,YACA,yBACA,2BACA,QACA,uBAAkD,IAAc,IAChE,oBACA,YACA,CACA,oBACA,EACA,eAAqB,aAcrB,MAbA,IACA,WACA,gBACA,iBACA,eACA,cACA,aACA,GACA,WACA,YACA,WACA,UACA,EACA,CACA,EACA,eAAqB,iBACrB,MACA,IAAc,CACd,OACA,WACA,wCACA,aACA,WACA,cACA,gBACA,YACA,yBACA,2BACA,QACA,uBAAwD,IAAoB,IAC5E,oBACA,YACA,CACA,qBACA,0BACA,eACA,YACA,eACA,EACA,WAAiB,YACjB,OAAW,aACX,EACA,YAAkB,aAClB,OAAW,oBACX,EACA,gBAAsB,GACtB,MAAY,aACZ,OACA,WACA,UAAgB,qBAA4B,CAC5C,OACA,CACA,EACA,MAAY,eACZ,OACA,WACA,OACA,yBACA,CACA,EACA,iBAAuB,aACvB,UACA,IACA,OACA,IACA,UACA,aACA,GACA,OACA,oBACA,UACA,2BACA,WACA,CAAI,SACJ,IACA,EAAI,OACJ,UACA,gBACA,kBACA,KACA,CACA,EACA,0BAAgC,YAChC,4BACA,EACA,KAAW,aACX,iBACA,EACA,gBAAsB,iBACtB,gCACA,EACA,aAAmB,eACnB,2BACA,EACA,YAAkB,aAClB,wBACA,EACA,eAAqB,cACrB,kBAAwB,eACxB,gCACA,EACA,WAAiB,eACjB,yBACA,EACA,OAAa,YACb,kBACA,EACA,qBAA2B,iBAC3B,qCACA,EACA,oBAA0B,eAC1B,kCACA,EACA,iBAAuB,eACvB,+BACA,EACA,SAAe,eACf,uBACA,EACA,eAAqB,eACrB,6BACA,EACA,YAAkB,iBAClB,4BACA,EACA,QAAc,aACd,oBACA,EACA,UAAgB,aAChB,sBACA,EACA,sBAA4B,UAC5B,EACA,EACA,GAEA,gCACA,EACA,EACA,EAEA,EACA,eAAqB,YACrB,0BACA,EACA,SAAe,0DCvhBf,uFCIO,IAAMrwC,EAAe,IAAIhD,IAEnBkB,EAFwC,CAE7BC,EAAgBH,KACtC,IAAK,IAAMiC,KAAO9B,EAAM,CACtB,IAAMoyC,EAAgBvwC,EAAaxC,GAAG,CAACyC,GAEvC,GAA6B,UAAzB,OAAOswC,GAA8BA,GAAiBvyC,EACxD,OAAO,CAEX,CAEA,OAAO,CACT,EAAC,6BCLD,MAAY,EAAQ,IAA0B,EAC9C,WADmB,CACnB,EACA,oCACA,uBACA,+CACA,YAAoB,mBAAsB,IAC1C,8CACA,CACA,MACA,yBACA,EACA,GAAO,QACP,EACA,gHAEA,CACA,cACA,OACA,GACA,IACA,aACA,mBACA,CAAO,CACP,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAK,CACL,IACA,gBACA,CAAG,CACH,6BAYA,EACA,kEACA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,cAAoB,eACpB,MACA,4DACA,GACA,IACA,gBACA,gBACA,gBAEA,oBACA,OA9BA,gBACA,MACA,4DACA,OACA,WACA,sBACA,WACA,gBACA,gBACA,CACA,EAoBA,WACA,EACA,WAAiB,aACjB,UACA,MACA,IACA,8BACA,EAAI,OACJ,MACA,MACA,OACA,CACA,EACA,YAAkB,eAClB,oBACA,KAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,sBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,iBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,sBACA,CACA,WACA,qBACA,WACA,cACA,UACA,gDACA,8CACA,2CACA,cACA,iCACA,gBACA,OACA,eACA,kCACA,iBACA,OACA,YACA,oDACA,WACA,kDACA,6CACA,CAAK,CACL,CACA,EACA,eAAqB,eACrB,sBACA,MACA,4BACA,SACA,GACA,uCACA,KACA,OACA,cACA,UACA,+CACA,CAAO,CACP,EAAM,YACN,EACA,kBAAwB,aACxB,QACA,EACA,yBAA+B,eAC/B,WACA,EACA,cAAoB,iBACpB,8BACA,EACA,eAAqB,YACrB,oCACA,EACA,SAAe,gECjNR,oBACP,4CAGA,YACA,4BACA,iCACA,uBACA,iBACA,8BAAsC,GAAY,sGAAsG,GAAY,+KAA+K,EAAM,iDACzV,CACA,CACA,kBAOW,kBACX,aACA,iCACM,EACN,0BACA,8BACA,WACA,KACA,cACc,CACd,OACA,EACA,CACA,WACA,gCACA,YAAmC,WAAsB,IACzD,MAEA,CAAiB,EACjB,OACA,CAAiB,CACjB,CACA,CAAS,EAKT,OADA,WACA,CACA,CACA,CACA,iWrEpCO,SAASquC,EACdjf,CAAa,CACbiI,CAAkB,EAElB,MAAM,qBAEL,CAFK,IAAII,EAAAA,CAAqBA,CAC7B,CAAC,MAAM,EAAErI,EAAM,KALkDif,uEAK0B,EAAEhX,EAAW,0HAA0H,CAAC,EAD/N,+DAEN,EACF,CAEO,SAASmb,EACdxJ,CAAoB,CACpByJ,CAAwB,EAExB,IAAMxvC,EAAQ,qBAEb,CAFa,MACZ,CAAC,MAAM,EAAE+lC,EAAU5Z,KAAK,CAAC,uXAAuX,CAAC,EADrY,+DAEd,EAKA,OAHA9oB,MAAMosC,iBAAiB,CAACzvC,EAAOwvC,GAC/BzJ,EAAU2J,wBAAwB,GAAK1vC,EAEjCA,CACR,CCiCO,SAAS2vC,EACdrE,CAAoC,CACpCvF,CAAoB,EAEpB,IAAM5R,EAAgBc,EAAAA,oBAAoBA,CA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CnCC,UAAW,IACXC,UAAW,IACXC,aAAc,GAChB,EAAC,EAEqB,IAAI18B,IAAIyF,OAAO2lB,MAAM,CAACmR,IAE/B9+B,EAAiC,2BAA0B,SAaxDq+B,EACdh+B,CAAc,EAEd,GACmB,iBAAVA,GACG,OAAVA,GACA,CAAE,YAAYA,CAAAA,CAAAA,CAAI,CACM,UACxB,OADOA,EAAMib,MAAM,CAEnB,OAAO,EAET,GAAM,CAACkI,EAAQqxB,EAAW,CAAGx0C,EAAMib,MAAM,CAACiG,KAAK,CAAC,KAEhD,OACEiC,IAAWxjB,GACX80C,EAAc1pC,GAAG,CAACuP,OAAOk6B,GAE7B,CAEO,SAAStW,EACdl+B,CAA8B,EAG9B,OAAOsa,OAAOk6B,EADWv5B,MAAM,CAACiG,KAAK,CAAC,IAAI,CAAC,EAAE,CAE/C,CAEO,SAASwzB,EACdl5C,CAAc,EAEd,OAAQA,GACN,KAAK,IACH,MAAO,cACT,MAAK,IACH,MAAO,WACT,MAAK,IACH,MAAO,WACT,SACE,MACJ,CACF,8HCtDW,uBACX,cACA,yJACA,CACA,kBACA,WACA,CACA,CACO,QACP,eACA,oBACA,WACA,UACA,YACA,aACA,UACA,0BAEA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,CACT,CACA,CACA,yCACO,cACP,kBACA,kCAGA,EAFA,GAIO,gBACP,WACA,gBACA,SAKA,UAA2B,IAAe,IAC1C,aAEA,eACA,SAGA,eACA,SAEA,QACA,CACO,QACP,iBACA,UAAoC,IAAe,cACnD,wBACA,SAEA,SACA,UACA,OAEA,MAA8B,kBAAgB,YAM9C,GALA,GACA,0BAGA,EADA,WACA,yBACA,GACA,SACA,gBACA,UAA4C,IAAe,cAC3D,SACA,oBACA,CACA,IACA,CACA,EACA,eACA,WACA,UAEA,OACA,QAGA,cACA,sBACA,4CACA,IAEA,OADA,eACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,WACA,sBACA,4CACA,IAEA,OADA,YACA,CACA,EAA8B,OAC9B,GACA,CACA,CACA,SACA,OAA+B,GAAc,WAC7C,CACA,CACA,CAAS,EACT,QACA,CACA,CACO,cACP,kCACA,WACA,UACA,aACA,sBAGA,OAFA,wBACA,eACA,CACA,CACA,WACA,sBAGA,OAFA,qBACA,YACA,CACA,CACA,SACA,OAA2B,GAAc,WACzC,CACA,CACA,CAAK,EACL,QACA,CAUA,gBACA,GATA,WASA,EATA,MAWA,WAEA,CACO,cACP,UAA+B,IAAc,cAC7C,wBACA,SAEA,QACA,oGC5JO,kCAAiC,EAAuB,EAC/D,mBAAuB,EACvB,gBACA,QAMA,EALA,EAAkI,MAAlI,KAAgH,IAAkB,KAAN,IAAM,YAAlB,EAAkB,YAClI,MACA,OAEA,MAA8B,kBAAgB,YAc9C,KAXA,EADA,EACA,aASA,wBAGA,OAEA,aAAoB,WAAkB,EACtC,OACA,KACA,OACA,UACA,OACA,CACA,CACA,CAAK,CACL,CAIW,sBACX,EAuBA,EAtBA,iBAAiH,IAAkB,gBAArD,KAAqD,CACnI,OAEA,OAEA,KAIA,QAaA,EAbA,kBAcW,OAAgB,CAAC,OAAgB,UAd5C,CACA,CAIA,oBACA,CAAQ,MAAa,UACrB,EAEA,OACA,+BCxDA,MAAY,EAAQ,IAA0B,EAC9C,WADmB,EACnB,CACA,OACA,GACA,IACA,aACA,YACA,2FAEA,CAAK,CACL,IACA,IACA,IACA,IACA,IACA,IACA,GACA,CAAG,CACH,IACA,gBACA,EACA,sEACA,YACA,2KAEA,sBACA,cACA,mBACA,iCACA,CACA,8DAAoE,CACpE,EACA,YAAkB,eAClB,oBACA,KAGA,gBAFA,kBAGA,sBACA,EACA,GACA,OACA,KACA,WACA,EACA,aAAmB,aACnB,4BACA,EACA,SAAe,eACf,iDACA,WACA,qBACA,EACA,gDACA,EACA,iCACA,gBACA,MACA,aACA,MACA,EACA,kDACA,CACA,cACA,YACA,eACA,GAEA,cACA,SACA,cACA,YACA,gBACA,6CACA,CAAS,CACT,CACA,EACA,eAAqB,eACrB,sBACA,gCACA,iCACA,QACA,KACA,eAEA,SACA,cACA,UACA,gDACA,6CACA,CAAS,CACT,OACM,iBACN,EACA,SAAe,eACf,GACA,oBACA,oBACA,UACA,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","sources":["webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/client-segment.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js?835d","webpack://_N_E/../../node_modules/next/dist/esm/server/pipe-readable.js?cc66","webpack://_N_E/../../../../src/client/components/builtin/unauthorized.tsx","webpack://_N_E/../../../../src/server/lib/cache-handlers/default.external.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/use-cache/handlers.js","webpack://_N_E/../../node_modules/next/dist/compiled/string-hash/index.js","webpack://_N_E/../../../src/client/components/forbidden.ts","webpack://_N_E/../../../src/client/components/unauthorized.ts","webpack://_N_E/../../../src/client/components/unstable-rethrow.ts","webpack://_N_E/../../../src/client/components/navigation.react-server.ts","webpack://_N_E/../../../src/client/components/navigation.ts","webpack://_N_E/../../../src/client/components/redirect-boundary.tsx","webpack://_N_E/../../node_modules/next/dist/esm/lib/framework/boundary-constants.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/constants.js?4166","webpack://_N_E/../../../src/client/components/redirect-status-code.ts","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/render-from-template-context.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../../src/client/components/nav-failure-handler.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/jsx-runtime.js","webpack://_N_E/","webpack://_N_E/../../node_modules/next/dist/compiled/cookie/index.js?2ca2","webpack://_N_E/../../src/client/normalize-trailing-slash.ts","webpack://_N_E/../../src/client/add-base-path.ts","webpack://_N_E/../../../src/client/components/links.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-unit-async-storage-instance.js","webpack://_N_E/../../../src/client/components/app-router-headers.ts","webpack://_N_E/../../../src/shared/lib/invariant-error.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-unit-async-storage.external.js","webpack://_N_E/?15a7","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js?b2ea","webpack://_N_E/../../node_modules/next/dist/experimental/testmode/server-edge.js","webpack://_N_E/../../../src/lib/framework/boundary-components.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/request-meta.js?8d62","webpack://_N_E/?812e","webpack://_N_E/../../src/client/app-call-server.ts","webpack://_N_E/../../node_modules/next/dist/compiled/superstruct/index.cjs","webpack://_N_E/../../../../src/client/components/router-reducer/apply-flight-data.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/app-router.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/jsx-runtime.react-server.js","webpack://_N_E/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js?9e58","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/tracer.js?aa44","webpack://_N_E/../../node_modules/next/dist/compiled/cookie/index.js","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/esm/build/webpack/alias/react-dom-server.js","webpack://_N_E/../../node_modules/next/dist/experimental/testmode/context.js","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/client-page.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/@swc/helpers/esm/_class_private_field_loose_base.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_class_private_field_loose_key.js","webpack://_N_E/../../../src/client/components/promise-queue.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/prefetch-reducer.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/metadata-context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/flight-render-result.js","webpack://_N_E/../../src/lib/format-server-error.ts","webpack://_N_E/../../../src/shared/lib/is-plain-object.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/is-error.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/error-telemetry-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/react-large-shell-error.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-error-handler.js?5fc7","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-short-dynamic-param-type.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-segment-param.js","webpack://_N_E/../../node_modules/next/dist/esm/server/htmlescape.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-script-nonce-from-header.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-flight-router-state-from-loader-tree.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/server-ipc/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/csrf-protection.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/picocolors.js?e22a","webpack://_N_E/../../node_modules/next/dist/esm/build/output/log.js?2e60","webpack://_N_E/../../node_modules/next/dist/esm/server/base-http/helpers.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-handler.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/server-inserted-html.js","webpack://_N_E/../../../src/shared/lib/encode-uri-path.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/required-scripts.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/make-get-server-inserted-html.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-css-inlined-link-tags.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-preloadable-fonts.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/has-loading-component-in-tree.js","webpack://_N_E/../../../src/shared/lib/server-reference-info.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/client-and-server-references.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/app-dir-module.js?6468","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/interop-default.js?c1f2","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/parse-loader-tree.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-asset-query-string.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/render-css-resource.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-component-styles-and-scripts.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/get-layer-assets.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/clone-response.js?1665","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/dedupe-fetch.js?4df5","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/patch-fetch.js?6c42","webpack://_N_E/../../../../src/client/components/builtin/default.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/segment-explorer-path.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-component-tree.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/walk-tree-with-flight-router-state.js","webpack://_N_E/../../node_modules/next/dist/esm/server/resume-data-cache/cache-store.js","webpack://_N_E/../../../src/server/resume-data-cache/resume-data-cache.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/postponed-state.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/use-flight-response.js","webpack://_N_E/../../../../src/client/components/router-reducer/create-initial-router-state.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/instrumentation/utils.js?ee5a","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/app-render-prerender-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/prospective-render-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/app-render-render-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/cache-signal.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/metadata-insertion/create-server-inserted-metadata.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/module-loading/track-module-loading.instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/module-loading/track-module-loading.external.js","webpack://_N_E/../../../src/shared/lib/promise-with-resolvers.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/app-render.js","webpack://_N_E/../../../src/shared/lib/constants.ts","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-data-path.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/is-metadata-route.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/router-utils/router-server-context.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/escape-path-delimiters.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/router-utils/decode-path-params.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/route-module.js","webpack://_N_E/../../../src/shared/lib/router-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/amp-context.shared-runtime.ts","webpack://_N_E/../../../src/shared/lib/image-config.ts","webpack://_N_E/../../../src/shared/lib/image-config-context.shared-runtime.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-page/vendored/contexts/entrypoints.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-page/helpers/prerender-manifest-matcher.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-page/module.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/index.js","webpack://_N_E/../../node_modules/next/dist/compiled/react/react.react-server.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/app-paths.ts","webpack://_N_E/../../../src/shared/lib/segment.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js?2ab4","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js?7c8e","webpack://_N_E/../../../../src/shared/lib/page-path/normalize-page-path.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-has-prefix.ts","webpack://_N_E/../../../../src/client/components/router-reducer/compute-changed-path.ts","webpack://_N_E/../../../../src/client/components/builtin/not-found.tsx","webpack://_N_E/../../node_modules/next/dist/compiled/@opentelemetry/api/index.js?940f","webpack://_N_E/../../../../src/shared/lib/utils/reflect-utils.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/client-component-renderer-logger.js?46b6","webpack://_N_E/./app/globals.css","webpack://_N_E/../../../../src/client/components/router-reducer/apply-router-state-patch-to-tree.ts","webpack://_N_E/../../../../src/client/components/router-reducer/ppr-navigations.ts","webpack://_N_E/../../../../src/client/components/router-reducer/aliased-prefetch-navigations.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/navigate-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/server-patch-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/restore-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/handle-segment-mismatch.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/refresh-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/hmr-refresh-reducer.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/server-action-reducer.ts","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer.ts","webpack://_N_E/../../../src/client/components/app-router-instance.ts","webpack://_N_E/../../node_modules/next/dist/compiled/path-to-regexp/index.js?1d21","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-regex.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fill-cache-with-new-subtree-data.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/multi-file-writer.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/memory-cache.external.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/file-system-cache.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/to-route.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/shared-cache-controls.external.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/incremental-cache/index.js","webpack://_N_E/../../../src/server/app-render/dynamic-rendering.ts","webpack://_N_E/../../../src/client/components/match-segments.ts","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/metadata/async-metadata.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/lru-cache.js?4ea7","webpack://_N_E/../../node_modules/next/dist/esm/server/after/after-context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/work-store.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.js","webpack://_N_E/../../../src/client/components/segment-cache.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/error-boundary.tsx","webpack://_N_E/../../../../src/client/components/router-reducer/router-reducer-types.ts","webpack://_N_E/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/framework/boundary-constants.js?17e5","webpack://_N_E/../../../src/client/components/render-from-template-context.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js?79b9","webpack://_N_E/../../node_modules/next/dist/esm/server/web/error.js?1709","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-trailing-slash.ts","webpack://_N_E/../../../src/client/components/use-action-queue.ts","webpack://_N_E/../../../src/client/components/unrecognized-action-error.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/server.edge.js","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/compiled/react/cjs/react.react-server.production.js","webpack://_N_E/../../node_modules/next/dist/esm/server/dynamic-rendering-utils.js?3e6c","webpack://_N_E/../../../src/client/components/not-found.ts","webpack://_N_E/../../node_modules/next/dist/compiled/p-queue/index.js","webpack://_N_E/?afe7","webpack://_N_E/../../../../../src/shared/lib/router/utils/path-match.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-url.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/prepare-destination.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/decode-query-path-parameter.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/server-utils.js","webpack://_N_E/../../../src/client/components/error-boundary.tsx","webpack://_N_E/../../node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.react-server.production.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/work-async-storage.external.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/params.js?bca1","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/lib/framework/boundary-components.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../../../../src/shared/lib/router/utils/remove-path-prefix.ts","webpack://_N_E/../../../src/client/components/unresolved-thenable.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/async-local-storage.js?1d3a","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/react-dom.react-server.js","webpack://_N_E/../../../../src/client/components/router-reducer/create-href-from-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/relativize-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/web-on-close.js","webpack://_N_E/../../node_modules/next/dist/esm/server/after/builtin-request-context.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-kind.js","webpack://_N_E/../../node_modules/next/dist/esm/server/instrumentation/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/constants.js","webpack://_N_E/../../../src/shared/lib/is-thenable.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/trace/tracer.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request-meta.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/interop-default.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/strip-flight-headers.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/constants.js","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js","webpack://_N_E/../../node_modules/next/dist/esm/server/base-http/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/base-http/node.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/experimental/ppr.js","webpack://_N_E/../../../src/shared/lib/utils.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/route-pattern-normalizer.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-match-utils.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/interception-routes.ts","webpack://_N_E/../../../src/shared/lib/escape-regexp.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-dynamic-param.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/request/fallback-params.js","webpack://_N_E/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://_N_E/../../../src/server/app-render/encryption-utils.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/html-bots.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-bot.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/streaming-metadata.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-path.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/server-action-request-meta.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/types.js","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/encoded-tags.js","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/../../../../src/shared/lib/i18n/detect-domain-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-prefix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-path-suffix.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/add-locale.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/format-next-pathname-info.ts","webpack://_N_E/../../../src/shared/lib/get-hostname.ts","webpack://_N_E/../../../../src/shared/lib/i18n/normalize-locale-path.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/get-next-pathname-info.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/next-request.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/detached-promise.js","webpack://_N_E/../../node_modules/next/dist/esm/server/client-component-renderer-logger.js","webpack://_N_E/../../node_modules/next/dist/esm/server/pipe-readable.js","webpack://_N_E/../../node_modules/next/dist/esm/server/render-result.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/index.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/fallback.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/etag.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/cache-control.js","webpack://_N_E/../../node_modules/next/dist/esm/server/send-payload.js","webpack://_N_E/../../../src/shared/lib/no-fallback-error.external.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/create-deduped-by-callsite-server-error-logger.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/async-local-storage.js?e0cd","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/after-task-async-storage.external.js","webpack://_N_E/../../../src/server/request/utils.ts","webpack://_N_E/../../../src/server/request/search-params.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/request/params.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/non-nullable.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/meta.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/constants.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/utils.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/basic.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/alternate.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/opengraph.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/generate/icons.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/default-metadata.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolvers/resolve-url.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolvers/resolve-title.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/url.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/picocolors.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/lru-cache.js","webpack://_N_E/../../node_modules/next/dist/esm/build/output/log.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolvers/resolve-opengraph.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/app-dir-module.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/interop-default.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolvers/resolve-basics.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolvers/resolve-icons.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/resolve-metadata.js","webpack://_N_E/../../node_modules/next/dist/esm/server/request/pathname.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/metadata/metadata.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/rsc/preloads.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/rsc/postpone.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/rsc/taint.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/scheduler.js","webpack://_N_E/../../../../src/shared/lib/segment-cache/segment-value-encoding.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/create-error-handler.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/collect-segment-data.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/clone-response.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/dedupe-fetch.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/patch-fetch.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/entry-base.js","webpack://_N_E/./app/page.tsx?f131","webpack://_N_E/../../node_modules/next/dist/esm/server/base-http/index.js?9a46","webpack://_N_E/../../node_modules/next/dist/esm/server/base-http/web.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/interop-default.js?05b3","webpack://_N_E/?14bc","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/encoded-tags.js?0e70","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/uint8array-helpers.js","webpack://_N_E/../../../../src/shared/lib/errors/constants.ts","webpack://_N_E/../../../../src/shared/lib/segment-cache/output-export-prefetch-encoding.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/stream-utils/node-web-streams-helper.js?a17b","webpack://_N_E/../../node_modules/next/dist/esm/server/revalidation-utils.js","webpack://_N_E/../../../../src/lib/metadata/generate/icon-mark.tsx","webpack://_N_E/../../node_modules/next/dist/experimental/testmode/fetch.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/batcher.js","webpack://_N_E/../../node_modules/next/dist/esm/server/route-kind.js?626d","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/utils.js?4e32","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/index.js?9787","webpack://_N_E/../../node_modules/next/dist/esm/server/render-result.js?7c57","webpack://_N_E/../../node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/../../node_modules/next/dist/compiled/@opentelemetry/api/index.js","webpack://_N_E/../../../../src/client/components/router-reducer/fill-lazy-items-till-leaf-with-head.ts","webpack://_N_E/../../src/client/app-find-source-map-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/constants.js?702c","webpack://_N_E/../../../src/shared/lib/head-manager-context.shared-runtime.ts","webpack://_N_E/?e616","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js?05fb","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js","webpack://_N_E/../../../src/client/components/client-segment.tsx","webpack://_N_E/../../node_modules/next/dist/compiled/react/cjs/react.production.js","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/../../../../src/server/lib/incremental-cache/tags-manifest.external.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/cjs/react-dom.production.js","webpack://_N_E/../../node_modules/next/dist/esm/server/dynamic-rendering-utils.js","webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/../../node_modules/next/dist/compiled/path-browserify/index.js?771e","webpack://_N_E/../../../../src/client/components/router-reducer/prefetch-cache-utils.ts","webpack://_N_E/../../../src/shared/lib/app-router-context.shared-runtime.ts","webpack://_N_E/../../src/client/app-build-id.ts","webpack://_N_E/../../src/client/route-params.ts","webpack://_N_E/../../../../src/client/components/router-reducer/fetch-server-response.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.js","webpack://_N_E/../../../src/client/components/is-next-router-error.ts","webpack://_N_E/../../node_modules/next/dist/compiled/react/index.js","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/http-access-fallback.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-utils.js?9862","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/cjs/react-dom.react-server.production.js","webpack://_N_E/../../../src/client/components/navigation-untracked.ts","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/static.edge.js","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/server-action-request-meta.js?f3d1","webpack://_N_E/./app/layout.tsx","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/client.edge.js","webpack://_N_E/../../../../src/client/components/router-reducer/refetch-inactive-parallel-segments.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/globals.js","webpack://_N_E/../../node_modules/next/dist/compiled/react-server-dom-webpack/client.edge.js?a6b7","webpack://_N_E/../../src/client/flight-data-helpers.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/web/next-url.js?d473","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/action-async-storage.external.js","webpack://_N_E/../../node_modules/next/dist/esm/lib/generate-interception-routes-rewrites.js","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/../../node_modules/next/dist/esm/api/navigation.react-server.js","webpack://_N_E/./app/page.tsx","webpack://_N_E/../../../src/client/components/redirect-error.ts","webpack://_N_E/?3e75","webpack://_N_E/../../../../../src/shared/lib/router/utils/disable-smooth-scroll.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/has-interception-route-in-current-tree.ts","webpack://_N_E/../../../src/client/components/bfcache.ts","webpack://_N_E/../../../src/client/components/layout-router.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js","webpack://_N_E/../../node_modules/next/dist/esm/server/async-storage/request-store.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js?6e98","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/parse-and-validate-flight-router-state.js","webpack://_N_E/../../node_modules/next/dist/compiled/fresh/index.js","webpack://_N_E/../../../../src/client/components/metadata/async-metadata.tsx","webpack://_N_E/../../../src/shared/lib/server-inserted-html.shared-runtime.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/route-modules/app-page/module.compiled.js","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/builtin/global-error.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../../../src/shared/lib/isomorphic/path.js","webpack://_N_E/../../../../src/client/components/builtin/global-error.tsx","webpack://_N_E/../../node_modules/next/dist/esm/lib/url.js?b816","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/index.js?ce42","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/compiled/string-hash/index.js?db83","webpack://_N_E/../../../src/client/components/bailout-to-client-rendering.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/async-local-storage.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/utils.js?9573","webpack://_N_E/../../../../src/client/components/styles/access-error-styles.ts","webpack://_N_E/../../../../src/client/components/http-access-fallback/error-fallback.tsx","webpack://_N_E/../../node_modules/next/dist/compiled/react-dom/static.edge.js","webpack://_N_E/../../../../src/client/components/router-reducer/create-router-cache-key.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/parse-relative-url.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/router-utils/is-postpone.js?6150","webpack://_N_E/../../../src/client/components/unstable-rethrow.server.ts","webpack://_N_E/../../node_modules/next/dist/compiled/path-to-regexp/index.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/dynamic-access-async-storage-instance.js","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/dynamic-access-async-storage.external.js","webpack://_N_E/../../../../../src/shared/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../node_modules/next/dist/esm/lib/scheduler.js?b946","webpack://_N_E/../../../src/client/components/handle-isr-error.tsx","webpack://_N_E/../../node_modules/next/dist/esm/server/web/spec-extension/request.js?b14b","webpack://_N_E/../../node_modules/next/dist/esm/lib/detached-promise.js?6f99","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/implicit-tags.js","webpack://_N_E/../../../src/client/components/app-router-announcer.tsx","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/find-head-in-cache.ts","webpack://_N_E/../../src/client/remove-base-path.ts","webpack://_N_E/../../src/client/has-base-path.ts","webpack://_N_E/../../../../src/client/components/errors/graceful-degrade-boundary.tsx","webpack://_N_E/../../../../src/client/components/errors/root-error-boundary.tsx","webpack://_N_E/../../../src/client/components/app-router.tsx","webpack://_N_E/../../node_modules/next/dist/esm/lib/route-pattern-normalizer.js?b22f","webpack://_N_E/../../node_modules/next/dist/esm/server/lib/lazy-result.js","webpack://_N_E/../../node_modules/next/dist/esm/server/web/get-edge-preview-props.js","webpack://_N_E/../../../../src/client/components/builtin/forbidden.tsx","webpack://_N_E/../../../src/shared/lib/hash.ts","webpack://_N_E/../../../../../src/shared/lib/router/utils/cache-busting-search-param.ts","webpack://_N_E/../../../../src/client/components/router-reducer/set-cache-busting-search-param.ts","webpack://_N_E/../../node_modules/next/dist/esm/server/api-utils/get-cookie-parser.js?76d5","webpack://_N_E/../../node_modules/next/dist/esm/server/app-render/types.js","webpack://_N_E/../../node_modules/next/dist/compiled/path-browserify/index.js","webpack://_N_E/../../../src/client/components/client-page.tsx","webpack://_N_E/../../../../../src/shared/lib/router/utils/querystring.ts","webpack://_N_E/../../../src/shared/lib/hooks-client-context.shared-runtime.ts","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js/__nextjs-internal-proxy.mjs","webpack://_N_E/_N_E/../../node_modules/next/dist/esm/client/components/layout-router.js/__nextjs-internal-proxy.mjs","webpack://_N_E/../../node_modules/next/dist/esm/server/response-cache/types.js?99dd","webpack://_N_E/../../../src/shared/lib/modern-browserslist-target.js"],"sourcesContent":["// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const ClientSegmentRoot = registerClientReference(\nfunction() { throw new Error(\"Attempted to call ClientSegmentRoot() from the server but ClientSegmentRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-segment.js\",\n\"ClientSegmentRoot\",\n);","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unsupported NextRequest type'), \"__NEXT_ERROR_CODE\", {\n                value: \"E345\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw Object.defineProperty(new Error('failed to write chunk to response', {\n                    cause: err\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E321\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw Object.defineProperty(new Error('failed to pipe response', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E180\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { HTTPAccessErrorFallback } from '../http-access-fallback/error-fallback'\n\nexport default function Unauthorized() {\n  return (\n    <HTTPAccessErrorFallback\n      status={401}\n      message=\"You're not authorized to access this page.\"\n    />\n  )\n}\n","/**\n * This is the default \"use cache\" handler it defaults to an in-memory store.\n * In-memory caches are fragile and should not use stale-while-revalidate\n * semantics on the caches because it's not worth warming up an entry that's\n * likely going to get evicted before we get to use it anyway. However, we also\n * don't want to reuse a stale entry for too long so stale entries should be\n * considered expired/missing in such cache handlers.\n */\n\nimport { LRUCache } from '../lru-cache'\nimport type { CacheEntry, CacheHandlerV2 } from './types'\nimport {\n  isStale,\n  tagsManifest,\n} from '../incremental-cache/tags-manifest.external'\n\ntype PrivateCacheEntry = {\n  entry: CacheEntry\n\n  // For the default cache we store errored cache\n  // entries and allow them to be used up to 3 times\n  // after that we want to dispose it and try for fresh\n\n  // If an entry is errored we return no entry\n  // three times so that we retry hitting origin (MISS)\n  // and then if it still fails to set after the third we\n  // return the errored content and use expiration of\n  // Math.min(30, entry.expiration)\n  isErrored: boolean\n  errorRetryCount: number\n\n  // compute size on set since we need to read size\n  // of the ReadableStream for LRU evicting\n  size: number\n}\n\n// LRU cache default to max 50 MB but in future track\nconst memoryCache = new LRUCache<PrivateCacheEntry>(\n  50 * 1024 * 1024,\n  (entry) => entry.size\n)\nconst pendingSets = new Map<string, Promise<void>>()\n\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE\n  ? console.debug.bind(console, 'DefaultCacheHandler:')\n  : undefined\n\nconst DefaultCacheHandler: CacheHandlerV2 = {\n  async get(cacheKey) {\n    const pendingPromise = pendingSets.get(cacheKey)\n\n    if (pendingPromise) {\n      debug?.('get', cacheKey, 'pending')\n      await pendingPromise\n    }\n\n    const privateEntry = memoryCache.get(cacheKey)\n\n    if (!privateEntry) {\n      debug?.('get', cacheKey, 'not found')\n      return undefined\n    }\n\n    const entry = privateEntry.entry\n    if (\n      performance.timeOrigin + performance.now() >\n      entry.timestamp + entry.revalidate * 1000\n    ) {\n      // In-memory caches should expire after revalidate time because it is\n      // unlikely that a new entry will be able to be used before it is dropped\n      // from the cache.\n      debug?.('get', cacheKey, 'expired')\n\n      return undefined\n    }\n\n    if (isStale(entry.tags, entry.timestamp)) {\n      debug?.('get', cacheKey, 'had stale tag')\n\n      return undefined\n    }\n    const [returnStream, newSaved] = entry.value.tee()\n    entry.value = newSaved\n\n    debug?.('get', cacheKey, 'found', {\n      tags: entry.tags,\n      timestamp: entry.timestamp,\n      revalidate: entry.revalidate,\n      expire: entry.expire,\n    })\n\n    return {\n      ...entry,\n      value: returnStream,\n    }\n  },\n\n  async set(cacheKey, pendingEntry) {\n    debug?.('set', cacheKey, 'start')\n\n    let resolvePending: () => void = () => {}\n    const pendingPromise = new Promise<void>((resolve) => {\n      resolvePending = resolve\n    })\n    pendingSets.set(cacheKey, pendingPromise)\n\n    const entry = await pendingEntry\n\n    let size = 0\n\n    try {\n      const [value, clonedValue] = entry.value.tee()\n      entry.value = value\n      const reader = clonedValue.getReader()\n\n      for (let chunk; !(chunk = await reader.read()).done; ) {\n        size += Buffer.from(chunk.value).byteLength\n      }\n\n      memoryCache.set(cacheKey, {\n        entry,\n        isErrored: false,\n        errorRetryCount: 0,\n        size,\n      })\n\n      debug?.('set', cacheKey, 'done')\n    } catch (err) {\n      // TODO: store partial buffer with error after we retry 3 times\n      debug?.('set', cacheKey, 'failed', err)\n    } finally {\n      resolvePending()\n      pendingSets.delete(cacheKey)\n    }\n  },\n\n  async refreshTags() {\n    // Nothing to do for an in-memory cache handler.\n  },\n\n  async getExpiration(...tags) {\n    const expiration = Math.max(\n      ...tags.map((tag) => tagsManifest.get(tag) ?? 0)\n    )\n\n    debug?.('getExpiration', { tags, expiration })\n\n    return expiration\n  },\n\n  async expireTags(...tags) {\n    const timestamp = Math.round(performance.timeOrigin + performance.now())\n    debug?.('expireTags', { tags, timestamp })\n\n    for (const tag of tags) {\n      // TODO: update file-system-cache?\n      tagsManifest.set(tag, timestamp)\n    }\n  },\n}\n\nexport default DefaultCacheHandler\n","import DefaultCacheHandler from '../lib/cache-handlers/default.external';\nconst debug = process.env.NEXT_PRIVATE_DEBUG_CACHE ? (message, ...args)=>{\n    console.log(`use-cache: ${message}`, ...args);\n} : undefined;\nconst handlersSymbol = Symbol.for('@next/cache-handlers');\nconst handlersMapSymbol = Symbol.for('@next/cache-handlers-map');\nconst handlersSetSymbol = Symbol.for('@next/cache-handlers-set');\n/**\n * The reference to the cache handlers. We store the cache handlers on the\n * global object so that we can access the same instance across different\n * boundaries (such as different copies of the same module).\n */ const reference = globalThis;\n/**\n * Initialize the cache handlers.\n * @returns `true` if the cache handlers were initialized, `false` if they were already initialized.\n */ export function initializeCacheHandlers() {\n    // If the cache handlers have already been initialized, don't do it again.\n    if (reference[handlersMapSymbol]) {\n        debug == null ? void 0 : debug('cache handlers already initialized');\n        return false;\n    }\n    debug == null ? void 0 : debug('initializing cache handlers');\n    reference[handlersMapSymbol] = new Map();\n    // Initialize the cache from the symbol contents first.\n    if (reference[handlersSymbol]) {\n        let fallback;\n        if (reference[handlersSymbol].DefaultCache) {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from symbol');\n            fallback = reference[handlersSymbol].DefaultCache;\n        } else {\n            debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n            fallback = DefaultCacheHandler;\n        }\n        reference[handlersMapSymbol].set('default', fallback);\n        if (reference[handlersSymbol].RemoteCache) {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from symbol');\n            reference[handlersMapSymbol].set('remote', reference[handlersSymbol].RemoteCache);\n        } else {\n            debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n            reference[handlersMapSymbol].set('remote', fallback);\n        }\n    } else {\n        debug == null ? void 0 : debug('setting \"default\" cache handler from default');\n        reference[handlersMapSymbol].set('default', DefaultCacheHandler);\n        debug == null ? void 0 : debug('setting \"remote\" cache handler from default');\n        reference[handlersMapSymbol].set('remote', DefaultCacheHandler);\n    }\n    // Create a set of the cache handlers.\n    reference[handlersSetSymbol] = new Set(reference[handlersMapSymbol].values());\n    return true;\n}\n/**\n * Get a cache handler by kind.\n * @param kind - The kind of cache handler to get.\n * @returns The cache handler, or `undefined` if it does not exist.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandler(kind) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return reference[handlersMapSymbol].get(kind);\n}\n/**\n * Get a set iterator over the cache handlers.\n * @returns An iterator over the cache handlers, or `undefined` if they are not\n * initialized.\n */ export function getCacheHandlers() {\n    if (!reference[handlersSetSymbol]) {\n        return undefined;\n    }\n    return reference[handlersSetSymbol].values();\n}\n/**\n * Get a map iterator over the cache handlers (keyed by kind).\n * @returns An iterator over the cache handler entries, or `undefined` if they\n * are not initialized.\n * @throws If the cache handlers are not initialized.\n */ export function getCacheHandlerEntries() {\n    if (!reference[handlersMapSymbol]) {\n        return undefined;\n    }\n    return reference[handlersMapSymbol].entries();\n}\n/**\n * Set a cache handler by kind.\n * @param kind - The kind of cache handler to set.\n * @param cacheHandler - The cache handler to set.\n */ export function setCacheHandler(kind, cacheHandler) {\n    // This should never be called before initializeCacheHandlers.\n    if (!reference[handlersMapSymbol] || !reference[handlersSetSymbol]) {\n        throw Object.defineProperty(new Error('Cache handlers not initialized'), \"__NEXT_ERROR_CODE\", {\n            value: \"E649\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    debug == null ? void 0 : debug('setting cache handler for \"%s\"', kind);\n    reference[handlersMapSymbol].set(kind, cacheHandler);\n    reference[handlersSetSymbol].add(cacheHandler);\n}\n\n//# sourceMappingURL=handlers.js.map","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport function unstable_isUnrecognizedActionError(): boolean {\n  throw new Error(\n    '`unstable_isUnrecognizedActionError` can only be used on the client.'\n  )\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\nexport { unstable_isUnrecognizedActionError } from './unrecognized-action-error'\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","'use client'\nimport React, { useEffect } from 'react'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useRouter } from './navigation'\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect'\nimport { RedirectType, isRedirectError } from './redirect-error'\n\ninterface RedirectBoundaryProps {\n  router: AppRouterInstance\n  children: React.ReactNode\n}\n\nfunction HandleRedirect({\n  redirect,\n  reset,\n  redirectType,\n}: {\n  redirect: string\n  redirectType: RedirectType\n  reset: () => void\n}) {\n  const router = useRouter()\n\n  useEffect(() => {\n    React.startTransition(() => {\n      if (redirectType === RedirectType.push) {\n        router.push(redirect, {})\n      } else {\n        router.replace(redirect, {})\n      }\n      reset()\n    })\n  }, [redirect, redirectType, reset, router])\n\n  return null\n}\n\nexport class RedirectErrorBoundary extends React.Component<\n  RedirectBoundaryProps,\n  { redirect: string | null; redirectType: RedirectType | null }\n> {\n  constructor(props: RedirectBoundaryProps) {\n    super(props)\n    this.state = { redirect: null, redirectType: null }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isRedirectError(error)) {\n      const url = getURLFromRedirectError(error)\n      const redirectType = getRedirectTypeFromError(error)\n      return { redirect: url, redirectType }\n    }\n    // Re-throw if error is not for redirect\n    throw error\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    const { redirect, redirectType } = this.state\n    if (redirect !== null && redirectType !== null) {\n      return (\n        <HandleRedirect\n          redirect={redirect}\n          redirectType={redirectType}\n          reset={() => this.setState({ redirect: null })}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function RedirectBoundary({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  return (\n    <RedirectErrorBoundary router={router}>{children}</RedirectErrorBoundary>\n  )\n}\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__';\n\n//# sourceMappingURL=boundary-constants.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport default registerClientReference(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/render-from-template-context.js\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/render-from-template-context.js\",\n\"default\",\n);\n","import { useEffect } from 'react'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\n\nexport function handleHardNavError(error: unknown): boolean {\n  if (\n    error &&\n    typeof window !== 'undefined' &&\n    window.next.__pendingUrl &&\n    createHrefFromUrl(new URL(window.location.href)) !==\n      createHrefFromUrl(window.next.__pendingUrl)\n  ) {\n    console.error(\n      `Error occurred during navigation, falling back to hard navigation`,\n      error\n    )\n    window.location.href = window.next.__pendingUrl.toString()\n    return true\n  }\n  return false\n}\n\nexport function useNavFailureHandler() {\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    // this if is only for DCE of the feature flag not conditional\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const uncaughtExceptionHandler = (\n        evt: ErrorEvent | PromiseRejectionEvent\n      ) => {\n        const error = 'reason' in evt ? evt.reason : evt.error\n        // if we have an unhandled exception/rejection during\n        // a navigation we fall back to a hard navigation to\n        // attempt recovering to a good state\n        handleHardNavError(error)\n      }\n      window.addEventListener('unhandledrejection', uncaughtExceptionHandler)\n      window.addEventListener('error', uncaughtExceptionHandler)\n      return () => {\n        window.removeEventListener('error', uncaughtExceptionHandler)\n        window.removeEventListener(\n          'unhandledrejection',\n          uncaughtExceptionHandler\n        )\n      }\n    }, [])\n  }\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n",null,"(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n","import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { getCurrentAppRouterState } from './app-router-instance'\nimport { createPrefetchURL } from './app-router'\nimport {\n  FetchStrategy,\n  isPrefetchTaskDirty,\n  type PrefetchTaskFetchStrategy,\n} from './segment-cache'\nimport { createCacheKey } from './segment-cache'\nimport {\n  type PrefetchTask,\n  PrefetchPriority,\n  schedulePrefetchTask as scheduleSegmentPrefetchTask,\n  cancelPrefetchTask,\n  reschedulePrefetchTask,\n} from './segment-cache'\nimport { startTransition } from 'react'\nimport { PrefetchKind } from './router-reducer/router-reducer-types'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\ntype LinkElement = HTMLAnchorElement | SVGAElement\n\ntype Element = LinkElement | HTMLFormElement\n\n// Properties that are shared between Link and Form instances. We use the same\n// shape for both to prevent a polymorphic de-opt in the VM.\ntype LinkOrFormInstanceShared = {\n  router: AppRouterInstance\n  fetchStrategy: PrefetchTaskFetchStrategy\n\n  isVisible: boolean\n\n  // The most recently initiated prefetch task. It may or may not have\n  // already completed. The same prefetch task object can be reused across\n  // multiple prefetches of the same link.\n  prefetchTask: PrefetchTask | null\n}\n\nexport type FormInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: null\n}\n\ntype PrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: string\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype NonPrefetchableLinkInstance = LinkOrFormInstanceShared & {\n  prefetchHref: null\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n}\n\ntype PrefetchableInstance = PrefetchableLinkInstance | FormInstance\n\nexport type LinkInstance =\n  | PrefetchableLinkInstance\n  | NonPrefetchableLinkInstance\n\n// Tracks the most recently navigated link instance. When null, indicates\n// the current navigation was not initiated by a link click.\nlet linkForMostRecentNavigation: LinkInstance | null = null\n\n// Status object indicating link is pending\nexport const PENDING_LINK_STATUS = { pending: true }\n\n// Status object indicating link is idle\nexport const IDLE_LINK_STATUS = { pending: false }\n\n// Updates the loading state when navigating between links\n// - Resets the previous link's loading state\n// - Sets the new link's loading state\n// - Updates tracking of current navigation\nexport function setLinkForCurrentNavigation(link: LinkInstance | null) {\n  startTransition(() => {\n    linkForMostRecentNavigation?.setOptimisticLinkStatus(IDLE_LINK_STATUS)\n    link?.setOptimisticLinkStatus(PENDING_LINK_STATUS)\n    linkForMostRecentNavigation = link\n  })\n}\n\n// Unmounts the current link instance from navigation tracking\nexport function unmountLinkForCurrentNavigation(link: LinkInstance) {\n  if (linkForMostRecentNavigation === link) {\n    linkForMostRecentNavigation = null\n  }\n}\n\n// Use a WeakMap to associate a Link instance with its DOM element. This is\n// used by the IntersectionObserver to track the link's visibility.\nconst prefetchable:\n  | WeakMap<Element, PrefetchableInstance>\n  | Map<Element, PrefetchableInstance> =\n  typeof WeakMap === 'function' ? new WeakMap() : new Map()\n\n// A Set of the currently visible links. We re-prefetch visible links after a\n// cache invalidation, or when the current URL changes. It's a separate data\n// structure from the WeakMap above because only the visible links need to\n// be enumerated.\nconst prefetchableAndVisible: Set<PrefetchableInstance> = new Set()\n\n// A single IntersectionObserver instance shared by all <Link> components.\nconst observer: IntersectionObserver | null =\n  typeof IntersectionObserver === 'function'\n    ? new IntersectionObserver(handleIntersect, {\n        rootMargin: '200px',\n      })\n    : null\n\nfunction observeVisibility(element: Element, instance: PrefetchableInstance) {\n  const existingInstance = prefetchable.get(element)\n  if (existingInstance !== undefined) {\n    // This shouldn't happen because each <Link> component should have its own\n    // anchor tag instance, but it's defensive coding to avoid a memory leak in\n    // case there's a logical error somewhere else.\n    unmountPrefetchableInstance(element)\n  }\n  // Only track prefetchable links that have a valid prefetch URL\n  prefetchable.set(element, instance)\n  if (observer !== null) {\n    observer.observe(element)\n  }\n}\n\nfunction coercePrefetchableUrl(href: string): URL | null {\n  try {\n    return createPrefetchURL(href)\n  } catch {\n    // createPrefetchURL sometimes throws an error if an invalid URL is\n    // provided, though I'm not sure if it's actually necessary.\n    // TODO: Consider removing the throw from the inner function, or change it\n    // to reportError. Or maybe the error isn't even necessary for automatic\n    // prefetches, just navigations.\n    const reportErrorFn =\n      typeof reportError === 'function' ? reportError : console.error\n    reportErrorFn(\n      `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n    )\n    return null\n  }\n}\n\nexport function mountLinkInstance(\n  element: LinkElement,\n  href: string,\n  router: AppRouterInstance,\n  fetchStrategy: PrefetchTaskFetchStrategy,\n  prefetchEnabled: boolean,\n  setOptimisticLinkStatus: (status: { pending: boolean }) => void\n): LinkInstance {\n  if (prefetchEnabled) {\n    const prefetchURL = coercePrefetchableUrl(href)\n    if (prefetchURL !== null) {\n      const instance: PrefetchableLinkInstance = {\n        router,\n        fetchStrategy,\n        isVisible: false,\n        prefetchTask: null,\n        prefetchHref: prefetchURL.href,\n        setOptimisticLinkStatus,\n      }\n      // We only observe the link's visibility if it's prefetchable. For\n      // example, this excludes links to external URLs.\n      observeVisibility(element, instance)\n      return instance\n    }\n  }\n  // If the link is not prefetchable, we still create an instance so we can\n  // track its optimistic state (i.e. useLinkStatus).\n  const instance: NonPrefetchableLinkInstance = {\n    router,\n    fetchStrategy,\n    isVisible: false,\n    prefetchTask: null,\n    prefetchHref: null,\n    setOptimisticLinkStatus,\n  }\n  return instance\n}\n\nexport function mountFormInstance(\n  element: HTMLFormElement,\n  href: string,\n  router: AppRouterInstance,\n  fetchStrategy: PrefetchTaskFetchStrategy\n): void {\n  const prefetchURL = coercePrefetchableUrl(href)\n  if (prefetchURL === null) {\n    // This href is not prefetchable, so we don't track it.\n    // TODO: We currently observe/unobserve a form every time its href changes.\n    // For Links, this isn't a big deal because the href doesn't usually change,\n    // but for forms it's extremely common. We should optimize this.\n    return\n  }\n  const instance: FormInstance = {\n    router,\n    fetchStrategy,\n    isVisible: false,\n    prefetchTask: null,\n    prefetchHref: prefetchURL.href,\n    setOptimisticLinkStatus: null,\n  }\n  observeVisibility(element, instance)\n}\n\nexport function unmountPrefetchableInstance(element: Element) {\n  const instance = prefetchable.get(element)\n  if (instance !== undefined) {\n    prefetchable.delete(element)\n    prefetchableAndVisible.delete(instance)\n    const prefetchTask = instance.prefetchTask\n    if (prefetchTask !== null) {\n      cancelPrefetchTask(prefetchTask)\n    }\n  }\n  if (observer !== null) {\n    observer.unobserve(element)\n  }\n}\n\nfunction handleIntersect(entries: Array<IntersectionObserverEntry>) {\n  for (const entry of entries) {\n    // Some extremely old browsers or polyfills don't reliably support\n    // isIntersecting so we check intersectionRatio instead. (Do we care? Not\n    // really. But whatever this is fine.)\n    const isVisible = entry.intersectionRatio > 0\n    onLinkVisibilityChanged(entry.target as HTMLAnchorElement, isVisible)\n  }\n}\n\nexport function onLinkVisibilityChanged(element: Element, isVisible: boolean) {\n  if (process.env.NODE_ENV !== 'production') {\n    // Prefetching on viewport is disabled in development for performance\n    // reasons, because it requires compiling the target page.\n    // TODO: Investigate re-enabling this.\n    return\n  }\n\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n\n  instance.isVisible = isVisible\n  if (isVisible) {\n    prefetchableAndVisible.add(instance)\n  } else {\n    prefetchableAndVisible.delete(instance)\n  }\n  rescheduleLinkPrefetch(instance, PrefetchPriority.Default)\n}\n\nexport function onNavigationIntent(\n  element: HTMLAnchorElement | SVGAElement,\n  unstable_upgradeToDynamicPrefetch: boolean\n) {\n  const instance = prefetchable.get(element)\n  if (instance === undefined) {\n    return\n  }\n  // Prefetch the link on hover/touchstart.\n  if (instance !== undefined) {\n    if (\n      process.env.__NEXT_DYNAMIC_ON_HOVER &&\n      unstable_upgradeToDynamicPrefetch\n    ) {\n      // Switch to a full prefetch\n      instance.fetchStrategy = FetchStrategy.Full\n    }\n    rescheduleLinkPrefetch(instance, PrefetchPriority.Intent)\n  }\n}\n\nfunction rescheduleLinkPrefetch(\n  instance: PrefetchableInstance,\n  priority: PrefetchPriority.Default | PrefetchPriority.Intent\n) {\n  const existingPrefetchTask = instance.prefetchTask\n\n  if (!instance.isVisible) {\n    // Cancel any in-progress prefetch task. (If it already finished then this\n    // is a no-op.)\n    if (existingPrefetchTask !== null) {\n      cancelPrefetchTask(existingPrefetchTask)\n    }\n    // We don't need to reset the prefetchTask to null upon cancellation; an\n    // old task object can be rescheduled with reschedulePrefetchTask. This is a\n    // micro-optimization but also makes the code simpler (don't need to\n    // worry about whether an old task object is stale).\n    return\n  }\n\n  if (!process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n    // The old prefetch implementation does not have different priority levels.\n    // Just schedule a new prefetch task.\n    prefetchWithOldCacheImplementation(instance)\n    return\n  }\n\n  const appRouterState = getCurrentAppRouterState()\n  if (appRouterState !== null) {\n    const treeAtTimeOfPrefetch = appRouterState.tree\n    if (existingPrefetchTask === null) {\n      // Initiate a prefetch task.\n      const nextUrl = appRouterState.nextUrl\n      const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n      instance.prefetchTask = scheduleSegmentPrefetchTask(\n        cacheKey,\n        treeAtTimeOfPrefetch,\n        instance.fetchStrategy,\n        priority,\n        null\n      )\n    } else {\n      // We already have an old task object that we can reschedule. This is\n      // effectively the same as canceling the old task and creating a new one.\n      reschedulePrefetchTask(\n        existingPrefetchTask,\n        treeAtTimeOfPrefetch,\n        instance.fetchStrategy,\n        priority\n      )\n    }\n  }\n}\n\nexport function pingVisibleLinks(\n  nextUrl: string | null,\n  tree: FlightRouterState\n) {\n  // For each currently visible link, cancel the existing prefetch task (if it\n  // exists) and schedule a new one. This is effectively the same as if all the\n  // visible links left and then re-entered the viewport.\n  //\n  // This is called when the Next-Url or the base tree changes, since those\n  // may affect the result of a prefetch task. It's also called after a\n  // cache invalidation.\n  for (const instance of prefetchableAndVisible) {\n    const task = instance.prefetchTask\n    if (task !== null && !isPrefetchTaskDirty(task, nextUrl, tree)) {\n      // The cache has not been invalidated, and none of the inputs have\n      // changed. Bail out.\n      continue\n    }\n    // Something changed. Cancel the existing prefetch task and schedule a\n    // new one.\n    if (task !== null) {\n      cancelPrefetchTask(task)\n    }\n    const cacheKey = createCacheKey(instance.prefetchHref, nextUrl)\n    instance.prefetchTask = scheduleSegmentPrefetchTask(\n      cacheKey,\n      tree,\n      instance.fetchStrategy,\n      PrefetchPriority.Default,\n      null\n    )\n  }\n}\n\nfunction prefetchWithOldCacheImplementation(instance: PrefetchableInstance) {\n  // This is the path used when the Segment Cache is not enabled.\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  const doPrefetch = async () => {\n    // note that `appRouter.prefetch()` is currently sync,\n    // so we have to wrap this call in an async function to be able to catch() errors below.\n\n    let prefetchKind: PrefetchKind\n    switch (instance.fetchStrategy) {\n      case FetchStrategy.PPR: {\n        prefetchKind = PrefetchKind.AUTO\n        break\n      }\n      case FetchStrategy.Full: {\n        prefetchKind = PrefetchKind.FULL\n        break\n      }\n      case FetchStrategy.PPRRuntime: {\n        // We can only get here if Client Segment Cache is off, and in that case\n        // it shouldn't be possible for a link to request a runtime prefetch.\n        throw new InvariantError(\n          'FetchStrategy.PPRRuntime should never be used when `experimental.clientSegmentCache` is disabled'\n        )\n      }\n      default: {\n        instance.fetchStrategy satisfies never\n        // Unreachable, but otherwise typescript will consider the variable unassigned\n        prefetchKind = undefined!\n      }\n    }\n\n    return instance.router.prefetch(instance.prefetchHref, {\n      kind: prefetchKind,\n    })\n  }\n\n  // Prefetch the page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workUnitAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map","export const RSC_HEADER = 'rsc' as const\nexport const ACTION_HEADER = 'next-action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'next-router-state-tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'next-router-prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change next-router-state-tree to be a segment path, we can use\n// that instead. Then next-router-prefetch and next-router-segment-prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'next-router-segment-prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'next-hmr-refresh' as const\nexport const NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__' as const\nexport const NEXT_URL = 'next-url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\nexport const NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found' as const\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nimport { NEXT_HMR_REFRESH_HASH_COOKIE } from '../../client/components/app-router-headers';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage };\nexport function throwForMissingRequestStore(callingExpression) {\n    throw Object.defineProperty(new Error(`\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`), \"__NEXT_ERROR_CODE\", {\n        value: \"E251\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function throwInvariantForMissingStore() {\n    throw Object.defineProperty(new InvariantError('Expected workUnitAsyncStorage to have a store.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E696\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport function getPrerenderResumeDataCache(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'prerender':\n        case 'prerender-runtime':\n        case 'prerender-ppr':\n            return workUnitStore.prerenderResumeDataCache;\n        case 'prerender-client':\n            // TODO eliminate fetch caching in client scope and stop exposing this data\n            // cache during SSR.\n            return workUnitStore.prerenderResumeDataCache;\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n            return null;\n        default:\n            return workUnitStore;\n    }\n}\nexport function getRenderResumeDataCache(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore.renderResumeDataCache;\n        case 'prerender':\n        case 'prerender-runtime':\n        case 'prerender-client':\n            if (workUnitStore.renderResumeDataCache) {\n                // If we are in a prerender, we might have a render resume data cache\n                // that is used to read from prefilled caches.\n                return workUnitStore.renderResumeDataCache;\n            }\n        // fallthrough\n        case 'prerender-ppr':\n            // Otherwise we return the mutable resume data cache here as an immutable\n            // version of the cache as it can also be used for reading.\n            return workUnitStore.prerenderResumeDataCache;\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n        case 'prerender-legacy':\n            return null;\n        default:\n            return workUnitStore;\n    }\n}\nexport function getHmrRefreshHash(workStore, workUnitStore) {\n    if (workStore.dev) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'private-cache':\n            case 'prerender':\n            case 'prerender-runtime':\n                return workUnitStore.hmrRefreshHash;\n            case 'request':\n                var _workUnitStore_cookies_get;\n                return (_workUnitStore_cookies_get = workUnitStore.cookies.get(NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _workUnitStore_cookies_get.value;\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    return undefined;\n}\nexport function isHmrRefresh(workStore, workUnitStore) {\n    if (workStore.dev) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'private-cache':\n            case 'request':\n                return workUnitStore.isHmrRefresh ?? false;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    return false;\n}\nexport function getServerComponentsHmrCache(workStore, workUnitStore) {\n    if (workStore.dev) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'private-cache':\n            case 'request':\n                return workUnitStore.serverComponentsHmrCache;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    return undefined;\n}\n/**\n * Returns a draft mode provider only if draft mode is enabled.\n */ export function getDraftModeProviderForCacheScope(workStore, workUnitStore) {\n    if (workStore.isDraftMode) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n            case 'prerender-runtime':\n            case 'request':\n                return workUnitStore.draftMode;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    return undefined;\n}\nexport function getCacheSignal(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-runtime':\n            return workUnitStore.cacheSignal;\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'private-cache':\n        case 'unstable-cache':\n            return null;\n        default:\n            return workUnitStore;\n    }\n}\nexport function getRuntimeStagePromise(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'prerender-runtime':\n        case 'private-cache':\n            return workUnitStore.runtimeStagePromise;\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n        case 'request':\n        case 'cache':\n        case 'unstable-cache':\n            return null;\n        default:\n            return workUnitStore;\n    }\n}\n\n//# sourceMappingURL=work-unit-async-storage.external.js.map",null,"export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    interceptTestApis: null,\n    wrapRequestHandler: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = require(\"./context\");\nconst _fetch = require(\"./fetch\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(global.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n}\n\n//# sourceMappingURL=server-edge.js.map","'use client'\n\nimport type { ReactNode } from 'react'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from './boundary-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({ children }: { children: ReactNode }) {\n    return children\n  },\n  [ROOT_LAYOUT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n\nexport const RootLayoutBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[\n    ROOT_LAYOUT_BOUNDARY_NAME.slice(0) as typeof ROOT_LAYOUT_BOUNDARY_NAME\n  ]\n","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\n\n//# sourceMappingURL=request-meta.js.map","import(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/builtin/global-error.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/metadata/async-metadata.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/render-from-template-context.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n","import { startTransition } from 'react'\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types'\nimport { dispatchAppRouterAction } from './components/use-action-queue'\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  return new Promise((resolve, reject) => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_SERVER_ACTION,\n        actionId,\n        actionArgs,\n        resolve,\n        reject,\n      })\n    })\n  })\n}\n","(()=>{var e={318:function(e,t){(function(e,n){true?n(t):0})(this,(function(e){\"use strict\";class StructError extends TypeError{constructor(e,t){let n;const{message:r,explanation:i,...c}=e;const{path:o}=e;const a=o.length===0?r:`At path: ${o.join(\".\")} -- ${r}`;super(i??a);if(i!=null)this.cause=a;Object.assign(this,c);this.name=this.constructor.name;this.failures=()=>n??(n=[e,...t()])}}function isIterable(e){return isObject(e)&&typeof e[Symbol.iterator]===\"function\"}function isObject(e){return typeof e===\"object\"&&e!=null}function isPlainObject(e){if(Object.prototype.toString.call(e)!==\"[object Object]\"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.prototype}function print(e){if(typeof e===\"symbol\"){return e.toString()}return typeof e===\"string\"?JSON.stringify(e):`${e}`}function shiftIterator(e){const{done:t,value:n}=e.next();return t?undefined:n}function toFailure(e,t,n,r){if(e===true){return}else if(e===false){e={}}else if(typeof e===\"string\"){e={message:e}}const{path:i,branch:c}=t;const{type:o}=n;const{refinement:a,message:s=`Expected a value of type \\`${o}\\`${a?` with refinement \\`${a}\\``:\"\"}, but received: \\`${print(r)}\\``}=e;return{value:r,type:o,refinement:a,key:i[i.length-1],path:i,branch:c,...e,message:s}}function*toFailures(e,t,n,r){if(!isIterable(e)){e=[e]}for(const i of e){const e=toFailure(i,t,n,r);if(e){yield e}}}function*run(e,t,n={}){const{path:r=[],branch:i=[e],coerce:c=false,mask:o=false}=n;const a={path:r,branch:i};if(c){e=t.coercer(e,a);if(o&&t.type!==\"type\"&&isObject(t.schema)&&isObject(e)&&!Array.isArray(e)){for(const n in e){if(t.schema[n]===undefined){delete e[n]}}}}let s=\"valid\";for(const r of t.validator(e,a)){r.explanation=n.message;s=\"not_valid\";yield[r,undefined]}for(let[u,f,l]of t.entries(e,a)){const t=run(f,l,{path:u===undefined?r:[...r,u],branch:u===undefined?i:[...i,f],coerce:c,mask:o,message:n.message});for(const n of t){if(n[0]){s=n[0].refinement!=null?\"not_refined\":\"not_valid\";yield[n[0],undefined]}else if(c){f=n[1];if(u===undefined){e=f}else if(e instanceof Map){e.set(u,f)}else if(e instanceof Set){e.add(f)}else if(isObject(e)){if(f!==undefined||u in e)e[u]=f}}}}if(s!==\"not_valid\"){for(const r of t.refiner(e,a)){r.explanation=n.message;s=\"not_refined\";yield[r,undefined]}}if(s===\"valid\"){yield[undefined,e]}}class Struct{constructor(e){const{type:t,schema:n,validator:r,refiner:i,coercer:c=(e=>e),entries:o=function*(){}}=e;this.type=t;this.schema=n;this.entries=o;this.coercer=c;if(r){this.validator=(e,t)=>{const n=r(e,t);return toFailures(n,t,this,e)}}else{this.validator=()=>[]}if(i){this.refiner=(e,t)=>{const n=i(e,t);return toFailures(n,t,this,e)}}else{this.refiner=()=>[]}}assert(e,t){return assert(e,this,t)}create(e,t){return create(e,this,t)}is(e){return is(e,this)}mask(e,t){return mask(e,this,t)}validate(e,t={}){return validate(e,this,t)}}function assert(e,t,n){const r=validate(e,t,{message:n});if(r[0]){throw r[0]}}function create(e,t,n){const r=validate(e,t,{coerce:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function mask(e,t,n){const r=validate(e,t,{coerce:true,mask:true,message:n});if(r[0]){throw r[0]}else{return r[1]}}function is(e,t){const n=validate(e,t);return!n[0]}function validate(e,t,n={}){const r=run(e,t,n);const i=shiftIterator(r);if(i[0]){const e=new StructError(i[0],(function*(){for(const e of r){if(e[0]){yield e[0]}}}));return[e,undefined]}else{const e=i[1];return[undefined,e]}}function assign(...e){const t=e[0].type===\"type\";const n=e.map((e=>e.schema));const r=Object.assign({},...n);return t?type(r):object(r)}function define(e,t){return new Struct({type:e,schema:null,validator:t})}function deprecated(e,t){return new Struct({...e,refiner:(t,n)=>t===undefined||e.refiner(t,n),validator(n,r){if(n===undefined){return true}else{t(n,r);return e.validator(n,r)}}})}function dynamic(e){return new Struct({type:\"dynamic\",schema:null,*entries(t,n){const r=e(t,n);yield*r.entries(t,n)},validator(t,n){const r=e(t,n);return r.validator(t,n)},coercer(t,n){const r=e(t,n);return r.coercer(t,n)},refiner(t,n){const r=e(t,n);return r.refiner(t,n)}})}function lazy(e){let t;return new Struct({type:\"lazy\",schema:null,*entries(n,r){t??(t=e());yield*t.entries(n,r)},validator(n,r){t??(t=e());return t.validator(n,r)},coercer(n,r){t??(t=e());return t.coercer(n,r)},refiner(n,r){t??(t=e());return t.refiner(n,r)}})}function omit(e,t){const{schema:n}=e;const r={...n};for(const e of t){delete r[e]}switch(e.type){case\"type\":return type(r);default:return object(r)}}function partial(e){const t=e instanceof Struct?{...e.schema}:{...e};for(const e in t){t[e]=optional(t[e])}return object(t)}function pick(e,t){const{schema:n}=e;const r={};for(const e of t){r[e]=n[e]}return object(r)}function struct(e,t){console.warn(\"superstruct@0.11 - The `struct` helper has been renamed to `define`.\");return define(e,t)}function any(){return define(\"any\",(()=>true))}function array(e){return new Struct({type:\"array\",schema:e,*entries(t){if(e&&Array.isArray(t)){for(const[n,r]of t.entries()){yield[n,r,e]}}},coercer(e){return Array.isArray(e)?e.slice():e},validator(e){return Array.isArray(e)||`Expected an array value, but received: ${print(e)}`}})}function bigint(){return define(\"bigint\",(e=>typeof e===\"bigint\"))}function boolean(){return define(\"boolean\",(e=>typeof e===\"boolean\"))}function date(){return define(\"date\",(e=>e instanceof Date&&!isNaN(e.getTime())||`Expected a valid \\`Date\\` object, but received: ${print(e)}`))}function enums(e){const t={};const n=e.map((e=>print(e))).join();for(const n of e){t[n]=n}return new Struct({type:\"enums\",schema:t,validator(t){return e.includes(t)||`Expected one of \\`${n}\\`, but received: ${print(t)}`}})}function func(){return define(\"func\",(e=>typeof e===\"function\"||`Expected a function, but received: ${print(e)}`))}function instance(e){return define(\"instance\",(t=>t instanceof e||`Expected a \\`${e.name}\\` instance, but received: ${print(t)}`))}function integer(){return define(\"integer\",(e=>typeof e===\"number\"&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${print(e)}`))}function intersection(e){return new Struct({type:\"intersection\",schema:null,*entries(t,n){for(const r of e){yield*r.entries(t,n)}},*validator(t,n){for(const r of e){yield*r.validator(t,n)}},*refiner(t,n){for(const r of e){yield*r.refiner(t,n)}}})}function literal(e){const t=print(e);const n=typeof e;return new Struct({type:\"literal\",schema:n===\"string\"||n===\"number\"||n===\"boolean\"?e:null,validator(n){return n===e||`Expected the literal \\`${t}\\`, but received: ${print(n)}`}})}function map(e,t){return new Struct({type:\"map\",schema:null,*entries(n){if(e&&t&&n instanceof Map){for(const[r,i]of n.entries()){yield[r,r,e];yield[r,i,t]}}},coercer(e){return e instanceof Map?new Map(e):e},validator(e){return e instanceof Map||`Expected a \\`Map\\` object, but received: ${print(e)}`}})}function never(){return define(\"never\",(()=>false))}function nullable(e){return new Struct({...e,validator:(t,n)=>t===null||e.validator(t,n),refiner:(t,n)=>t===null||e.refiner(t,n)})}function number(){return define(\"number\",(e=>typeof e===\"number\"&&!isNaN(e)||`Expected a number, but received: ${print(e)}`))}function object(e){const t=e?Object.keys(e):[];const n=never();return new Struct({type:\"object\",schema:e?e:null,*entries(r){if(e&&isObject(r)){const i=new Set(Object.keys(r));for(const n of t){i.delete(n);yield[n,r[n],e[n]]}for(const e of i){yield[e,r[e],n]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function optional(e){return new Struct({...e,validator:(t,n)=>t===undefined||e.validator(t,n),refiner:(t,n)=>t===undefined||e.refiner(t,n)})}function record(e,t){return new Struct({type:\"record\",schema:null,*entries(n){if(isObject(n)){for(const r in n){const i=n[r];yield[r,r,e];yield[r,i,t]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`}})}function regexp(){return define(\"regexp\",(e=>e instanceof RegExp))}function set(e){return new Struct({type:\"set\",schema:null,*entries(t){if(e&&t instanceof Set){for(const n of t){yield[n,n,e]}}},coercer(e){return e instanceof Set?new Set(e):e},validator(e){return e instanceof Set||`Expected a \\`Set\\` object, but received: ${print(e)}`}})}function string(){return define(\"string\",(e=>typeof e===\"string\"||`Expected a string, but received: ${print(e)}`))}function tuple(e){const t=never();return new Struct({type:\"tuple\",schema:null,*entries(n){if(Array.isArray(n)){const r=Math.max(e.length,n.length);for(let i=0;i<r;i++){yield[i,n[i],e[i]||t]}}},validator(e){return Array.isArray(e)||`Expected an array, but received: ${print(e)}`}})}function type(e){const t=Object.keys(e);return new Struct({type:\"type\",schema:e,*entries(n){if(isObject(n)){for(const r of t){yield[r,n[r],e[r]]}}},validator(e){return isObject(e)||`Expected an object, but received: ${print(e)}`},coercer(e){return isObject(e)?{...e}:e}})}function union(e){const t=e.map((e=>e.type)).join(\" | \");return new Struct({type:\"union\",schema:null,coercer(t){for(const n of e){const[e,r]=n.validate(t,{coerce:true});if(!e){return r}}return t},validator(n,r){const i=[];for(const t of e){const[...e]=run(n,t,r);const[c]=e;if(!c[0]){return[]}else{for(const[t]of e){if(t){i.push(t)}}}}return[`Expected the value to satisfy a union of \\`${t}\\`, but received: ${print(n)}`,...i]}})}function unknown(){return define(\"unknown\",(()=>true))}function coerce(e,t,n){return new Struct({...e,coercer:(r,i)=>is(r,t)?e.coercer(n(r,i),i):e.coercer(r,i)})}function defaulted(e,t,n={}){return coerce(e,unknown(),(e=>{const r=typeof t===\"function\"?t():t;if(e===undefined){return r}if(!n.strict&&isPlainObject(e)&&isPlainObject(r)){const t={...e};let n=false;for(const e in r){if(t[e]===undefined){t[e]=r[e];n=true}}if(n){return t}}return e}))}function trimmed(e){return coerce(e,string(),(e=>e.trim()))}function empty(e){return refine(e,\"empty\",(t=>{const n=getSize(t);return n===0||`Expected an empty ${e.type} but received one with a size of \\`${n}\\``}))}function getSize(e){if(e instanceof Map||e instanceof Set){return e.size}else{return e.length}}function max(e,t,n={}){const{exclusive:r}=n;return refine(e,\"max\",(n=>r?n<t:n<=t||`Expected a ${e.type} less than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function min(e,t,n={}){const{exclusive:r}=n;return refine(e,\"min\",(n=>r?n>t:n>=t||`Expected a ${e.type} greater than ${r?\"\":\"or equal to \"}${t} but received \\`${n}\\``))}function nonempty(e){return refine(e,\"nonempty\",(t=>{const n=getSize(t);return n>0||`Expected a nonempty ${e.type} but received an empty one`}))}function pattern(e,t){return refine(e,\"pattern\",(n=>t.test(n)||`Expected a ${e.type} matching \\`/${t.source}/\\` but received \"${n}\"`))}function size(e,t,n=t){const r=`Expected a ${e.type}`;const i=t===n?`of \\`${t}\\``:`between \\`${t}\\` and \\`${n}\\``;return refine(e,\"size\",(e=>{if(typeof e===\"number\"||e instanceof Date){return t<=e&&e<=n||`${r} ${i} but received \\`${e}\\``}else if(e instanceof Map||e instanceof Set){const{size:c}=e;return t<=c&&c<=n||`${r} with a size ${i} but received one with a size of \\`${c}\\``}else{const{length:c}=e;return t<=c&&c<=n||`${r} with a length ${i} but received one with a length of \\`${c}\\``}}))}function refine(e,t,n){return new Struct({...e,*refiner(r,i){yield*e.refiner(r,i);const c=n(r,i);const o=toFailures(c,i,e,r);for(const e of o){yield{...e,refinement:t}}}})}e.Struct=Struct;e.StructError=StructError;e.any=any;e.array=array;e.assert=assert;e.assign=assign;e.bigint=bigint;e.boolean=boolean;e.coerce=coerce;e.create=create;e.date=date;e.defaulted=defaulted;e.define=define;e.deprecated=deprecated;e.dynamic=dynamic;e.empty=empty;e.enums=enums;e.func=func;e.instance=instance;e.integer=integer;e.intersection=intersection;e.is=is;e.lazy=lazy;e.literal=literal;e.map=map;e.mask=mask;e.max=max;e.min=min;e.never=never;e.nonempty=nonempty;e.nullable=nullable;e.number=number;e.object=object;e.omit=omit;e.optional=optional;e.partial=partial;e.pattern=pattern;e.pick=pick;e.record=record;e.refine=refine;e.regexp=regexp;e.set=set;e.size=size;e.string=string;e.struct=struct;e.trimmed=trimmed;e.tuple=tuple;e.type=type;e.union=union;e.unknown=unknown;e.validate=validate}))}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t={};e[318](0,t);module.exports=t})();","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { fillCacheWithNewSubTreeData } from './fill-cache-with-new-subtree-data'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\nexport function applyFlightData(\n  navigatedAt: number,\n  existingCache: CacheNode,\n  cache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): boolean {\n  // The one before last item is the router state tree patch\n  const { tree: treePatch, seedData, head, isRootRender } = flightData\n\n  // Handles case where prefetch only returns the router tree patch without rendered components.\n  if (seedData === null) {\n    return false\n  }\n\n  if (isRootRender) {\n    const rsc = seedData[1]\n    const loading = seedData[3]\n    cache.loading = loading\n    cache.rsc = rsc\n    // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n    // this path during a navigation, but until PPR is fully implemented\n    // yet it's possible the existing node does have a non-null\n    // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n    // old behavior — no PPR value.\n    cache.prefetchRsc = null\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      cache,\n      existingCache,\n      treePatch,\n      seedData,\n      head,\n      prefetchEntry\n    )\n  } else {\n    // Copy rsc for the root node of the cache.\n    cache.rsc = existingCache.rsc\n    // This is a PPR-only field. Unlike the previous branch, since we're\n    // just cloning the existing cache node, we might as well keep the\n    // PPR value, if it exists.\n    cache.prefetchRsc = existingCache.prefetchRsc\n    cache.parallelRoutes = new Map(existingCache.parallelRoutes)\n    cache.loading = existingCache.loading\n    // Create a copy of the existing cache with the rsc applied.\n    fillCacheWithNewSubTreeData(\n      navigatedAt,\n      cache,\n      existingCache,\n      flightData,\n      prefetchEntry\n    )\n  }\n\n  return true\n}\n","/**\n * @license React\n * react-server-dom-webpack-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  React = require(\"react\"),\n  REACT_LEGACY_ELEMENT_TYPE = Symbol.for(\"react.element\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\");\nSymbol.for(\"react.postpone\");\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator;\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunkAndReturn(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n  return !0;\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar CLIENT_REFERENCE_TAG$1 = Symbol.for(\"react.client.reference\"),\n  SERVER_REFERENCE_TAG = Symbol.for(\"react.server.reference\");\nfunction registerClientReferenceImpl(proxyImplementation, id, async) {\n  return Object.defineProperties(proxyImplementation, {\n    $$typeof: { value: CLIENT_REFERENCE_TAG$1 },\n    $$id: { value: id },\n    $$async: { value: async }\n  });\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var newFn = FunctionBind.apply(this, arguments);\n  if (this.$$typeof === SERVER_REFERENCE_TAG) {\n    var args = ArraySlice.call(arguments, 1),\n      $$typeof = { value: SERVER_REFERENCE_TAG },\n      $$id = { value: this.$$id };\n    args = { value: this.$$bound ? this.$$bound.concat(args) : args };\n    return Object.defineProperties(newFn, {\n      $$typeof: $$typeof,\n      $$id: $$id,\n      $$bound: args,\n      bind: { value: bind, configurable: !0 }\n    });\n  }\n  return newFn;\n}\nvar PROMISE_PROTOTYPE = Promise.prototype,\n  deepProxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"$$id\":\n          return target.$$id;\n        case \"$$async\":\n          return target.$$async;\n        case \"name\":\n          return target.name;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"_debugInfo\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          throw Error(\n            \"Cannot await or return from a thenable. You cannot await a client module from a server component.\"\n          );\n      }\n      throw Error(\n        \"Cannot access \" +\n          (String(target.name) + \".\" + String(name)) +\n          \" on the server. You cannot dot into a client module from a server component. You can only pass the imported name through.\"\n      );\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  };\nfunction getReference(target, name) {\n  switch (name) {\n    case \"$$typeof\":\n      return target.$$typeof;\n    case \"$$id\":\n      return target.$$id;\n    case \"$$async\":\n      return target.$$async;\n    case \"name\":\n      return target.name;\n    case \"defaultProps\":\n      return;\n    case \"_debugInfo\":\n      return;\n    case \"toJSON\":\n      return;\n    case Symbol.toPrimitive:\n      return Object.prototype[Symbol.toPrimitive];\n    case Symbol.toStringTag:\n      return Object.prototype[Symbol.toStringTag];\n    case \"__esModule\":\n      var moduleId = target.$$id;\n      target.default = registerClientReferenceImpl(\n        function () {\n          throw Error(\n            \"Attempted to call the default export of \" +\n              moduleId +\n              \" from the server but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n          );\n        },\n        target.$$id + \"#\",\n        target.$$async\n      );\n      return !0;\n    case \"then\":\n      if (target.then) return target.then;\n      if (target.$$async) return;\n      var clientReference = registerClientReferenceImpl({}, target.$$id, !0),\n        proxy = new Proxy(clientReference, proxyHandlers$1);\n      target.status = \"fulfilled\";\n      target.value = proxy;\n      return (target.then = registerClientReferenceImpl(\n        function (resolve) {\n          return Promise.resolve(resolve(proxy));\n        },\n        target.$$id + \"#then\",\n        !1\n      ));\n  }\n  if (\"symbol\" === typeof name)\n    throw Error(\n      \"Cannot read Symbol exports. Only named exports are supported on a client module imported on the server.\"\n    );\n  clientReference = target[name];\n  clientReference ||\n    ((clientReference = registerClientReferenceImpl(\n      function () {\n        throw Error(\n          \"Attempted to call \" +\n            String(name) +\n            \"() from the server but \" +\n            String(name) +\n            \" is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n        );\n      },\n      target.$$id + \"#\" + name,\n      target.$$async\n    )),\n    Object.defineProperty(clientReference, \"name\", { value: name }),\n    (clientReference = target[name] =\n      new Proxy(clientReference, deepProxyHandlers)));\n  return clientReference;\n}\nvar proxyHandlers$1 = {\n    get: function (target, name) {\n      return getReference(target, name);\n    },\n    getOwnPropertyDescriptor: function (target, name) {\n      var descriptor = Object.getOwnPropertyDescriptor(target, name);\n      descriptor ||\n        ((descriptor = {\n          value: getReference(target, name),\n          writable: !1,\n          configurable: !1,\n          enumerable: !1\n        }),\n        Object.defineProperty(target, name, descriptor));\n      return descriptor;\n    },\n    getPrototypeOf: function () {\n      return PROMISE_PROTOTYPE;\n    },\n    set: function () {\n      throw Error(\"Cannot assign to a client module from a server module.\");\n    }\n  },\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule$1,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nfunction prefetchDNS(href) {\n  if (\"string\" === typeof href && href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"D|\" + href;\n      hints.has(key) || (hints.add(key), emitHint(request, \"D\", href));\n    } else previousDispatcher.D(href);\n  }\n}\nfunction preconnect(href, crossOrigin) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"C|\" + (null == crossOrigin ? \"null\" : crossOrigin) + \"|\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        \"string\" === typeof crossOrigin\n          ? emitHint(request, \"C\", [href, crossOrigin])\n          : emitHint(request, \"C\", href));\n    } else previousDispatcher.C(href, crossOrigin);\n  }\n}\nfunction preload(href, as, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"L\";\n      if (\"image\" === as && options) {\n        var imageSrcSet = options.imageSrcSet,\n          imageSizes = options.imageSizes,\n          uniquePart = \"\";\n        \"string\" === typeof imageSrcSet && \"\" !== imageSrcSet\n          ? ((uniquePart += \"[\" + imageSrcSet + \"]\"),\n            \"string\" === typeof imageSizes &&\n              (uniquePart += \"[\" + imageSizes + \"]\"))\n          : (uniquePart += \"[][]\" + href);\n        key += \"[image]\" + uniquePart;\n      } else key += \"[\" + as + \"]\" + href;\n      hints.has(key) ||\n        (hints.add(key),\n        (options = trimOptions(options))\n          ? emitHint(request, \"L\", [href, as, options])\n          : emitHint(request, \"L\", [href, as]));\n    } else previousDispatcher.L(href, as, options);\n  }\n}\nfunction preloadModule$1(href, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"m|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"m\", [href, options])\n        : emitHint(request, \"m\", href);\n    }\n    previousDispatcher.m(href, options);\n  }\n}\nfunction preinitStyle(href, precedence, options) {\n  if (\"string\" === typeof href) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"S|\" + href;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"S\", [\n            href,\n            \"string\" === typeof precedence ? precedence : 0,\n            options\n          ])\n        : \"string\" === typeof precedence\n          ? emitHint(request, \"S\", [href, precedence])\n          : emitHint(request, \"S\", href);\n    }\n    previousDispatcher.S(href, precedence, options);\n  }\n}\nfunction preinitScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"X|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"X\", [src, options])\n        : emitHint(request, \"X\", src);\n    }\n    previousDispatcher.X(src, options);\n  }\n}\nfunction preinitModuleScript(src, options) {\n  if (\"string\" === typeof src) {\n    var request = resolveRequest();\n    if (request) {\n      var hints = request.hints,\n        key = \"M|\" + src;\n      if (hints.has(key)) return;\n      hints.add(key);\n      return (options = trimOptions(options))\n        ? emitHint(request, \"M\", [src, options])\n        : emitHint(request, \"M\", src);\n    }\n    previousDispatcher.M(src, options);\n  }\n}\nfunction trimOptions(options) {\n  if (null == options) return null;\n  var hasProperties = !1,\n    trimmed = {},\n    key;\n  for (key in options)\n    null != options[key] &&\n      ((hasProperties = !0), (trimmed[key] = options[key]));\n  return hasProperties ? trimmed : null;\n}\nvar supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null,\n  TEMPORARY_REFERENCE_TAG = Symbol.for(\"react.temporary.reference\"),\n  proxyHandlers = {\n    get: function (target, name) {\n      switch (name) {\n        case \"$$typeof\":\n          return target.$$typeof;\n        case \"name\":\n          return;\n        case \"displayName\":\n          return;\n        case \"defaultProps\":\n          return;\n        case \"_debugInfo\":\n          return;\n        case \"toJSON\":\n          return;\n        case Symbol.toPrimitive:\n          return Object.prototype[Symbol.toPrimitive];\n        case Symbol.toStringTag:\n          return Object.prototype[Symbol.toStringTag];\n        case \"Provider\":\n          throw Error(\n            \"Cannot render a Client Context Provider on the Server. Instead, you can export a Client Component wrapper that itself renders a Client Context Provider.\"\n          );\n        case \"then\":\n          return;\n      }\n      throw Error(\n        \"Cannot access \" +\n          String(name) +\n          \" on the server. You cannot dot into a temporary client reference from a server component. You can only pass the value through to the client.\"\n      );\n    },\n    set: function () {\n      throw Error(\n        \"Cannot assign to a temporary client reference from a server module.\"\n      );\n    }\n  };\nfunction createTemporaryReference(temporaryReferences, id) {\n  var reference = Object.defineProperties(\n    function () {\n      throw Error(\n        \"Attempted to call a temporary Client Reference from the server but it is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"\n      );\n    },\n    { $$typeof: { value: TEMPORARY_REFERENCE_TAG } }\n  );\n  reference = new Proxy(reference, proxyHandlers);\n  temporaryReferences.set(reference, id);\n  return reference;\n}\nfunction noop() {}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n);\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop, noop), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop, noop)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nvar currentRequest$1 = null,\n  thenableIndexCounter = 0,\n  thenableState = null;\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState || [];\n  thenableState = null;\n  return state;\n}\nvar HooksDispatcher = {\n  readContext: unsupportedContext,\n  use: use,\n  useCallback: function (callback) {\n    return callback;\n  },\n  useContext: unsupportedContext,\n  useEffect: unsupportedHook,\n  useImperativeHandle: unsupportedHook,\n  useLayoutEffect: unsupportedHook,\n  useInsertionEffect: unsupportedHook,\n  useMemo: function (nextCreate) {\n    return nextCreate();\n  },\n  useReducer: unsupportedHook,\n  useRef: unsupportedHook,\n  useState: unsupportedHook,\n  useDebugValue: function () {},\n  useDeferredValue: unsupportedHook,\n  useTransition: unsupportedHook,\n  useSyncExternalStore: unsupportedHook,\n  useId: useId,\n  useHostTransitionStatus: unsupportedHook,\n  useFormState: unsupportedHook,\n  useActionState: unsupportedHook,\n  useOptimistic: unsupportedHook,\n  useMemoCache: function (size) {\n    for (var data = Array(size), i = 0; i < size; i++)\n      data[i] = REACT_MEMO_CACHE_SENTINEL;\n    return data;\n  },\n  useCacheRefresh: function () {\n    return unsupportedRefresh;\n  }\n};\nfunction unsupportedHook() {\n  throw Error(\"This Hook is not supported in Server Components.\");\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Refreshing the cache is not supported in Server Components.\");\n}\nfunction unsupportedContext() {\n  throw Error(\"Cannot read a Client Context from a Server Component.\");\n}\nfunction useId() {\n  if (null === currentRequest$1)\n    throw Error(\"useId can only be used while React is rendering\");\n  var id = currentRequest$1.identifierCount++;\n  return \"_\" + currentRequest$1.identifierPrefix + \"S_\" + id.toString(32) + \"_\";\n}\nfunction use(usable) {\n  if (\n    (null !== usable && \"object\" === typeof usable) ||\n    \"function\" === typeof usable\n  ) {\n    if (\"function\" === typeof usable.then) {\n      var index = thenableIndexCounter;\n      thenableIndexCounter += 1;\n      null === thenableState && (thenableState = []);\n      return trackUsedThenable(thenableState, usable, index);\n    }\n    usable.$$typeof === REACT_CONTEXT_TYPE && unsupportedContext();\n  }\n  if (usable.$$typeof === CLIENT_REFERENCE_TAG$1) {\n    if (null != usable.value && usable.value.$$typeof === REACT_CONTEXT_TYPE)\n      throw Error(\"Cannot read a Client Context from a Server Component.\");\n    throw Error(\"Cannot use() an already resolved Client Reference.\");\n  }\n  throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n}\nvar DefaultAsyncDispatcher = {\n    getCacheForType: function (resourceType) {\n      var JSCompiler_inline_result = (JSCompiler_inline_result =\n        resolveRequest())\n        ? JSCompiler_inline_result.cache\n        : new Map();\n      var entry = JSCompiler_inline_result.get(resourceType);\n      void 0 === entry &&\n        ((entry = resourceType()),\n        JSCompiler_inline_result.set(resourceType, entry));\n      return entry;\n    },\n    cacheSignal: function () {\n      var request = resolveRequest();\n      return request ? request.cacheController.signal : null;\n    }\n  },\n  ReactSharedInternalsServer =\n    React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nif (!ReactSharedInternalsServer)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nvar isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf;\nfunction objectName(object) {\n  object = Object.prototype.toString.call(object);\n  return object.slice(8, object.length - 1);\n}\nfunction describeValueForErrorMessage(value) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(\n        10 >= value.length ? value : value.slice(0, 10) + \"...\"\n      );\n    case \"object\":\n      if (isArrayImpl(value)) return \"[...]\";\n      if (null !== value && value.$$typeof === CLIENT_REFERENCE_TAG)\n        return \"client\";\n      value = objectName(value);\n      return \"Object\" === value ? \"{...}\" : value;\n    case \"function\":\n      return value.$$typeof === CLIENT_REFERENCE_TAG\n        ? \"client\"\n        : (value = value.displayName || value.name)\n          ? \"function \" + value\n          : \"function\";\n    default:\n      return String(value);\n  }\n}\nfunction describeElementType(type) {\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeElementType(type.render);\n      case REACT_MEMO_TYPE:\n        return describeElementType(type.type);\n      case REACT_LAZY_TYPE:\n        var payload = type._payload;\n        type = type._init;\n        try {\n          return describeElementType(type(payload));\n        } catch (x) {}\n    }\n  return \"\";\n}\nvar CLIENT_REFERENCE_TAG = Symbol.for(\"react.client.reference\");\nfunction describeObjectForErrorMessage(objectOrArray, expandedName) {\n  var objKind = objectName(objectOrArray);\n  if (\"Object\" !== objKind && \"Array\" !== objKind) return objKind;\n  objKind = -1;\n  var length = 0;\n  if (isArrayImpl(objectOrArray)) {\n    var str = \"[\";\n    for (var i = 0; i < objectOrArray.length; i++) {\n      0 < i && (str += \", \");\n      var value = objectOrArray[i];\n      value =\n        \"object\" === typeof value && null !== value\n          ? describeObjectForErrorMessage(value)\n          : describeValueForErrorMessage(value);\n      \"\" + i === expandedName\n        ? ((objKind = str.length), (length = value.length), (str += value))\n        : (str =\n            10 > value.length && 40 > str.length + value.length\n              ? str + value\n              : str + \"...\");\n    }\n    str += \"]\";\n  } else if (objectOrArray.$$typeof === REACT_ELEMENT_TYPE)\n    str = \"<\" + describeElementType(objectOrArray.type) + \"/>\";\n  else {\n    if (objectOrArray.$$typeof === CLIENT_REFERENCE_TAG) return \"client\";\n    str = \"{\";\n    i = Object.keys(objectOrArray);\n    for (value = 0; value < i.length; value++) {\n      0 < value && (str += \", \");\n      var name = i[value],\n        encodedKey = JSON.stringify(name);\n      str += ('\"' + name + '\"' === encodedKey ? name : encodedKey) + \": \";\n      encodedKey = objectOrArray[name];\n      encodedKey =\n        \"object\" === typeof encodedKey && null !== encodedKey\n          ? describeObjectForErrorMessage(encodedKey)\n          : describeValueForErrorMessage(encodedKey);\n      name === expandedName\n        ? ((objKind = str.length),\n          (length = encodedKey.length),\n          (str += encodedKey))\n        : (str =\n            10 > encodedKey.length && 40 > str.length + encodedKey.length\n              ? str + encodedKey\n              : str + \"...\");\n    }\n    str += \"}\";\n  }\n  return void 0 === expandedName\n    ? str\n    : -1 < objKind && 0 < length\n      ? ((objectOrArray = \" \".repeat(objKind) + \"^\".repeat(length)),\n        \"\\n  \" + str + \"\\n  \" + objectOrArray)\n      : \"\\n  \" + str;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  ObjectPrototype = Object.prototype,\n  stringify = JSON.stringify;\nfunction defaultErrorHandler(error) {\n  console.error(error);\n}\nfunction RequestInstance(\n  type,\n  model,\n  bundlerConfig,\n  onError,\n  onPostpone,\n  onAllReady,\n  onFatalError,\n  identifierPrefix,\n  temporaryReferences\n) {\n  if (\n    null !== ReactSharedInternalsServer.A &&\n    ReactSharedInternalsServer.A !== DefaultAsyncDispatcher\n  )\n    throw Error(\"Currently React only supports one RSC renderer at a time.\");\n  ReactSharedInternalsServer.A = DefaultAsyncDispatcher;\n  var abortSet = new Set(),\n    pingedTasks = [],\n    hints = new Set();\n  this.type = type;\n  this.status = 10;\n  this.flushScheduled = !1;\n  this.destination = this.fatalError = null;\n  this.bundlerConfig = bundlerConfig;\n  this.cache = new Map();\n  this.cacheController = new AbortController();\n  this.pendingChunks = this.nextChunkId = 0;\n  this.hints = hints;\n  this.abortableTasks = abortSet;\n  this.pingedTasks = pingedTasks;\n  this.completedImportChunks = [];\n  this.completedHintChunks = [];\n  this.completedRegularChunks = [];\n  this.completedErrorChunks = [];\n  this.writtenSymbols = new Map();\n  this.writtenClientReferences = new Map();\n  this.writtenServerReferences = new Map();\n  this.writtenObjects = new WeakMap();\n  this.temporaryReferences = temporaryReferences;\n  this.identifierPrefix = identifierPrefix || \"\";\n  this.identifierCount = 1;\n  this.taintCleanupQueue = [];\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? noop : onPostpone;\n  this.onAllReady = onAllReady;\n  this.onFatalError = onFatalError;\n  type = createTask(this, model, null, !1, abortSet);\n  pingedTasks.push(type);\n}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction serializeThenable(request, task, thenable) {\n  var newTask = createTask(\n    request,\n    thenable,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return (\n        (newTask.model = thenable.value), pingTask(request, newTask), newTask.id\n      );\n    case \"rejected\":\n      return erroredTask(request, newTask, thenable.reason), newTask.id;\n    default:\n      if (12 === request.status)\n        return (\n          request.abortableTasks.delete(newTask),\n          (task = request.fatalError),\n          abortTask(newTask),\n          finishAbortedTask(newTask, request, task),\n          newTask.id\n        );\n      \"string\" !== typeof thenable.status &&\n        ((thenable.status = \"pending\"),\n        thenable.then(\n          function (fulfilledValue) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"fulfilled\"),\n              (thenable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === thenable.status &&\n              ((thenable.status = \"rejected\"), (thenable.reason = error));\n          }\n        ));\n  }\n  thenable.then(\n    function (value) {\n      newTask.model = value;\n      pingTask(request, newTask);\n    },\n    function (reason) {\n      0 === newTask.status &&\n        (erroredTask(request, newTask, reason), enqueueFlush(request));\n    }\n  );\n  return newTask.id;\n}\nfunction serializeReadableStream(request, task, stream) {\n  function progress(entry) {\n    if (0 === streamTask.status)\n      if (entry.done)\n        (streamTask.status = 1),\n          (entry = streamTask.id.toString(16) + \":C\\n\"),\n          request.completedRegularChunks.push(stringToChunk(entry)),\n          request.abortableTasks.delete(streamTask),\n          request.cacheController.signal.removeEventListener(\n            \"abort\",\n            abortStream\n          ),\n          enqueueFlush(request),\n          callOnAllReadyIfReady(request);\n      else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            tryStreamTask(request, streamTask),\n            enqueueFlush(request),\n            reader.read().then(progress, error);\n        } catch (x$8) {\n          error(x$8);\n        }\n  }\n  function error(reason) {\n    0 === streamTask.status &&\n      (request.cacheController.signal.removeEventListener(\"abort\", abortStream),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortStream() {\n    if (0 === streamTask.status) {\n      var signal = request.cacheController.signal;\n      signal.removeEventListener(\"abort\", abortStream);\n      signal = signal.reason;\n      erroredTask(request, streamTask, signal);\n      enqueueFlush(request);\n      reader.cancel(signal).then(error, error);\n    }\n  }\n  var supportsBYOB = stream.supportsBYOB;\n  if (void 0 === supportsBYOB)\n    try {\n      stream.getReader({ mode: \"byob\" }).releaseLock(), (supportsBYOB = !0);\n    } catch (x) {\n      supportsBYOB = !1;\n    }\n  var reader = stream.getReader(),\n    streamTask = createTask(\n      request,\n      task.model,\n      task.keyPath,\n      task.implicitSlot,\n      request.abortableTasks\n    );\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (supportsBYOB ? \"r\" : \"R\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  request.cacheController.signal.addEventListener(\"abort\", abortStream);\n  reader.read().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction serializeAsyncIterable(request, task, iterable, iterator) {\n  function progress(entry) {\n    if (0 === streamTask.status)\n      if (entry.done) {\n        streamTask.status = 1;\n        if (void 0 === entry.value)\n          var endStreamRow = streamTask.id.toString(16) + \":C\\n\";\n        else\n          try {\n            var chunkId = outlineModel(request, entry.value);\n            endStreamRow =\n              streamTask.id.toString(16) +\n              \":C\" +\n              stringify(serializeByValueID(chunkId)) +\n              \"\\n\";\n          } catch (x) {\n            error(x);\n            return;\n          }\n        request.completedRegularChunks.push(stringToChunk(endStreamRow));\n        request.abortableTasks.delete(streamTask);\n        request.cacheController.signal.removeEventListener(\n          \"abort\",\n          abortIterable\n        );\n        enqueueFlush(request);\n        callOnAllReadyIfReady(request);\n      } else\n        try {\n          (streamTask.model = entry.value),\n            request.pendingChunks++,\n            tryStreamTask(request, streamTask),\n            enqueueFlush(request),\n            iterator.next().then(progress, error);\n        } catch (x$9) {\n          error(x$9);\n        }\n  }\n  function error(reason) {\n    0 === streamTask.status &&\n      (request.cacheController.signal.removeEventListener(\n        \"abort\",\n        abortIterable\n      ),\n      erroredTask(request, streamTask, reason),\n      enqueueFlush(request),\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error));\n  }\n  function abortIterable() {\n    if (0 === streamTask.status) {\n      var signal = request.cacheController.signal;\n      signal.removeEventListener(\"abort\", abortIterable);\n      var reason = signal.reason;\n      erroredTask(request, streamTask, signal.reason);\n      enqueueFlush(request);\n      \"function\" === typeof iterator.throw &&\n        iterator.throw(reason).then(error, error);\n    }\n  }\n  iterable = iterable === iterator;\n  var streamTask = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  request.pendingChunks++;\n  task = streamTask.id.toString(16) + \":\" + (iterable ? \"x\" : \"X\") + \"\\n\";\n  request.completedRegularChunks.push(stringToChunk(task));\n  request.cacheController.signal.addEventListener(\"abort\", abortIterable);\n  iterator.next().then(progress, error);\n  return serializeByValueID(streamTask.id);\n}\nfunction emitHint(request, code, model) {\n  model = stringify(model);\n  code = stringToChunk(\":H\" + code + model + \"\\n\");\n  request.completedHintChunks.push(code);\n  enqueueFlush(request);\n}\nfunction readThenable(thenable) {\n  if (\"fulfilled\" === thenable.status) return thenable.value;\n  if (\"rejected\" === thenable.status) throw thenable.reason;\n  throw thenable;\n}\nfunction createLazyWrapperAroundWakeable(request, task, wakeable) {\n  switch (wakeable.status) {\n    case \"fulfilled\":\n      return wakeable.value;\n    case \"rejected\":\n      break;\n    default:\n      \"string\" !== typeof wakeable.status &&\n        ((wakeable.status = \"pending\"),\n        wakeable.then(\n          function (fulfilledValue) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"fulfilled\"),\n              (wakeable.value = fulfilledValue));\n          },\n          function (error) {\n            \"pending\" === wakeable.status &&\n              ((wakeable.status = \"rejected\"), (wakeable.reason = error));\n          }\n        ));\n  }\n  return { $$typeof: REACT_LAZY_TYPE, _payload: wakeable, _init: readThenable };\n}\nfunction voidHandler() {}\nfunction processServerComponentReturnValue(request, task, Component, result) {\n  if (\n    \"object\" !== typeof result ||\n    null === result ||\n    result.$$typeof === CLIENT_REFERENCE_TAG$1\n  )\n    return result;\n  if (\"function\" === typeof result.then)\n    return createLazyWrapperAroundWakeable(request, task, result);\n  var iteratorFn = getIteratorFn(result);\n  return iteratorFn\n    ? ((request = {}),\n      (request[Symbol.iterator] = function () {\n        return iteratorFn.call(result);\n      }),\n      request)\n    : \"function\" !== typeof result[ASYNC_ITERATOR] ||\n        (\"function\" === typeof ReadableStream &&\n          result instanceof ReadableStream)\n      ? result\n      : ((request = {}),\n        (request[ASYNC_ITERATOR] = function () {\n          return result[ASYNC_ITERATOR]();\n        }),\n        request);\n}\nfunction renderFunctionComponent(request, task, key, Component, props) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  props = Component(props, void 0);\n  if (12 === request.status)\n    throw (\n      (\"object\" === typeof props &&\n        null !== props &&\n        \"function\" === typeof props.then &&\n        props.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n        props.then(voidHandler, voidHandler),\n      null)\n    );\n  props = processServerComponentReturnValue(request, task, Component, props);\n  Component = task.keyPath;\n  prevThenableState = task.implicitSlot;\n  null !== key\n    ? (task.keyPath = null === Component ? key : Component + \",\" + key)\n    : null === Component && (task.implicitSlot = !0);\n  request = renderModelDestructive(request, task, emptyRoot, \"\", props);\n  task.keyPath = Component;\n  task.implicitSlot = prevThenableState;\n  return request;\n}\nfunction renderFragment(request, task, children) {\n  return null !== task.keyPath\n    ? ((request = [\n        REACT_ELEMENT_TYPE,\n        REACT_FRAGMENT_TYPE,\n        task.keyPath,\n        { children: children }\n      ]),\n      task.implicitSlot ? [request] : request)\n    : children;\n}\nvar serializedSize = 0;\nfunction deferTask(request, task) {\n  task = createTask(\n    request,\n    task.model,\n    task.keyPath,\n    task.implicitSlot,\n    request.abortableTasks\n  );\n  pingTask(request, task);\n  return \"$L\" + task.id.toString(16);\n}\nfunction renderElement(request, task, type, key, ref, props) {\n  if (null !== ref && void 0 !== ref)\n    throw Error(\n      \"Refs cannot be used in Server Components, nor passed to Client Components.\"\n    );\n  if (\n    \"function\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1 &&\n    type.$$typeof !== TEMPORARY_REFERENCE_TAG\n  )\n    return renderFunctionComponent(request, task, key, type, props);\n  if (type === REACT_FRAGMENT_TYPE && null === key)\n    return (\n      (type = task.implicitSlot),\n      null === task.keyPath && (task.implicitSlot = !0),\n      (props = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        props.children\n      )),\n      (task.implicitSlot = type),\n      props\n    );\n  if (\n    null != type &&\n    \"object\" === typeof type &&\n    type.$$typeof !== CLIENT_REFERENCE_TAG$1\n  )\n    switch (type.$$typeof) {\n      case REACT_LAZY_TYPE:\n        var init = type._init;\n        type = init(type._payload);\n        if (12 === request.status) throw null;\n        return renderElement(request, task, type, key, ref, props);\n      case REACT_FORWARD_REF_TYPE:\n        return renderFunctionComponent(request, task, key, type.render, props);\n      case REACT_MEMO_TYPE:\n        return renderElement(request, task, type.type, key, ref, props);\n    }\n  request = key;\n  key = task.keyPath;\n  null === request\n    ? (request = key)\n    : null !== key && (request = key + \",\" + request);\n  props = [REACT_ELEMENT_TYPE, type, request, props];\n  task = task.implicitSlot && null !== request ? [props] : props;\n  return task;\n}\nfunction pingTask(request, task) {\n  var pingedTasks = request.pingedTasks;\n  pingedTasks.push(task);\n  1 === pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    21 === request.type || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeout(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createTask(request, model, keyPath, implicitSlot, abortSet) {\n  request.pendingChunks++;\n  var id = request.nextChunkId++;\n  \"object\" !== typeof model ||\n    null === model ||\n    null !== keyPath ||\n    implicitSlot ||\n    request.writtenObjects.set(model, serializeByValueID(id));\n  var task = {\n    id: id,\n    status: 0,\n    model: model,\n    keyPath: keyPath,\n    implicitSlot: implicitSlot,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    toJSON: function (parentPropertyName, value) {\n      serializedSize += parentPropertyName.length;\n      var prevKeyPath = task.keyPath,\n        prevImplicitSlot = task.implicitSlot;\n      try {\n        var JSCompiler_inline_result = renderModelDestructive(\n          request,\n          task,\n          this,\n          parentPropertyName,\n          value\n        );\n      } catch (thrownValue) {\n        if (\n          ((parentPropertyName = task.model),\n          (parentPropertyName =\n            \"object\" === typeof parentPropertyName &&\n            null !== parentPropertyName &&\n            (parentPropertyName.$$typeof === REACT_ELEMENT_TYPE ||\n              parentPropertyName.$$typeof === REACT_LAZY_TYPE)),\n          12 === request.status)\n        )\n          (task.status = 3),\n            (prevKeyPath = request.fatalError),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n        else if (\n          ((value =\n            thrownValue === SuspenseException\n              ? getSuspendedThenable()\n              : thrownValue),\n          \"object\" === typeof value &&\n            null !== value &&\n            \"function\" === typeof value.then)\n        ) {\n          JSCompiler_inline_result = createTask(\n            request,\n            task.model,\n            task.keyPath,\n            task.implicitSlot,\n            request.abortableTasks\n          );\n          var ping = JSCompiler_inline_result.ping;\n          value.then(ping, ping);\n          JSCompiler_inline_result.thenableState =\n            getThenableStateAfterSuspending();\n          task.keyPath = prevKeyPath;\n          task.implicitSlot = prevImplicitSlot;\n          JSCompiler_inline_result = parentPropertyName\n            ? \"$L\" + JSCompiler_inline_result.id.toString(16)\n            : serializeByValueID(JSCompiler_inline_result.id);\n        } else\n          (task.keyPath = prevKeyPath),\n            (task.implicitSlot = prevImplicitSlot),\n            request.pendingChunks++,\n            (prevKeyPath = request.nextChunkId++),\n            (prevImplicitSlot = logRecoverableError(request, value, task)),\n            emitErrorChunk(request, prevKeyPath, prevImplicitSlot),\n            (JSCompiler_inline_result = parentPropertyName\n              ? \"$L\" + prevKeyPath.toString(16)\n              : serializeByValueID(prevKeyPath));\n      }\n      return JSCompiler_inline_result;\n    },\n    thenableState: null\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction serializeByValueID(id) {\n  return \"$\" + id.toString(16);\n}\nfunction encodeReferenceChunk(request, id, reference) {\n  request = stringify(reference);\n  id = id.toString(16) + \":\" + request + \"\\n\";\n  return stringToChunk(id);\n}\nfunction serializeClientReference(\n  request,\n  parent,\n  parentPropertyName,\n  clientReference\n) {\n  var clientReferenceKey = clientReference.$$async\n      ? clientReference.$$id + \"#async\"\n      : clientReference.$$id,\n    writtenClientReferences = request.writtenClientReferences,\n    existingId = writtenClientReferences.get(clientReferenceKey);\n  if (void 0 !== existingId)\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + existingId.toString(16)\n      : serializeByValueID(existingId);\n  try {\n    var config = request.bundlerConfig,\n      modulePath = clientReference.$$id;\n    existingId = \"\";\n    var resolvedModuleData = config[modulePath];\n    if (resolvedModuleData) existingId = resolvedModuleData.name;\n    else {\n      var idx = modulePath.lastIndexOf(\"#\");\n      -1 !== idx &&\n        ((existingId = modulePath.slice(idx + 1)),\n        (resolvedModuleData = config[modulePath.slice(0, idx)]));\n      if (!resolvedModuleData)\n        throw Error(\n          'Could not find the module \"' +\n            modulePath +\n            '\" in the React Client Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n    }\n    if (!0 === resolvedModuleData.async && !0 === clientReference.$$async)\n      throw Error(\n        'The module \"' +\n          modulePath +\n          '\" is marked as an async ESM module but was loaded as a CJS proxy. This is probably a bug in the React Server Components bundler.'\n      );\n    var JSCompiler_inline_result =\n      !0 === resolvedModuleData.async || !0 === clientReference.$$async\n        ? [resolvedModuleData.id, resolvedModuleData.chunks, existingId, 1]\n        : [resolvedModuleData.id, resolvedModuleData.chunks, existingId];\n    request.pendingChunks++;\n    var importId = request.nextChunkId++,\n      json = stringify(JSCompiler_inline_result),\n      row = importId.toString(16) + \":I\" + json + \"\\n\",\n      processedChunk = stringToChunk(row);\n    request.completedImportChunks.push(processedChunk);\n    writtenClientReferences.set(clientReferenceKey, importId);\n    return parent[0] === REACT_ELEMENT_TYPE && \"1\" === parentPropertyName\n      ? \"$L\" + importId.toString(16)\n      : serializeByValueID(importId);\n  } catch (x) {\n    return (\n      request.pendingChunks++,\n      (parent = request.nextChunkId++),\n      (parentPropertyName = logRecoverableError(request, x, null)),\n      emitErrorChunk(request, parent, parentPropertyName),\n      serializeByValueID(parent)\n    );\n  }\n}\nfunction outlineModel(request, value) {\n  value = createTask(request, value, null, !1, request.abortableTasks);\n  retryTask(request, value);\n  return value.id;\n}\nfunction serializeTypedArray(request, tag, typedArray) {\n  request.pendingChunks++;\n  var bufferId = request.nextChunkId++;\n  emitTypedArrayChunk(request, bufferId, tag, typedArray, !1);\n  return serializeByValueID(bufferId);\n}\nfunction serializeBlob(request, blob) {\n  function progress(entry) {\n    if (0 === newTask.status)\n      if (entry.done)\n        request.cacheController.signal.removeEventListener(\"abort\", abortBlob),\n          pingTask(request, newTask);\n      else\n        return (\n          model.push(entry.value), reader.read().then(progress).catch(error)\n        );\n  }\n  function error(reason) {\n    0 === newTask.status &&\n      (request.cacheController.signal.removeEventListener(\"abort\", abortBlob),\n      erroredTask(request, newTask, reason),\n      enqueueFlush(request),\n      reader.cancel(reason).then(error, error));\n  }\n  function abortBlob() {\n    if (0 === newTask.status) {\n      var signal = request.cacheController.signal;\n      signal.removeEventListener(\"abort\", abortBlob);\n      signal = signal.reason;\n      erroredTask(request, newTask, signal);\n      enqueueFlush(request);\n      reader.cancel(signal).then(error, error);\n    }\n  }\n  var model = [blob.type],\n    newTask = createTask(request, model, null, !1, request.abortableTasks),\n    reader = blob.stream().getReader();\n  request.cacheController.signal.addEventListener(\"abort\", abortBlob);\n  reader.read().then(progress).catch(error);\n  return \"$B\" + newTask.id.toString(16);\n}\nvar modelRoot = !1;\nfunction renderModelDestructive(\n  request,\n  task,\n  parent,\n  parentPropertyName,\n  value\n) {\n  task.model = value;\n  if (value === REACT_ELEMENT_TYPE) return \"$\";\n  if (null === value) return null;\n  if (\"object\" === typeof value) {\n    switch (value.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var elementReference = null,\n          writtenObjects = request.writtenObjects;\n        if (null === task.keyPath && !task.implicitSlot) {\n          var existingReference = writtenObjects.get(value);\n          if (void 0 !== existingReference)\n            if (modelRoot === value) modelRoot = null;\n            else return existingReference;\n          else\n            -1 === parentPropertyName.indexOf(\":\") &&\n              ((parent = writtenObjects.get(parent)),\n              void 0 !== parent &&\n                ((elementReference = parent + \":\" + parentPropertyName),\n                writtenObjects.set(value, elementReference)));\n        }\n        if (3200 < serializedSize) return deferTask(request, task);\n        parentPropertyName = value.props;\n        parent = parentPropertyName.ref;\n        request = renderElement(\n          request,\n          task,\n          value.type,\n          value.key,\n          void 0 !== parent ? parent : null,\n          parentPropertyName\n        );\n        \"object\" === typeof request &&\n          null !== request &&\n          null !== elementReference &&\n          (writtenObjects.has(request) ||\n            writtenObjects.set(request, elementReference));\n        return request;\n      case REACT_LAZY_TYPE:\n        if (3200 < serializedSize) return deferTask(request, task);\n        task.thenableState = null;\n        parentPropertyName = value._init;\n        value = parentPropertyName(value._payload);\n        if (12 === request.status) throw null;\n        return renderModelDestructive(request, task, emptyRoot, \"\", value);\n      case REACT_LEGACY_ELEMENT_TYPE:\n        throw Error(\n          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\\n- Multiple copies of the \"react\" package is used.\\n- A library pre-bundled an old copy of \"react\" or \"react/jsx-runtime\".\\n- A compiler tries to \"inline\" JSX instead of using the runtime.'\n        );\n    }\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((elementReference = request.temporaryReferences.get(value)),\n      void 0 !== elementReference)\n    )\n      return \"$T\" + elementReference;\n    elementReference = request.writtenObjects;\n    writtenObjects = elementReference.get(value);\n    if (\"function\" === typeof value.then) {\n      if (void 0 !== writtenObjects) {\n        if (null !== task.keyPath || task.implicitSlot)\n          return \"$@\" + serializeThenable(request, task, value).toString(16);\n        if (modelRoot === value) modelRoot = null;\n        else return writtenObjects;\n      }\n      request = \"$@\" + serializeThenable(request, task, value).toString(16);\n      elementReference.set(value, request);\n      return request;\n    }\n    if (void 0 !== writtenObjects)\n      if (modelRoot === value) {\n        if (writtenObjects !== serializeByValueID(task.id))\n          return writtenObjects;\n        modelRoot = null;\n      } else return writtenObjects;\n    else if (\n      -1 === parentPropertyName.indexOf(\":\") &&\n      ((writtenObjects = elementReference.get(parent)),\n      void 0 !== writtenObjects)\n    ) {\n      existingReference = parentPropertyName;\n      if (isArrayImpl(parent) && parent[0] === REACT_ELEMENT_TYPE)\n        switch (parentPropertyName) {\n          case \"1\":\n            existingReference = \"type\";\n            break;\n          case \"2\":\n            existingReference = \"key\";\n            break;\n          case \"3\":\n            existingReference = \"props\";\n            break;\n          case \"4\":\n            existingReference = \"_owner\";\n        }\n      elementReference.set(value, writtenObjects + \":\" + existingReference);\n    }\n    if (isArrayImpl(value)) return renderFragment(request, task, value);\n    if (value instanceof Map)\n      return (\n        (value = Array.from(value)),\n        \"$Q\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Set)\n      return (\n        (value = Array.from(value)),\n        \"$W\" + outlineModel(request, value).toString(16)\n      );\n    if (\"function\" === typeof FormData && value instanceof FormData)\n      return (\n        (value = Array.from(value.entries())),\n        \"$K\" + outlineModel(request, value).toString(16)\n      );\n    if (value instanceof Error) return \"$Z\";\n    if (value instanceof ArrayBuffer)\n      return serializeTypedArray(request, \"A\", new Uint8Array(value));\n    if (value instanceof Int8Array)\n      return serializeTypedArray(request, \"O\", value);\n    if (value instanceof Uint8Array)\n      return serializeTypedArray(request, \"o\", value);\n    if (value instanceof Uint8ClampedArray)\n      return serializeTypedArray(request, \"U\", value);\n    if (value instanceof Int16Array)\n      return serializeTypedArray(request, \"S\", value);\n    if (value instanceof Uint16Array)\n      return serializeTypedArray(request, \"s\", value);\n    if (value instanceof Int32Array)\n      return serializeTypedArray(request, \"L\", value);\n    if (value instanceof Uint32Array)\n      return serializeTypedArray(request, \"l\", value);\n    if (value instanceof Float32Array)\n      return serializeTypedArray(request, \"G\", value);\n    if (value instanceof Float64Array)\n      return serializeTypedArray(request, \"g\", value);\n    if (value instanceof BigInt64Array)\n      return serializeTypedArray(request, \"M\", value);\n    if (value instanceof BigUint64Array)\n      return serializeTypedArray(request, \"m\", value);\n    if (value instanceof DataView)\n      return serializeTypedArray(request, \"V\", value);\n    if (\"function\" === typeof Blob && value instanceof Blob)\n      return serializeBlob(request, value);\n    if ((elementReference = getIteratorFn(value)))\n      return (\n        (parentPropertyName = elementReference.call(value)),\n        parentPropertyName === value\n          ? \"$i\" +\n            outlineModel(request, Array.from(parentPropertyName)).toString(16)\n          : renderFragment(request, task, Array.from(parentPropertyName))\n      );\n    if (\"function\" === typeof ReadableStream && value instanceof ReadableStream)\n      return serializeReadableStream(request, task, value);\n    elementReference = value[ASYNC_ITERATOR];\n    if (\"function\" === typeof elementReference)\n      return (\n        null !== task.keyPath\n          ? ((request = [\n              REACT_ELEMENT_TYPE,\n              REACT_FRAGMENT_TYPE,\n              task.keyPath,\n              { children: value }\n            ]),\n            (request = task.implicitSlot ? [request] : request))\n          : ((parentPropertyName = elementReference.call(value)),\n            (request = serializeAsyncIterable(\n              request,\n              task,\n              value,\n              parentPropertyName\n            ))),\n        request\n      );\n    if (value instanceof Date) return \"$D\" + value.toJSON();\n    request = getPrototypeOf(value);\n    if (\n      request !== ObjectPrototype &&\n      (null === request || null !== getPrototypeOf(request))\n    )\n      throw Error(\n        \"Only plain objects, and a few built-ins, can be passed to Client Components from Server Components. Classes or null prototypes are not supported.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    return value;\n  }\n  if (\"string\" === typeof value) {\n    serializedSize += value.length;\n    if (\n      \"Z\" === value[value.length - 1] &&\n      parent[parentPropertyName] instanceof Date\n    )\n      return \"$D\" + value;\n    if (1024 <= value.length && null !== byteLengthOfChunk)\n      return (\n        request.pendingChunks++,\n        (task = request.nextChunkId++),\n        emitTextChunk(request, task, value, !1),\n        serializeByValueID(task)\n      );\n    request = \"$\" === value[0] ? \"$\" + value : value;\n    return request;\n  }\n  if (\"boolean\" === typeof value) return value;\n  if (\"number\" === typeof value)\n    return Number.isFinite(value)\n      ? 0 === value && -Infinity === 1 / value\n        ? \"$-0\"\n        : value\n      : Infinity === value\n        ? \"$Infinity\"\n        : -Infinity === value\n          ? \"$-Infinity\"\n          : \"$NaN\";\n  if (\"undefined\" === typeof value) return \"$undefined\";\n  if (\"function\" === typeof value) {\n    if (value.$$typeof === CLIENT_REFERENCE_TAG$1)\n      return serializeClientReference(\n        request,\n        parent,\n        parentPropertyName,\n        value\n      );\n    if (value.$$typeof === SERVER_REFERENCE_TAG)\n      return (\n        (task = request.writtenServerReferences),\n        (parentPropertyName = task.get(value)),\n        void 0 !== parentPropertyName\n          ? (request = \"$F\" + parentPropertyName.toString(16))\n          : ((parentPropertyName = value.$$bound),\n            (parentPropertyName =\n              null === parentPropertyName\n                ? null\n                : Promise.resolve(parentPropertyName)),\n            (request = outlineModel(request, {\n              id: value.$$id,\n              bound: parentPropertyName\n            })),\n            task.set(value, request),\n            (request = \"$F\" + request.toString(16))),\n        request\n      );\n    if (\n      void 0 !== request.temporaryReferences &&\n      ((request = request.temporaryReferences.get(value)), void 0 !== request)\n    )\n      return \"$T\" + request;\n    if (value.$$typeof === TEMPORARY_REFERENCE_TAG)\n      throw Error(\n        \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n      );\n    if (/^on[A-Z]/.test(parentPropertyName))\n      throw Error(\n        \"Event handlers cannot be passed to Client Component props.\" +\n          describeObjectForErrorMessage(parent, parentPropertyName) +\n          \"\\nIf you need interactivity, consider converting part of this to a Client Component.\"\n      );\n    throw Error(\n      'Functions cannot be passed directly to Client Components unless you explicitly expose it by marking it with \"use server\". Or maybe you meant to call this function rather than return it.' +\n        describeObjectForErrorMessage(parent, parentPropertyName)\n    );\n  }\n  if (\"symbol\" === typeof value) {\n    task = request.writtenSymbols;\n    elementReference = task.get(value);\n    if (void 0 !== elementReference)\n      return serializeByValueID(elementReference);\n    elementReference = value.description;\n    if (Symbol.for(elementReference) !== value)\n      throw Error(\n        \"Only global symbols received from Symbol.for(...) can be passed to Client Components. The symbol Symbol.for(\" +\n          (value.description + \") cannot be found among global symbols.\") +\n          describeObjectForErrorMessage(parent, parentPropertyName)\n      );\n    request.pendingChunks++;\n    parentPropertyName = request.nextChunkId++;\n    parent = encodeReferenceChunk(\n      request,\n      parentPropertyName,\n      \"$S\" + elementReference\n    );\n    request.completedImportChunks.push(parent);\n    task.set(value, parentPropertyName);\n    return serializeByValueID(parentPropertyName);\n  }\n  if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n  throw Error(\n    \"Type \" +\n      typeof value +\n      \" is not supported in Client Component props.\" +\n      describeObjectForErrorMessage(parent, parentPropertyName)\n  );\n}\nfunction logRecoverableError(request, error) {\n  var prevRequest = currentRequest;\n  currentRequest = null;\n  try {\n    var onError = request.onError;\n    var errorDigest = supportsRequestStorage\n      ? requestStorage.run(void 0, onError, error)\n      : onError(error);\n  } finally {\n    currentRequest = prevRequest;\n  }\n  if (null != errorDigest && \"string\" !== typeof errorDigest)\n    throw Error(\n      'onError returned something with a type other than \"string\". onError should return a string and may return null or undefined but must not return anything else. It received something of type \"' +\n        typeof errorDigest +\n        '\" instead'\n    );\n  return errorDigest || \"\";\n}\nfunction fatalError(request, error) {\n  var onFatalError = request.onFatalError;\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n  request.cacheController.abort(\n    Error(\"The render was aborted due to a fatal error.\", { cause: error })\n  );\n}\nfunction emitErrorChunk(request, id, digest) {\n  digest = { digest: digest };\n  id = id.toString(16) + \":E\" + stringify(digest) + \"\\n\";\n  id = stringToChunk(id);\n  request.completedErrorChunks.push(id);\n}\nfunction emitModelChunk(request, id, json) {\n  id = id.toString(16) + \":\" + json + \"\\n\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id);\n}\nfunction emitTypedArrayChunk(request, id, tag, typedArray, debug) {\n  debug ? request.pendingDebugChunks++ : request.pendingChunks++;\n  debug = new Uint8Array(\n    typedArray.buffer,\n    typedArray.byteOffset,\n    typedArray.byteLength\n  );\n  typedArray = 2048 < typedArray.byteLength ? debug.slice() : debug;\n  debug = typedArray.byteLength;\n  id = id.toString(16) + \":\" + tag + debug.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, typedArray);\n}\nfunction emitTextChunk(request, id, text, debug) {\n  if (null === byteLengthOfChunk)\n    throw Error(\n      \"Existence of byteLengthOfChunk should have already been checked. This is a bug in React.\"\n    );\n  debug ? request.pendingDebugChunks++ : request.pendingChunks++;\n  text = stringToChunk(text);\n  debug = text.byteLength;\n  id = id.toString(16) + \":T\" + debug.toString(16) + \",\";\n  id = stringToChunk(id);\n  request.completedRegularChunks.push(id, text);\n}\nfunction emitChunk(request, task, value) {\n  var id = task.id;\n  \"string\" === typeof value && null !== byteLengthOfChunk\n    ? emitTextChunk(request, id, value, !1)\n    : value instanceof ArrayBuffer\n      ? emitTypedArrayChunk(request, id, \"A\", new Uint8Array(value), !1)\n      : value instanceof Int8Array\n        ? emitTypedArrayChunk(request, id, \"O\", value, !1)\n        : value instanceof Uint8Array\n          ? emitTypedArrayChunk(request, id, \"o\", value, !1)\n          : value instanceof Uint8ClampedArray\n            ? emitTypedArrayChunk(request, id, \"U\", value, !1)\n            : value instanceof Int16Array\n              ? emitTypedArrayChunk(request, id, \"S\", value, !1)\n              : value instanceof Uint16Array\n                ? emitTypedArrayChunk(request, id, \"s\", value, !1)\n                : value instanceof Int32Array\n                  ? emitTypedArrayChunk(request, id, \"L\", value, !1)\n                  : value instanceof Uint32Array\n                    ? emitTypedArrayChunk(request, id, \"l\", value, !1)\n                    : value instanceof Float32Array\n                      ? emitTypedArrayChunk(request, id, \"G\", value, !1)\n                      : value instanceof Float64Array\n                        ? emitTypedArrayChunk(request, id, \"g\", value, !1)\n                        : value instanceof BigInt64Array\n                          ? emitTypedArrayChunk(request, id, \"M\", value, !1)\n                          : value instanceof BigUint64Array\n                            ? emitTypedArrayChunk(request, id, \"m\", value, !1)\n                            : value instanceof DataView\n                              ? emitTypedArrayChunk(request, id, \"V\", value, !1)\n                              : ((value = stringify(value, task.toJSON)),\n                                emitModelChunk(request, task.id, value));\n}\nfunction erroredTask(request, task, error) {\n  task.status = 4;\n  error = logRecoverableError(request, error, task);\n  emitErrorChunk(request, task.id, error);\n  request.abortableTasks.delete(task);\n  callOnAllReadyIfReady(request);\n}\nvar emptyRoot = {};\nfunction retryTask(request, task) {\n  if (0 === task.status) {\n    task.status = 5;\n    var parentSerializedSize = serializedSize;\n    try {\n      modelRoot = task.model;\n      var resolvedModel = renderModelDestructive(\n        request,\n        task,\n        emptyRoot,\n        \"\",\n        task.model\n      );\n      modelRoot = resolvedModel;\n      task.keyPath = null;\n      task.implicitSlot = !1;\n      if (\"object\" === typeof resolvedModel && null !== resolvedModel)\n        request.writtenObjects.set(resolvedModel, serializeByValueID(task.id)),\n          emitChunk(request, task, resolvedModel);\n      else {\n        var json = stringify(resolvedModel);\n        emitModelChunk(request, task.id, json);\n      }\n      task.status = 1;\n      request.abortableTasks.delete(task);\n      callOnAllReadyIfReady(request);\n    } catch (thrownValue) {\n      if (12 === request.status) {\n        request.abortableTasks.delete(task);\n        task.status = 0;\n        var errorId = request.fatalError;\n        abortTask(task);\n        finishAbortedTask(task, request, errorId);\n      } else {\n        var x =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue;\n        if (\n          \"object\" === typeof x &&\n          null !== x &&\n          \"function\" === typeof x.then\n        ) {\n          task.status = 0;\n          task.thenableState = getThenableStateAfterSuspending();\n          var ping = task.ping;\n          x.then(ping, ping);\n        } else erroredTask(request, task, x);\n      }\n    } finally {\n      serializedSize = parentSerializedSize;\n    }\n  }\n}\nfunction tryStreamTask(request, task) {\n  var parentSerializedSize = serializedSize;\n  try {\n    emitChunk(request, task, task.model);\n  } finally {\n    serializedSize = parentSerializedSize;\n  }\n}\nfunction performWork(request) {\n  var prevDispatcher = ReactSharedInternalsServer.H;\n  ReactSharedInternalsServer.H = HooksDispatcher;\n  var prevRequest = currentRequest;\n  currentRequest$1 = currentRequest = request;\n  try {\n    var pingedTasks = request.pingedTasks;\n    request.pingedTasks = [];\n    for (var i = 0; i < pingedTasks.length; i++)\n      retryTask(request, pingedTasks[i]);\n    flushCompletedChunks(request);\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  } finally {\n    (ReactSharedInternalsServer.H = prevDispatcher),\n      (currentRequest$1 = null),\n      (currentRequest = prevRequest);\n  }\n}\nfunction abortTask(task) {\n  0 === task.status && (task.status = 3);\n}\nfunction finishAbortedTask(task, request, errorId) {\n  3 === task.status &&\n    ((errorId = serializeByValueID(errorId)),\n    (task = encodeReferenceChunk(request, task.id, errorId)),\n    request.completedErrorChunks.push(task));\n}\nfunction flushCompletedChunks(request) {\n  var destination = request.destination;\n  if (null !== destination) {\n    currentView = new Uint8Array(2048);\n    writtenBytes = 0;\n    try {\n      for (\n        var importsChunks = request.completedImportChunks, i = 0;\n        i < importsChunks.length;\n        i++\n      )\n        request.pendingChunks--,\n          writeChunkAndReturn(destination, importsChunks[i]);\n      importsChunks.splice(0, i);\n      var hintChunks = request.completedHintChunks;\n      for (i = 0; i < hintChunks.length; i++)\n        writeChunkAndReturn(destination, hintChunks[i]);\n      hintChunks.splice(0, i);\n      var regularChunks = request.completedRegularChunks;\n      for (i = 0; i < regularChunks.length; i++)\n        request.pendingChunks--,\n          writeChunkAndReturn(destination, regularChunks[i]);\n      regularChunks.splice(0, i);\n      var errorChunks = request.completedErrorChunks;\n      for (i = 0; i < errorChunks.length; i++)\n        request.pendingChunks--,\n          writeChunkAndReturn(destination, errorChunks[i]);\n      errorChunks.splice(0, i);\n    } finally {\n      (request.flushScheduled = !1),\n        currentView &&\n          0 < writtenBytes &&\n          (destination.enqueue(\n            new Uint8Array(currentView.buffer, 0, writtenBytes)\n          ),\n          (currentView = null),\n          (writtenBytes = 0));\n    }\n  }\n  0 === request.pendingChunks &&\n    (12 > request.status &&\n      request.cacheController.abort(\n        Error(\n          \"This render completed successfully. All cacheSignals are now aborted to allow clean up of any unused resources.\"\n        )\n      ),\n    null !== request.destination &&\n      ((request.status = 14),\n      request.destination.close(),\n      (request.destination = null)));\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeout(function () {\n    10 === request.status && (request.status = 11);\n  }, 0);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeout(function () {\n      request.flushScheduled = !1;\n      flushCompletedChunks(request);\n    }, 0));\n}\nfunction callOnAllReadyIfReady(request) {\n  0 === request.abortableTasks.size &&\n    ((request = request.onAllReady), request());\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedChunks(request);\n    } catch (error) {\n      logRecoverableError(request, error, null), fatalError(request, error);\n    }\n  }\n}\nfunction finishAbort(request, abortedTasks, errorId) {\n  try {\n    abortedTasks.forEach(function (task) {\n      return finishAbortedTask(task, request, errorId);\n    });\n    var onAllReady = request.onAllReady;\n    onAllReady();\n    flushCompletedChunks(request);\n  } catch (error) {\n    logRecoverableError(request, error, null), fatalError(request, error);\n  }\n}\nfunction abort(request, reason) {\n  if (!(11 < request.status))\n    try {\n      request.status = 12;\n      request.cacheController.abort(reason);\n      var abortableTasks = request.abortableTasks;\n      if (0 < abortableTasks.size) {\n        var error =\n            void 0 === reason\n              ? Error(\"The render was aborted by the server without a reason.\")\n              : \"object\" === typeof reason &&\n                  null !== reason &&\n                  \"function\" === typeof reason.then\n                ? Error(\"The render was aborted by the server with a promise.\")\n                : reason,\n          digest = logRecoverableError(request, error, null),\n          errorId = request.nextChunkId++;\n        request.fatalError = errorId;\n        request.pendingChunks++;\n        emitErrorChunk(request, errorId, digest, error, !1);\n        abortableTasks.forEach(function (task) {\n          return abortTask(task, request, errorId);\n        });\n        setTimeout(function () {\n          return finishAbort(request, abortableTasks, errorId);\n        }, 0);\n      } else {\n        var onAllReady = request.onAllReady;\n        onAllReady();\n        flushCompletedChunks(request);\n      }\n    } catch (error$23) {\n      logRecoverableError(request, error$23, null),\n        fatalError(request, error$23);\n    }\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nfunction Chunk(status, value, reason, response) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n  this._response = response;\n}\nChunk.prototype = Object.create(Promise.prototype);\nChunk.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    default:\n      reject(this.reason);\n  }\n};\nfunction createPendingChunk(response) {\n  return new Chunk(\"pending\", null, null, response);\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) (0, listeners[i])(value);\n}\nfunction triggerErrorOnChunk(chunk, error) {\n  if (\"pending\" !== chunk.status && \"blocked\" !== chunk.status)\n    chunk.reason.error(error);\n  else {\n    var listeners = chunk.reason;\n    chunk.status = \"rejected\";\n    chunk.reason = error;\n    null !== listeners && wakeChunk(listeners, error);\n  }\n}\nfunction resolveModelChunk(chunk, value, id) {\n  if (\"pending\" !== chunk.status)\n    (chunk = chunk.reason),\n      \"C\" === value[0]\n        ? chunk.close(\"C\" === value ? '\"$undefined\"' : value.slice(1))\n        : chunk.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = id;\n    if (null !== resolveListeners)\n      switch ((initializeModelChunk(chunk), chunk.status)) {\n        case \"fulfilled\":\n          wakeChunk(resolveListeners, chunk.value);\n          break;\n        case \"pending\":\n        case \"blocked\":\n        case \"cyclic\":\n          if (chunk.value)\n            for (value = 0; value < resolveListeners.length; value++)\n              chunk.value.push(resolveListeners[value]);\n          else chunk.value = resolveListeners;\n          if (chunk.reason) {\n            if (rejectListeners)\n              for (value = 0; value < rejectListeners.length; value++)\n                chunk.reason.push(rejectListeners[value]);\n          } else chunk.reason = rejectListeners;\n          break;\n        case \"rejected\":\n          rejectListeners && wakeChunk(rejectListeners, chunk.reason);\n      }\n  }\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new Chunk(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1,\n    response\n  );\n}\nfunction resolveIteratorResultChunk(chunk, value, done) {\n  resolveModelChunk(\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    -1\n  );\n}\nfunction loadServerReference$1(\n  response,\n  id,\n  bound,\n  parentChunk,\n  parentObject,\n  key\n) {\n  var serverReference = resolveServerReference(response._bundlerConfig, id);\n  id = preloadModule(serverReference);\n  if (bound)\n    bound = Promise.all([bound, id]).then(function (_ref) {\n      _ref = _ref[0];\n      var fn = requireModule(serverReference);\n      return fn.bind.apply(fn, [null].concat(_ref));\n    });\n  else if (id)\n    bound = Promise.resolve(id).then(function () {\n      return requireModule(serverReference);\n    });\n  else return requireModule(serverReference);\n  bound.then(\n    createModelResolver(\n      parentChunk,\n      parentObject,\n      key,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(parentChunk)\n  );\n  return null;\n}\nfunction reviveModel(response, parentObj, parentKey, value, reference) {\n  if (\"string\" === typeof value)\n    return parseModelString(response, parentObj, parentKey, value, reference);\n  if (\"object\" === typeof value && null !== value)\n    if (\n      (void 0 !== reference &&\n        void 0 !== response._temporaryReferences &&\n        response._temporaryReferences.set(value, reference),\n      Array.isArray(value))\n    )\n      for (var i = 0; i < value.length; i++)\n        value[i] = reviveModel(\n          response,\n          value,\n          \"\" + i,\n          value[i],\n          void 0 !== reference ? reference + \":\" + i : void 0\n        );\n    else\n      for (i in value)\n        hasOwnProperty.call(value, i) &&\n          ((parentObj =\n            void 0 !== reference && -1 === i.indexOf(\":\")\n              ? reference + \":\" + i\n              : void 0),\n          (parentObj = reviveModel(response, value, i, value[i], parentObj)),\n          void 0 !== parentObj ? (value[i] = parentObj) : delete value[i]);\n  return value;\n}\nvar initializingChunk = null,\n  initializingChunkBlockedModel = null;\nfunction initializeModelChunk(chunk) {\n  var prevChunk = initializingChunk,\n    prevBlocked = initializingChunkBlockedModel;\n  initializingChunk = chunk;\n  initializingChunkBlockedModel = null;\n  var rootReference = -1 === chunk.reason ? void 0 : chunk.reason.toString(16),\n    resolvedModel = chunk.value;\n  chunk.status = \"cyclic\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var rawModel = JSON.parse(resolvedModel),\n      value = reviveModel(\n        chunk._response,\n        { \"\": rawModel },\n        \"\",\n        rawModel,\n        rootReference\n      );\n    if (\n      null !== initializingChunkBlockedModel &&\n      0 < initializingChunkBlockedModel.deps\n    )\n      (initializingChunkBlockedModel.value = value), (chunk.status = \"blocked\");\n    else {\n      var resolveListeners = chunk.value;\n      chunk.status = \"fulfilled\";\n      chunk.value = value;\n      null !== resolveListeners && wakeChunk(resolveListeners, value);\n    }\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    (initializingChunk = prevChunk),\n      (initializingChunkBlockedModel = prevBlocked);\n  }\n}\nfunction reportGlobalError(response, error) {\n  response._closed = !0;\n  response._closedReason = error;\n  response._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status && triggerErrorOnChunk(chunk, error);\n  });\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._formData.get(response._prefix + id)),\n    (chunk =\n      null != chunk\n        ? new Chunk(\"resolved_model\", chunk, id, response)\n        : response._closed\n          ? new Chunk(\"rejected\", null, response._closedReason, response)\n          : createPendingChunk(response)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction createModelResolver(\n  chunk,\n  parentObject,\n  key,\n  cyclic,\n  response,\n  map,\n  path\n) {\n  if (initializingChunkBlockedModel) {\n    var blocked = initializingChunkBlockedModel;\n    cyclic || blocked.deps++;\n  } else\n    blocked = initializingChunkBlockedModel = {\n      deps: cyclic ? 0 : 1,\n      value: null\n    };\n  return function (value) {\n    for (var i = 1; i < path.length; i++) value = value[path[i]];\n    parentObject[key] = map(response, value);\n    \"\" === key && null === blocked.value && (blocked.value = parentObject[key]);\n    blocked.deps--;\n    0 === blocked.deps &&\n      \"blocked\" === chunk.status &&\n      ((value = chunk.value),\n      (chunk.status = \"fulfilled\"),\n      (chunk.value = blocked.value),\n      null !== value && wakeChunk(value, blocked.value));\n  };\n}\nfunction createModelReject(chunk) {\n  return function (error) {\n    return triggerErrorOnChunk(chunk, error);\n  };\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      parentObject = id.value;\n      for (key = 1; key < reference.length; key++)\n        parentObject = parentObject[reference[key]];\n      return map(response, parentObject);\n    case \"pending\":\n    case \"blocked\":\n    case \"cyclic\":\n      var parentChunk = initializingChunk;\n      id.then(\n        createModelResolver(\n          parentChunk,\n          parentObject,\n          key,\n          \"cyclic\" === id.status,\n          response,\n          map,\n          reference\n        ),\n        createModelReject(parentChunk)\n      );\n      return null;\n    default:\n      throw id.reason;\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseTypedArray(\n  response,\n  reference,\n  constructor,\n  bytesPerElement,\n  parentObject,\n  parentKey\n) {\n  reference = parseInt(reference.slice(2), 16);\n  reference = response._formData.get(response._prefix + reference);\n  reference =\n    constructor === ArrayBuffer\n      ? reference.arrayBuffer()\n      : reference.arrayBuffer().then(function (buffer) {\n          return new constructor(buffer);\n        });\n  bytesPerElement = initializingChunk;\n  reference.then(\n    createModelResolver(\n      bytesPerElement,\n      parentObject,\n      parentKey,\n      !1,\n      response,\n      createModel,\n      []\n    ),\n    createModelReject(bytesPerElement)\n  );\n  return null;\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  stream = new Chunk(\"fulfilled\", stream, controller, response);\n  chunks.set(id, stream);\n  response = response._formData.getAll(response._prefix + id);\n  for (id = 0; id < response.length; id++)\n    (chunks = response[id]),\n      \"C\" === chunks[0]\n        ? controller.close(\"C\" === chunks ? '\"$undefined\"' : chunks.slice(1))\n        : controller.enqueueModel(chunks);\n}\nfunction parseReadableStream(response, reference, type) {\n  reference = parseInt(reference.slice(2), 16);\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, reference, type, {\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new Chunk(\"resolved_model\", json, -1, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$26 = createPendingChunk(response);\n        chunk$26.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$26;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$26 && (previousBlockedChunk = null);\n          resolveModelChunk(chunk$26, json, -1);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n  return type;\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction parseAsyncIterable(response, reference, iterator) {\n  reference = parseInt(reference.slice(2), 16);\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    $jscomp$compprop2 = {};\n  $jscomp$compprop2 =\n    (($jscomp$compprop2[ASYNC_ITERATOR] = function () {\n      var nextReadIndex = 0;\n      return createIterator(function (arg) {\n        if (void 0 !== arg)\n          throw Error(\n            \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n          );\n        if (nextReadIndex === buffer.length) {\n          if (closed)\n            return new Chunk(\n              \"fulfilled\",\n              { done: !0, value: void 0 },\n              null,\n              response\n            );\n          buffer[nextReadIndex] = createPendingChunk(response);\n        }\n        return buffer[nextReadIndex++];\n      });\n    }),\n    $jscomp$compprop2);\n  iterator = iterator ? $jscomp$compprop2[ASYNC_ITERATOR]() : $jscomp$compprop2;\n  resolveStream(response, reference, iterator, {\n    enqueueModel: function (value) {\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !1\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !1);\n      nextWriteIndex++;\n    },\n    close: function (value) {\n      closed = !0;\n      nextWriteIndex === buffer.length\n        ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n            response,\n            value,\n            !0\n          ))\n        : resolveIteratorResultChunk(buffer[nextWriteIndex], value, !0);\n      for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n        resolveIteratorResultChunk(\n          buffer[nextWriteIndex++],\n          '\"$undefined\"',\n          !0\n        );\n    },\n    error: function (error) {\n      closed = !0;\n      for (\n        nextWriteIndex === buffer.length &&\n        (buffer[nextWriteIndex] = createPendingChunk(response));\n        nextWriteIndex < buffer.length;\n\n      )\n        triggerErrorOnChunk(buffer[nextWriteIndex++], error);\n    }\n  });\n  return iterator;\n}\nfunction parseModelString(response, obj, key, value, reference) {\n  if (\"$\" === value[0]) {\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"@\":\n        return (obj = parseInt(value.slice(2), 16)), getChunk(response, obj);\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          (value = getOutlinedModel(response, value, obj, key, createModel)),\n          loadServerReference$1(\n            response,\n            value.id,\n            value.bound,\n            initializingChunk,\n            obj,\n            key\n          )\n        );\n      case \"T\":\n        if (void 0 === reference || void 0 === response._temporaryReferences)\n          throw Error(\n            \"Could not reference an opaque temporary reference. This is likely due to misconfiguring the temporaryReferences options on the server.\"\n          );\n        return createTemporaryReference(\n          response._temporaryReferences,\n          reference\n        );\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, createSet)\n        );\n      case \"K\":\n        obj = value.slice(2);\n        var formPrefix = response._prefix + obj + \"_\",\n          data = new FormData();\n        response._formData.forEach(function (entry, entryKey) {\n          entryKey.startsWith(formPrefix) &&\n            data.append(entryKey.slice(formPrefix.length), entry);\n        });\n        return data;\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, obj, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n    }\n    switch (value[1]) {\n      case \"A\":\n        return parseTypedArray(response, value, ArrayBuffer, 1, obj, key);\n      case \"O\":\n        return parseTypedArray(response, value, Int8Array, 1, obj, key);\n      case \"o\":\n        return parseTypedArray(response, value, Uint8Array, 1, obj, key);\n      case \"U\":\n        return parseTypedArray(response, value, Uint8ClampedArray, 1, obj, key);\n      case \"S\":\n        return parseTypedArray(response, value, Int16Array, 2, obj, key);\n      case \"s\":\n        return parseTypedArray(response, value, Uint16Array, 2, obj, key);\n      case \"L\":\n        return parseTypedArray(response, value, Int32Array, 4, obj, key);\n      case \"l\":\n        return parseTypedArray(response, value, Uint32Array, 4, obj, key);\n      case \"G\":\n        return parseTypedArray(response, value, Float32Array, 4, obj, key);\n      case \"g\":\n        return parseTypedArray(response, value, Float64Array, 8, obj, key);\n      case \"M\":\n        return parseTypedArray(response, value, BigInt64Array, 8, obj, key);\n      case \"m\":\n        return parseTypedArray(response, value, BigUint64Array, 8, obj, key);\n      case \"V\":\n        return parseTypedArray(response, value, DataView, 1, obj, key);\n      case \"B\":\n        return (\n          (obj = parseInt(value.slice(2), 16)),\n          response._formData.get(response._prefix + obj)\n        );\n    }\n    switch (value[1]) {\n      case \"R\":\n        return parseReadableStream(response, value, void 0);\n      case \"r\":\n        return parseReadableStream(response, value, \"bytes\");\n      case \"X\":\n        return parseAsyncIterable(response, value, !1);\n      case \"x\":\n        return parseAsyncIterable(response, value, !0);\n    }\n    value = value.slice(1);\n    return getOutlinedModel(response, value, obj, key, createModel);\n  }\n  return value;\n}\nfunction createResponse(bundlerConfig, formFieldPrefix, temporaryReferences) {\n  var backingFormData =\n      3 < arguments.length && void 0 !== arguments[3]\n        ? arguments[3]\n        : new FormData(),\n    chunks = new Map();\n  return {\n    _bundlerConfig: bundlerConfig,\n    _prefix: formFieldPrefix,\n    _formData: backingFormData,\n    _chunks: chunks,\n    _closed: !1,\n    _closedReason: null,\n    _temporaryReferences: temporaryReferences\n  };\n}\nfunction close(response) {\n  reportGlobalError(response, Error(\"Connection closed.\"));\n}\nfunction loadServerReference(bundlerConfig, id, bound) {\n  var serverReference = resolveServerReference(bundlerConfig, id);\n  bundlerConfig = preloadModule(serverReference);\n  return bound\n    ? Promise.all([bound, bundlerConfig]).then(function (_ref) {\n        _ref = _ref[0];\n        var fn = requireModule(serverReference);\n        return fn.bind.apply(fn, [null].concat(_ref));\n      })\n    : bundlerConfig\n      ? Promise.resolve(bundlerConfig).then(function () {\n          return requireModule(serverReference);\n        })\n      : Promise.resolve(requireModule(serverReference));\n}\nfunction decodeBoundActionMetaData(body, serverManifest, formFieldPrefix) {\n  body = createResponse(serverManifest, formFieldPrefix, void 0, body);\n  close(body);\n  body = getChunk(body, 0);\n  body.then(function () {});\n  if (\"fulfilled\" !== body.status) throw body.reason;\n  return body.value;\n}\nexports.createClientModuleProxy = function (moduleId) {\n  moduleId = registerClientReferenceImpl({}, moduleId, !1);\n  return new Proxy(moduleId, proxyHandlers$1);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new WeakMap();\n};\nexports.decodeAction = function (body, serverManifest) {\n  var formData = new FormData(),\n    action = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_\")\n      ? key.startsWith(\"$ACTION_REF_\")\n        ? ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n          (value = decodeBoundActionMetaData(body, serverManifest, value)),\n          (action = loadServerReference(serverManifest, value.id, value.bound)))\n        : key.startsWith(\"$ACTION_ID_\") &&\n          ((value = key.slice(11)),\n          (action = loadServerReference(serverManifest, value, null)))\n      : formData.append(key, value);\n  });\n  return null === action\n    ? null\n    : action.then(function (fn) {\n        return fn.bind(null, formData);\n      });\n};\nexports.decodeFormState = function (actionResult, body, serverManifest) {\n  var keyPath = body.get(\"$ACTION_KEY\");\n  if (\"string\" !== typeof keyPath) return Promise.resolve(null);\n  var metaData = null;\n  body.forEach(function (value, key) {\n    key.startsWith(\"$ACTION_REF_\") &&\n      ((value = \"$ACTION_\" + key.slice(12) + \":\"),\n      (metaData = decodeBoundActionMetaData(body, serverManifest, value)));\n  });\n  if (null === metaData) return Promise.resolve(null);\n  var referenceId = metaData.id;\n  return Promise.resolve(metaData.bound).then(function (bound) {\n    return null === bound\n      ? null\n      : [actionResult, keyPath, referenceId, bound.length - 1];\n  });\n};\nexports.decodeReply = function (body, webpackMap, options) {\n  if (\"string\" === typeof body) {\n    var form = new FormData();\n    form.append(\"0\", body);\n    body = form;\n  }\n  body = createResponse(\n    webpackMap,\n    \"\",\n    options ? options.temporaryReferences : void 0,\n    body\n  );\n  webpackMap = getChunk(body, 0);\n  close(body);\n  return webpackMap;\n};\nexports.decodeReplyFromAsyncIterable = function (\n  iterable,\n  webpackMap,\n  options\n) {\n  function progress(entry) {\n    if (entry.done) close(response);\n    else {\n      entry = entry.value;\n      var name = entry[0];\n      entry = entry[1];\n      if (\"string\" === typeof entry) {\n        response._formData.append(name, entry);\n        var prefix = response._prefix;\n        if (name.startsWith(prefix)) {\n          var chunks = response._chunks;\n          name = +name.slice(prefix.length);\n          (chunks = chunks.get(name)) && resolveModelChunk(chunks, entry, name);\n        }\n      } else response._formData.append(name, entry);\n      iterator.next().then(progress, error);\n    }\n  }\n  function error(reason) {\n    reportGlobalError(response, reason);\n    \"function\" === typeof iterator.throw &&\n      iterator.throw(reason).then(error, error);\n  }\n  var iterator = iterable[ASYNC_ITERATOR](),\n    response = createResponse(\n      webpackMap,\n      \"\",\n      options ? options.temporaryReferences : void 0\n    );\n  iterator.next().then(progress, error);\n  return getChunk(response, 0);\n};\nexports.registerClientReference = function (\n  proxyImplementation,\n  id,\n  exportName\n) {\n  return registerClientReferenceImpl(\n    proxyImplementation,\n    id + \"#\" + exportName,\n    !1\n  );\n};\nexports.registerServerReference = function (reference, id, exportName) {\n  return Object.defineProperties(reference, {\n    $$typeof: { value: SERVER_REFERENCE_TAG },\n    $$id: {\n      value: null === exportName ? id : id + \"#\" + exportName,\n      configurable: !0\n    },\n    $$bound: { value: null, configurable: !0 },\n    bind: { value: bind, configurable: !0 }\n  });\n};\nexports.renderToReadableStream = function (model, webpackMap, options) {\n  var request = new RequestInstance(\n    20,\n    model,\n    webpackMap,\n    options ? options.onError : void 0,\n    options ? options.onPostpone : void 0,\n    noop,\n    noop,\n    options ? options.identifierPrefix : void 0,\n    options ? options.temporaryReferences : void 0\n  );\n  if (options && options.signal) {\n    var signal = options.signal;\n    if (signal.aborted) abort(request, signal.reason);\n    else {\n      var listener = function () {\n        abort(request, signal.reason);\n        signal.removeEventListener(\"abort\", listener);\n      };\n      signal.addEventListener(\"abort\", listener);\n    }\n  }\n  return new ReadableStream(\n    {\n      type: \"bytes\",\n      start: function () {\n        startWork(request);\n      },\n      pull: function (controller) {\n        startFlowing(request, controller);\n      },\n      cancel: function (reason) {\n        request.destination = null;\n        abort(request, reason);\n      }\n    },\n    { highWaterMark: 0 }\n  );\n};\nexports.unstable_prerender = function (model, webpackMap, options) {\n  return new Promise(function (resolve, reject) {\n    var request = new RequestInstance(\n      21,\n      model,\n      webpackMap,\n      options ? options.onError : void 0,\n      options ? options.onPostpone : void 0,\n      function () {\n        var stream = new ReadableStream(\n          {\n            type: \"bytes\",\n            pull: function (controller) {\n              startFlowing(request, controller);\n            },\n            cancel: function (reason) {\n              request.destination = null;\n              abort(request, reason);\n            }\n          },\n          { highWaterMark: 0 }\n        );\n        resolve({ prelude: stream });\n      },\n      reject,\n      options ? options.identifierPrefix : void 0,\n      options ? options.temporaryReferences : void 0\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const isExternalURL = registerClientReference(\nfunction() { throw new Error(\"Attempted to call isExternalURL() from the server but isExternalURL is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\",\n\"isExternalURL\",\n);export const createPrefetchURL = registerClientReference(\nfunction() { throw new Error(\"Attempted to call createPrefetchURL() from the server but createPrefetchURL is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\",\n\"createPrefetchURL\",\n);export const createEmptyCacheNode = registerClientReference(\nfunction() { throw new Error(\"Attempted to call createEmptyCacheNode() from the server but createEmptyCacheNode is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\",\n\"createEmptyCacheNode\",\n);export default registerClientReference(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\",\n\"default\",\n);\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.react-server.development.js');\n}\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n            span.setAttribute('error.type', error.name);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var r=e;\n/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */r.parse=parse;r.serialize=serialize;var i=decodeURIComponent;var t=encodeURIComponent;var a=/; */;var n=/^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;function parse(e,r){if(typeof e!==\"string\"){throw new TypeError(\"argument str must be a string\")}var t={};var n=r||{};var o=e.split(a);var s=n.decode||i;for(var p=0;p<o.length;p++){var f=o[p];var u=f.indexOf(\"=\");if(u<0){continue}var v=f.substr(0,u).trim();var c=f.substr(++u,f.length).trim();if('\"'==c[0]){c=c.slice(1,-1)}if(undefined==t[v]){t[v]=tryDecode(c,s)}}return t}function serialize(e,r,i){var a=i||{};var o=a.encode||t;if(typeof o!==\"function\"){throw new TypeError(\"option encode is invalid\")}if(!n.test(e)){throw new TypeError(\"argument name is invalid\")}var s=o(r);if(s&&!n.test(s)){throw new TypeError(\"argument val is invalid\")}var p=e+\"=\"+s;if(null!=a.maxAge){var f=a.maxAge-0;if(isNaN(f)||!isFinite(f)){throw new TypeError(\"option maxAge is invalid\")}p+=\"; Max-Age=\"+Math.floor(f)}if(a.domain){if(!n.test(a.domain)){throw new TypeError(\"option domain is invalid\")}p+=\"; Domain=\"+a.domain}if(a.path){if(!n.test(a.path)){throw new TypeError(\"option path is invalid\")}p+=\"; Path=\"+a.path}if(a.expires){if(typeof a.expires.toUTCString!==\"function\"){throw new TypeError(\"option expires is invalid\")}p+=\"; Expires=\"+a.expires.toUTCString()}if(a.httpOnly){p+=\"; HttpOnly\"}if(a.secure){p+=\"; Secure\"}if(a.sameSite){var u=typeof a.sameSite===\"string\"?a.sameSite.toLowerCase():a.sameSite;switch(u){case true:p+=\"; SameSite=Strict\";break;case\"lax\":p+=\"; SameSite=Lax\";break;case\"strict\":p+=\"; SameSite=Strict\";break;case\"none\":p+=\"; SameSite=None\";break;default:throw new TypeError(\"option sameSite is invalid\")}}return p}function tryDecode(e,r){try{return r(e)}catch(r){return e}}})();module.exports=e})();","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const ServerInsertedHTMLContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call ServerInsertedHTMLContext() from the server but ServerInsertedHTMLContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\",\n\"ServerInsertedHTMLContext\",\n);export const useServerInsertedHTML = registerClientReference(\nfunction() { throw new Error(\"Attempted to call useServerInsertedHTML() from the server but useServerInsertedHTML is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\",\n\"useServerInsertedHTML\",\n);","const ERROR_MESSAGE = 'Internal Error: do not use legacy react-dom/server APIs. If you encountered this error, please open an issue on the Next.js repo.';\nfunction error() {\n    throw Object.defineProperty(new Error(ERROR_MESSAGE), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\nvar b;\nif (process.env.NEXT_RUNTIME === 'nodejs') {\n    if (process.env.NODE_ENV === 'production') {\n        b = require('next/dist/compiled/react-dom/cjs/react-dom-server.node.production.js');\n    } else {\n        b = require('next/dist/compiled/react-dom/cjs/react-dom-server.node.development.js');\n    }\n} else {\n    if (process.env.NODE_ENV === 'production') {\n        b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.production.js');\n    } else {\n        b = require('next/dist/compiled/react-dom/cjs/react-dom-server.edge.development.js');\n    }\n}\nexports.version = b.version;\nexports.renderToReadableStream = b.renderToReadableStream;\nexports.renderToString = error;\nexports.renderToStaticMarkup = error;\nif (b.resume) {\n    exports.resume = b.resume;\n}\n\n//# sourceMappingURL=react-dom-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    getTestReqInfo: null,\n    withRequest: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    },\n    withRequest: function() {\n        return withRequest;\n    }\n});\nconst _nodeasync_hooks = require(\"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, 'next-test-proxy-port');\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, 'next-test-data') || '';\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=context.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const ClientPageRoot = registerClientReference(\nfunction() { throw new Error(\"Attempted to call ClientPageRoot() from the server but ClientPageRoot is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-page.js\",\n\"ClientPageRoot\",\n);","function _class_private_field_loose_base(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n        throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n\n    return receiver;\n}\nexport { _class_private_field_loose_base as _ };\n","var id = 0;\n\nfunction _class_private_field_loose_key(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n}\nexport { _class_private_field_loose_key as _ };\n","/*\n    This is a simple promise queue that allows you to limit the number of concurrent promises\n    that are running at any given time. It's used to limit the number of concurrent\n    prefetch requests that are being made to the server but could be used for other\n    things as well.\n*/\nexport class PromiseQueue {\n  #maxConcurrency: number\n  #runningCount: number\n  #queue: Array<{\n    promiseFn: Promise<any>\n    task: () => void\n  }>\n\n  constructor(maxConcurrency = 5) {\n    this.#maxConcurrency = maxConcurrency\n    this.#runningCount = 0\n    this.#queue = []\n  }\n\n  enqueue<T>(promiseFn: () => Promise<T>): Promise<T> {\n    let taskResolve: (value: T | PromiseLike<T>) => void\n    let taskReject: (reason?: any) => void\n\n    const taskPromise = new Promise((resolve, reject) => {\n      taskResolve = resolve\n      taskReject = reject\n    }) as Promise<T>\n\n    const task = async () => {\n      try {\n        this.#runningCount++\n        const result = await promiseFn()\n        taskResolve(result)\n      } catch (error) {\n        taskReject(error)\n      } finally {\n        this.#runningCount--\n        this.#processNext()\n      }\n    }\n\n    const enqueueResult = { promiseFn: taskPromise, task }\n    // wonder if we should take a LIFO approach here\n    this.#queue.push(enqueueResult)\n    this.#processNext()\n\n    return taskPromise\n  }\n\n  bump(promiseFn: Promise<any>) {\n    const index = this.#queue.findIndex((item) => item.promiseFn === promiseFn)\n\n    if (index > -1) {\n      const bumpedItem = this.#queue.splice(index, 1)[0]\n      this.#queue.unshift(bumpedItem)\n      this.#processNext(true)\n    }\n  }\n\n  #processNext(forced = false) {\n    if (\n      (this.#runningCount < this.#maxConcurrency || forced) &&\n      this.#queue.length > 0\n    ) {\n      this.#queue.shift()?.task()\n    }\n  }\n}\n","import type {\n  PrefetchAction,\n  ReducerState,\n  ReadonlyReducerState,\n} from '../router-reducer-types'\nimport { PromiseQueue } from '../../promise-queue'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\nexport const prefetchQueue = new PromiseQueue(5)\n\nexport const prefetchReducer = process.env.__NEXT_CLIENT_SEGMENT_CACHE\n  ? identityReducerWhenSegmentCacheIsEnabled\n  : prefetchReducerImpl\n\nfunction identityReducerWhenSegmentCacheIsEnabled<T>(state: T): T {\n  // Unlike the old implementation, the Segment Cache doesn't store its data in\n  // the router reducer state.\n  //\n  // This shouldn't be reachable because we wrap the prefetch API in a check,\n  // too, which prevents the action from being dispatched. But it's here for\n  // clarity + code elimination.\n  return state\n}\n\nfunction prefetchReducerImpl(\n  state: ReadonlyReducerState,\n  action: PrefetchAction\n): ReducerState {\n  // let's prune the prefetch cache before we do anything else\n  prunePrefetchCache(state.prefetchCache)\n\n  const { url } = action\n\n  getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    prefetchCache: state.prefetchCache,\n    kind: action.kind,\n    tree: state.tree,\n    allowAliasing: true,\n  })\n\n  return state\n}\n","export function createMetadataContext(renderOpts) {\n    return {\n        trailingSlash: renderOpts.trailingSlash,\n        isStaticMetadataRouteFile: false\n    };\n}\n\n//# sourceMappingURL=metadata-context.js.map","import { RSC_CONTENT_TYPE_HEADER } from '../../client/components/app-router-headers';\nimport RenderResult from '../render-result';\n/**\n * Flight Response is always set to RSC_CONTENT_TYPE_HEADER to ensure it does not get interpreted as HTML.\n */ export class FlightRenderResult extends RenderResult {\n    constructor(response, metadata = {}){\n        super(response, {\n            contentType: RSC_CONTENT_TYPE_HEADER,\n            metadata\n        });\n    }\n}\n\n//# sourceMappingURL=flight-render-result.js.map","const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n","export function getObjectClassLabel(value: any): string {\n  return Object.prototype.toString.call(value)\n}\n\nexport function isPlainObject(value: any): boolean {\n  if (getObjectClassLabel(value) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(value)\n\n  /**\n   * this used to be previously:\n   *\n   * `return prototype === null || prototype === Object.prototype`\n   *\n   * but Edge Runtime expose Object from vm, being that kind of type-checking wrongly fail.\n   *\n   * It was changed to the current implementation since it's resilient to serialization.\n   */\n  return prototype === null || prototype.hasOwnProperty('isPrototypeOf')\n}\n","import { isPlainObject } from '../shared/lib/is-plain-object';\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */ export default function isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction safeStringify(obj) {\n    const seen = new WeakSet();\n    return JSON.stringify(obj, (_key, value)=>{\n        // If value is an object and already seen, replace with \"[Circular]\"\n        if (typeof value === 'object' && value !== null) {\n            if (seen.has(value)) {\n                return '[Circular]';\n            }\n            seen.add(value);\n        }\n        return value;\n    });\n}\nexport function getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return Object.defineProperty(new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E98\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (err === null) {\n            return Object.defineProperty(new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined'), \"__NEXT_ERROR_CODE\", {\n                value: \"E336\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    return Object.defineProperty(new Error(isPlainObject(err) ? safeStringify(err) : err + ''), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=is-error.js.map","const ERROR_CODE_DELIMITER = '@';\n/**\n * Augments the digest field of errors thrown in React Server Components (RSC) with an error code.\n * Since RSC errors can only be serialized through the digest field, this provides a way to include\n * an additional error code that can be extracted client-side via `extractNextErrorCode`.\n *\n * The error code is appended to the digest string with a semicolon separator, allowing it to be\n * parsed out later while preserving the original digest value.\n */ export const createDigestWithErrorCode = (thrownValue, originalDigest)=>{\n    if (typeof thrownValue === 'object' && thrownValue !== null && '__NEXT_ERROR_CODE' in thrownValue) {\n        return `${originalDigest}${ERROR_CODE_DELIMITER}${thrownValue.__NEXT_ERROR_CODE}`;\n    }\n    return originalDigest;\n};\nexport const extractNextErrorCode = (error)=>{\n    if (typeof error === 'object' && error !== null && '__NEXT_ERROR_CODE' in error && typeof error.__NEXT_ERROR_CODE === 'string') {\n        return error.__NEXT_ERROR_CODE;\n    }\n    if (typeof error === 'object' && error !== null && 'digest' in error && typeof error.digest === 'string') {\n        const segments = error.digest.split(ERROR_CODE_DELIMITER);\n        const errorCode = segments.find((segment)=>segment.startsWith('E'));\n        return errorCode;\n    }\n    return undefined;\n};\n\n//# sourceMappingURL=error-telemetry-utils.js.map","// TODO: isWellKnownError -> isNextInternalError\n// isReactLargeShellError -> isWarning\nexport function isReactLargeShellError(error) {\n    return typeof error === 'object' && error !== null && 'message' in error && typeof error.message === 'string' && error.message.startsWith('This rendered a large document (>');\n}\n\n//# sourceMappingURL=react-large-shell-error.js.map","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { isPrerenderInterruptedError } from './dynamic-rendering';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\nimport { isReactLargeShellError } from './react-large-shell-error';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    // If this is a prerender interrupted error, we don't need to log the error.\n    if (isPrerenderInterruptedError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setAttribute('error.type', err.name);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","export const dynamicParamTypes = {\n    catchall: 'c',\n    'catchall-intercepted': 'ci',\n    'optional-catchall': 'oc',\n    dynamic: 'd',\n    'dynamic-intercepted': 'di'\n};\n/**\n * Shorten the dynamic param in order to make it smaller when transmitted to the browser.\n */ export function getShortDynamicParamType(type) {\n    const short = dynamicParamTypes[type];\n    if (!short) {\n        throw Object.defineProperty(new Error('Unknown dynamic param type'), \"__NEXT_ERROR_CODE\", {\n            value: \"E378\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return short;\n}\n\n//# sourceMappingURL=get-short-dynamic-param-type.js.map","import { INTERCEPTION_ROUTE_MARKERS } from '../../shared/lib/router/utils/interception-routes';\n/**\n * Parse dynamic route segment to type of parameter\n */ export function getSegmentParam(segment) {\n    const interceptionMarker = INTERCEPTION_ROUTE_MARKERS.find((marker)=>segment.startsWith(marker));\n    // if an interception marker is part of the path segment, we need to jump ahead\n    // to the relevant portion for param parsing\n    if (interceptionMarker) {\n        segment = segment.slice(interceptionMarker.length);\n    }\n    if (segment.startsWith('[[...') && segment.endsWith(']]')) {\n        return {\n            // TODO-APP: Optional catchall does not currently work with parallel routes,\n            // so for now aren't handling a potential interception marker.\n            type: 'optional-catchall',\n            param: segment.slice(5, -2)\n        };\n    }\n    if (segment.startsWith('[...') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'catchall-intercepted' : 'catchall',\n            param: segment.slice(4, -1)\n        };\n    }\n    if (segment.startsWith('[') && segment.endsWith(']')) {\n        return {\n            type: interceptionMarker ? 'dynamic-intercepted' : 'dynamic',\n            param: segment.slice(1, -1)\n        };\n    }\n    return null;\n}\n\n//# sourceMappingURL=get-segment-param.js.map","// This utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\nconst ESCAPE_LOOKUP = {\n    '&': '\\\\u0026',\n    '>': '\\\\u003e',\n    '<': '\\\\u003c',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\nexport const ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nexport function htmlEscapeJsonString(str) {\n    return str.replace(ESCAPE_REGEX, (match)=>ESCAPE_LOOKUP[match]);\n}\n\n//# sourceMappingURL=htmlescape.js.map","import { ESCAPE_REGEX } from '../htmlescape';\nexport function getScriptNonceFromHeader(cspHeaderValue) {\n    var _directive_split_slice_map_find;\n    const directives = cspHeaderValue// Directives are split by ';'.\n    .split(';').map((directive)=>directive.trim());\n    // First try to find the directive for the 'script-src', otherwise try to\n    // fallback to the 'default-src'.\n    const directive = directives.find((dir)=>dir.startsWith('script-src')) || directives.find((dir)=>dir.startsWith('default-src'));\n    // If no directive could be found, then we're done.\n    if (!directive) {\n        return;\n    }\n    // Extract the nonce from the directive\n    const nonce = (_directive_split_slice_map_find = directive.split(' ')// Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1).map((source)=>source.trim())// Find the first source with the 'nonce-' prefix.\n    .find((source)=>source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))) == null ? void 0 : _directive_split_slice_map_find.slice(7, -1);\n    // If we could't find the nonce, then we're done.\n    if (!nonce) {\n        return;\n    }\n    // Don't accept the nonce value if it contains HTML escape characters.\n    // Technically, the spec requires a base64'd value, but this is just an\n    // extra layer.\n    if (ESCAPE_REGEX.test(nonce)) {\n        throw Object.defineProperty(new Error('Nonce value from Content-Security-Policy contained HTML escape characters.\\nLearn more: https://nextjs.org/docs/messages/nonce-contained-invalid-characters'), \"__NEXT_ERROR_CODE\", {\n            value: \"E440\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return nonce;\n}\n\n//# sourceMappingURL=get-script-nonce-from-header.js.map","import { HasLoadingBoundary } from './types';\nimport { addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nfunction createFlightRouterStateFromLoaderTreeImpl([segment, parallelRoutes, { layout, loading }], getDynamicParamFromSegment, searchParams, includeHasLoadingBoundary, didFindRootLayout) {\n    const dynamicParam = getDynamicParamFromSegment(segment);\n    const treeSegment = dynamicParam ? dynamicParam.treeSegment : segment;\n    const segmentTree = [\n        addSearchParamsIfPageSegment(treeSegment, searchParams),\n        {}\n    ];\n    // Mark the first segment that has a layout as the \"root\" layout\n    if (!didFindRootLayout && typeof layout !== 'undefined') {\n        didFindRootLayout = true;\n        segmentTree[4] = true;\n    }\n    let childHasLoadingBoundary = false;\n    const children = {};\n    Object.keys(parallelRoutes).forEach((parallelRouteKey)=>{\n        const child = createFlightRouterStateFromLoaderTreeImpl(parallelRoutes[parallelRouteKey], getDynamicParamFromSegment, searchParams, includeHasLoadingBoundary, didFindRootLayout);\n        if (includeHasLoadingBoundary && child[5] !== HasLoadingBoundary.SubtreeHasNoLoadingBoundary) {\n            childHasLoadingBoundary = true;\n        }\n        children[parallelRouteKey] = child;\n    });\n    segmentTree[1] = children;\n    if (includeHasLoadingBoundary) {\n        // During a route tree prefetch, the FlightRouterState includes whether a\n        // tree has a loading boundary. The client uses this to determine if it can\n        // skip the data prefetch request — if `hasLoadingBoundary` is `false`, the\n        // data prefetch response will be empty, so there's no reason to request it.\n        // NOTE: It would be better to accumulate this while building the loader\n        // tree so we don't have to keep re-deriving it, but since this won't be\n        // once PPR is enabled everywhere, it's not that important.\n        segmentTree[5] = loading ? HasLoadingBoundary.SegmentHasLoadingBoundary : childHasLoadingBoundary ? HasLoadingBoundary.SubtreeHasLoadingBoundary : HasLoadingBoundary.SubtreeHasNoLoadingBoundary;\n    }\n    return segmentTree;\n}\nexport function createFlightRouterStateFromLoaderTree(loaderTree, getDynamicParamFromSegment, searchParams) {\n    const includeHasLoadingBoundary = false;\n    const didFindRootLayout = false;\n    return createFlightRouterStateFromLoaderTreeImpl(loaderTree, getDynamicParamFromSegment, searchParams, includeHasLoadingBoundary, didFindRootLayout);\n}\nexport function createRouteTreePrefetch(loaderTree, getDynamicParamFromSegment) {\n    // Search params should not be added to page segment's cache key during a\n    // route tree prefetch request, because they do not affect the structure of\n    // the route. The client cache has its own logic to handle search params.\n    const searchParams = {};\n    // During a route tree prefetch, we include `hasLoadingBoundary` in\n    // the response.\n    const includeHasLoadingBoundary = true;\n    const didFindRootLayout = false;\n    return createFlightRouterStateFromLoaderTreeImpl(loaderTree, getDynamicParamFromSegment, searchParams, includeHasLoadingBoundary, didFindRootLayout);\n}\n\n//# sourceMappingURL=create-flight-router-state-from-loader-tree.js.map","export const ipcForbiddenHeaders = [\n    'accept-encoding',\n    'keepalive',\n    'keep-alive',\n    'content-encoding',\n    'transfer-encoding',\n    // https://github.com/nodejs/undici/issues/1470\n    'connection',\n    // marked as unsupported by undici: https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/core/request.js#L354\n    'expect'\n];\nexport const actionsForbiddenHeaders = [\n    ...ipcForbiddenHeaders,\n    'content-length',\n    'set-cookie'\n];\nexport const filterReqHeaders = (headers, forbiddenHeaders)=>{\n    // Some browsers are not matching spec and sending Content-Length: 0. This causes issues in undici\n    // https://github.com/nodejs/undici/issues/2046\n    if (headers['content-length'] && headers['content-length'] === '0') {\n        delete headers['content-length'];\n    }\n    for (const [key, value] of Object.entries(headers)){\n        if (forbiddenHeaders.includes(key) || !(Array.isArray(value) || typeof value === 'string')) {\n            delete headers[key];\n        }\n    }\n    return headers;\n};\n// These are headers that are only used internally and should\n// not be honored from the external request\nconst INTERNAL_HEADERS = [\n    'x-middleware-rewrite',\n    'x-middleware-redirect',\n    'x-middleware-set-cookie',\n    'x-middleware-skip',\n    'x-middleware-override-headers',\n    'x-middleware-next',\n    'x-now-route-matches',\n    'x-matched-path'\n];\nexport const filterInternalHeaders = (headers)=>{\n    for(const header in headers){\n        if (INTERNAL_HEADERS.includes(header)) {\n            delete headers[header];\n        }\n    }\n};\n\n//# sourceMappingURL=utils.js.map","// micromatch is only available at node runtime, so it cannot be used here since the code path that calls this function\n// can be run from edge. This is a simple implementation that safely achieves the required functionality.\n// the goal is to match the functionality for remotePatterns as defined here -\n// https://nextjs.org/docs/app/api-reference/components/image#remotepatterns\n// TODO - retrofit micromatch to work in edge and use that instead\nfunction matchWildcardDomain(domain, pattern) {\n    const domainParts = domain.split('.');\n    const patternParts = pattern.split('.');\n    if (patternParts.length < 1) {\n        // pattern is empty and therefore invalid to match against\n        return false;\n    }\n    if (domainParts.length < patternParts.length) {\n        // domain has too few segments and thus cannot match\n        return false;\n    }\n    // Prevent wildcards from matching entire domains (e.g. '**' or '*.com')\n    // This ensures wildcards can only match subdomains, not the main domain\n    if (patternParts.length === 1 && (patternParts[0] === '*' || patternParts[0] === '**')) {\n        return false;\n    }\n    while(patternParts.length){\n        const patternPart = patternParts.pop();\n        const domainPart = domainParts.pop();\n        switch(patternPart){\n            case '':\n                {\n                    // invalid pattern. pattern segments must be non empty\n                    return false;\n                }\n            case '*':\n                {\n                    // wildcard matches anything so we continue if the domain part is non-empty\n                    if (domainPart) {\n                        continue;\n                    } else {\n                        return false;\n                    }\n                }\n            case '**':\n                {\n                    // if this is not the last item in the pattern the pattern is invalid\n                    if (patternParts.length > 0) {\n                        return false;\n                    }\n                    // recursive wildcard matches anything so we terminate here if the domain part is non empty\n                    return domainPart !== undefined;\n                }\n            case undefined:\n            default:\n                {\n                    if (domainPart !== patternPart) {\n                        return false;\n                    }\n                }\n        }\n    }\n    // We exhausted the pattern. If we also exhausted the domain we have a match\n    return domainParts.length === 0;\n}\nexport const isCsrfOriginAllowed = (originDomain, allowedOrigins = [])=>{\n    return allowedOrigins.some((allowedOrigin)=>allowedOrigin && (allowedOrigin === originDomain || matchWildcardDomain(originDomain, allowedOrigin)));\n};\n\n//# sourceMappingURL=csrf-protection.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","/**\n * This file provides some helpers that should be used in conjunction with\n * explicit environment checks. When combined with the environment checks, it\n * will ensure that the correct typings are used as well as enable code\n * elimination.\n */ /**\n * Type guard to determine if a request is a WebNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base request is a WebNextRequest.\n */ export const isWebNextRequest = (req)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a response is a WebNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the edge runtime, that any\n * base response is a WebNextResponse.\n */ export const isWebNextResponse = (res)=>process.env.NEXT_RUNTIME === 'edge';\n/**\n * Type guard to determine if a request is a NodeNextRequest. This does not\n * actually check the type of the request, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base request is a NodeNextRequest.\n */ export const isNodeNextRequest = (req)=>process.env.NEXT_RUNTIME !== 'edge';\n/**\n * Type guard to determine if a response is a NodeNextResponse. This does not\n * actually check the type of the response, but rather the runtime environment.\n * It's expected that when the runtime environment is the node runtime, that any\n * base response is a NodeNextResponse.\n */ export const isNodeNextResponse = (res)=>process.env.NEXT_RUNTIME !== 'edge';\n\n//# sourceMappingURL=helpers.js.map","import { RSC_HEADER, RSC_CONTENT_TYPE_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, ACTION_HEADER, NEXT_ACTION_NOT_FOUND_HEADER, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_URL } from '../../client/components/app-router-headers';\nimport { getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getRedirectTypeFromError, getURLFromRedirectError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport RenderResult from '../render-result';\nimport { FlightRenderResult } from './flight-render-result';\nimport { filterReqHeaders, actionsForbiddenHeaders } from '../lib/server-ipc/utils';\nimport { getModifiedCookieValues } from '../web/spec-extension/adapters/request-cookies';\nimport { JSON_CONTENT_TYPE_HEADER, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER } from '../../lib/constants';\nimport { getServerActionRequestMetadata } from '../lib/server-action-request-meta';\nimport { isCsrfOriginAllowed } from './csrf-protection';\nimport { warn } from '../../build/output/log';\nimport { RequestCookies, ResponseCookies } from '../web/spec-extension/cookies';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { fromNodeOutgoingHttpHeaders } from '../web/utils';\nimport { selectWorkerForForwarding } from './action-utils';\nimport { isNodeNextRequest, isWebNextRequest } from '../base-http/helpers';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { synchronizeMutableCookies } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { executeRevalidates } from '../revalidation-utils';\nimport { getRequestMeta } from '../request-meta';\nimport { setCacheBustingSearchParam } from '../../client/components/router-reducer/set-cache-busting-search-param';\nfunction formDataFromSearchQueryString(query) {\n    const searchParams = new URLSearchParams(query);\n    const formData = new FormData();\n    for (const [key, value] of searchParams){\n        formData.append(key, value);\n    }\n    return formData;\n}\nfunction nodeHeadersToRecord(headers) {\n    const record = {};\n    for (const [key, value] of Object.entries(headers)){\n        if (value !== undefined) {\n            record[key] = Array.isArray(value) ? value.join(', ') : `${value}`;\n        }\n    }\n    return record;\n}\nfunction getForwardedHeaders(req, res) {\n    // Get request headers and cookies\n    const requestHeaders = req.headers;\n    const requestCookies = new RequestCookies(HeadersAdapter.from(requestHeaders));\n    // Get response headers and cookies\n    const responseHeaders = res.getHeaders();\n    const responseCookies = new ResponseCookies(fromNodeOutgoingHttpHeaders(responseHeaders));\n    // Merge request and response headers\n    const mergedHeaders = filterReqHeaders({\n        ...nodeHeadersToRecord(requestHeaders),\n        ...nodeHeadersToRecord(responseHeaders)\n    }, actionsForbiddenHeaders);\n    // Merge cookies into requestCookies, so responseCookies always take precedence\n    // and overwrite/delete those from requestCookies.\n    responseCookies.getAll().forEach((cookie)=>{\n        if (typeof cookie.value === 'undefined') {\n            requestCookies.delete(cookie.name);\n        } else {\n            requestCookies.set(cookie);\n        }\n    });\n    // Update the 'cookie' header with the merged cookies\n    mergedHeaders['cookie'] = requestCookies.toString();\n    // Remove headers that should not be forwarded\n    delete mergedHeaders['transfer-encoding'];\n    return new Headers(mergedHeaders);\n}\nfunction addRevalidationHeader(res, { workStore, requestStore }) {\n    var _workStore_pendingRevalidatedTags;\n    // If a tag was revalidated, the client router needs to invalidate all the\n    // client router cache as they may be stale. And if a path was revalidated, the\n    // client needs to invalidate all subtrees below that path.\n    // To keep the header size small, we use a tuple of\n    // [[revalidatedPaths], isTagRevalidated ? 1 : 0, isCookieRevalidated ? 1 : 0]\n    // instead of a JSON object.\n    // TODO-APP: Currently the prefetch cache doesn't have subtree information,\n    // so we need to invalidate the entire cache if a path was revalidated.\n    // TODO-APP: Currently paths are treated as tags, so the second element of the tuple\n    // is always empty.\n    const isTagRevalidated = ((_workStore_pendingRevalidatedTags = workStore.pendingRevalidatedTags) == null ? void 0 : _workStore_pendingRevalidatedTags.length) ? 1 : 0;\n    const isCookieRevalidated = getModifiedCookieValues(requestStore.mutableCookies).length ? 1 : 0;\n    res.setHeader('x-action-revalidated', JSON.stringify([\n        [],\n        isTagRevalidated,\n        isCookieRevalidated\n    ]));\n}\n/**\n * Forwards a server action request to a separate worker. Used when the requested action is not available in the current worker.\n */ async function createForwardedActionResponse(req, res, host, workerPathname, basePath) {\n    var _getRequestMeta;\n    if (!host) {\n        throw Object.defineProperty(new Error('Invariant: Missing `host` header from a forwarded Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E226\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const forwardedHeaders = getForwardedHeaders(req, res);\n    // indicate that this action request was forwarded from another worker\n    // we use this to skip rendering the flight tree so that we don't update the UI\n    // with the response from the forwarded worker\n    forwardedHeaders.set('x-action-forwarded', '1');\n    const proto = ((_getRequestMeta = getRequestMeta(req, 'initProtocol')) == null ? void 0 : _getRequestMeta.replace(/:+$/, '')) || 'https';\n    // For standalone or the serverful mode, use the internal origin directly\n    // other than the host headers from the request.\n    const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${host.value}`;\n    const fetchUrl = new URL(`${origin}${basePath}${workerPathname}`);\n    try {\n        var _response_headers_get;\n        let body;\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n            if (!req.body) {\n                throw Object.defineProperty(new Error('Invariant: missing request body.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E333\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            body = req.body;\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n            body = req.stream();\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unknown request type.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E114\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // Forward the request to the new worker\n        const response = await fetch(fetchUrl, {\n            method: 'POST',\n            body,\n            duplex: 'half',\n            headers: forwardedHeaders,\n            redirect: 'manual',\n            next: {\n                // @ts-ignore\n                internal: 1\n            }\n        });\n        if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n            // copy the headers from the redirect response to the response we're sending\n            for (const [key, value] of response.headers){\n                if (!actionsForbiddenHeaders.includes(key)) {\n                    res.setHeader(key, value);\n                }\n            }\n            return new FlightRenderResult(response.body);\n        } else {\n            var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n            _response_body;\n            (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n        }\n    } catch (err) {\n        // we couldn't stream the forwarded response, so we'll just return an empty response\n        console.error(`failed to forward action response`, err);\n    }\n    return RenderResult.fromStatic('{}', JSON_CONTENT_TYPE_HEADER);\n}\n/**\n * Returns the parsed redirect URL if we deem that it is hosted by us.\n *\n * We handle both relative and absolute redirect URLs.\n *\n * In case the redirect URL is not relative to the application we return `null`.\n */ function getAppRelativeRedirectUrl(basePath, host, redirectUrl) {\n    if (redirectUrl.startsWith('/') || redirectUrl.startsWith('.')) {\n        // Make sure we are appending the basePath to relative URLS\n        return new URL(`${basePath}${redirectUrl}`, 'http://n');\n    }\n    const parsedRedirectUrl = new URL(redirectUrl);\n    if ((host == null ? void 0 : host.value) !== parsedRedirectUrl.host) {\n        return null;\n    }\n    // At this point the hosts are the same, just confirm we\n    // are routing to a path underneath the `basePath`\n    return parsedRedirectUrl.pathname.startsWith(basePath) ? parsedRedirectUrl : null;\n}\nasync function createRedirectRenderResult(req, res, originalHost, redirectUrl, redirectType, basePath, workStore) {\n    res.setHeader('x-action-redirect', `${redirectUrl};${redirectType}`);\n    // If we're redirecting to another route of this Next.js application, we'll\n    // try to stream the response from the other worker path. When that works,\n    // we can save an extra roundtrip and avoid a full page reload.\n    // When the redirect URL starts with a `/` or is to the same host, under the\n    // `basePath` we treat it as an app-relative redirect;\n    const appRelativeRedirectUrl = getAppRelativeRedirectUrl(basePath, originalHost, redirectUrl);\n    if (appRelativeRedirectUrl) {\n        var _getRequestMeta;\n        if (!originalHost) {\n            throw Object.defineProperty(new Error('Invariant: Missing `host` header from a forwarded Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E226\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const forwardedHeaders = getForwardedHeaders(req, res);\n        forwardedHeaders.set(RSC_HEADER, '1');\n        const proto = ((_getRequestMeta = getRequestMeta(req, 'initProtocol')) == null ? void 0 : _getRequestMeta.replace(/:+$/, '')) || 'https';\n        // For standalone or the serverful mode, use the internal origin directly\n        // other than the host headers from the request.\n        const origin = process.env.__NEXT_PRIVATE_ORIGIN || `${proto}://${originalHost.value}`;\n        const fetchUrl = new URL(`${origin}${appRelativeRedirectUrl.pathname}${appRelativeRedirectUrl.search}`);\n        if (workStore.pendingRevalidatedTags) {\n            var _workStore_incrementalCache_prerenderManifest_preview, _workStore_incrementalCache_prerenderManifest, _workStore_incrementalCache;\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATED_TAGS_HEADER, workStore.pendingRevalidatedTags.join(','));\n            forwardedHeaders.set(NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, ((_workStore_incrementalCache = workStore.incrementalCache) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest = _workStore_incrementalCache.prerenderManifest) == null ? void 0 : (_workStore_incrementalCache_prerenderManifest_preview = _workStore_incrementalCache_prerenderManifest.preview) == null ? void 0 : _workStore_incrementalCache_prerenderManifest_preview.previewModeId) || '');\n        }\n        // Ensures that when the path was revalidated we don't return a partial response on redirects\n        forwardedHeaders.delete(NEXT_ROUTER_STATE_TREE_HEADER);\n        // When an action follows a redirect, it's no longer handling an action: it's just a normal RSC request\n        // to the requested URL. We should remove the `next-action` header so that it's not treated as an action\n        forwardedHeaders.delete(ACTION_HEADER);\n        try {\n            var _response_headers_get;\n            setCacheBustingSearchParam(fetchUrl, {\n                [NEXT_ROUTER_PREFETCH_HEADER]: forwardedHeaders.get(NEXT_ROUTER_PREFETCH_HEADER) ? '1' : undefined,\n                [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]: forwardedHeaders.get(NEXT_ROUTER_SEGMENT_PREFETCH_HEADER) ?? undefined,\n                [NEXT_ROUTER_STATE_TREE_HEADER]: forwardedHeaders.get(NEXT_ROUTER_STATE_TREE_HEADER) ?? undefined,\n                [NEXT_URL]: forwardedHeaders.get(NEXT_URL) ?? undefined\n            });\n            const response = await fetch(fetchUrl, {\n                method: 'GET',\n                headers: forwardedHeaders,\n                next: {\n                    // @ts-ignore\n                    internal: 1\n                }\n            });\n            if ((_response_headers_get = response.headers.get('content-type')) == null ? void 0 : _response_headers_get.startsWith(RSC_CONTENT_TYPE_HEADER)) {\n                // copy the headers from the redirect response to the response we're sending\n                for (const [key, value] of response.headers){\n                    if (!actionsForbiddenHeaders.includes(key)) {\n                        res.setHeader(key, value);\n                    }\n                }\n                return new FlightRenderResult(response.body);\n            } else {\n                var // Since we aren't consuming the response body, we cancel it to avoid memory leaks\n                _response_body;\n                (_response_body = response.body) == null ? void 0 : _response_body.cancel();\n            }\n        } catch (err) {\n            // we couldn't stream the redirect response, so we'll just do a normal redirect\n            console.error(`failed to get redirect response`, err);\n        }\n    }\n    return RenderResult.EMPTY;\n}\n/**\n * Ensures the value of the header can't create long logs.\n */ function limitUntrustedHeaderValueForLogs(value) {\n    return value.length > 100 ? value.slice(0, 100) + '...' : value;\n}\nexport function parseHostHeader(headers, originDomain) {\n    var _forwardedHostHeader_split_, _forwardedHostHeader_split;\n    const forwardedHostHeader = headers['x-forwarded-host'];\n    const forwardedHostHeaderValue = forwardedHostHeader && Array.isArray(forwardedHostHeader) ? forwardedHostHeader[0] : forwardedHostHeader == null ? void 0 : (_forwardedHostHeader_split = forwardedHostHeader.split(',')) == null ? void 0 : (_forwardedHostHeader_split_ = _forwardedHostHeader_split[0]) == null ? void 0 : _forwardedHostHeader_split_.trim();\n    const hostHeader = headers['host'];\n    if (originDomain) {\n        return forwardedHostHeaderValue === originDomain ? {\n            type: \"x-forwarded-host\",\n            value: forwardedHostHeaderValue\n        } : hostHeader === originDomain ? {\n            type: \"host\",\n            value: hostHeader\n        } : undefined;\n    }\n    return forwardedHostHeaderValue ? {\n        type: \"x-forwarded-host\",\n        value: forwardedHostHeaderValue\n    } : hostHeader ? {\n        type: \"host\",\n        value: hostHeader\n    } : undefined;\n}\nexport async function handleAction({ req, res, ComponentMod, serverModuleMap, generateFlight, workStore, requestStore, serverActions, ctx, metadata }) {\n    const contentType = req.headers['content-type'];\n    const { serverActionsManifest, page } = ctx.renderOpts;\n    const { actionId, isURLEncodedAction, isMultipartAction, isFetchAction, isPossibleServerAction } = getServerActionRequestMetadata(req);\n    // If it can't be a Server Action, skip handling.\n    // Note that this can be a false positive -- any multipart/urlencoded POST can get us here,\n    // But won't know if it's an MPA action or not until we call `decodeAction` below.\n    if (!isPossibleServerAction) {\n        return null;\n    }\n    if (workStore.isStaticGeneration) {\n        throw Object.defineProperty(new Error(\"Invariant: server actions can't be handled during static rendering\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E359\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    let temporaryReferences;\n    // When running actions the default is no-store, you can still `cache: 'force-cache'`\n    workStore.fetchCache = 'default-no-store';\n    const originDomain = typeof req.headers['origin'] === 'string' ? new URL(req.headers['origin']).host : undefined;\n    const host = parseHostHeader(req.headers);\n    let warning = undefined;\n    function warnBadServerActionRequest() {\n        if (warning) {\n            warn(warning);\n        }\n    }\n    // This is to prevent CSRF attacks. If `x-forwarded-host` is set, we need to\n    // ensure that the request is coming from the same host.\n    if (!originDomain) {\n        // This might be an old browser that doesn't send `host` header. We ignore\n        // this case.\n        warning = 'Missing `origin` header from a forwarded Server Actions request.';\n    } else if (!host || originDomain !== host.value) {\n        // If the customer sets a list of allowed origins, we'll allow the request.\n        // These are considered safe but might be different from forwarded host set\n        // by the infra (i.e. reverse proxies).\n        if (isCsrfOriginAllowed(originDomain, serverActions == null ? void 0 : serverActions.allowedOrigins)) {\n        // Ignore it\n        } else {\n            if (host) {\n                // This seems to be an CSRF attack. We should not proceed the action.\n                console.error(`\\`${host.type}\\` header with value \\`${limitUntrustedHeaderValueForLogs(host.value)}\\` does not match \\`origin\\` header with value \\`${limitUntrustedHeaderValueForLogs(originDomain)}\\` from a forwarded Server Actions request. Aborting the action.`);\n            } else {\n                // This is an attack. We should not proceed the action.\n                console.error(`\\`x-forwarded-host\\` or \\`host\\` headers are not provided. One of these is needed to compare the \\`origin\\` header from a forwarded Server Actions request. Aborting the action.`);\n            }\n            const error = Object.defineProperty(new Error('Invalid Server Actions request.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E80\",\n                enumerable: false,\n                configurable: true\n            });\n            if (isFetchAction) {\n                res.statusCode = 500;\n                metadata.statusCode = 500;\n                const promise = Promise.reject(error);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await generateFlight(req, ctx, requestStore, {\n                        actionResult: promise,\n                        // We didn't execute an action, so no revalidations could have occurred. We can skip rendering the page.\n                        skipFlight: true,\n                        temporaryReferences\n                    })\n                };\n            }\n            throw error;\n        }\n    }\n    // ensure we avoid caching server actions unexpectedly\n    res.setHeader('Cache-Control', 'no-cache, no-store, max-age=0, must-revalidate');\n    const { actionAsyncStorage } = ComponentMod;\n    const actionWasForwarded = Boolean(req.headers['x-action-forwarded']);\n    if (actionId) {\n        const forwardedWorker = selectWorkerForForwarding(actionId, page, serverActionsManifest);\n        // If forwardedWorker is truthy, it means there isn't a worker for the action\n        // in the current handler, so we forward the request to a worker that has the action.\n        if (forwardedWorker) {\n            return {\n                type: 'done',\n                result: await createForwardedActionResponse(req, res, host, forwardedWorker, ctx.renderOpts.basePath)\n            };\n        }\n    }\n    const handleUnrecognizedFetchAction = (err)=>{\n        // If the deployment doesn't have skew protection, this is expected to occasionally happen,\n        // so we use a warning instead of an error.\n        console.warn(err);\n        // Return an empty response with a header that the client router will interpret.\n        // We don't need to waste time encoding a flight response, and using a blank body + header\n        // means that unrecognized actions can also be handled at the infra level\n        // (i.e. without needing to invoke a lambda)\n        res.setHeader(NEXT_ACTION_NOT_FOUND_HEADER, '1');\n        res.setHeader('content-type', 'text/plain');\n        res.statusCode = 404;\n        return {\n            type: 'done',\n            result: RenderResult.fromStatic('Server action not found.', 'text/plain')\n        };\n    };\n    try {\n        return await actionAsyncStorage.run({\n            isAction: true\n        }, async ()=>{\n            // We only use these for fetch actions -- MPA actions handle them inside `decodeAction`.\n            let actionModId;\n            let boundActionArguments = [];\n            if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(req)) {\n                if (!req.body) {\n                    throw Object.defineProperty(new Error('invariant: Missing request body.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E364\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // TODO: add body limit\n                // Use react-server-dom-webpack/server\n                const { createTemporaryReferenceSet, decodeReply, decodeAction, decodeFormState } = ComponentMod;\n                temporaryReferences = createTemporaryReferenceSet();\n                if (isMultipartAction) {\n                    // TODO-APP: Add streaming support\n                    const formData = await req.request.formData();\n                    if (isFetchAction) {\n                        // A fetch action with a multipart body.\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        // Multipart POST, but not a fetch action.\n                        // Potentially an MPA action, we have to try decoding it to check.\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // an MPA action.\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            const actionReturnedState = await executeActionAndPrepareForRender(action, [], workStore, requestStore);\n                            const formState = await decodeFormState(actionReturnedState, formData, serverModuleMap);\n                            // Skip the fetch path.\n                            // We need to render a full HTML version of the page for the response, we'll handle that in app-render.\n                            return {\n                                type: 'done',\n                                result: undefined,\n                                formState\n                            };\n                        } else {\n                            // We couldn't decode an action, so this POST request turned out not to be a server action request.\n                            return null;\n                        }\n                    }\n                } else {\n                    // POST with non-multipart body.\n                    // If it's not multipart AND not a fetch action,\n                    // then it can't be an action request.\n                    if (!isFetchAction) {\n                        return null;\n                    }\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        return handleUnrecognizedFetchAction(err);\n                    }\n                    // A fetch action with a non-multipart body.\n                    // In practice, this happens if `encodeReply` returned a string instead of FormData,\n                    // which can happen for very simple JSON-like values that don't need multiple flight rows.\n                    const chunks = [];\n                    const reader = req.body.getReader();\n                    while(true){\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            break;\n                        }\n                        chunks.push(value);\n                    }\n                    const actionData = Buffer.concat(chunks).toString('utf-8');\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else if (// The type check here ensures that `req` is correctly typed, and the\n            // environment variable check provides dead code elimination.\n            process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n                // Use react-server-dom-webpack/server.node which supports streaming\n                const { createTemporaryReferenceSet, decodeReply, decodeReplyFromBusboy, decodeAction, decodeFormState } = require(`./react-server.node`);\n                temporaryReferences = createTemporaryReferenceSet();\n                const { Transform, pipeline } = require('node:stream');\n                const defaultBodySizeLimit = '1 MB';\n                const bodySizeLimit = (serverActions == null ? void 0 : serverActions.bodySizeLimit) ?? defaultBodySizeLimit;\n                const bodySizeLimitBytes = bodySizeLimit !== defaultBodySizeLimit ? require('next/dist/compiled/bytes').parse(bodySizeLimit) : 1024 * 1024 // 1 MB\n                ;\n                let size = 0;\n                const sizeLimitTransform = new Transform({\n                    transform (chunk, encoding, callback) {\n                        size += Buffer.byteLength(chunk, encoding);\n                        if (size > bodySizeLimitBytes) {\n                            const { ApiError } = require('../api-utils');\n                            callback(Object.defineProperty(new ApiError(413, `Body exceeded ${bodySizeLimit} limit.\\n` + `To configure the body size limit for Server Actions, see: https://nextjs.org/docs/app/api-reference/next-config-js/serverActions#bodysizelimit`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E394\",\n                                enumerable: false,\n                                configurable: true\n                            }));\n                            return;\n                        }\n                        callback(null, chunk);\n                    }\n                });\n                const sizeLimitedBody = pipeline(req.body, sizeLimitTransform, // Avoid unhandled errors from `pipeline()` by passing an empty completion callback.\n                // We'll propagate the errors properly when consuming the stream.\n                ()=>{});\n                if (isMultipartAction) {\n                    if (isFetchAction) {\n                        // A fetch action with a multipart body.\n                        const busboy = require('next/dist/compiled/busboy')({\n                            defParamCharset: 'utf8',\n                            headers: req.headers,\n                            limits: {\n                                fieldSize: bodySizeLimitBytes\n                            }\n                        });\n                        // We need to use `pipeline(one, two)` instead of `one.pipe(two)` to propagate size limit errors correctly.\n                        pipeline(sizeLimitedBody, busboy, // Avoid unhandled errors from `pipeline()` by passing an empty completion callback.\n                        // We'll propagate the errors properly when consuming the stream.\n                        ()=>{});\n                        boundActionArguments = await decodeReplyFromBusboy(busboy, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        // Multipart POST, but not a fetch action.\n                        // Potentially an MPA action, we have to try decoding it to check.\n                        // React doesn't yet publish a busboy version of decodeAction\n                        // so we polyfill the parsing of FormData.\n                        const fakeRequest = new Request('http://localhost', {\n                            method: 'POST',\n                            // @ts-expect-error\n                            headers: {\n                                'Content-Type': contentType\n                            },\n                            body: new ReadableStream({\n                                start: (controller)=>{\n                                    sizeLimitedBody.on('data', (chunk)=>{\n                                        controller.enqueue(new Uint8Array(chunk));\n                                    });\n                                    sizeLimitedBody.on('end', ()=>{\n                                        controller.close();\n                                    });\n                                    sizeLimitedBody.on('error', (err)=>{\n                                        controller.error(err);\n                                    });\n                                }\n                            }),\n                            duplex: 'half'\n                        });\n                        const formData = await fakeRequest.formData();\n                        const action = await decodeAction(formData, serverModuleMap);\n                        if (typeof action === 'function') {\n                            // an MPA action.\n                            // Only warn if it's a server action, otherwise skip for other post requests\n                            warnBadServerActionRequest();\n                            const actionReturnedState = await executeActionAndPrepareForRender(action, [], workStore, requestStore);\n                            const formState = await decodeFormState(actionReturnedState, formData, serverModuleMap);\n                            // Skip the fetch path.\n                            // We need to render a full HTML version of the page for the response, we'll handle that in app-render.\n                            return {\n                                type: 'done',\n                                result: undefined,\n                                formState\n                            };\n                        } else {\n                            // We couldn't decode an action, so this POST request turned out not to be a server action request.\n                            return null;\n                        }\n                    }\n                } else {\n                    // POST with non-multipart body.\n                    // If it's not multipart AND not a fetch action,\n                    // then it can't be an action request.\n                    if (!isFetchAction) {\n                        return null;\n                    }\n                    try {\n                        actionModId = getActionModIdOrError(actionId, serverModuleMap);\n                    } catch (err) {\n                        return handleUnrecognizedFetchAction(err);\n                    }\n                    // A fetch action with a non-multipart body.\n                    // In practice, this happens if `encodeReply` returned a string instead of FormData,\n                    // which can happen for very simple JSON-like values that don't need multiple flight rows.\n                    const chunks = [];\n                    for await (const chunk of sizeLimitedBody){\n                        chunks.push(Buffer.from(chunk));\n                    }\n                    const actionData = Buffer.concat(chunks).toString('utf-8');\n                    if (isURLEncodedAction) {\n                        const formData = formDataFromSearchQueryString(actionData);\n                        boundActionArguments = await decodeReply(formData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    } else {\n                        boundActionArguments = await decodeReply(actionData, serverModuleMap, {\n                            temporaryReferences\n                        });\n                    }\n                }\n            } else {\n                throw Object.defineProperty(new Error('Invariant: Unknown request type.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E114\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            // actions.js\n            // app/page.js\n            //   action worker1\n            //     appRender1\n            // app/foo/page.js\n            //   action worker2\n            //     appRender\n            // / -> fire action -> POST / -> appRender1 -> modId for the action file\n            // /foo -> fire action -> POST /foo -> appRender2 -> modId for the action file\n            try {\n                actionModId = actionModId ?? getActionModIdOrError(actionId, serverModuleMap);\n            } catch (err) {\n                return handleUnrecognizedFetchAction(err);\n            }\n            const actionMod = await ComponentMod.__next_app__.require(actionModId);\n            const actionHandler = actionMod[// `actionId` must exist if we got here, as otherwise we would have thrown an error above\n            actionId];\n            const returnVal = await executeActionAndPrepareForRender(actionHandler, boundActionArguments, workStore, requestStore).finally(()=>{\n                addRevalidationHeader(res, {\n                    workStore,\n                    requestStore\n                });\n            });\n            // For form actions, we need to continue rendering the page.\n            if (isFetchAction) {\n                const actionResult = await generateFlight(req, ctx, requestStore, {\n                    actionResult: Promise.resolve(returnVal),\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                });\n                return {\n                    type: 'done',\n                    result: actionResult\n                };\n            } else {\n                // TODO: this shouldn't be reachable, because all non-fetch codepaths return early.\n                // this will be handled in a follow-up refactor PR.\n                return null;\n            }\n        });\n    } catch (err) {\n        if (isRedirectError(err)) {\n            const redirectUrl = getURLFromRedirectError(err);\n            const redirectType = getRedirectTypeFromError(err);\n            // if it's a fetch action, we'll set the status code for logging/debugging purposes\n            // but we won't set a Location header, as the redirect will be handled by the client router\n            res.statusCode = RedirectStatusCode.SeeOther;\n            metadata.statusCode = RedirectStatusCode.SeeOther;\n            if (isFetchAction) {\n                return {\n                    type: 'done',\n                    result: await createRedirectRenderResult(req, res, host, redirectUrl, redirectType, ctx.renderOpts.basePath, workStore)\n                };\n            }\n            // For an MPA action, the redirect doesn't need a body, just a Location header.\n            res.setHeader('Location', redirectUrl);\n            return {\n                type: 'done',\n                result: RenderResult.EMPTY\n            };\n        } else if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            metadata.statusCode = res.statusCode;\n            if (isFetchAction) {\n                const promise = Promise.reject(err);\n                try {\n                    // we need to await the promise to trigger the rejection early\n                    // so that it's already handled by the time we call\n                    // the RSC runtime. Otherwise, it will throw an unhandled\n                    // promise rejection error in the renderer.\n                    await promise;\n                } catch  {\n                // swallow error, it's gonna be handled on the client\n                }\n                return {\n                    type: 'done',\n                    result: await generateFlight(req, ctx, requestStore, {\n                        skipFlight: false,\n                        actionResult: promise,\n                        temporaryReferences\n                    })\n                };\n            }\n            // For an MPA action, we need to render a HTML response. We'll handle that in app-render.\n            return {\n                type: 'not-found'\n            };\n        }\n        // An error that didn't come from `redirect()` or `notFound()`, likely thrown from user code\n        // (but it could also be a bug in our code!)\n        if (isFetchAction) {\n            // TODO: consider checking if the error is an `ApiError` and change status code\n            // so that we can respond with a 413 to requests that break the body size limit\n            // (but if we do that, we also need to make sure that whatever handles the non-fetch error path below does the same)\n            res.statusCode = 500;\n            metadata.statusCode = 500;\n            const promise = Promise.reject(err);\n            try {\n                // we need to await the promise to trigger the rejection early\n                // so that it's already handled by the time we call\n                // the RSC runtime. Otherwise, it will throw an unhandled\n                // promise rejection error in the renderer.\n                await promise;\n            } catch  {\n            // swallow error, it's gonna be handled on the client\n            }\n            return {\n                type: 'done',\n                result: await generateFlight(req, ctx, requestStore, {\n                    actionResult: promise,\n                    // if the page was not revalidated, or if the action was forwarded from another worker, we can skip the rendering the flight tree\n                    skipFlight: !workStore.pathWasRevalidated || actionWasForwarded,\n                    temporaryReferences\n                })\n            };\n        }\n        // For an MPA action, we need to render a HTML response. We'll rethrow the error and let it be handled above.\n        throw err;\n    }\n}\nasync function executeActionAndPrepareForRender(action, args, workStore, requestStore) {\n    requestStore.phase = 'action';\n    try {\n        return await workUnitAsyncStorage.run(requestStore, ()=>action.apply(null, args));\n    } finally{\n        requestStore.phase = 'render';\n        // When we switch to the render phase, cookies() will return\n        // `workUnitStore.cookies` instead of `workUnitStore.userspaceMutableCookies`.\n        // We want the render to see any cookie writes that we performed during the action,\n        // so we need to update the immutable cookies to reflect the changes.\n        synchronizeMutableCookies(requestStore);\n        // The server action might have toggled draft mode, so we need to reflect\n        // that in the work store to be up-to-date for subsequent rendering.\n        workStore.isDraftMode = requestStore.draftMode.isEnabled;\n        // If the action called revalidateTag/revalidatePath, then that might affect data used by the subsequent render,\n        // so we need to make sure all revalidations are applied before that\n        await executeRevalidates(workStore);\n    }\n}\n/**\n * Attempts to find the module ID for the action from the module map. When this fails, it could be a deployment skew where\n * the action came from a different deployment. It could also simply be an invalid POST request that is not a server action.\n * In either case, we'll throw an error to be handled by the caller.\n */ function getActionModIdOrError(actionId, serverModuleMap) {\n    var _serverModuleMap_actionId;\n    // if we're missing the action ID header, we can't do any further processing\n    if (!actionId) {\n        throw Object.defineProperty(new InvariantError(\"Missing 'next-action' header.\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E664\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const actionModId = (_serverModuleMap_actionId = serverModuleMap[actionId]) == null ? void 0 : _serverModuleMap_actionId.id;\n    if (!actionModId) {\n        throw Object.defineProperty(new Error(`Failed to find Server Action \"${actionId}\". This request might be from an older or newer deployment.\\nRead more: https://nextjs.org/docs/messages/failed-to-find-server-action`), \"__NEXT_ERROR_CODE\", {\n            value: \"E665\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    return actionModId;\n}\n\n//# sourceMappingURL=action-handler.js.map","// Provider for the `useServerInsertedHTML` API to register callbacks to insert\n// elements into the HTML stream.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ServerInsertedHTMLContext } from '../../shared/lib/server-inserted-html.shared-runtime';\nexport function createServerInsertedHTML() {\n    const serverInsertedHTMLCallbacks = [];\n    const addInsertedHtml = (handler)=>{\n        serverInsertedHTMLCallbacks.push(handler);\n    };\n    return {\n        ServerInsertedHTMLProvider ({ children }) {\n            return /*#__PURE__*/ _jsx(ServerInsertedHTMLContext.Provider, {\n                value: addInsertedHtml,\n                children: children\n            });\n        },\n        renderServerInsertedHTML () {\n            return serverInsertedHTMLCallbacks.map((callback, index)=>/*#__PURE__*/ _jsx(React.Fragment, {\n                    children: callback()\n                }, '__next_server_inserted__' + index));\n        }\n    };\n}\n\n//# sourceMappingURL=server-inserted-html.js.map","export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n","import { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport ReactDOM from 'react-dom';\nexport function getRequiredScripts(buildManifest, assetPrefix, crossOrigin, SRIManifest, qs, nonce, pagePath) {\n    var _buildManifest_rootMainFilesTree;\n    let preinitScripts;\n    let preinitScriptCommands = [];\n    const bootstrapScript = {\n        src: '',\n        crossOrigin\n    };\n    const files = (((_buildManifest_rootMainFilesTree = buildManifest.rootMainFilesTree) == null ? void 0 : _buildManifest_rootMainFilesTree[pagePath]) || buildManifest.rootMainFiles).map(encodeURIPath);\n    if (files.length === 0) {\n        throw Object.defineProperty(new Error('Invariant: missing bootstrap script. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n            value: \"E459\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (SRIManifest) {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        bootstrapScript.integrity = SRIManifest[files[0]];\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            const integrity = SRIManifest[files[i]];\n            preinitScriptCommands.push(src, integrity);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a double indexed array of src/integrity pairs\n            for(let i = 0; i < preinitScriptCommands.length; i += 2){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    integrity: preinitScriptCommands[i + 1],\n                    crossOrigin,\n                    nonce\n                });\n            }\n        };\n    } else {\n        bootstrapScript.src = `${assetPrefix}/_next/` + files[0] + qs;\n        for(let i = 1; i < files.length; i++){\n            const src = `${assetPrefix}/_next/` + files[i] + qs;\n            preinitScriptCommands.push(src);\n        }\n        preinitScripts = ()=>{\n            // preinitScriptCommands is a singled indexed array of src values\n            for(let i = 0; i < preinitScriptCommands.length; i++){\n                ReactDOM.preinit(preinitScriptCommands[i], {\n                    as: 'script',\n                    nonce,\n                    crossOrigin\n                });\n            }\n        };\n    }\n    return [\n        preinitScripts,\n        bootstrapScript\n    ];\n}\n\n//# sourceMappingURL=required-scripts.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getURLFromRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport { renderToReadableStream } from 'react-dom/server';\nimport { streamToString } from '../stream-utils/node-web-streams-helper';\nimport { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nexport function makeGetServerInsertedHTML({ polyfills, renderServerInsertedHTML, serverCapturedErrors, tracingMetadata, basePath }) {\n    let flushedErrorMetaTagsUntilIndex = 0;\n    // flag for static content that only needs to be flushed once\n    let hasFlushedInitially = false;\n    const polyfillTags = polyfills.map((polyfill)=>{\n        return /*#__PURE__*/ _jsx(\"script\", {\n            ...polyfill\n        }, polyfill.src);\n    });\n    return async function getServerInsertedHTML() {\n        // Loop through all the errors that have been captured but not yet\n        // flushed.\n        const errorMetaTags = [];\n        while(flushedErrorMetaTagsUntilIndex < serverCapturedErrors.length){\n            const error = serverCapturedErrors[flushedErrorMetaTagsUntilIndex];\n            flushedErrorMetaTagsUntilIndex++;\n            if (isHTTPAccessFallbackError(error)) {\n                errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"robots\",\n                    content: \"noindex\"\n                }, error.digest), process.env.NODE_ENV === 'development' ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-error\",\n                    content: \"not-found\"\n                }, \"next-error\") : null);\n            } else if (isRedirectError(error)) {\n                const redirectUrl = addPathPrefix(getURLFromRedirectError(error), basePath);\n                const statusCode = getRedirectStatusCodeFromError(error);\n                const isPermanent = statusCode === RedirectStatusCode.PermanentRedirect ? true : false;\n                if (redirectUrl) {\n                    errorMetaTags.push(/*#__PURE__*/ _jsx(\"meta\", {\n                        id: \"__next-page-redirect\",\n                        httpEquiv: \"refresh\",\n                        content: `${isPermanent ? 0 : 1};url=${redirectUrl}`\n                    }, error.digest));\n                }\n            }\n        }\n        const traceMetaTags = (tracingMetadata || []).map(({ key, value }, index)=>/*#__PURE__*/ _jsx(\"meta\", {\n                name: key,\n                content: value\n            }, `next-trace-data-${index}`));\n        const serverInsertedHTML = renderServerInsertedHTML();\n        // Skip React rendering if we know the content is empty.\n        if (polyfillTags.length === 0 && traceMetaTags.length === 0 && errorMetaTags.length === 0 && Array.isArray(serverInsertedHTML) && serverInsertedHTML.length === 0) {\n            return '';\n        }\n        const stream = await renderToReadableStream(/*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /* Insert the polyfills if they haven't been flushed yet. */ hasFlushedInitially ? null : polyfillTags,\n                serverInsertedHTML,\n                hasFlushedInitially ? null : traceMetaTags,\n                errorMetaTags\n            ]\n        }), {\n            // Larger chunk because this isn't sent over the network.\n            // Let's set it to 1MB.\n            progressiveChunkSize: 1024 * 1024\n        });\n        hasFlushedInitially = true;\n        // There's no need to wait for the stream to be ready\n        // e.g. calling `await stream.allReady` because `streamToString` will\n        // wait and decode the stream progressively with better parallelism.\n        return streamToString(stream);\n    };\n}\n\n//# sourceMappingURL=make-get-server-inserted-html.js.map","/**\n * Get external stylesheet link hrefs based on server CSS manifest.\n */ export function getLinkAndScriptTags(clientReferenceManifest, filePath, injectedCSS, injectedScripts, collectNewImports) {\n    var _clientReferenceManifest_entryJSFiles;\n    const filePathWithoutExt = filePath.replace(/\\.[^.]+$/, '');\n    const cssChunks = new Set();\n    const jsChunks = new Set();\n    const entryCSSFiles = clientReferenceManifest.entryCSSFiles[filePathWithoutExt];\n    const entryJSFiles = ((_clientReferenceManifest_entryJSFiles = clientReferenceManifest.entryJSFiles) == null ? void 0 : _clientReferenceManifest_entryJSFiles[filePathWithoutExt]) ?? [];\n    if (entryCSSFiles) {\n        for (const css of entryCSSFiles){\n            if (!injectedCSS.has(css.path)) {\n                if (collectNewImports) {\n                    injectedCSS.add(css.path);\n                }\n                cssChunks.add(css);\n            }\n        }\n    }\n    if (entryJSFiles) {\n        for (const file of entryJSFiles){\n            if (!injectedScripts.has(file)) {\n                if (collectNewImports) {\n                    injectedScripts.add(file);\n                }\n                jsChunks.add(file);\n            }\n        }\n    }\n    return {\n        styles: [\n            ...cssChunks\n        ],\n        scripts: [\n            ...jsChunks\n        ]\n    };\n}\n\n//# sourceMappingURL=get-css-inlined-link-tags.js.map","/**\n * Get hrefs for fonts to preload\n * Returns null if there are no fonts at all.\n * Returns string[] if there are fonts to preload (font paths)\n * Returns empty string[] if there are fonts but none to preload and no other fonts have been preloaded\n * Returns null if there are fonts but none to preload and at least some were previously preloaded\n */ export function getPreloadableFonts(nextFontManifest, filePath, injectedFontPreloadTags) {\n    if (!nextFontManifest || !filePath) {\n        return null;\n    }\n    const filepathWithoutExtension = filePath.replace(/\\.[^.]+$/, '');\n    const fontFiles = new Set();\n    let foundFontUsage = false;\n    const preloadedFontFiles = nextFontManifest.app[filepathWithoutExtension];\n    if (preloadedFontFiles) {\n        foundFontUsage = true;\n        for (const fontFile of preloadedFontFiles){\n            if (!injectedFontPreloadTags.has(fontFile)) {\n                fontFiles.add(fontFile);\n                injectedFontPreloadTags.add(fontFile);\n            }\n        }\n    }\n    if (fontFiles.size) {\n        return [\n            ...fontFiles\n        ].sort();\n    } else if (foundFontUsage && injectedFontPreloadTags.size === 0) {\n        return [];\n    } else {\n        return null;\n    }\n}\n\n//# sourceMappingURL=get-preloadable-fonts.js.map","export function hasLoadingComponentInTree(tree) {\n    const [, parallelRoutes, { loading }] = tree;\n    if (loading) {\n        return true;\n    }\n    return Object.values(parallelRoutes).some((parallelRoute)=>hasLoadingComponentInTree(parallelRoute));\n}\n\n//# sourceMappingURL=has-loading-component-in-tree.js.map","export interface ServerReferenceInfo {\n  type: 'server-action' | 'use-cache'\n  usedArgs: [boolean, boolean, boolean, boolean, boolean, boolean]\n  hasRestArgs: boolean\n}\n\n/**\n * Extracts info about the server reference for the given server reference ID by\n * parsing the first byte of the hex-encoded ID.\n *\n * ```\n * Bit positions: [7]      [6] [5] [4] [3] [2] [1]  [0]\n * Bits:          typeBit  argMask                  restArgs\n * ```\n *\n * If the `typeBit` is `1` the server reference represents a `\"use cache\"`\n * function, otherwise a server action.\n *\n * The `argMask` encodes whether the function uses the argument at the\n * respective position.\n *\n * The `restArgs` bit indicates whether the function uses a rest parameter. It's\n * also set to 1 if the function has more than 6 args.\n *\n * @param id hex-encoded server reference ID\n */\nexport function extractInfoFromServerReferenceId(\n  id: string\n): ServerReferenceInfo {\n  const infoByte = parseInt(id.slice(0, 2), 16)\n  const typeBit = (infoByte >> 7) & 0x1\n  const argMask = (infoByte >> 1) & 0x3f\n  const restArgs = infoByte & 0x1\n  const usedArgs = Array(6)\n\n  for (let index = 0; index < 6; index++) {\n    const bitPosition = 5 - index\n    const bit = (argMask >> bitPosition) & 0x1\n    usedArgs[index] = bit === 1\n  }\n\n  return {\n    type: typeBit === 1 ? 'use-cache' : 'server-action',\n    usedArgs: usedArgs as [\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n      boolean,\n    ],\n    hasRestArgs: restArgs === 1,\n  }\n}\n\n/**\n * Creates a sparse array containing only the used arguments based on the\n * provided action info.\n */\nexport function omitUnusedArgs(\n  args: unknown[],\n  info: ServerReferenceInfo\n): unknown[] {\n  const filteredArgs = new Array(args.length)\n\n  for (let index = 0; index < args.length; index++) {\n    if (\n      (index < 6 && info.usedArgs[index]) ||\n      // This assumes that the server reference info byte has the restArgs bit\n      // set to 1 if there are more than 6 args.\n      (index >= 6 && info.hasRestArgs)\n    ) {\n      filteredArgs[index] = args[index]\n    }\n  }\n\n  return filteredArgs\n}\n","import { extractInfoFromServerReferenceId } from '../shared/lib/server-reference-info';\nexport function isServerReference(value) {\n    return value.$$typeof === Symbol.for('react.server.reference');\n}\nexport function isUseCacheFunction(value) {\n    if (!isServerReference(value)) {\n        return false;\n    }\n    const { type } = extractInfoFromServerReferenceId(value.$$id);\n    return type === 'use-cache';\n}\nexport function isClientReference(mod) {\n    const defaultExport = (mod == null ? void 0 : mod.default) || mod;\n    return (defaultExport == null ? void 0 : defaultExport.$$typeof) === Symbol.for('react.client.reference');\n}\n\n//# sourceMappingURL=client-and-server-references.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","/**\n * Interop between \"export default\" and \"module.exports\".\n */ export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport function parseLoaderTree(tree) {\n    const [segment, parallelRoutes, modules] = tree;\n    const { layout, template } = modules;\n    let { page } = modules;\n    // a __DEFAULT__ segment means that this route didn't match any of the\n    // segments in the route, so we should use the default page\n    page = segment === DEFAULT_SEGMENT_KEY ? modules.defaultPage : page;\n    const conventionPath = (layout == null ? void 0 : layout[1]) || (template == null ? void 0 : template[1]) || (page == null ? void 0 : page[1]);\n    return {\n        page,\n        segment,\n        modules,\n        /* it can be either layout / template / page */ conventionPath,\n        parallelRoutes\n    };\n}\n\n//# sourceMappingURL=parse-loader-tree.js.map","const isDev = process.env.NODE_ENV === 'development';\nconst isTurbopack = !!process.env.TURBOPACK;\nexport function getAssetQueryString(ctx, addTimestamp) {\n    let qs = '';\n    // In development we add the request timestamp to allow react to\n    // reload assets when a new RSC response is received.\n    // Turbopack handles HMR of assets itself and react doesn't need to reload them\n    // so this approach is not needed for Turbopack.\n    const shouldAddVersion = isDev && !isTurbopack && addTimestamp;\n    if (shouldAddVersion) {\n        qs += `?v=${ctx.requestTimestamp}`;\n    }\n    if (ctx.renderOpts.deploymentId) {\n        qs += `${shouldAddVersion ? '&' : '?'}dpl=${ctx.renderOpts.deploymentId}`;\n    }\n    return qs;\n}\n\n//# sourceMappingURL=get-asset-query-string.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { getAssetQueryString } from './get-asset-query-string';\n/**\n * Abstracts the rendering of CSS files based on whether they are inlined or not.\n * For inlined CSS, renders a <style> tag with the CSS content directly embedded.\n * For external CSS files, renders a <link> tag pointing to the CSS file.\n */ export function renderCssResource(entryCssFiles, ctx, preloadCallbacks) {\n    return entryCssFiles.map((entryCssFile, index)=>{\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === 'development' ? 'next_' + entryCssFile.path : 'next';\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${ctx.assetPrefix}/_next/${encodeURIPath(entryCssFile.path)}${getAssetQueryString(ctx, true)}`;\n        if (entryCssFile.inlined && !ctx.parsedRequestHeaders.isRSCRequest) {\n            return /*#__PURE__*/ _jsx(\"style\", {\n                nonce: ctx.nonce,\n                // @ts-ignore\n                precedence: precedence,\n                href: fullHref,\n                children: entryCssFile.content\n            }, index);\n        }\n        preloadCallbacks == null ? void 0 : preloadCallbacks.push(()=>{\n            ctx.componentMod.preloadStyle(fullHref, ctx.renderOpts.crossOrigin, ctx.nonce);\n        });\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"stylesheet\",\n            href: fullHref,\n            // @ts-ignore\n            precedence: precedence,\n            crossOrigin: ctx.renderOpts.crossOrigin,\n            nonce: ctx.nonce\n        }, index);\n    });\n}\n\n//# sourceMappingURL=render-css-resource.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { interopDefault } from './interop-default';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { renderCssResource } from './render-css-resource';\nexport async function createComponentStylesAndScripts({ filePath, getComponent, injectedCSS, injectedJS, ctx }) {\n    const { styles: entryCssFiles, scripts: jsHrefs } = getLinkAndScriptTags(ctx.clientReferenceManifest, filePath, injectedCSS, injectedJS);\n    const styles = renderCssResource(entryCssFiles, ctx);\n    const scripts = jsHrefs ? jsHrefs.map((href, index)=>/*#__PURE__*/ _jsx(\"script\", {\n            src: `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`,\n            async: true\n        }, `script-${index}`)) : null;\n    const Comp = interopDefault(await getComponent());\n    return [\n        Comp,\n        styles,\n        scripts\n    ];\n}\n\n//# sourceMappingURL=create-component-styles-and-scripts.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { encodeURIPath } from '../../shared/lib/encode-uri-path';\nimport { renderCssResource } from './render-css-resource';\nexport function getLayerAssets({ ctx, layoutOrPagePath, injectedCSS: injectedCSSWithCurrentLayout, injectedJS: injectedJSWithCurrentLayout, injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout, preloadCallbacks }) {\n    const { styles: styleTags, scripts: scriptTags } = layoutOrPagePath ? getLinkAndScriptTags(ctx.clientReferenceManifest, layoutOrPagePath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true) : {\n        styles: [],\n        scripts: []\n    };\n    const preloadedFontFiles = layoutOrPagePath ? getPreloadableFonts(ctx.renderOpts.nextFontManifest, layoutOrPagePath, injectedFontPreloadTagsWithCurrentLayout) : null;\n    if (preloadedFontFiles) {\n        if (preloadedFontFiles.length) {\n            for(let i = 0; i < preloadedFontFiles.length; i++){\n                const fontFilename = preloadedFontFiles[i];\n                const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFilename)[1];\n                const type = `font/${ext}`;\n                const href = `${ctx.assetPrefix}/_next/${encodeURIPath(fontFilename)}`;\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preloadFont(href, type, ctx.renderOpts.crossOrigin, ctx.nonce);\n                });\n            }\n        } else {\n            try {\n                let url = new URL(ctx.assetPrefix);\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect(url.origin, 'anonymous', ctx.nonce);\n                });\n            } catch (error) {\n                // assetPrefix must not be a fully qualified domain name. We assume\n                // we should preconnect to same origin instead\n                preloadCallbacks.push(()=>{\n                    ctx.componentMod.preconnect('/', 'anonymous', ctx.nonce);\n                });\n            }\n        }\n    }\n    const styles = renderCssResource(styleTags, ctx, preloadCallbacks);\n    const scripts = scriptTags ? scriptTags.map((href, index)=>{\n        const fullSrc = `${ctx.assetPrefix}/_next/${encodeURIPath(href)}${getAssetQueryString(ctx, true)}`;\n        return /*#__PURE__*/ _jsx(\"script\", {\n            src: fullSrc,\n            async: true,\n            nonce: ctx.nonce\n        }, `script-${index}`);\n    }) : [];\n    return styles.length || scripts.length ? [\n        ...styles,\n        ...scripts\n    ] : null;\n}\n\n//# sourceMappingURL=get-layer-assets.js.map","const noop = ()=>{};\nlet registry;\nif (globalThis.FinalizationRegistry) {\n    registry = new FinalizationRegistry((weakRef)=>{\n        const stream = weakRef.deref();\n        if (stream && !stream.locked) {\n            stream.cancel('Response object has been garbage collected').then(noop);\n        }\n    });\n}\n/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    // The Fetch Standard allows users to skip consuming the response body by\n    // relying on garbage collection to release connection resources.\n    // https://github.com/nodejs/undici?tab=readme-ov-file#garbage-collection\n    //\n    // To cancel the stream you then need to cancel both resulting branches.\n    // Teeing a stream will generally lock it for the duration, preventing other\n    // readers from locking it.\n    // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n    // cloned2 is stored in a react cache and cloned for subsequent requests.\n    // It is the original request, and is is garbage collected by a\n    // FinalizationRegistry in Undici, but since we're tee-ing the stream\n    // ourselves, we need to cancel clone1's stream (the response returned from\n    // our dedupe fetch) when clone1 is reclaimed, otherwise we leak memory.\n    if (registry && cloned1.body) {\n        registry.register(cloned1, new WeakRef(cloned1.body));\n    }\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { getCacheSignal } from '../app-render/work-unit-async-storage.external';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    if (!workStore.shouldTrackFetchMetrics) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nasync function createCachedPrerenderResponse(res, cacheKey, incrementalCacheContext, incrementalCache, revalidate, handleUnlock) {\n    // We are prerendering at build time or revalidate time with cacheComponents so we\n    // need to buffer the response so we can guarantee it can be read in a\n    // microtask.\n    const bodyBuffer = await res.arrayBuffer();\n    const fetchedData = {\n        headers: Object.fromEntries(res.headers.entries()),\n        body: Buffer.from(bodyBuffer).toString('base64'),\n        status: res.status,\n        url: res.url\n    };\n    // We can skip setting the serverComponentsHmrCache because we aren't in dev\n    // mode.\n    if (incrementalCacheContext) {\n        await incrementalCache.set(cacheKey, {\n            kind: CachedRouteKind.FETCH,\n            data: fetchedData,\n            revalidate\n        }, incrementalCacheContext);\n    }\n    await handleUnlock();\n    // We return a new Response to the caller.\n    return new Response(bodyBuffer, {\n        headers: res.headers,\n        status: res.status,\n        statusText: res.statusText\n    });\n}\nasync function createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheContext, incrementalCache, serverComponentsHmrCache, revalidate, input, handleUnlock) {\n    // We're cloning the response using this utility because there exists a bug in\n    // the undici library around response cloning. See the following pull request\n    // for more details: https://github.com/vercel/next.js/pull/73274\n    const [cloned1, cloned2] = cloneResponse(res);\n    // We are dynamically rendering including dev mode. We want to return the\n    // response to the caller as soon as possible because it might stream over a\n    // very long time.\n    const cacheSetPromise = cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n        const bodyBuffer = Buffer.from(arrayBuffer);\n        const fetchedData = {\n            headers: Object.fromEntries(cloned1.headers.entries()),\n            body: bodyBuffer.toString('base64'),\n            status: cloned1.status,\n            url: cloned1.url\n        };\n        serverComponentsHmrCache == null ? void 0 : serverComponentsHmrCache.set(cacheKey, fetchedData);\n        if (incrementalCacheContext) {\n            await incrementalCache.set(cacheKey, {\n                kind: CachedRouteKind.FETCH,\n                data: fetchedData,\n                revalidate\n            }, incrementalCacheContext);\n        }\n    }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n    const pendingRevalidateKey = `cache-set-${cacheKey}`;\n    workStore.pendingRevalidates ??= {};\n    if (pendingRevalidateKey in workStore.pendingRevalidates) {\n        // there is already a pending revalidate entry that we need to await to\n        // avoid race conditions\n        await workStore.pendingRevalidates[pendingRevalidateKey];\n    }\n    workStore.pendingRevalidates[pendingRevalidateKey] = cacheSetPromise.finally(()=>{\n        var _workStore_pendingRevalidates;\n        // If the pending revalidate is not present in the store, then we have\n        // nothing to delete.\n        if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n            return;\n        }\n        delete workStore.pendingRevalidates[pendingRevalidateKey];\n    });\n    return cloned2;\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function.\n    const patched = async function fetch(input, init) {\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            const originalFetchRevalidate = getNextField('revalidate');\n            let currentFetchRevalidate = originalFetchRevalidate;\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            let revalidateStore;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // TODO: Stop accumulating tags in client prerender. (fallthrough)\n                    case 'prerender-client':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'cache':\n                    case 'private-cache':\n                        revalidateStore = workUnitStore;\n                        break;\n                    case 'request':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            let pageFetchCacheMode = workStore.fetchCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'unstable-cache':\n                        // Inside unstable-cache we treat it the same as force-no-store on\n                        // the page.\n                        pageFetchCacheMode = 'force-no-store';\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            let autoNoCache = Boolean((hasUnCacheableHeader || isUnCacheableMethod) && (revalidateStore == null ? void 0 : revalidateStore.revalidate) === 0);\n            let isImplicitBuildTimeCache = false;\n            if (!autoNoCache && hasNoExplicitCacheConfig) {\n                // We don't enable automatic no-cache behavior during build-time\n                // prerendering so that we can still leverage the fetch cache between\n                // export workers.\n                if (workStore.isBuildTimePrerendering) {\n                    isImplicitBuildTimeCache = true;\n                } else {\n                    autoNoCache = true;\n                }\n            }\n            // If we have no cache config, and we're in Dynamic I/O prerendering,\n            // it'll be a dynamic call. We don't have to issue that dynamic call.\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // While we don't want to do caching in the client scope we know the\n                    // fetch will be dynamic for cacheComponents so we may as well avoid the\n                    // call here. (fallthrough)\n                    case 'prerender-client':\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                case 'default-cache':\n                case 'default-no-store':\n                case 'auto':\n                case undefined:\n                    break;\n                default:\n                    pageFetchCacheMode;\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e.\n                // originalFetchRevalidate.\n                if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            let isHmrRefresh = false;\n            let serverComponentsHmrCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        isHmrRefresh = workUnitStore.isHmrRefresh ?? false;\n                        serverComponentsHmrCache = workUnitStore.serverComponentsHmrCache;\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (incrementalCache && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>{};\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const incrementalCacheConfig = isCacheableRevalidate ? {\n                            fetchCache: true,\n                            fetchUrl,\n                            fetchIdx,\n                            tags,\n                            isImplicitBuildTimeCache\n                        } : undefined;\n                        switch(workUnitStore == null ? void 0 : workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                return createCachedPrerenderResponse(res, cacheKey, incrementalCacheConfig, incrementalCache, normalizedRevalidate, handleUnlock);\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                            case undefined:\n                                return createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheConfig, incrementalCache, serverComponentsHmrCache, normalizedRevalidate, input, handleUnlock);\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if (isHmrRefresh && serverComponentsHmrCache) {\n                    cachedFetchData = serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig && workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                // We sometimes use the cache to dedupe fetches that do not\n                                // specify a cache configuration. In these cases we want to\n                                // make sure we still exclude them from prerenders if\n                                // cacheComponents is on so we introduce an artificial task boundary\n                                // here.\n                                await waitAtLeastOneReactRenderTask();\n                                break;\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore) {\n                            switch(workUnitStore.type){\n                                case 'prerender':\n                                case 'prerender-client':\n                                case 'prerender-runtime':\n                                    return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                                case 'request':\n                                case 'cache':\n                                case 'private-cache':\n                                case 'unstable-cache':\n                                case 'prerender-legacy':\n                                case 'prerender-ppr':\n                                    break;\n                                default:\n                                    workUnitStore;\n                            }\n                        }\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with cacheComponents we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with cacheComponents.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    // Assign the function name also as a name property, so that it's preserved\n    // even when mangling is enabled.\n    Object.defineProperty(patched, 'name', {\n        value: 'fetch',\n        writable: false\n    });\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","import { notFound } from '../not-found'\n\nexport const PARALLEL_ROUTE_DEFAULT_PATH =\n  'next/dist/client/components/builtin/default.js'\n\nexport default function ParallelRouteDefault() {\n  notFound()\n}\n","export const BUILTIN_PREFIX = '__next_builtin__';\nconst nextInternalPrefixRegex = /^(.*[\\\\/])?next[\\\\/]dist[\\\\/]client[\\\\/]components[\\\\/]builtin[\\\\/]/;\nexport function normalizeConventionFilePath(projectDir, conventionPath) {\n    // Turbopack project path is formed as: \"<project root>/<cwd>\".\n    // When project root is not the working directory, we can extract the relative project root path.\n    // This is mostly used for running Next.js inside a monorepo.\n    const cwd = process.env.NEXT_RUNTIME === 'edge' ? '' : process.cwd();\n    const relativeProjectRoot = projectDir.replace(cwd, '');\n    let relativePath = (conventionPath || '')// remove turbopack [project] prefix\n    .replace(/^\\[project\\]/, '')// remove turbopack relative project path, everything after [project] and before the working directory.\n    .replace(relativeProjectRoot, '')// remove the project root from the path\n    .replace(projectDir, '')// remove cwd prefix\n    .replace(cwd, '')// remove /(src/)?app/ dir prefix\n    .replace(/^([\\\\/])*(src[\\\\/])?app[\\\\/]/, '');\n    // If it's internal file only keep the filename, strip nextjs internal prefix\n    if (nextInternalPrefixRegex.test(relativePath)) {\n        relativePath = relativePath.replace(nextInternalPrefixRegex, '');\n        // Add a special prefix to let segment explorer know it's a built-in component\n        relativePath = `${BUILTIN_PREFIX}${relativePath}`;\n    }\n    return relativePath.replace(/\\\\/g, '/');\n}\n// if a filepath is a builtin file. e.g.\n// .../project/node_modules/next/dist/client/components/builtin/global-error.js -> true\n// .../project/app/global-error.js -> false\nexport const isNextjsBuiltinFilePath = (filePath)=>{\n    return nextInternalPrefixRegex.test(filePath);\n};\nexport const BOUNDARY_SUFFIX = '@boundary';\nexport function normalizeBoundaryFilename(filename) {\n    return filename.replace(new RegExp(`^${BUILTIN_PREFIX}`), '').replace(new RegExp(`${BOUNDARY_SUFFIX}$`), '');\n}\nexport const BOUNDARY_PREFIX = 'boundary:';\nexport function isBoundaryFile(fileType) {\n    return fileType.startsWith(BOUNDARY_PREFIX);\n}\n// if a filename is a builtin file.\n// __next_builtin__global-error.js -> true\n// page.js -> false\nexport function isBuiltinBoundaryFile(fileType) {\n    return fileType.startsWith(BUILTIN_PREFIX);\n}\nexport function getBoundaryOriginFileType(fileType) {\n    return fileType.replace(BOUNDARY_PREFIX, '');\n}\nexport function getConventionPathByType(tree, dir, conventionType) {\n    const modules = tree[2];\n    const conventionPath = modules[conventionType] ? modules[conventionType][1] : undefined;\n    if (conventionPath) {\n        return normalizeConventionFilePath(dir, conventionPath);\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=segment-explorer-path.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { isClientReference, isUseCacheFunction } from '../../lib/client-and-server-references';\nimport { getLayoutOrPageModule } from '../lib/app-dir-module';\nimport { interopDefault } from './interop-default';\nimport { parseLoaderTree } from './parse-loader-tree';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { getLayerAssets } from './get-layer-assets';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { validateRevalidate } from '../lib/patch-fetch';\nimport { PARALLEL_ROUTE_DEFAULT_PATH } from '../../client/components/builtin/default';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NextNodeServerSpan } from '../lib/trace/constants';\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { OUTLET_BOUNDARY_NAME } from '../../lib/framework/boundary-constants';\nimport { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nimport { BOUNDARY_PREFIX, BOUNDARY_SUFFIX, BUILTIN_PREFIX, getConventionPathByType, isNextjsBuiltinFilePath } from './segment-explorer-path';\n/**\n * Use the provided loader tree to create the React Component tree.\n */ export function createComponentTree(props) {\n    return getTracer().trace(NextNodeServerSpan.createComponentTree, {\n        spanName: 'build component tree'\n    }, ()=>createComponentTreeInternal(props, true));\n}\nfunction errorMissingDefaultExport(pagePath, convention) {\n    const normalizedPagePath = pagePath === '/' ? '' : pagePath;\n    throw Object.defineProperty(new Error(`The default export is not a React Component in \"${normalizedPagePath}/${convention}\"`), \"__NEXT_ERROR_CODE\", {\n        value: \"E45\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst cacheNodeKey = 'c';\nasync function createComponentTreeInternal({ loaderTree: tree, parentParams, rootLayoutIncluded, injectedCSS, injectedJS, injectedFontPreloadTags, getViewportReady, getMetadataReady, ctx, missingSlots, preloadCallbacks, authInterrupts, StreamingMetadataOutlet }, isRoot) {\n    const { renderOpts: { nextConfigOutput, experimental }, workStore, componentMod: { SegmentViewNode, HTTPAccessFallbackBoundary, LayoutRouter, RenderFromTemplateContext, OutletBoundary, ClientPageRoot, ClientSegmentRoot, createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage, createServerParamsForServerSegment, createPrerenderParamsForClientSegment, serverHooks: { DynamicServerError }, Postpone }, pagePath, getDynamicParamFromSegment, isPrefetch, query } = ctx;\n    const { page, conventionPath, segment, modules, parallelRoutes } = parseLoaderTree(tree);\n    const { layout, template, error, loading, 'not-found': notFound, forbidden, unauthorized } = modules;\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    const layerAssets = getLayerAssets({\n        preloadCallbacks,\n        ctx,\n        layoutOrPagePath: conventionPath,\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout,\n        injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout\n    });\n    const [Template, templateStyles, templateScripts] = template ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: template[1],\n        getComponent: template[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [\n        React.Fragment\n    ];\n    const [ErrorComponent, errorStyles, errorScripts] = error ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: error[1],\n        getComponent: error[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Loading, loadingStyles, loadingScripts] = loading ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: loading[1],\n        getComponent: loading[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const { mod: layoutOrPageMod, modType } = await getTracer().trace(NextNodeServerSpan.getLayoutOrPageModule, {\n        hideSpan: !(isLayout || isPage),\n        spanName: 'resolve segment modules',\n        attributes: {\n            'next.segment': segment\n        }\n    }, ()=>getLayoutOrPageModule(tree));\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    const [NotFound, notFoundStyles] = notFound ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: notFound[1],\n        getComponent: notFound[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Forbidden, forbiddenStyles] = authInterrupts && forbidden ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: forbidden[1],\n        getComponent: forbidden[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    const [Unauthorized, unauthorizedStyles] = authInterrupts && unauthorized ? await createComponentStylesAndScripts({\n        ctx,\n        filePath: unauthorized[1],\n        getComponent: unauthorized[0],\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedJS: injectedJSWithCurrentLayout\n    }) : [];\n    let dynamic = layoutOrPageMod == null ? void 0 : layoutOrPageMod.dynamic;\n    if (nextConfigOutput === 'export') {\n        if (!dynamic || dynamic === 'auto') {\n            dynamic = 'error';\n        } else if (dynamic === 'force-dynamic') {\n            // force-dynamic is always incompatible with 'export'. We must interrupt the build\n            throw Object.defineProperty(new StaticGenBailoutError(`Page with \\`dynamic = \"force-dynamic\"\\` couldn't be exported. \\`output: \"export\"\\` requires all pages be renderable statically because there is no runtime server to dynamically render routes in this output format. Learn more: https://nextjs.org/docs/app/building-your-application/deploying/static-exports`), \"__NEXT_ERROR_CODE\", {\n                value: \"E527\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    if (typeof dynamic === 'string') {\n        // the nested most config wins so we only force-static\n        // if it's configured above any parent that configured\n        // otherwise\n        if (dynamic === 'error') {\n            workStore.dynamicShouldError = true;\n        } else if (dynamic === 'force-dynamic') {\n            workStore.forceDynamic = true;\n            // TODO: (PPR) remove this bailout once PPR is the default\n            if (workStore.isStaticGeneration && !experimental.isRoutePPREnabled) {\n                // If the postpone API isn't available, we can't postpone the render and\n                // therefore we can't use the dynamic API.\n                const err = Object.defineProperty(new DynamicServerError(`Page with \\`dynamic = \"force-dynamic\"\\` won't be rendered statically.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E585\",\n                    enumerable: false,\n                    configurable: true\n                });\n                workStore.dynamicUsageDescription = err.message;\n                workStore.dynamicUsageStack = err.stack;\n                throw err;\n            }\n        } else {\n            workStore.dynamicShouldError = false;\n            workStore.forceStatic = dynamic === 'force-static';\n        }\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache) === 'string') {\n        workStore.fetchCache = layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache;\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) !== 'undefined') {\n        validateRevalidate(layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate, workStore.route);\n    }\n    if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) === 'number') {\n        const defaultRevalidate = layoutOrPageMod.revalidate;\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            switch(workUnitStore.type){\n                case 'prerender':\n                case 'prerender-runtime':\n                case 'prerender-legacy':\n                case 'prerender-ppr':\n                    if (workUnitStore.revalidate > defaultRevalidate) {\n                        workUnitStore.revalidate = defaultRevalidate;\n                    }\n                    break;\n                case 'request':\n                    break;\n                // createComponentTree is not called for these stores:\n                case 'cache':\n                case 'private-cache':\n                case 'prerender-client':\n                case 'unstable-cache':\n                    break;\n                default:\n                    workUnitStore;\n            }\n        }\n        if (!workStore.forceStatic && workStore.isStaticGeneration && defaultRevalidate === 0 && // If the postpone API isn't available, we can't postpone the render and\n        // therefore we can't use the dynamic API.\n        !experimental.isRoutePPREnabled) {\n            const dynamicUsageDescription = `revalidate: 0 configured ${segment}`;\n            workStore.dynamicUsageDescription = dynamicUsageDescription;\n            throw Object.defineProperty(new DynamicServerError(dynamicUsageDescription), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    const isStaticGeneration = workStore.isStaticGeneration;\n    // Assume the segment we're rendering contains only partial data if PPR is\n    // enabled and this is a statically generated response. This is used by the\n    // client Segment Cache after a prefetch to determine if it can skip the\n    // second request to fill in the dynamic data.\n    //\n    // It's OK for this to be `true` when the data is actually fully static, but\n    // it's not OK for this to be `false` when the data possibly contains holes.\n    // Although the value here is overly pessimistic, for prefetches, it will be\n    // replaced by a more specific value when the data is later processed into\n    // per-segment responses (see collect-segment-data.tsx)\n    //\n    // For dynamic requests, this must always be `false` because dynamic responses\n    // are never partial.\n    const isPossiblyPartialResponse = isStaticGeneration && experimental.isRoutePPREnabled === true;\n    const LayoutOrPage = layoutOrPageMod ? interopDefault(layoutOrPageMod) : undefined;\n    /**\n   * The React Component to render.\n   */ let MaybeComponent = LayoutOrPage;\n    if (process.env.NODE_ENV === 'development') {\n        const { isValidElementType } = require('next/dist/compiled/react-is');\n        if (typeof MaybeComponent !== 'undefined' && !isValidElementType(MaybeComponent)) {\n            errorMissingDefaultExport(pagePath, modType ?? 'page');\n        }\n        if (typeof ErrorComponent !== 'undefined' && !isValidElementType(ErrorComponent)) {\n            errorMissingDefaultExport(pagePath, 'error');\n        }\n        if (typeof Loading !== 'undefined' && !isValidElementType(Loading)) {\n            errorMissingDefaultExport(pagePath, 'loading');\n        }\n        if (typeof NotFound !== 'undefined' && !isValidElementType(NotFound)) {\n            errorMissingDefaultExport(pagePath, 'not-found');\n        }\n        if (typeof Forbidden !== 'undefined' && !isValidElementType(Forbidden)) {\n            errorMissingDefaultExport(pagePath, 'forbidden');\n        }\n        if (typeof Unauthorized !== 'undefined' && !isValidElementType(Unauthorized)) {\n            errorMissingDefaultExport(pagePath, 'unauthorized');\n        }\n    }\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    // Create object holding the parent params and current params\n    let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    // Resolve the segment param\n    const actualSegment = segmentParam ? segmentParam.treeSegment : segment;\n    const isSegmentViewEnabled = process.env.NODE_ENV === 'development' && ctx.renderOpts.devtoolSegmentExplorer;\n    const dir = (process.env.NEXT_RUNTIME === 'edge' ? process.env.__NEXT_EDGE_PROJECT_DIR : ctx.renderOpts.dir) || '';\n    // Use the same condition to render metadataOutlet as metadata\n    const metadataOutlet = StreamingMetadataOutlet ? /*#__PURE__*/ _jsx(StreamingMetadataOutlet, {}) : /*#__PURE__*/ _jsx(MetadataOutlet, {\n        ready: getMetadataReady\n    });\n    const [notFoundElement, notFoundFilePath] = await createBoundaryConventionElement({\n        ctx,\n        conventionName: 'not-found',\n        Component: NotFound,\n        styles: notFoundStyles,\n        tree\n    });\n    const [forbiddenElement] = await createBoundaryConventionElement({\n        ctx,\n        conventionName: 'forbidden',\n        Component: Forbidden,\n        styles: forbiddenStyles,\n        tree\n    });\n    const [unauthorizedElement] = await createBoundaryConventionElement({\n        ctx,\n        conventionName: 'unauthorized',\n        Component: Unauthorized,\n        styles: unauthorizedStyles,\n        tree\n    });\n    // TODO: Combine this `map` traversal with the loop below that turns the array\n    // into an object.\n    const parallelRouteMap = await Promise.all(Object.keys(parallelRoutes).map(async (parallelRouteKey)=>{\n        const isChildrenRouteKey = parallelRouteKey === 'children';\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const notFoundComponent = isChildrenRouteKey ? notFoundElement : undefined;\n        const forbiddenComponent = isChildrenRouteKey ? forbiddenElement : undefined;\n        const unauthorizedComponent = isChildrenRouteKey ? unauthorizedElement : undefined;\n        // if we're prefetching and that there's a Loading component, we bail out\n        // otherwise we keep rendering for the prefetch.\n        // We also want to bail out if there's no Loading component in the tree.\n        let childCacheNodeSeedData = null;\n        if (// Before PPR, the way instant navigations work in Next.js is we\n        // prefetch everything up to the first route segment that defines a\n        // loading.tsx boundary. (We do the same if there's no loading\n        // boundary in the entire tree, because we don't want to prefetch too\n        // much) The rest of the tree is deferred until the actual navigation.\n        // It does not take into account whether the data is dynamic — even if\n        // the tree is completely static, it will still defer everything\n        // inside the loading boundary.\n        //\n        // This behavior predates PPR and is only relevant if the\n        // PPR flag is not enabled.\n        isPrefetch && (Loading || !hasLoadingComponentInTree(parallelRoute)) && // The approach with PPR is different — loading.tsx behaves like a\n        // regular Suspense boundary and has no special behavior.\n        //\n        // With PPR, we prefetch as deeply as possible, and only defer when\n        // dynamic data is accessed. If so, we only defer the nearest parent\n        // Suspense boundary of the dynamic data access, regardless of whether\n        // the boundary is defined by loading.tsx or a normal <Suspense>\n        // component in userspace.\n        //\n        // NOTE: In practice this usually means we'll end up prefetching more\n        // than we were before PPR, which may or may not be considered a\n        // performance regression by some apps. The plan is to address this\n        // before General Availability of PPR by introducing granular\n        // per-segment fetching, so we can reuse as much of the tree as\n        // possible during both prefetches and dynamic navigations. But during\n        // the beta period, we should be clear about this trade off in our\n        // communications.\n        !experimental.isRoutePPREnabled) {\n        // Don't prefetch this child. This will trigger a lazy fetch by the\n        // client router.\n        } else {\n            // Create the child component\n            if (process.env.NODE_ENV === 'development' && missingSlots) {\n                var _parsedTree_conventionPath;\n                // When we detect the default fallback (which triggers a 404), we collect the missing slots\n                // to provide more helpful debug information during development mode.\n                const parsedTree = parseLoaderTree(parallelRoute);\n                if ((_parsedTree_conventionPath = parsedTree.conventionPath) == null ? void 0 : _parsedTree_conventionPath.endsWith(PARALLEL_ROUTE_DEFAULT_PATH)) {\n                    missingSlots.add(parallelRouteKey);\n                }\n            }\n            const seedData = await createComponentTreeInternal({\n                loaderTree: parallelRoute,\n                parentParams: currentParams,\n                rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n                injectedCSS: injectedCSSWithCurrentLayout,\n                injectedJS: injectedJSWithCurrentLayout,\n                injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n                // `getMetadataReady` and `getViewportReady` are used to conditionally throw. In the case of parallel routes we will have more than one page\n                // but we only want to throw on the first one.\n                getMetadataReady: isChildrenRouteKey ? getMetadataReady : ()=>Promise.resolve(),\n                getViewportReady: isChildrenRouteKey ? getViewportReady : ()=>Promise.resolve(),\n                ctx,\n                missingSlots,\n                preloadCallbacks,\n                authInterrupts,\n                // `StreamingMetadataOutlet` is used to conditionally throw. In the case of parallel routes we will have more than one page\n                // but we only want to throw on the first one.\n                StreamingMetadataOutlet: isChildrenRouteKey ? StreamingMetadataOutlet : null\n            }, false);\n            childCacheNodeSeedData = seedData;\n        }\n        const templateNode = /*#__PURE__*/ _jsx(Template, {\n            children: /*#__PURE__*/ _jsx(RenderFromTemplateContext, {})\n        });\n        const templateFilePath = getConventionPathByType(tree, dir, 'template');\n        const errorFilePath = getConventionPathByType(tree, dir, 'error');\n        const loadingFilePath = getConventionPathByType(tree, dir, 'loading');\n        const globalErrorFilePath = isRoot ? getConventionPathByType(tree, dir, 'global-error') : undefined;\n        const wrappedErrorStyles = isSegmentViewEnabled && errorFilePath ? /*#__PURE__*/ _jsx(SegmentViewNode, {\n            type: \"error\",\n            pagePath: errorFilePath,\n            children: errorStyles\n        }) : errorStyles;\n        // Add a suffix to avoid conflict with the segment view node representing rendered file.\n        // existence: not-found.tsx@boundary\n        // rendered: not-found.tsx\n        const fileNameSuffix = BOUNDARY_SUFFIX;\n        const segmentViewBoundaries = isSegmentViewEnabled ? /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                notFoundFilePath && /*#__PURE__*/ _jsx(SegmentViewNode, {\n                    type: `${BOUNDARY_PREFIX}not-found`,\n                    pagePath: notFoundFilePath + fileNameSuffix\n                }),\n                loadingFilePath && /*#__PURE__*/ _jsx(SegmentViewNode, {\n                    type: `${BOUNDARY_PREFIX}loading`,\n                    pagePath: loadingFilePath + fileNameSuffix\n                }),\n                errorFilePath && /*#__PURE__*/ _jsx(SegmentViewNode, {\n                    type: `${BOUNDARY_PREFIX}error`,\n                    pagePath: errorFilePath + fileNameSuffix\n                }),\n                globalErrorFilePath && /*#__PURE__*/ _jsx(SegmentViewNode, {\n                    type: `${BOUNDARY_PREFIX}global-error`,\n                    pagePath: isNextjsBuiltinFilePath(globalErrorFilePath) ? `${BUILTIN_PREFIX}global-error.js${fileNameSuffix}` : globalErrorFilePath\n                })\n            ]\n        }) : null;\n        return [\n            parallelRouteKey,\n            /*#__PURE__*/ _jsx(LayoutRouter, {\n                parallelRouterKey: parallelRouteKey,\n                // TODO-APP: Add test for loading returning `undefined`. This currently can't be tested as the `webdriver()` tab will wait for the full page to load before returning.\n                error: ErrorComponent,\n                errorStyles: wrappedErrorStyles,\n                errorScripts: errorScripts,\n                template: // Only render SegmentViewNode when there's an actual template\n                isSegmentViewEnabled && templateFilePath ? /*#__PURE__*/ _jsx(SegmentViewNode, {\n                    type: \"template\",\n                    pagePath: templateFilePath,\n                    children: templateNode\n                }) : templateNode,\n                templateStyles: templateStyles,\n                templateScripts: templateScripts,\n                notFound: notFoundComponent,\n                forbidden: forbiddenComponent,\n                unauthorized: unauthorizedComponent,\n                ...isSegmentViewEnabled && {\n                    segmentViewBoundaries\n                }\n            }),\n            childCacheNodeSeedData\n        ];\n    }));\n    // Convert the parallel route map into an object after all promises have been resolved.\n    let parallelRouteProps = {};\n    let parallelRouteCacheNodeSeedData = {};\n    for (const parallelRoute of parallelRouteMap){\n        const [parallelRouteKey, parallelRouteProp, flightData] = parallelRoute;\n        parallelRouteProps[parallelRouteKey] = parallelRouteProp;\n        parallelRouteCacheNodeSeedData[parallelRouteKey] = flightData;\n    }\n    let loadingElement = Loading ? /*#__PURE__*/ _jsx(Loading, {}, \"l\") : null;\n    const loadingFilePath = getConventionPathByType(tree, dir, 'loading');\n    if (isSegmentViewEnabled && loadingElement) {\n        if (loadingFilePath) {\n            loadingElement = /*#__PURE__*/ _jsx(SegmentViewNode, {\n                type: \"loading\",\n                pagePath: loadingFilePath,\n                children: loadingElement\n            }, cacheNodeKey + '-loading');\n        }\n    }\n    const loadingData = loadingElement ? [\n        loadingElement,\n        loadingStyles,\n        loadingScripts\n    ] : null;\n    // When the segment does not have a layout or page we still have to add the layout router to ensure the path holds the loading component\n    if (!MaybeComponent) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    layerAssets,\n                    parallelRouteProps.children\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    }\n    const Component = MaybeComponent;\n    // If force-dynamic is used and the current render supports postponing, we\n    // replace it with a node that will postpone the render. This ensures that the\n    // postpone is invoked during the react render phase and not during the next\n    // render phase.\n    // @TODO this does not actually do what it seems like it would or should do. The idea is that\n    // if we are rendering in a force-dynamic mode and we can postpone we should only make the segments\n    // that ask for force-dynamic to be dynamic, allowing other segments to still prerender. However\n    // because this comes after the children traversal and the static generation store is mutated every segment\n    // along the parent path of a force-dynamic segment will hit this condition effectively making the entire\n    // render force-dynamic. We should refactor this function so that we can correctly track which segments\n    // need to be dynamic\n    if (workStore.isStaticGeneration && workStore.forceDynamic && experimental.isRoutePPREnabled) {\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(Postpone, {\n                        reason: 'dynamic = \"force-dynamic\" was used',\n                        route: workStore.route\n                    }),\n                    layerAssets\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            true\n        ];\n    }\n    const isClientComponent = isClientReference(layoutOrPageMod);\n    if (process.env.NODE_ENV === 'development' && 'params' in parallelRouteProps) {\n        // @TODO consider making this an error and running the check in build as well\n        console.error(`\"params\" is a reserved prop in Layouts and Pages and cannot be used as the name of a parallel route in ${segment}`);\n    }\n    if (isPage) {\n        const PageComponent = Component;\n        // Assign searchParams to props if this is a page\n        let pageElement;\n        if (isClientComponent) {\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams);\n                const promiseOfSearchParams = createPrerenderSearchParamsForClientPage(workStore);\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams,\n                    promises: [\n                        promiseOfSearchParams,\n                        promiseOfParams\n                    ]\n                });\n            } else {\n                pageElement = /*#__PURE__*/ _jsx(ClientPageRoot, {\n                    Component: PageComponent,\n                    searchParams: query,\n                    params: currentParams\n                });\n            }\n        } else {\n            // If we are passing params to a server component Page we need to track\n            // their usage in case the current render mode tracks dynamic API usage.\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            // If we are passing searchParams to a server component Page we need to\n            // track their usage in case the current render mode tracks dynamic API\n            // usage.\n            let searchParams = createServerSearchParamsForServerPage(query, workStore);\n            if (isUseCacheFunction(PageComponent)) {\n                const UseCachePageComponent = PageComponent;\n                pageElement = /*#__PURE__*/ _jsx(UseCachePageComponent, {\n                    params: params,\n                    searchParams: searchParams,\n                    $$isPageComponent: true\n                });\n            } else {\n                pageElement = /*#__PURE__*/ _jsx(PageComponent, {\n                    params: params,\n                    searchParams: searchParams\n                });\n            }\n        }\n        const isDefaultSegment = segment === DEFAULT_SEGMENT_KEY;\n        const pageFilePath = getConventionPathByType(tree, dir, 'page') ?? getConventionPathByType(tree, dir, 'defaultPage');\n        const segmentType = isDefaultSegment ? 'default' : 'page';\n        const wrappedPageElement = isSegmentViewEnabled && pageFilePath ? /*#__PURE__*/ _jsx(SegmentViewNode, {\n            type: segmentType,\n            pagePath: pageFilePath,\n            children: pageElement\n        }, cacheNodeKey + '-' + segmentType) : pageElement;\n        return [\n            actualSegment,\n            /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    wrappedPageElement,\n                    layerAssets,\n                    /*#__PURE__*/ _jsxs(OutletBoundary, {\n                        children: [\n                            /*#__PURE__*/ _jsx(MetadataOutlet, {\n                                ready: getViewportReady\n                            }),\n                            metadataOutlet\n                        ]\n                    })\n                ]\n            }, cacheNodeKey),\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    } else {\n        const SegmentComponent = Component;\n        const isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot = rootLayoutAtThisLevel && 'children' in parallelRoutes && Object.keys(parallelRoutes).length > 1;\n        let segmentNode;\n        if (isClientComponent) {\n            let clientSegment;\n            if (isStaticGeneration) {\n                const promiseOfParams = createPrerenderParamsForClientSegment(currentParams);\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams,\n                    promise: promiseOfParams\n                });\n            } else {\n                clientSegment = /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: parallelRouteProps,\n                    params: currentParams\n                });\n            }\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                let notfoundClientSegment;\n                let forbiddenClientSegment;\n                let unauthorizedClientSegment;\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                notfoundClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: NotFound,\n                    errorElement: notFoundElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                forbiddenClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: Forbidden,\n                    errorElement: forbiddenElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                unauthorizedClientSegment = createErrorBoundaryClientSegmentRoot({\n                    ErrorBoundaryComponent: Unauthorized,\n                    errorElement: unauthorizedElement,\n                    ClientSegmentRoot,\n                    layerAssets,\n                    SegmentComponent,\n                    currentParams\n                });\n                if (notfoundClientSegment || forbiddenClientSegment || unauthorizedClientSegment) {\n                    segmentNode = /*#__PURE__*/ _jsxs(HTTPAccessFallbackBoundary, {\n                        notFound: notfoundClientSegment,\n                        forbidden: forbiddenClientSegment,\n                        unauthorized: unauthorizedClientSegment,\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                } else {\n                    segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                        children: [\n                            layerAssets,\n                            clientSegment\n                        ]\n                    }, cacheNodeKey);\n                }\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        clientSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        } else {\n            const params = createServerParamsForServerSegment(currentParams, workStore);\n            let serverSegment;\n            if (isUseCacheFunction(SegmentComponent)) {\n                const UseCacheLayoutComponent = SegmentComponent;\n                serverSegment = /*#__PURE__*/ _jsx(UseCacheLayoutComponent, {\n                    ...parallelRouteProps,\n                    params: params,\n                    $$isLayoutComponent: true\n                });\n            } else {\n                serverSegment = /*#__PURE__*/ _jsx(SegmentComponent, {\n                    ...parallelRouteProps,\n                    params: params\n                });\n            }\n            if (isRootLayoutWithChildrenSlotAndAtLeastOneMoreSlot) {\n                // TODO-APP: This is a hack to support unmatched parallel routes, which will throw `notFound()`.\n                // This ensures that a `HTTPAccessFallbackBoundary` is available for when that happens,\n                // but it's not ideal, as it needlessly invokes the `NotFound` component and renders the `RootLayout` twice.\n                // We should instead look into handling the fallback behavior differently in development mode so that it doesn't\n                // rely on the `NotFound` behavior.\n                segmentNode = /*#__PURE__*/ _jsxs(HTTPAccessFallbackBoundary, {\n                    notFound: notFoundElement ? /*#__PURE__*/ _jsxs(_Fragment, {\n                        children: [\n                            layerAssets,\n                            /*#__PURE__*/ _jsxs(SegmentComponent, {\n                                params: params,\n                                children: [\n                                    notFoundStyles,\n                                    notFoundElement\n                                ]\n                            })\n                        ]\n                    }) : undefined,\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            } else {\n                segmentNode = /*#__PURE__*/ _jsxs(React.Fragment, {\n                    children: [\n                        layerAssets,\n                        serverSegment\n                    ]\n                }, cacheNodeKey);\n            }\n        }\n        const layoutFilePath = getConventionPathByType(tree, dir, 'layout');\n        const wrappedSegmentNode = isSegmentViewEnabled && layoutFilePath ? /*#__PURE__*/ _jsx(SegmentViewNode, {\n            type: \"layout\",\n            pagePath: layoutFilePath,\n            children: segmentNode\n        }, \"layout\") : segmentNode;\n        // For layouts we just render the component\n        return [\n            actualSegment,\n            wrappedSegmentNode,\n            parallelRouteCacheNodeSeedData,\n            loadingData,\n            isPossiblyPartialResponse\n        ];\n    }\n}\nasync function MetadataOutlet({ ready }) {\n    const r = ready();\n    // We can avoid a extra microtask by unwrapping the instrumented promise directly if available.\n    if (r.status === 'rejected') {\n        throw r.value;\n    } else if (r.status !== 'fulfilled') {\n        await r;\n    }\n    return null;\n}\nMetadataOutlet.displayName = OUTLET_BOUNDARY_NAME;\nfunction createErrorBoundaryClientSegmentRoot({ ErrorBoundaryComponent, errorElement, ClientSegmentRoot, layerAssets, SegmentComponent, currentParams }) {\n    if (ErrorBoundaryComponent) {\n        const notFoundParallelRouteProps = {\n            children: errorElement\n        };\n        return /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                layerAssets,\n                /*#__PURE__*/ _jsx(ClientSegmentRoot, {\n                    Component: SegmentComponent,\n                    slots: notFoundParallelRouteProps,\n                    params: currentParams\n                })\n            ]\n        });\n    }\n    return null;\n}\nexport function getRootParams(loaderTree, getDynamicParamFromSegment) {\n    return getRootParamsImpl({}, loaderTree, getDynamicParamFromSegment);\n}\nfunction getRootParamsImpl(parentParams, loaderTree, getDynamicParamFromSegment) {\n    const { segment, modules: { layout }, parallelRoutes } = parseLoaderTree(loaderTree);\n    const segmentParam = getDynamicParamFromSegment(segment);\n    let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const isRootLayout = typeof layout !== 'undefined';\n    if (isRootLayout) {\n        return currentParams;\n    } else if (!parallelRoutes.children) {\n        // This should really be an error but there are bugs in Turbopack that cause\n        // the _not-found LoaderTree to not have any layouts. For rootParams sake\n        // this is somewhat irrelevant when you are not customizing the 404 page.\n        // If you are customizing 404\n        // TODO update rootParams to make all params optional if `/app/not-found.tsx` is defined\n        return currentParams;\n    } else {\n        return getRootParamsImpl(currentParams, // We stop looking for root params as soon as we hit the first layout\n        // and it is not possible to use parallel route children above the root layout\n        // so every parallelRoutes object that this function can visit will necessarily\n        // have a single `children` prop and no others.\n        parallelRoutes.children, getDynamicParamFromSegment);\n    }\n}\nasync function createBoundaryConventionElement({ ctx, conventionName, Component, styles, tree }) {\n    const isSegmentViewEnabled = process.env.NODE_ENV === 'development' && ctx.renderOpts.devtoolSegmentExplorer;\n    const dir = (process.env.NEXT_RUNTIME === 'edge' ? process.env.__NEXT_EDGE_PROJECT_DIR : ctx.renderOpts.dir) || '';\n    const { SegmentViewNode } = ctx.componentMod;\n    const element = Component ? /*#__PURE__*/ _jsxs(_Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(Component, {}),\n            styles\n        ]\n    }) : undefined;\n    const pagePath = getConventionPathByType(tree, dir, conventionName);\n    const wrappedElement = isSegmentViewEnabled && element ? /*#__PURE__*/ _jsx(SegmentViewNode, {\n        type: conventionName,\n        pagePath: pagePath,\n        children: element\n    }, cacheNodeKey + '-' + conventionName) : element;\n    return [\n        wrappedElement,\n        pagePath\n    ];\n}\n\n//# sourceMappingURL=create-component-tree.js.map","import { matchSegment } from '../../client/components/match-segments';\nimport { getLinkAndScriptTags } from './get-css-inlined-link-tags';\nimport { getPreloadableFonts } from './get-preloadable-fonts';\nimport { createFlightRouterStateFromLoaderTree, createRouteTreePrefetch } from './create-flight-router-state-from-loader-tree';\nimport { hasLoadingComponentInTree } from './has-loading-component-in-tree';\nimport { DEFAULT_SEGMENT_KEY, addSearchParamsIfPageSegment } from '../../shared/lib/segment';\nimport { createComponentTree } from './create-component-tree';\nimport { getSegmentParam } from './get-segment-param';\n/**\n * Use router state to decide at what common layout to render the page.\n * This can either be the common layout between two pages or a specific place to start rendering from using the \"refetch\" marker in the tree.\n */ export async function walkTreeWithFlightRouterState({ loaderTreeToFilter, parentParams, flightRouterState, parentIsInsideSharedLayout, rscHead, injectedCSS, injectedJS, injectedFontPreloadTags, rootLayoutIncluded, getViewportReady, getMetadataReady, ctx, preloadCallbacks, StreamingMetadataOutlet }) {\n    const { renderOpts: { nextFontManifest, experimental }, query, isPrefetch, getDynamicParamFromSegment, parsedRequestHeaders } = ctx;\n    const [segment, parallelRoutes, modules] = loaderTreeToFilter;\n    const parallelRoutesKeys = Object.keys(parallelRoutes);\n    const { layout } = modules;\n    const isLayout = typeof layout !== 'undefined';\n    /**\n   * Checks if the current segment is a root layout.\n   */ const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n    /**\n   * Checks if the current segment or any level above it has a root layout.\n   */ const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n    // Because this function walks to a deeper point in the tree to start rendering we have to track the dynamic parameters up to the point where rendering starts\n    const segmentParam = getDynamicParamFromSegment(segment);\n    const currentParams = // Handle null case where dynamic param is optional\n    segmentParam && segmentParam.value !== null ? {\n        ...parentParams,\n        [segmentParam.param]: segmentParam.value\n    } : parentParams;\n    const actualSegment = addSearchParamsIfPageSegment(segmentParam ? segmentParam.treeSegment : segment, query);\n    /**\n   * Decide if the current segment is where rendering has to start.\n   */ const renderComponentsOnThisLevel = // No further router state available\n    !flightRouterState || // Segment in router state does not match current segment\n    !matchSegment(actualSegment, flightRouterState[0]) || // Last item in the tree\n    parallelRoutesKeys.length === 0 || // Explicit refresh\n    flightRouterState[3] === 'refetch';\n    // Pre-PPR, the `loading` component signals to the router how deep to render the component tree\n    // to ensure prefetches are quick and inexpensive. If there's no `loading` component anywhere in the tree being rendered,\n    // the prefetch will be short-circuited to avoid requesting a potentially very expensive subtree. If there's a `loading`\n    // somewhere in the tree, we'll recursively render the component tree up until we encounter that loading component, and then stop.\n    // Check if we're inside the \"new\" part of the navigation — inside the\n    // shared layout. In the case of a prefetch, this can be true even if the\n    // segment matches, because the client might send a matching segment to\n    // indicate that it already has the data in its cache. But in order to find\n    // the correct loading boundary, we still need to track where the shared\n    // layout begins.\n    //\n    // TODO: We should rethink the protocol for dynamic requests. It might not\n    // make sense for the client to send a FlightRouterState, since that type is\n    // overloaded with other concerns.\n    const isInsideSharedLayout = renderComponentsOnThisLevel || parentIsInsideSharedLayout || flightRouterState[3] === 'inside-shared-layout';\n    if (isInsideSharedLayout && !experimental.isRoutePPREnabled && // If PPR is disabled, and this is a request for the route tree, then we\n    // never render any components. Only send the router state.\n    (parsedRequestHeaders.isRouteTreePrefetchRequest || // Otherwise, check for the presence of a `loading` component.\n    isPrefetch && !Boolean(modules.loading) && !hasLoadingComponentInTree(loaderTreeToFilter))) {\n        // Send only the router state.\n        // TODO: Even for a dynamic route, we should cache these responses,\n        // because they do not contain any render data (neither segment data nor\n        // the head). They can be made even more cacheable once we move the route\n        // params into a separate data structure.\n        const overriddenSegment = flightRouterState && // TODO: Why does canSegmentBeOverridden exist? Why don't we always just\n        // use `actualSegment`? Is it to avoid overwriting some state that's\n        // tracked by the client? Dig deeper to see if we can simplify this.\n        canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = parsedRequestHeaders.isRouteTreePrefetchRequest ? createRouteTreePrefetch(loaderTreeToFilter, getDynamicParamFromSegment) : createFlightRouterStateFromLoaderTree(loaderTreeToFilter, getDynamicParamFromSegment, query);\n        return [\n            [\n                overriddenSegment,\n                routerState,\n                null,\n                [\n                    null,\n                    null\n                ],\n                true\n            ]\n        ];\n    }\n    // Similar to the previous branch. This flag is sent by the client to request\n    // only the metadata for a page. No segment data.\n    if (flightRouterState && flightRouterState[3] === 'metadata-only') {\n        const overriddenSegment = flightRouterState && canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = parsedRequestHeaders.isRouteTreePrefetchRequest ? createRouteTreePrefetch(loaderTreeToFilter, getDynamicParamFromSegment) : createFlightRouterStateFromLoaderTree(loaderTreeToFilter, getDynamicParamFromSegment, query);\n        return [\n            [\n                overriddenSegment,\n                routerState,\n                null,\n                rscHead,\n                false\n            ]\n        ];\n    }\n    if (renderComponentsOnThisLevel) {\n        const overriddenSegment = flightRouterState && // TODO: Why does canSegmentBeOverridden exist? Why don't we always just\n        // use `actualSegment`? Is it to avoid overwriting some state that's\n        // tracked by the client? Dig deeper to see if we can simplify this.\n        canSegmentBeOverridden(actualSegment, flightRouterState[0]) ? flightRouterState[0] : actualSegment;\n        const routerState = createFlightRouterStateFromLoaderTree(// Create router state using the slice of the loaderTree\n        loaderTreeToFilter, getDynamicParamFromSegment, query);\n        // Create component tree using the slice of the loaderTree\n        const seedData = await createComponentTree(// This ensures flightRouterPath is valid and filters down the tree\n        {\n            ctx,\n            loaderTree: loaderTreeToFilter,\n            parentParams: currentParams,\n            injectedCSS,\n            injectedJS,\n            injectedFontPreloadTags,\n            // This is intentionally not \"rootLayoutIncludedAtThisLevelOrAbove\" as createComponentTree starts at the current level and does a check for \"rootLayoutAtThisLevel\" too.\n            rootLayoutIncluded,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            authInterrupts: experimental.authInterrupts,\n            StreamingMetadataOutlet\n        });\n        return [\n            [\n                overriddenSegment,\n                routerState,\n                seedData,\n                rscHead,\n                false\n            ]\n        ];\n    }\n    // If we are not rendering on this level we need to check if the current\n    // segment has a layout. If so, we need to track all the used CSS to make\n    // the result consistent.\n    const layoutPath = layout == null ? void 0 : layout[1];\n    const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n    const injectedJSWithCurrentLayout = new Set(injectedJS);\n    const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n    if (layoutPath) {\n        getLinkAndScriptTags(ctx.clientReferenceManifest, layoutPath, injectedCSSWithCurrentLayout, injectedJSWithCurrentLayout, true);\n        getPreloadableFonts(nextFontManifest, layoutPath, injectedFontPreloadTagsWithCurrentLayout);\n    }\n    const paths = [];\n    // Walk through all parallel routes.\n    for (const parallelRouteKey of parallelRoutesKeys){\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const subPaths = await walkTreeWithFlightRouterState({\n            ctx,\n            loaderTreeToFilter: parallelRoute,\n            parentParams: currentParams,\n            flightRouterState: flightRouterState && flightRouterState[1][parallelRouteKey],\n            parentIsInsideSharedLayout: isInsideSharedLayout,\n            rscHead,\n            injectedCSS: injectedCSSWithCurrentLayout,\n            injectedJS: injectedJSWithCurrentLayout,\n            injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n            rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            StreamingMetadataOutlet\n        });\n        for (const subPath of subPaths){\n            // we don't need to send over default routes in the flight data\n            // because they are always ignored by the client, unless it's a refetch\n            if (subPath[0] === DEFAULT_SEGMENT_KEY && flightRouterState && !!flightRouterState[1][parallelRouteKey][0] && flightRouterState[1][parallelRouteKey][3] !== 'refetch') {\n                continue;\n            }\n            paths.push([\n                actualSegment,\n                parallelRouteKey,\n                ...subPath\n            ]);\n        }\n    }\n    return paths;\n}\n/*\n * This function is used to determine if an existing segment can be overridden\n * by the incoming segment.\n */ const canSegmentBeOverridden = (existingSegment, segment)=>{\n    var _getSegmentParam;\n    if (Array.isArray(existingSegment) || !Array.isArray(segment)) {\n        return false;\n    }\n    return ((_getSegmentParam = getSegmentParam(existingSegment)) == null ? void 0 : _getSegmentParam.param) === segment[0];\n};\n\n//# sourceMappingURL=walk-tree-with-flight-router-state.js.map","import { arrayBufferToString, stringToUint8Array } from '../app-render/encryption-utils';\n/**\n * Parses serialized cache entries into a UseCacheCacheStore\n * @param entries - The serialized entries to parse\n * @returns A new UseCacheCacheStore containing the parsed entries\n */ export function parseUseCacheCacheStore(entries) {\n    const store = new Map();\n    for (const [key, { value, tags, stale, timestamp, expire, revalidate }] of entries){\n        store.set(key, Promise.resolve({\n            // Create a ReadableStream from the Uint8Array\n            value: new ReadableStream({\n                start (controller) {\n                    // Enqueue the Uint8Array to the stream\n                    controller.enqueue(stringToUint8Array(atob(value)));\n                    // Close the stream\n                    controller.close();\n                }\n            }),\n            tags,\n            stale,\n            timestamp,\n            expire,\n            revalidate\n        }));\n    }\n    return store;\n}\n/**\n * Serializes UseCacheCacheStore entries into an array of key-value pairs\n * @param entries - The store entries to stringify\n * @returns A promise that resolves to an array of key-value pairs with serialized values\n */ export async function serializeUseCacheCacheStore(entries) {\n    return Promise.all(Array.from(entries).map(([key, value])=>{\n        return value.then(async (entry)=>{\n            const [left, right] = entry.value.tee();\n            entry.value = right;\n            let binaryString = '';\n            // We want to encode the value as a string, but we aren't sure if the\n            // value is a a stream of UTF-8 bytes or not, so let's just encode it\n            // as a string using base64.\n            for await (const chunk of left){\n                binaryString += arrayBufferToString(chunk);\n            }\n            return [\n                key,\n                {\n                    // Encode the value as a base64 string.\n                    value: btoa(binaryString),\n                    tags: entry.tags,\n                    stale: entry.stale,\n                    timestamp: entry.timestamp,\n                    expire: entry.expire,\n                    revalidate: entry.revalidate\n                }\n            ];\n        }).catch(()=>{\n            // Any failed cache writes should be ignored as to not discard the\n            // entire cache.\n            return null;\n        });\n    }));\n}\n\n//# sourceMappingURL=cache-store.js.map","import { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  type UseCacheCacheStore,\n  type FetchCacheStore,\n  type EncryptedBoundArgsCacheStore,\n  serializeUseCacheCacheStore,\n  parseUseCacheCacheStore,\n  type DecryptedBoundArgsCacheStore,\n  type UseCacheCacheStoreSerialized,\n} from './cache-store'\n\n/**\n * An immutable version of the resume data cache used during rendering.\n * This cache is read-only and cannot be modified once created.\n */\nexport interface RenderResumeDataCache {\n  /**\n   * A read-only Map store for values cached by the 'use cache' React hook.\n   * The 'set' operation is omitted to enforce immutability.\n   */\n  readonly cache: Omit<UseCacheCacheStore, 'set'>\n\n  /**\n   * A read-only Map store for cached fetch responses.\n   * The 'set' operation is omitted to enforce immutability.\n   */\n  readonly fetch: Omit<FetchCacheStore, 'set'>\n\n  /**\n   * A read-only Map store for encrypted bound args of inline server functions.\n   * The 'set' operation is omitted to enforce immutability.\n   */\n  readonly encryptedBoundArgs: Omit<EncryptedBoundArgsCacheStore, 'set'>\n\n  /**\n   * A read-only Map store for decrypted bound args of inline server functions.\n   * This is only intended for in-memory usage during pre-rendering, and must\n   * not be persisted in the resume store. The 'set' operation is omitted to\n   * enforce immutability.\n   */\n  readonly decryptedBoundArgs: Omit<DecryptedBoundArgsCacheStore, 'set'>\n}\n\n/**\n * A mutable version of the resume data cache used during pre-rendering.\n * This cache allows both reading and writing of cached values.\n */\nexport interface PrerenderResumeDataCache {\n  /**\n   * A mutable Map store for values cached by the 'use cache' React hook.\n   * Supports both 'get' and 'set' operations to build the cache during\n   * pre-rendering.\n   */\n  readonly cache: UseCacheCacheStore\n\n  /**\n   * A mutable Map store for cached fetch responses.\n   * Supports both 'get' and 'set' operations to build the cache during\n   * pre-rendering.\n   */\n  readonly fetch: FetchCacheStore\n\n  /**\n   * A mutable Map store for encrypted bound args of inline server functions.\n   * Supports both 'get' and 'set' operations to build the cache during\n   * pre-rendering.\n   */\n  readonly encryptedBoundArgs: EncryptedBoundArgsCacheStore\n\n  /**\n   * A mutable Map store for decrypted bound args of inline server functions.\n   * This is only intended for in-memory usage during pre-rendering, and must\n   * not be persisted in the resume store. Supports both 'get' and 'set'\n   * operations to build the cache during pre-rendering.\n   */\n  readonly decryptedBoundArgs: DecryptedBoundArgsCacheStore\n}\n\ntype ResumeStoreSerialized = {\n  store: {\n    cache: {\n      [key: string]: any\n    }\n    fetch: {\n      [key: string]: any\n    }\n    encryptedBoundArgs: {\n      [key: string]: string\n    }\n  }\n}\n\n/**\n * Serializes a resume data cache into a JSON string for storage or\n * transmission. Handles 'use cache' values, fetch responses, and encrypted\n * bound args for inline server functions.\n *\n * @param resumeDataCache - The immutable cache to serialize\n * @returns A Promise that resolves to the serialized cache as a JSON string, or\n * 'null' if empty\n */\nexport async function stringifyResumeDataCache(\n  resumeDataCache: RenderResumeDataCache | PrerenderResumeDataCache\n): Promise<string> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    throw new InvariantError(\n      '`stringifyResumeDataCache` should not be called in edge runtime.'\n    )\n  } else {\n    if (resumeDataCache.fetch.size === 0 && resumeDataCache.cache.size === 0) {\n      return 'null'\n    }\n\n    const json: ResumeStoreSerialized = {\n      store: {\n        fetch: Object.fromEntries(Array.from(resumeDataCache.fetch.entries())),\n        cache: Object.fromEntries(\n          (\n            await serializeUseCacheCacheStore(resumeDataCache.cache.entries())\n          ).filter(\n            (entry): entry is [string, UseCacheCacheStoreSerialized] =>\n              entry !== null\n          )\n        ),\n        encryptedBoundArgs: Object.fromEntries(\n          Array.from(resumeDataCache.encryptedBoundArgs.entries())\n        ),\n      },\n    }\n\n    // Compress the JSON string using zlib. As the data we already want to\n    // decompress is in memory, we use the synchronous deflateSync function.\n    const { deflateSync } = require('node:zlib') as typeof import('node:zlib')\n\n    return deflateSync(JSON.stringify(json)).toString('base64')\n  }\n}\n\n/**\n * Creates a new empty mutable resume data cache for pre-rendering.\n * Initializes fresh Map instances for both the 'use cache' and fetch caches.\n * Used at the start of pre-rendering to begin collecting cached values.\n *\n * @returns A new empty PrerenderResumeDataCache instance\n */\nexport function createPrerenderResumeDataCache(): PrerenderResumeDataCache {\n  return {\n    cache: new Map(),\n    fetch: new Map(),\n    encryptedBoundArgs: new Map(),\n    decryptedBoundArgs: new Map(),\n  }\n}\n\n/**\n * Creates an immutable render resume data cache from either:\n * 1. An existing prerender cache instance\n * 2. A serialized cache string\n *\n * @param renderResumeDataCache - A RenderResumeDataCache instance to be used directly\n * @param prerenderResumeDataCache - A PrerenderResumeDataCache instance to convert to immutable\n * @param persistedCache - A serialized cache string to parse\n * @returns An immutable RenderResumeDataCache instance\n */\nexport function createRenderResumeDataCache(\n  renderResumeDataCache: RenderResumeDataCache\n): RenderResumeDataCache\nexport function createRenderResumeDataCache(\n  prerenderResumeDataCache: PrerenderResumeDataCache\n): RenderResumeDataCache\nexport function createRenderResumeDataCache(\n  persistedCache: string\n): RenderResumeDataCache\nexport function createRenderResumeDataCache(\n  resumeDataCacheOrPersistedCache:\n    | RenderResumeDataCache\n    | PrerenderResumeDataCache\n    | string\n): RenderResumeDataCache {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    throw new InvariantError(\n      '`createRenderResumeDataCache` should not be called in edge runtime.'\n    )\n  } else {\n    if (typeof resumeDataCacheOrPersistedCache !== 'string') {\n      // If the cache is already a prerender or render cache, we can return it\n      // directly. For the former, we're just performing a type change.\n      return resumeDataCacheOrPersistedCache\n    }\n\n    if (resumeDataCacheOrPersistedCache === 'null') {\n      return {\n        cache: new Map(),\n        fetch: new Map(),\n        encryptedBoundArgs: new Map(),\n        decryptedBoundArgs: new Map(),\n      }\n    }\n\n    // This should be a compressed string. Let's decompress it using zlib.\n    // As the data we already want to decompress is in memory, we use the\n    // synchronous inflateSync function.\n    const { inflateSync } = require('node:zlib') as typeof import('node:zlib')\n\n    const json: ResumeStoreSerialized = JSON.parse(\n      inflateSync(\n        Buffer.from(resumeDataCacheOrPersistedCache, 'base64')\n      ).toString('utf-8')\n    )\n\n    return {\n      cache: parseUseCacheCacheStore(Object.entries(json.store.cache)),\n      fetch: new Map(Object.entries(json.store.fetch)),\n      encryptedBoundArgs: new Map(\n        Object.entries(json.store.encryptedBoundArgs)\n      ),\n      decryptedBoundArgs: new Map(),\n    }\n  }\n}\n","import { createPrerenderResumeDataCache, createRenderResumeDataCache } from '../resume-data-cache/resume-data-cache';\nimport { stringifyResumeDataCache } from '../resume-data-cache/resume-data-cache';\nexport var DynamicState = /*#__PURE__*/ function(DynamicState) {\n    /**\n   * The dynamic access occurred during the RSC render phase.\n   */ DynamicState[DynamicState[\"DATA\"] = 1] = \"DATA\";\n    /**\n   * The dynamic access occurred during the HTML shell render phase.\n   */ DynamicState[DynamicState[\"HTML\"] = 2] = \"HTML\";\n    return DynamicState;\n}({});\nexport var DynamicHTMLPreludeState = /*#__PURE__*/ function(DynamicHTMLPreludeState) {\n    DynamicHTMLPreludeState[DynamicHTMLPreludeState[\"Empty\"] = 0] = \"Empty\";\n    DynamicHTMLPreludeState[DynamicHTMLPreludeState[\"Full\"] = 1] = \"Full\";\n    return DynamicHTMLPreludeState;\n}({});\nexport async function getDynamicHTMLPostponedState(postponed, preludeState, fallbackRouteParams, resumeDataCache) {\n    const data = [\n        preludeState,\n        postponed\n    ];\n    const dataString = JSON.stringify(data);\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) {\n        // Serialized as `<postponedString.length>:<postponedString><renderResumeDataCache>`\n        return `${dataString.length}:${dataString}${await stringifyResumeDataCache(createRenderResumeDataCache(resumeDataCache))}`;\n    }\n    const replacements = Array.from(fallbackRouteParams);\n    const replacementsString = JSON.stringify(replacements);\n    // Serialized as `<replacements.length><replacements><data>`\n    const postponedString = `${replacementsString.length}${replacementsString}${dataString}`;\n    // Serialized as `<postponedString.length>:<postponedString><renderResumeDataCache>`\n    return `${postponedString.length}:${postponedString}${await stringifyResumeDataCache(resumeDataCache)}`;\n}\nexport async function getDynamicDataPostponedState(resumeDataCache) {\n    return `4:null${await stringifyResumeDataCache(createRenderResumeDataCache(resumeDataCache))}`;\n}\nexport function parsePostponedState(state, params) {\n    try {\n        var _state_match;\n        const postponedStringLengthMatch = (_state_match = state.match(/^([0-9]*):/)) == null ? void 0 : _state_match[1];\n        if (!postponedStringLengthMatch) {\n            throw Object.defineProperty(new Error(`Invariant: invalid postponed state ${state}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E314\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const postponedStringLength = parseInt(postponedStringLengthMatch);\n        // We add a `:` to the end of the length as the first character of the\n        // postponed string is the length of the replacement entries.\n        const postponedString = state.slice(postponedStringLengthMatch.length + 1, postponedStringLengthMatch.length + postponedStringLength + 1);\n        const renderResumeDataCache = createRenderResumeDataCache(state.slice(postponedStringLengthMatch.length + postponedStringLength + 1));\n        try {\n            if (postponedString === 'null') {\n                return {\n                    type: 1,\n                    renderResumeDataCache\n                };\n            }\n            if (/^[0-9]/.test(postponedString)) {\n                var _postponedString_match;\n                const match = (_postponedString_match = postponedString.match(/^([0-9]*)/)) == null ? void 0 : _postponedString_match[1];\n                if (!match) {\n                    throw Object.defineProperty(new Error(`Invariant: invalid postponed state ${JSON.stringify(postponedString)}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E314\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // This is the length of the replacements entries.\n                const length = parseInt(match);\n                const replacements = JSON.parse(postponedString.slice(match.length, // We then go to the end of the string.\n                match.length + length));\n                let postponed = postponedString.slice(match.length + length);\n                for (const [key, searchValue] of replacements){\n                    const value = (params == null ? void 0 : params[key]) ?? '';\n                    const replaceValue = Array.isArray(value) ? value.join('/') : value;\n                    postponed = postponed.replaceAll(searchValue, replaceValue);\n                }\n                return {\n                    type: 2,\n                    data: JSON.parse(postponed),\n                    renderResumeDataCache\n                };\n            }\n            return {\n                type: 2,\n                data: JSON.parse(postponedString),\n                renderResumeDataCache\n            };\n        } catch (err) {\n            console.error('Failed to parse postponed state', err);\n            return {\n                type: 1,\n                renderResumeDataCache\n            };\n        }\n    } catch (err) {\n        console.error('Failed to parse postponed state', err);\n        return {\n            type: 1,\n            renderResumeDataCache: createPrerenderResumeDataCache()\n        };\n    }\n}\nexport function getPostponedFromState(state) {\n    const [preludeState, postponed] = state.data;\n    return {\n        preludeState,\n        postponed\n    };\n}\n\n//# sourceMappingURL=postponed-state.js.map","import { htmlEscapeJsonString } from '../htmlescape';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nconst INLINE_FLIGHT_PAYLOAD_BOOTSTRAP = 0;\nconst INLINE_FLIGHT_PAYLOAD_DATA = 1;\nconst INLINE_FLIGHT_PAYLOAD_FORM_STATE = 2;\nconst INLINE_FLIGHT_PAYLOAD_BINARY = 3;\nconst flightResponses = new WeakMap();\nconst encoder = new TextEncoder();\nconst findSourceMapURL = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').findSourceMapURLDEV : undefined;\n/**\n * Render Flight stream.\n * This is only used for renderToHTML, the Flight response does not need additional wrappers.\n */ export function useFlightStream(flightStream, clientReferenceManifest, nonce) {\n    const response = flightResponses.get(flightStream);\n    if (response) {\n        return response;\n    }\n    // react-server-dom-webpack/client.edge must not be hoisted for require cache clearing to work correctly\n    const { createFromReadableStream } = // eslint-disable-next-line import/no-extraneous-dependencies\n    require('react-server-dom-webpack/client');\n    const newResponse = createFromReadableStream(flightStream, {\n        findSourceMapURL,\n        serverConsumerManifest: {\n            moduleLoading: clientReferenceManifest.moduleLoading,\n            moduleMap: isEdgeRuntime ? clientReferenceManifest.edgeSSRModuleMapping : clientReferenceManifest.ssrModuleMapping,\n            serverModuleMap: null\n        },\n        nonce\n    });\n    // Edge pages are never prerendered so they necessarily cannot have a workUnitStore type\n    // that requires the nextTick behavior. This is why it is safe to access a node only API here\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (!workUnitStore) {\n            throw Object.defineProperty(new InvariantError('Expected workUnitAsyncStorage to have a store.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E696\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        switch(workUnitStore.type){\n            case 'prerender-client':\n                const responseOnNextTick = new Promise((resolve)=>{\n                    process.nextTick(()=>resolve(newResponse));\n                });\n                flightResponses.set(flightStream, responseOnNextTick);\n                return responseOnNextTick;\n            case 'prerender':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'request':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    flightResponses.set(flightStream, newResponse);\n    return newResponse;\n}\n/**\n * Creates a ReadableStream provides inline script tag chunks for writing hydration\n * data to the client outside the React render itself.\n *\n * @param flightStream The RSC render stream\n * @param nonce optionally a nonce used during this particular render\n * @param formState optionally the formState used with this particular render\n * @returns a ReadableStream without the complete property. This signifies a lazy ReadableStream\n */ export function createInlinedDataReadableStream(flightStream, nonce, formState) {\n    const startScriptTag = nonce ? `<script nonce=${JSON.stringify(nonce)}>` : '<script>';\n    const flightReader = flightStream.getReader();\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    const readable = new ReadableStream({\n        type: 'bytes',\n        start (controller) {\n            try {\n                writeInitialInstructions(controller, startScriptTag, formState);\n            } catch (error) {\n                // during encoding or enqueueing forward the error downstream\n                controller.error(error);\n            }\n        },\n        async pull (controller) {\n            try {\n                const { done, value } = await flightReader.read();\n                if (value) {\n                    try {\n                        const decodedString = decoder.decode(value, {\n                            stream: !done\n                        });\n                        // The chunk cannot be decoded as valid UTF-8 string as it might\n                        // have arbitrary binary data.\n                        writeFlightDataInstruction(controller, startScriptTag, decodedString);\n                    } catch  {\n                        // The chunk cannot be decoded as valid UTF-8 string.\n                        writeFlightDataInstruction(controller, startScriptTag, value);\n                    }\n                }\n                if (done) {\n                    controller.close();\n                }\n            } catch (error) {\n                // There was a problem in the upstream reader or during decoding or enqueuing\n                // forward the error downstream\n                controller.error(error);\n            }\n        }\n    });\n    return readable;\n}\nfunction writeInitialInstructions(controller, scriptStart, formState) {\n    if (formState != null) {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))});self.__next_f.push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_FORM_STATE,\n            formState\n        ]))})</script>`));\n    } else {\n        controller.enqueue(encoder.encode(`${scriptStart}(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BOOTSTRAP\n        ]))})</script>`));\n    }\n}\nfunction writeFlightDataInstruction(controller, scriptStart, chunk) {\n    let htmlInlinedData;\n    if (typeof chunk === 'string') {\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_DATA,\n            chunk\n        ]));\n    } else {\n        // The chunk cannot be embedded as a UTF-8 string in the script tag.\n        // Instead let's inline it in base64.\n        // Credits to Devon Govett (devongovett) for the technique.\n        // https://github.com/devongovett/rsc-html-stream\n        const base64 = btoa(String.fromCodePoint(...chunk));\n        htmlInlinedData = htmlEscapeJsonString(JSON.stringify([\n            INLINE_FLIGHT_PAYLOAD_BINARY,\n            base64\n        ]));\n    }\n    controller.enqueue(encoder.encode(`${scriptStart}self.__next_f.push(${htmlInlinedData})</script>`));\n}\n\n//# sourceMappingURL=use-flight-response.js.map","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { FlightDataPath } from '../../../server/app-render/types'\n\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { extractPathFromFlightRouterState } from './compute-changed-path'\nimport {\n  createSeededPrefetchCacheEntry,\n  STATIC_STALETIME_MS,\n} from './prefetch-cache-utils'\nimport { PrefetchKind, type PrefetchCacheEntry } from './router-reducer-types'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\nimport { getFlightDataPartsFromPath } from '../../flight-data-helpers'\n\nexport interface InitialRouterStateParameters {\n  navigatedAt: number\n  initialCanonicalUrlParts: string[]\n  initialParallelRoutes: CacheNode['parallelRoutes']\n  initialFlightData: FlightDataPath[]\n  location: Location | null\n  couldBeIntercepted: boolean\n  postponed: boolean\n  prerendered: boolean\n}\n\nexport function createInitialRouterState({\n  navigatedAt,\n  initialFlightData,\n  initialCanonicalUrlParts,\n  initialParallelRoutes,\n  location,\n  couldBeIntercepted,\n  postponed,\n  prerendered,\n}: InitialRouterStateParameters) {\n  // When initialized on the server, the canonical URL is provided as an array of parts.\n  // This is to ensure that when the RSC payload streamed to the client, crawlers don't interpret it\n  // as a URL that should be crawled.\n  const initialCanonicalUrl = initialCanonicalUrlParts.join('/')\n\n  const normalizedFlightData = getFlightDataPartsFromPath(initialFlightData[0])\n  const {\n    tree: initialTree,\n    seedData: initialSeedData,\n    head: initialHead,\n  } = normalizedFlightData\n  // For the SSR render, seed data should always be available (we only send back a `null` response\n  // in the case of a `loading` segment, pre-PPR.)\n  const rsc = initialSeedData?.[1]\n  const loading = initialSeedData?.[3] ?? null\n\n  const cache: CacheNode = {\n    lazyData: null,\n    rsc,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    // The cache gets seeded during the first render. `initialParallelRoutes` ensures the cache from the first render is there during the second render.\n    parallelRoutes: initialParallelRoutes,\n    loading,\n    navigatedAt,\n  }\n\n  const canonicalUrl =\n    // location.href is read as the initial value for canonicalUrl in the browser\n    // This is safe to do as canonicalUrl can't be rendered, it's only used to control the history updates in the useEffect further down in this file.\n    location\n      ? // window.location does not have the same type as URL but has all the fields createHrefFromUrl needs.\n        createHrefFromUrl(location)\n      : initialCanonicalUrl\n\n  addRefreshMarkerToActiveParallelSegments(initialTree, canonicalUrl)\n\n  const prefetchCache = new Map<string, PrefetchCacheEntry>()\n\n  // When the cache hasn't been seeded yet we fill the cache with the head.\n  if (initialParallelRoutes === null || initialParallelRoutes.size === 0) {\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      cache,\n      undefined,\n      initialTree,\n      initialSeedData,\n      initialHead,\n      undefined\n    )\n  }\n\n  const initialState = {\n    tree: initialTree,\n    cache,\n    prefetchCache,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // First render needs to preserve the previous window.history.state\n      // to avoid it being overwritten on navigation back/forward with MPA Navigation.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: {\n      apply: false,\n      onlyHashChange: false,\n      hashFragment: null,\n      segmentPaths: [],\n    },\n    canonicalUrl,\n    nextUrl:\n      // the || operator is intentional, the pathname can be an empty string\n      (extractPathFromFlightRouterState(initialTree) || location?.pathname) ??\n      null,\n  }\n\n  if (process.env.NODE_ENV !== 'development' && location) {\n    // Seed the prefetch cache with this page's data.\n    // This is to prevent needlessly re-prefetching a page that is already reusable,\n    // and will avoid triggering a loading state/data fetch stall when navigating back to the page.\n    // We don't currently do this in development because links aren't prefetched in development\n    // so having a mismatch between prefetch/no prefetch provides inconsistent behavior based on which page\n    // was loaded first.\n    const url = new URL(\n      `${location.pathname}${location.search}`,\n      location.origin\n    )\n\n    createSeededPrefetchCacheEntry({\n      url,\n      data: {\n        flightData: [normalizedFlightData],\n        canonicalUrl: undefined,\n        couldBeIntercepted: !!couldBeIntercepted,\n        prerendered,\n        postponed,\n        // TODO: The initial RSC payload includes both static and dynamic data\n        // in the same response, even if PPR is enabled. So if there's any\n        // dynamic data at all, we can't set a stale time. In the future we may\n        // add a way to split a single Flight stream into static and dynamic\n        // parts. But in the meantime we should at least make this work for\n        // fully static pages.\n        staleTime:\n          // In the old router, there was only a single configurable staleTime (experimental.staleTimes)\n          // As an abundance of caution, this will only set the initial staleTime to the configured value\n          // if we're not leveraging the segment cache, which has its own prefetching semantics.\n          prerendered && !process.env.__NEXT_CLIENT_SEGMENT_CACHE\n            ? STATIC_STALETIME_MS\n            : -1,\n      },\n      tree: initialState.tree,\n      prefetchCache: initialState.prefetchCache,\n      nextUrl: initialState.nextUrl,\n      kind: prerendered ? PrefetchKind.FULL : PrefetchKind.AUTO,\n    })\n  }\n\n  return initialState\n}\n","export function getRevalidateReason(params) {\n    if (params.isOnDemandRevalidate) {\n        return 'on-demand';\n    }\n    if (params.isRevalidate) {\n        return 'stale';\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=utils.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function prerenderAndAbortInSequentialTasks(prerender, abort) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`prerenderAndAbortInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E538\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = prerender();\n                    pendingResult.catch(()=>{});\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                abort();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\n/**\n * Like `prerenderAndAbortInSequentialTasks`, but with another task between `prerender` and `abort`,\n * which allows us to move a part of the render into a separate task.\n */ export function prerenderAndAbortInSequentialTasksWithStages(prerender, advanceStage, abort) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`prerenderAndAbortInSequentialTasksWithStages` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E778\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = prerender();\n                    pendingResult.catch(()=>{});\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                advanceStage();\n            });\n            setImmediate(()=>{\n                abort();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\n// React's RSC prerender function will emit an incomplete flight stream when using `prerender`. If the connection\n// closes then whatever hanging chunks exist will be errored. This is because prerender (an experimental feature)\n// has not yet implemented a concept of resume. For now we will simulate a paused connection by wrapping the stream\n// in one that doesn't close even when the underlying is complete.\nexport class ReactServerResult {\n    constructor(stream){\n        this._stream = stream;\n    }\n    tee() {\n        if (this._stream === null) {\n            throw Object.defineProperty(new Error('Cannot tee a ReactServerResult that has already been consumed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E106\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const tee = this._stream.tee();\n        this._stream = tee[0];\n        return tee[1];\n    }\n    consume() {\n        if (this._stream === null) {\n            throw Object.defineProperty(new Error('Cannot consume a ReactServerResult that has already been consumed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E470\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const stream = this._stream;\n        this._stream = null;\n        return stream;\n    }\n}\nexport async function createReactServerPrerenderResult(underlying) {\n    const chunks = [];\n    const { prelude } = await underlying;\n    const reader = prelude.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            return new ReactServerPrerenderResult(chunks);\n        } else {\n            chunks.push(value);\n        }\n    }\n}\nexport async function createReactServerPrerenderResultFromRender(underlying) {\n    const chunks = [];\n    const reader = underlying.getReader();\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        } else {\n            chunks.push(value);\n        }\n    }\n    return new ReactServerPrerenderResult(chunks);\n}\nexport class ReactServerPrerenderResult {\n    assertChunks(expression) {\n        if (this._chunks === null) {\n            throw Object.defineProperty(new InvariantError(`Cannot \\`${expression}\\` on a ReactServerPrerenderResult that has already been consumed.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E593\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return this._chunks;\n    }\n    consumeChunks(expression) {\n        const chunks = this.assertChunks(expression);\n        this.consume();\n        return chunks;\n    }\n    consume() {\n        this._chunks = null;\n    }\n    constructor(chunks){\n        this._chunks = chunks;\n    }\n    asUnclosingStream() {\n        const chunks = this.assertChunks('asUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    consumeAsUnclosingStream() {\n        const chunks = this.consumeChunks('consumeAsUnclosingStream()');\n        return createUnclosingStream(chunks);\n    }\n    asStream() {\n        const chunks = this.assertChunks('asStream()');\n        return createClosingStream(chunks);\n    }\n    consumeAsStream() {\n        const chunks = this.consumeChunks('consumeAsStream()');\n        return createClosingStream(chunks);\n    }\n}\nfunction createUnclosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            }\n        // we intentionally keep the stream open. The consumer will clear\n        // out chunks once finished and the remaining memory will be GC'd\n        // when this object goes out of scope\n        }\n    });\n}\nfunction createClosingStream(chunks) {\n    let i = 0;\n    return new ReadableStream({\n        async pull (controller) {\n            if (i < chunks.length) {\n                controller.enqueue(chunks[i++]);\n            } else {\n                controller.close();\n            }\n        }\n    });\n}\nexport async function processPrelude(unprocessedPrelude) {\n    const [prelude, peek] = unprocessedPrelude.tee();\n    const reader = peek.getReader();\n    const firstResult = await reader.read();\n    reader.cancel();\n    const preludeIsEmpty = firstResult.done === true;\n    return {\n        prelude,\n        preludeIsEmpty\n    };\n}\n\n//# sourceMappingURL=app-render-prerender-utils.js.map","import { getDigestForWellKnownError } from './create-error-handler';\nimport { isReactLargeShellError } from './react-large-shell-error';\nexport function printDebugThrownValueForProspectiveRender(thrownValue, route) {\n    // We don't need to print well-known Next.js errors.\n    if (getDigestForWellKnownError(thrownValue)) {\n        return;\n    }\n    if (isReactLargeShellError(thrownValue)) {\n        // TODO: Aggregate\n        console.error(thrownValue);\n        return undefined;\n    }\n    let message;\n    if (typeof thrownValue === 'object' && thrownValue !== null && typeof thrownValue.message === 'string') {\n        message = thrownValue.message;\n        if (typeof thrownValue.stack === 'string') {\n            const originalErrorStack = thrownValue.stack;\n            const stackStart = originalErrorStack.indexOf('\\n');\n            if (stackStart > -1) {\n                const error = Object.defineProperty(new Error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled.\n          \nOriginal Error: ${message}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E362\",\n                    enumerable: false,\n                    configurable: true\n                });\n                error.stack = 'Error: ' + error.message + originalErrorStack.slice(stackStart);\n                console.error(error);\n                return;\n            }\n        }\n    } else if (typeof thrownValue === 'string') {\n        message = thrownValue;\n    }\n    if (message) {\n        console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. No stack was provided.\n          \nOriginal Message: ${message}`);\n        return;\n    }\n    console.error(`Route ${route} errored during the prospective render. These errors are normally ignored and may not prevent the route from prerendering but are logged here because build debugging is enabled. The thrown value is logged just following this message`);\n    console.error(thrownValue);\n    return;\n}\n\n//# sourceMappingURL=prospective-render-utils.js.map","import { InvariantError } from '../../shared/lib/invariant-error';\n/**\n * This is a utility function to make scheduling sequential tasks that run back to back easier.\n * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.\n */ export function scheduleInSequentialTasks(render, followup) {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        throw Object.defineProperty(new InvariantError('`scheduleInSequentialTasks` should not be called in edge runtime.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E591\",\n            enumerable: false,\n            configurable: true\n        });\n    } else {\n        return new Promise((resolve, reject)=>{\n            let pendingResult;\n            setImmediate(()=>{\n                try {\n                    pendingResult = render();\n                } catch (err) {\n                    reject(err);\n                }\n            });\n            setImmediate(()=>{\n                followup();\n                resolve(pendingResult);\n            });\n        });\n    }\n}\n\n//# sourceMappingURL=app-render-render-utils.js.map","/**\n * This class is used to detect when all cache reads for a given render are settled.\n * We do this to allow for cache warming the prerender without having to continue rendering\n * the remainder of the page. This feature is really only useful when the cacheComponents flag is on\n * and should only be used in codepaths gated with this feature.\n */ import { InvariantError } from '../../shared/lib/invariant-error';\nexport class CacheSignal {\n    constructor(){\n        this.count = 0;\n        this.earlyListeners = [];\n        this.listeners = [];\n        this.tickPending = false;\n        this.taskPending = false;\n        this.subscribedSignals = null;\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            // we rely on `process.nextTick`, which is not supported in edge\n            throw Object.defineProperty(new InvariantError('CacheSignal cannot be used in the edge runtime, because `cacheComponents` does not support it.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E685\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    noMorePendingCaches() {\n        if (!this.tickPending) {\n            this.tickPending = true;\n            process.nextTick(()=>{\n                this.tickPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.earlyListeners.length; i++){\n                        this.earlyListeners[i]();\n                    }\n                    this.earlyListeners.length = 0;\n                }\n            });\n        }\n        if (!this.taskPending) {\n            this.taskPending = true;\n            setTimeout(()=>{\n                this.taskPending = false;\n                if (this.count === 0) {\n                    for(let i = 0; i < this.listeners.length; i++){\n                        this.listeners[i]();\n                    }\n                    this.listeners.length = 0;\n                }\n            }, 0);\n        }\n    }\n    /**\n   * This promise waits until there are no more in progress cache reads but no later.\n   * This allows for adding more cache reads after to delay cacheReady.\n   */ inputReady() {\n        return new Promise((resolve)=>{\n            this.earlyListeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    /**\n   * If there are inflight cache reads this Promise can resolve in a microtask however\n   * if there are no inflight cache reads then we wait at least one task to allow initial\n   * cache reads to be initiated.\n   */ cacheReady() {\n        return new Promise((resolve)=>{\n            this.listeners.push(resolve);\n            if (this.count === 0) {\n                this.noMorePendingCaches();\n            }\n        });\n    }\n    beginRead() {\n        this.count++;\n        if (this.subscribedSignals !== null) {\n            for (const subscriber of this.subscribedSignals){\n                subscriber.beginRead();\n            }\n        }\n    }\n    endRead() {\n        if (this.count === 0) {\n            throw Object.defineProperty(new InvariantError('CacheSignal got more endRead() calls than beginRead() calls'), \"__NEXT_ERROR_CODE\", {\n                value: \"E678\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // If this is the last read we need to wait a task before we can claim the cache is settled.\n        // The cache read will likely ping a Server Component which can read from the cache again and this\n        // will play out in a microtask so we need to only resolve pending listeners if we're still at 0\n        // after at least one task.\n        // We only want one task scheduled at a time so when we hit count 1 we don't decrement the counter immediately.\n        // If intervening reads happen before the scheduled task runs they will never observe count 1 preventing reentrency\n        this.count--;\n        if (this.count === 0) {\n            this.noMorePendingCaches();\n        }\n        if (this.subscribedSignals !== null) {\n            for (const subscriber of this.subscribedSignals){\n                subscriber.endRead();\n            }\n        }\n    }\n    trackRead(promise) {\n        this.beginRead();\n        // `promise.finally()` still rejects, so don't use it here to avoid unhandled rejections\n        const onFinally = this.endRead.bind(this);\n        promise.then(onFinally, onFinally);\n        return promise;\n    }\n    subscribeToReads(subscriber) {\n        if (subscriber === this) {\n            throw Object.defineProperty(new InvariantError('A CacheSignal cannot subscribe to itself'), \"__NEXT_ERROR_CODE\", {\n                value: \"E679\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (this.subscribedSignals === null) {\n            this.subscribedSignals = new Set();\n        }\n        this.subscribedSignals.add(subscriber);\n        // we'll notify the subscriber of each endRead() on this signal,\n        // so we need to give it a corresponding beginRead() for each read we have in flight now.\n        for(let i = 0; i < this.count; i++){\n            subscriber.beginRead();\n        }\n        return this.unsubscribeFromReads.bind(this, subscriber);\n    }\n    unsubscribeFromReads(subscriber) {\n        if (!this.subscribedSignals) {\n            return;\n        }\n        this.subscribedSignals.delete(subscriber);\n    // we don't need to set the set back to `null` if it's empty --\n    // if other signals are subscribing to this one, it'll likely get more subscriptions later,\n    // so we'd have to allocate a fresh set again when that happens.\n    }\n}\n\n//# sourceMappingURL=cache-signal.js.map","/**\n * Takes OpenTelemetry client trace data and the `clientTraceMetadata` option configured in the Next.js config (currently\n * experimental) and returns a filtered/allowed list of client trace data entries.\n */ export function getTracedMetadata(traceData, clientTraceMetadata) {\n    if (!clientTraceMetadata) return undefined;\n    return traceData.filter(({ key })=>clientTraceMetadata.includes(key));\n}\n\n//# sourceMappingURL=utils.js.map","/**\n * For chromium based browsers (Chrome, Edge, etc.) and Safari,\n * icons need to stay under <head> to be picked up by the browser.\n *\n */ const REINSERT_ICON_SCRIPT = `\\\ndocument.querySelectorAll('body link[rel=\"icon\"], body link[rel=\"apple-touch-icon\"]').forEach(el => document.head.appendChild(el))`;\nexport function createServerInsertedMetadata(nonce) {\n    let inserted = false;\n    return async function getServerInsertedMetadata() {\n        if (inserted) {\n            return '';\n        }\n        inserted = true;\n        return `<script ${nonce ? `nonce=\"${nonce}\"` : ''}>${REINSERT_ICON_SCRIPT}</script>`;\n    };\n}\n\n//# sourceMappingURL=create-server-inserted-metadata.js.map","import { CacheSignal } from '../cache-signal';\nimport { isThenable } from '../../../shared/lib/is-thenable';\n/**\n * Tracks all in-flight async imports and chunk loads.\n * Initialized lazily, because we don't want this to error in case it gets pulled into an edge runtime module.\n */ let _moduleLoadingSignal;\nfunction getModuleLoadingSignal() {\n    if (!_moduleLoadingSignal) {\n        _moduleLoadingSignal = new CacheSignal();\n    }\n    return _moduleLoadingSignal;\n}\nexport function trackPendingChunkLoad(promise) {\n    const moduleLoadingSignal = getModuleLoadingSignal();\n    moduleLoadingSignal.trackRead(promise);\n}\nexport function trackPendingImport(exportsOrPromise) {\n    const moduleLoadingSignal = getModuleLoadingSignal();\n    // requiring an async module returns a promise.\n    // if it's sync, there's nothing to track.\n    if (isThenable(exportsOrPromise)) {\n        // A client reference proxy might look like a promise, but we can only call `.then()` on it, not e.g. `.finally()`.\n        // Turn it into a real promise to avoid issues elsewhere.\n        const promise = Promise.resolve(exportsOrPromise);\n        moduleLoadingSignal.trackRead(promise);\n    }\n}\n/**\n * A top-level dynamic import (or chunk load):\n *\n *   1. delays a prerender (potentially for a task or longer)\n *   2. may reveal more caches that need be filled\n *\n * So if we see one, we want to extend the duration of `cacheSignal` at least until the import/chunk-load is done.\n */ export function trackPendingModules(cacheSignal) {\n    const moduleLoadingSignal = getModuleLoadingSignal();\n    // We can't just use `cacheSignal.trackRead(moduleLoadingSignal.cacheReady())`,\n    // because we might start and finish multiple batches of module loads while waiting for caches,\n    // and `moduleLoadingSignal.cacheReady()` would resolve after the first batch.\n    // Instead, we'll keep notifying `cacheSignal` of each import/chunk-load.\n    const unsubscribe = moduleLoadingSignal.subscribeToReads(cacheSignal);\n    // Later, when `cacheSignal` is no longer waiting for any caches (or imports that we've notified it of),\n    // we can unsubscribe it.\n    cacheSignal.cacheReady().then(unsubscribe);\n}\n\n//# sourceMappingURL=track-module-loading.instance.js.map","// NOTE: this is marked as shared/external because it's stateful\n// and the state needs to be shared between app-render (which waits for pending imports)\n// and helpers used in transformed page code (which register pending imports)\nimport { trackPendingChunkLoad, trackPendingImport, trackPendingModules } from './track-module-loading.instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { trackPendingChunkLoad, trackPendingImport, trackPendingModules };\n\n//# sourceMappingURL=track-module-loading.external.js.map","export function createPromiseWithResolvers<T>(): PromiseWithResolvers<T> {\n  // Shim of Stage 4 Promise.withResolvers proposal\n  let resolve: (value: T | PromiseLike<T>) => void\n  let reject: (reason: any) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return { resolve: resolve!, reject: reject!, promise }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport React from 'react';\nimport RenderResult from '../render-result';\nimport { chainStreams, renderToInitialFizzStream, createDocumentClosingStream, continueFizzStream, continueDynamicPrerender, continueStaticPrerender, continueDynamicHTMLResume, streamToBuffer, streamToString } from '../stream-utils/node-web-streams-helper';\nimport { stripInternalQueries } from '../internal-utils';\nimport { NEXT_HMR_REFRESH_HEADER, NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_ROUTER_STALE_TIME_HEADER, NEXT_URL, RSC_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_HMR_REFRESH_HASH_COOKIE, NEXT_DID_POSTPONE_HEADER } from '../../client/components/app-router-headers';\nimport { createMetadataContext } from '../../lib/metadata/metadata-context';\nimport { createRequestStoreForRender } from '../async-storage/request-store';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { getAccessFallbackErrorTypeByStatus, getAccessFallbackHTTPStatus, isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { getURLFromRedirectError, getRedirectStatusCodeFromError } from '../../client/components/redirect';\nimport { isRedirectError } from '../../client/components/redirect-error';\nimport { getImplicitTags } from '../lib/implicit-tags';\nimport { AppRenderSpan, NextNodeServerSpan } from '../lib/trace/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { FlightRenderResult } from './flight-render-result';\nimport { createFlightReactServerErrorHandler, createHTMLReactServerErrorHandler, createHTMLErrorHandler, isUserLandError, getDigestForWellKnownError } from './create-error-handler';\nimport { dynamicParamTypes } from './get-short-dynamic-param-type';\nimport { getSegmentParam } from './get-segment-param';\nimport { getScriptNonceFromHeader } from './get-script-nonce-from-header';\nimport { parseAndValidateFlightRouterState } from './parse-and-validate-flight-router-state';\nimport { createFlightRouterStateFromLoaderTree } from './create-flight-router-state-from-loader-tree';\nimport { handleAction } from './action-handler';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { warn, error } from '../../build/output/log';\nimport { appendMutableCookies } from '../web/spec-extension/adapters/request-cookies';\nimport { createServerInsertedHTML } from './server-inserted-html';\nimport { getRequiredScripts } from './required-scripts';\nimport { addPathPrefix } from '../../shared/lib/router/utils/add-path-prefix';\nimport { makeGetServerInsertedHTML } from './make-get-server-inserted-html';\nimport { walkTreeWithFlightRouterState } from './walk-tree-with-flight-router-state';\nimport { createComponentTree, getRootParams } from './create-component-tree';\nimport { getAssetQueryString } from './get-asset-query-string';\nimport { getServerModuleMap, setReferenceManifestsSingleton } from './encryption-utils';\nimport { DynamicState, DynamicHTMLPreludeState, parsePostponedState } from './postponed-state';\nimport { getDynamicDataPostponedState, getDynamicHTMLPostponedState, getPostponedFromState } from './postponed-state';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { useFlightStream, createInlinedDataReadableStream } from './use-flight-response';\nimport { StaticGenBailoutError, isStaticGenBailoutError } from '../../client/components/static-generation-bailout';\nimport { getStackWithoutErrorMessage } from '../../lib/format-server-error';\nimport { accessedDynamicData, createRenderInBrowserAbortSignal, formatDynamicAPIAccesses, isPrerenderInterruptedError, createDynamicTrackingState, createDynamicValidationState, trackAllowedDynamicAccess, throwIfDisallowedDynamic, PreludeState, consumeDynamicAccess, logDisallowedDynamicError, warnOnSyncDynamicError } from './dynamic-rendering';\nimport { getClientComponentLoaderMetrics, wrapClientComponentLoader } from '../client-component-renderer-logger';\nimport { createServerModuleMap } from './action-utils';\nimport { isNodeNextRequest } from '../base-http/helpers';\nimport { parseRelativeUrl } from '../../shared/lib/router/utils/parse-relative-url';\nimport AppRouter from '../../client/components/app-router';\nimport { getIsPossibleServerAction } from '../lib/server-action-request-meta';\nimport { createInitialRouterState } from '../../client/components/router-reducer/create-initial-router-state';\nimport { createMutableActionQueue } from '../../client/components/app-router-instance';\nimport { getRevalidateReason } from '../instrumentation/utils';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport { prerenderAndAbortInSequentialTasksWithStages, processPrelude } from './app-render-prerender-utils';\nimport { ReactServerResult, createReactServerPrerenderResult, createReactServerPrerenderResultFromRender, prerenderAndAbortInSequentialTasks } from './app-render-prerender-utils';\nimport { printDebugThrownValueForProspectiveRender } from './prospective-render-utils';\nimport { scheduleInSequentialTasks } from './app-render-render-utils';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { CacheSignal } from './cache-signal';\nimport { getTracedMetadata } from '../lib/trace/utils';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { HTML_CONTENT_TYPE_HEADER, INFINITE_CACHE } from '../../lib/constants';\nimport { createComponentStylesAndScripts } from './create-component-styles-and-scripts';\nimport { parseLoaderTree } from './parse-loader-tree';\nimport { createPrerenderResumeDataCache, createRenderResumeDataCache } from '../resume-data-cache/resume-data-cache';\nimport isError from '../../lib/is-error';\nimport { createServerInsertedMetadata } from './metadata-insertion/create-server-inserted-metadata';\nimport { getPreviouslyRevalidatedTags } from '../server-utils';\nimport { executeRevalidates } from '../revalidation-utils';\nimport { trackPendingChunkLoad, trackPendingImport, trackPendingModules } from './module-loading/track-module-loading.external';\nimport { isReactLargeShellError } from './react-large-shell-error';\nimport { normalizeConventionFilePath } from './segment-explorer-path';\nimport { getRequestMeta } from '../request-meta';\nimport { getDynamicParam } from '../../shared/lib/router/utils/get-dynamic-param';\nimport { createPromiseWithResolvers } from '../../shared/lib/promise-with-resolvers';\nconst flightDataPathHeadKey = 'h';\nconst getFlightViewportKey = (requestId)=>requestId + 'v';\nconst getFlightMetadataKey = (requestId)=>requestId + 'm';\nconst filterStackFrame = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').filterStackFrameDEV : undefined;\nfunction parseRequestHeaders(headers, options) {\n    const isDevWarmupRequest = options.isDevWarmup === true;\n    // dev warmup requests are treated as prefetch RSC requests\n    // runtime prefetch requests are *not* treated as prefetch requests\n    // (TODO: this is confusing, we should refactor this to express this better)\n    const isPrefetchRequest = isDevWarmupRequest || headers[NEXT_ROUTER_PREFETCH_HEADER] === '1';\n    const isRuntimePrefetchRequest = headers[NEXT_ROUTER_PREFETCH_HEADER] === '2';\n    const isHmrRefresh = headers[NEXT_HMR_REFRESH_HEADER] !== undefined;\n    // dev warmup requests are treated as prefetch RSC requests\n    const isRSCRequest = isDevWarmupRequest || headers[RSC_HEADER] !== undefined;\n    const shouldProvideFlightRouterState = isRSCRequest && (!isPrefetchRequest || !options.isRoutePPREnabled);\n    const flightRouterState = shouldProvideFlightRouterState ? parseAndValidateFlightRouterState(headers[NEXT_ROUTER_STATE_TREE_HEADER]) : undefined;\n    // Checks if this is a prefetch of the Route Tree by the Segment Cache\n    const isRouteTreePrefetchRequest = headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] === '/_tree';\n    const csp = headers['content-security-policy'] || headers['content-security-policy-report-only'];\n    const nonce = typeof csp === 'string' ? getScriptNonceFromHeader(csp) : undefined;\n    const previouslyRevalidatedTags = getPreviouslyRevalidatedTags(headers, options.previewModeId);\n    return {\n        flightRouterState,\n        isPrefetchRequest,\n        isRuntimePrefetchRequest,\n        isRouteTreePrefetchRequest,\n        isHmrRefresh,\n        isRSCRequest,\n        isDevWarmupRequest,\n        nonce,\n        previouslyRevalidatedTags\n    };\n}\nfunction createNotFoundLoaderTree(loaderTree) {\n    const components = loaderTree[2];\n    const hasGlobalNotFound = !!components['global-not-found'];\n    return [\n        '',\n        {\n            children: [\n                PAGE_SEGMENT_KEY,\n                {},\n                {\n                    page: components['global-not-found'] ?? components['not-found']\n                }\n            ]\n        },\n        // When global-not-found is present, skip layout from components\n        hasGlobalNotFound ? components : {}\n    ];\n}\n/**\n * Returns a function that parses the dynamic segment and return the associated value.\n */ function makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams) {\n    return function getDynamicParamFromSegment(// [slug] / [[slug]] / [...slug]\n    segment) {\n        const segmentParam = getSegmentParam(segment);\n        if (!segmentParam) {\n            return null;\n        }\n        const segmentKey = segmentParam.param;\n        const dynamicParamType = dynamicParamTypes[segmentParam.type];\n        return getDynamicParam(params, segmentKey, dynamicParamType, pagePath, fallbackRouteParams);\n    };\n}\nfunction NonIndex({ pagePath, statusCode, isPossibleServerAction }) {\n    const is404Page = pagePath === '/404';\n    const isInvalidStatusCode = typeof statusCode === 'number' && statusCode > 400;\n    // Only render noindex for page request, skip for server actions\n    // TODO: is this correct if `isPossibleServerAction` is a false positive?\n    if (!isPossibleServerAction && (is404Page || isInvalidStatusCode)) {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            name: \"robots\",\n            content: \"noindex\"\n        });\n    }\n    return null;\n}\n/**\n * This is used by server actions & client-side navigations to generate RSC data from a client-side request.\n * This function is only called on \"dynamic\" requests (ie, there wasn't already a static response).\n * It uses request headers (namely `next-router-state-tree`) to determine where to start rendering.\n */ async function generateDynamicRSCPayload(ctx, options) {\n    // Flight data that is going to be passed to the browser.\n    // Currently a single item array but in the future multiple patches might be combined in a single request.\n    // We initialize `flightData` to an empty string because the client router knows how to tolerate\n    // it (treating it as an MPA navigation). The only time this function wouldn't generate flight data\n    // is for server actions, if the server action handler instructs this function to skip it. When the server\n    // action reducer sees a falsy value, it'll simply resolve the action with no data.\n    let flightData = '';\n    const { componentMod: { tree: loaderTree, createMetadataComponents, MetadataBoundary, ViewportBoundary }, getDynamicParamFromSegment, appUsingSizeAdjustment, query, requestId, flightRouterState, workStore, url } = ctx;\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    if (!(options == null ? void 0 : options.skipFlight)) {\n        const preloadCallbacks = [];\n        const { ViewportTree, MetadataTree, getViewportReady, getMetadataReady, StreamingMetadataOutlet } = createMetadataComponents({\n            tree: loaderTree,\n            parsedQuery: query,\n            pathname: url.pathname,\n            metadataContext: createMetadataContext(ctx.renderOpts),\n            getDynamicParamFromSegment,\n            appUsingSizeAdjustment,\n            workStore,\n            MetadataBoundary,\n            ViewportBoundary,\n            serveStreamingMetadata\n        });\n        flightData = (await walkTreeWithFlightRouterState({\n            ctx,\n            loaderTreeToFilter: loaderTree,\n            parentParams: {},\n            flightRouterState,\n            // For flight, render metadata inside leaf page\n            rscHead: /*#__PURE__*/ _jsxs(React.Fragment, {\n                children: [\n                    /*#__PURE__*/ _jsx(NonIndex, {\n                        pagePath: ctx.pagePath,\n                        statusCode: ctx.res.statusCode,\n                        isPossibleServerAction: ctx.isPossibleServerAction\n                    }),\n                    /*#__PURE__*/ _jsx(ViewportTree, {}, getFlightViewportKey(requestId)),\n                    /*#__PURE__*/ _jsx(MetadataTree, {}, getFlightMetadataKey(requestId))\n                ]\n            }, flightDataPathHeadKey),\n            injectedCSS: new Set(),\n            injectedJS: new Set(),\n            injectedFontPreloadTags: new Set(),\n            rootLayoutIncluded: false,\n            getViewportReady,\n            getMetadataReady,\n            preloadCallbacks,\n            StreamingMetadataOutlet\n        })).map((path)=>path.slice(1)) // remove the '' (root) segment\n        ;\n    }\n    // If we have an action result, then this is a server action response.\n    // We can rely on this because `ActionResult` will always be a promise, even if\n    // the result is falsey.\n    if (options == null ? void 0 : options.actionResult) {\n        return {\n            a: options.actionResult,\n            f: flightData,\n            b: ctx.sharedContext.buildId\n        };\n    }\n    // Otherwise, it's a regular RSC response.\n    return {\n        b: ctx.sharedContext.buildId,\n        f: flightData,\n        S: workStore.isStaticGeneration\n    };\n}\nfunction createErrorContext(ctx, renderSource) {\n    return {\n        routerKind: 'App Router',\n        routePath: ctx.pagePath,\n        // TODO: is this correct if `isPossibleServerAction` is a false positive?\n        routeType: ctx.isPossibleServerAction ? 'action' : 'render',\n        renderSource,\n        revalidateReason: getRevalidateReason(ctx.workStore)\n    };\n}\n/**\n * Produces a RenderResult containing the Flight data for the given request. See\n * `generateDynamicRSCPayload` for information on the contents of the render result.\n */ async function generateDynamicFlightRenderResult(req, ctx, requestStore, options) {\n    const renderOpts = ctx.renderOpts;\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(!!renderOpts.dev, onFlightDataRenderError);\n    const RSCPayload = await workUnitAsyncStorage.run(requestStore, generateDynamicRSCPayload, ctx, options);\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    const flightReadableStream = workUnitAsyncStorage.run(requestStore, ctx.componentMod.renderToReadableStream, RSCPayload, ctx.clientReferenceManifest.clientModules, {\n        onError,\n        temporaryReferences: options == null ? void 0 : options.temporaryReferences,\n        filterStackFrame\n    });\n    return new FlightRenderResult(flightReadableStream, {\n        fetchMetrics: ctx.workStore.fetchMetrics\n    });\n}\nasync function generateRuntimePrefetchResult(req, res, ctx, requestStore) {\n    const { workStore } = ctx;\n    const renderOpts = ctx.renderOpts;\n    function onFlightDataRenderError(err) {\n        return renderOpts.onInstrumentationRequestError == null ? void 0 : renderOpts.onInstrumentationRequestError.call(renderOpts, err, req, // TODO(runtime-ppr): should we use a different value?\n        createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(false, onFlightDataRenderError);\n    const metadata = {};\n    const generatePayload = ()=>generateDynamicRSCPayload(ctx, undefined);\n    const { componentMod: { tree }, getDynamicParamFromSegment } = ctx;\n    const rootParams = getRootParams(tree, getDynamicParamFromSegment);\n    // We need to share caches between the prospective prerender and the final prerender,\n    // but we're not going to persist this anywhere.\n    const prerenderResumeDataCache = createPrerenderResumeDataCache();\n    // We're not resuming an existing render.\n    const renderResumeDataCache = null;\n    await prospectiveRuntimeServerPrerender(ctx, generatePayload, prerenderResumeDataCache, renderResumeDataCache, rootParams, requestStore.cookies, requestStore.draftMode);\n    const response = await finalRuntimeServerPrerender(ctx, generatePayload, prerenderResumeDataCache, renderResumeDataCache, rootParams, requestStore.cookies, requestStore.draftMode, onError);\n    applyMetadataFromPrerenderResult(response, metadata, workStore);\n    metadata.fetchMetrics = ctx.workStore.fetchMetrics;\n    if (response.isPartial) {\n        res.setHeader(NEXT_DID_POSTPONE_HEADER, '1');\n    }\n    return new FlightRenderResult(response.result.prelude, metadata);\n}\nasync function prospectiveRuntimeServerPrerender(ctx, getPayload, prerenderResumeDataCache, renderResumeDataCache, rootParams, cookies, draftMode) {\n    const { implicitTags, renderOpts, workStore } = ctx;\n    const { clientReferenceManifest, ComponentMod } = renderOpts;\n    assertClientReferenceManifest(clientReferenceManifest);\n    // Prerender controller represents the lifetime of the prerender.\n    // It will be aborted when a Task is complete or a synchronously aborting\n    // API is called. Notably during cache-filling renders this does not actually\n    // terminate the render itself which will continue until all caches are filled\n    const initialServerPrerenderController = new AbortController();\n    // This controller represents the lifetime of the React render call. Notably\n    // during the cache-filling render it is different from the prerender controller\n    // because we don't want to end the react render until all caches are filled.\n    const initialServerRenderController = new AbortController();\n    // The cacheSignal helps us track whether caches are still filling or we are ready\n    // to cut the render off.\n    const cacheSignal = new CacheSignal();\n    const initialServerPrerenderStore = {\n        type: 'prerender-runtime',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: initialServerRenderController.signal,\n        controller: initialServerPrerenderController,\n        // During the initial prerender we need to track all cache reads to ensure\n        // we render long enough to fill every cache it is possible to visit during\n        // the final prerender.\n        cacheSignal,\n        // We only need to track dynamic accesses during the final prerender.\n        dynamicTracking: null,\n        // Runtime prefetches are never cached server-side, only client-side,\n        // so we set `expire` and `revalidate` to their minimum values just in case.\n        revalidate: 1,\n        expire: 0,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        renderResumeDataCache,\n        prerenderResumeDataCache,\n        hmrRefreshHash: undefined,\n        captureOwnerStack: undefined,\n        // We only need task sequencing in the final prerender.\n        runtimeStagePromise: null,\n        // These are not present in regular prerenders, but allowed in a runtime prerender.\n        cookies,\n        draftMode\n    };\n    // We're not going to use the result of this render because the only time it could be used\n    // is if it completes in a microtask and that's likely very rare for any non-trivial app\n    const initialServerPayload = await workUnitAsyncStorage.run(initialServerPrerenderStore, getPayload);\n    const pendingInitialServerResult = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.prerender, initialServerPayload, clientReferenceManifest.clientModules, {\n        filterStackFrame,\n        onError: (err)=>{\n            const digest = getDigestForWellKnownError(err);\n            if (digest) {\n                return digest;\n            }\n            if (initialServerPrerenderController.signal.aborted) {\n                // The render aborted before this error was handled which indicates\n                // the error is caused by unfinished components within the render\n                return;\n            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                printDebugThrownValueForProspectiveRender(err, workStore.route);\n            }\n        },\n        // we don't care to track postpones during the prospective render because we need\n        // to always do a final render anyway\n        onPostpone: undefined,\n        // We don't want to stop rendering until the cacheSignal is complete so we pass\n        // a different signal to this render call than is used by dynamic APIs to signify\n        // transitioning out of the prerender environment\n        signal: initialServerRenderController.signal\n    });\n    // Wait for all caches to be finished filling and for async imports to resolve\n    trackPendingModules(cacheSignal);\n    await cacheSignal.cacheReady();\n    initialServerRenderController.abort();\n    initialServerPrerenderController.abort();\n    // We don't need to continue the prerender process if we already\n    // detected invalid dynamic usage in the initial prerender phase.\n    if (workStore.invalidDynamicUsageError) {\n        throw workStore.invalidDynamicUsageError;\n    }\n    try {\n        return await createReactServerPrerenderResult(pendingInitialServerResult);\n    } catch (err) {\n        if (initialServerRenderController.signal.aborted || initialServerPrerenderController.signal.aborted) {\n        // These are expected errors that might error the prerender. we ignore them.\n        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n            // We don't normally log these errors because we are going to retry anyway but\n            // it can be useful for debugging Next.js itself to get visibility here when needed\n            printDebugThrownValueForProspectiveRender(err, workStore.route);\n        }\n        return null;\n    }\n}\nasync function finalRuntimeServerPrerender(ctx, getPayload, prerenderResumeDataCache, renderResumeDataCache, rootParams, cookies, draftMode, onError) {\n    const { implicitTags, renderOpts } = ctx;\n    const { clientReferenceManifest, ComponentMod, experimental, isDebugDynamicAccesses } = renderOpts;\n    assertClientReferenceManifest(clientReferenceManifest);\n    const selectStaleTime = createSelectStaleTime(experimental);\n    let serverIsDynamic = false;\n    const finalServerController = new AbortController();\n    const serverDynamicTracking = createDynamicTrackingState(isDebugDynamicAccesses);\n    const { promise: runtimeStagePromise, resolve: resolveBlockedRuntimeAPIs } = createPromiseWithResolvers();\n    const finalServerPrerenderStore = {\n        type: 'prerender-runtime',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: finalServerController.signal,\n        controller: finalServerController,\n        // All caches we could read must already be filled so no tracking is necessary\n        cacheSignal: null,\n        dynamicTracking: serverDynamicTracking,\n        // Runtime prefetches are never cached server-side, only client-side,\n        // so we set `expire` and `revalidate` to their minimum values just in case.\n        revalidate: 1,\n        expire: 0,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache,\n        hmrRefreshHash: undefined,\n        captureOwnerStack: undefined,\n        // Used to separate the \"Static\" stage from the \"Runtime\" stage.\n        runtimeStagePromise,\n        // These are not present in regular prerenders, but allowed in a runtime prerender.\n        cookies,\n        draftMode\n    };\n    const finalRSCPayload = await workUnitAsyncStorage.run(finalServerPrerenderStore, getPayload);\n    let prerenderIsPending = true;\n    const result = await prerenderAndAbortInSequentialTasksWithStages(async ()=>{\n        // Static stage\n        const prerenderResult = await workUnitAsyncStorage.run(finalServerPrerenderStore, ComponentMod.prerender, finalRSCPayload, clientReferenceManifest.clientModules, {\n            filterStackFrame,\n            onError,\n            signal: finalServerController.signal\n        });\n        prerenderIsPending = false;\n        return prerenderResult;\n    }, ()=>{\n        // Advance to the runtime stage.\n        //\n        // We make runtime APIs hang during the first task (above), and unblock them in the following task (here).\n        // This makes sure that, at this point, we'll have finished all the static parts (what we'd prerender statically).\n        // We know that they don't contain any incorrect sync IO, because that'd have caused a build error.\n        // After we unblock Runtime APIs, if we encounter sync IO (e.g. `await cookies(); Date.now()`),\n        // we'll abort, but we'll produce at least as much output as a static prerender would.\n        resolveBlockedRuntimeAPIs();\n    }, ()=>{\n        // Abort.\n        if (finalServerController.signal.aborted) {\n            // If the server controller is already aborted we must have called something\n            // that required aborting the prerender synchronously such as with new Date()\n            serverIsDynamic = true;\n            return;\n        }\n        if (prerenderIsPending) {\n            // If prerenderIsPending then we have blocked for longer than a Task and we assume\n            // there is something unfinished.\n            serverIsDynamic = true;\n        }\n        finalServerController.abort();\n    });\n    warnOnSyncDynamicError(serverDynamicTracking);\n    return {\n        result,\n        // TODO(runtime-ppr): do we need to produce a digest map here?\n        // digestErrorsMap: ...,\n        dynamicAccess: serverDynamicTracking,\n        isPartial: serverIsDynamic,\n        collectedRevalidate: finalServerPrerenderStore.revalidate,\n        collectedExpire: finalServerPrerenderStore.expire,\n        collectedStale: selectStaleTime(finalServerPrerenderStore.stale),\n        collectedTags: finalServerPrerenderStore.tags\n    };\n}\n/**\n * Performs a \"warmup\" render of the RSC payload for a given route. This function is called by the server\n * prior to an actual render request in Dev mode only. It's purpose is to fill caches so the actual render\n * can accurately log activity in the right render context (Prerender vs Render).\n *\n * At the moment this implementation is mostly a fork of generateDynamicFlightRenderResult\n */ async function warmupDevRender(req, ctx) {\n    const { clientReferenceManifest, componentMod: ComponentMod, getDynamicParamFromSegment, implicitTags, renderOpts, workStore } = ctx;\n    const { allowEmptyStaticShell = false, dev, onInstrumentationRequestError } = renderOpts;\n    if (!dev) {\n        throw Object.defineProperty(new InvariantError('generateDynamicFlightRenderResult should never be called in `next start` mode.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E523\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const rootParams = getRootParams(ComponentMod.tree, getDynamicParamFromSegment);\n    function onFlightDataRenderError(err) {\n        return onInstrumentationRequestError == null ? void 0 : onInstrumentationRequestError(err, req, createErrorContext(ctx, 'react-server-components-payload'));\n    }\n    const onError = createFlightReactServerErrorHandler(true, onFlightDataRenderError);\n    // We're doing a dev warmup, so we should create a new resume data cache so\n    // we can fill it.\n    const prerenderResumeDataCache = createPrerenderResumeDataCache();\n    const renderController = new AbortController();\n    const prerenderController = new AbortController();\n    const reactController = new AbortController();\n    const cacheSignal = new CacheSignal();\n    const prerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        implicitTags,\n        renderSignal: renderController.signal,\n        controller: prerenderController,\n        cacheSignal,\n        dynamicTracking: null,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash: req.cookies[NEXT_HMR_REFRESH_HASH_COOKIE],\n        captureOwnerStack: ComponentMod.captureOwnerStack,\n        // warmup is a dev only feature and no fallback params are used in the\n        // primary render which is static. We only use a prerender store here to\n        // allow the warmup to halt on Request data APIs and fetches.\n        fallbackRouteParams: null\n    };\n    const rscPayload = await workUnitAsyncStorage.run(prerenderStore, generateDynamicRSCPayload, ctx);\n    // For app dir, use the bundled version of Flight server renderer (renderToReadableStream)\n    // which contains the subset React.\n    workUnitAsyncStorage.run(prerenderStore, ComponentMod.renderToReadableStream, rscPayload, clientReferenceManifest.clientModules, {\n        filterStackFrame,\n        onError,\n        signal: renderController.signal\n    });\n    // Wait for all caches to be finished filling and for async imports to resolve\n    trackPendingModules(cacheSignal);\n    await cacheSignal.cacheReady();\n    // We unset the cache so any late over-run renders aren't able to write into this cache\n    prerenderStore.prerenderResumeDataCache = null;\n    // Abort the render\n    reactController.abort();\n    renderController.abort();\n    // We don't really want to return a result here but the stack of functions\n    // that calls into renderToHTML... expects a result. We should refactor this to\n    // lift the warmup pathway outside of renderToHTML... but for now this suffices\n    return new FlightRenderResult('', {\n        fetchMetrics: workStore.fetchMetrics,\n        renderResumeDataCache: createRenderResumeDataCache(prerenderResumeDataCache)\n    });\n}\n/**\n * Crawlers will inadvertently think the canonicalUrl in the RSC payload should be crawled\n * when our intention is to just seed the router state with the current URL.\n * This function splits up the pathname so that we can later join it on\n * when we're ready to consume the path.\n */ function prepareInitialCanonicalUrl(url) {\n    return (url.pathname + url.search).split('/');\n}\n// This is the data necessary to render <AppRouter /> when no SSR errors are encountered\nasync function getRSCPayload(tree, ctx, is404) {\n    const injectedCSS = new Set();\n    const injectedJS = new Set();\n    const injectedFontPreloadTags = new Set();\n    let missingSlots;\n    // We only track missing parallel slots in development\n    if (process.env.NODE_ENV === 'development') {\n        missingSlots = new Set();\n    }\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { createMetadataComponents, MetadataBoundary, ViewportBoundary }, url, workStore } = ctx;\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    const hasGlobalNotFound = !!tree[2]['global-not-found'];\n    const { ViewportTree, MetadataTree, getViewportReady, getMetadataReady, StreamingMetadataOutlet } = createMetadataComponents({\n        tree,\n        // When it's using global-not-found, metadata errorType is undefined, which will retrieve the\n        // metadata from the page.\n        // When it's using not-found, metadata errorType is 'not-found', which will retrieve the\n        // metadata from the not-found.js boundary.\n        // TODO: remove this condition and keep it undefined when global-not-found is stabilized.\n        errorType: is404 && !hasGlobalNotFound ? 'not-found' : undefined,\n        parsedQuery: query,\n        pathname: url.pathname,\n        metadataContext: createMetadataContext(ctx.renderOpts),\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary,\n        serveStreamingMetadata\n    });\n    const preloadCallbacks = [];\n    const seedData = await createComponentTree({\n        ctx,\n        loaderTree: tree,\n        parentParams: {},\n        injectedCSS,\n        injectedJS,\n        injectedFontPreloadTags,\n        rootLayoutIncluded: false,\n        getViewportReady,\n        getMetadataReady,\n        missingSlots,\n        preloadCallbacks,\n        authInterrupts: ctx.renderOpts.experimental.authInterrupts,\n        StreamingMetadataOutlet\n    });\n    // When the `vary` response header is present with `Next-URL`, that means there's a chance\n    // it could respond differently if there's an interception route. We provide this information\n    // to `AppRouter` so that it can properly seed the prefetch cache with a prefix, if needed.\n    const varyHeader = ctx.res.getHeader('vary');\n    const couldBeIntercepted = typeof varyHeader === 'string' && varyHeader.includes(NEXT_URL);\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                pagePath: ctx.pagePath,\n                statusCode: ctx.res.statusCode,\n                isPossibleServerAction: ctx.isPossibleServerAction\n            }),\n            /*#__PURE__*/ _jsx(ViewportTree, {}),\n            /*#__PURE__*/ _jsx(MetadataTree, {})\n        ]\n    }, flightDataPathHeadKey);\n    const { GlobalError, styles: globalErrorStyles } = await getGlobalErrorStyles(tree, ctx);\n    // Assume the head we're rendering contains only partial data if PPR is\n    // enabled and this is a statically generated response. This is used by the\n    // client Segment Cache after a prefetch to determine if it can skip the\n    // second request to fill in the dynamic data.\n    //\n    // See similar comment in create-component-tree.tsx for more context.\n    const isPossiblyPartialHead = workStore.isStaticGeneration && ctx.renderOpts.experimental.isRoutePPREnabled === true;\n    return {\n        // See the comment above the `Preloads` component (below) for why this is part of the payload\n        P: /*#__PURE__*/ _jsx(Preloads, {\n            preloadCallbacks: preloadCallbacks\n        }),\n        b: ctx.sharedContext.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        i: !!couldBeIntercepted,\n        f: [\n            [\n                initialTree,\n                seedData,\n                initialHead,\n                isPossiblyPartialHead\n            ]\n        ],\n        m: missingSlots,\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\n/**\n * Preload calls (such as `ReactDOM.preloadStyle` and `ReactDOM.preloadFont`) need to be called during rendering\n * in order to create the appropriate preload tags in the DOM, otherwise they're a no-op. Since we invoke\n * renderToReadableStream with a function that returns component props rather than a component itself, we use\n * this component to \"render  \" the preload calls.\n */ function Preloads({ preloadCallbacks }) {\n    preloadCallbacks.forEach((preloadFn)=>preloadFn());\n    return null;\n}\n// This is the data necessary to render <AppRouter /> when an error state is triggered\nasync function getErrorRSCPayload(tree, ctx, ssrError, errorType) {\n    const { getDynamicParamFromSegment, query, appUsingSizeAdjustment, componentMod: { createMetadataComponents, MetadataBoundary, ViewportBoundary }, url, workStore } = ctx;\n    const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata;\n    const { MetadataTree, ViewportTree } = createMetadataComponents({\n        tree,\n        parsedQuery: query,\n        pathname: url.pathname,\n        metadataContext: createMetadataContext(ctx.renderOpts),\n        errorType,\n        getDynamicParamFromSegment,\n        appUsingSizeAdjustment,\n        workStore,\n        MetadataBoundary,\n        ViewportBoundary,\n        serveStreamingMetadata: serveStreamingMetadata\n    });\n    const initialHead = /*#__PURE__*/ _jsxs(React.Fragment, {\n        children: [\n            /*#__PURE__*/ _jsx(NonIndex, {\n                pagePath: ctx.pagePath,\n                statusCode: ctx.res.statusCode,\n                isPossibleServerAction: ctx.isPossibleServerAction\n            }),\n            /*#__PURE__*/ _jsx(ViewportTree, {}),\n            process.env.NODE_ENV === 'development' && /*#__PURE__*/ _jsx(\"meta\", {\n                name: \"next-error\",\n                content: \"not-found\"\n            }),\n            /*#__PURE__*/ _jsx(MetadataTree, {})\n        ]\n    }, flightDataPathHeadKey);\n    const initialTree = createFlightRouterStateFromLoaderTree(tree, getDynamicParamFromSegment, query);\n    let err = undefined;\n    if (ssrError) {\n        err = isError(ssrError) ? ssrError : Object.defineProperty(new Error(ssrError + ''), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // For metadata notFound error there's no global not found boundary on top\n    // so we create a not found page with AppRouter\n    const seedData = [\n        initialTree[0],\n        /*#__PURE__*/ _jsxs(\"html\", {\n            id: \"__next_error__\",\n            children: [\n                /*#__PURE__*/ _jsx(\"head\", {}),\n                /*#__PURE__*/ _jsx(\"body\", {\n                    children: process.env.NODE_ENV !== 'production' && err ? /*#__PURE__*/ _jsx(\"template\", {\n                        \"data-next-error-message\": err.message,\n                        \"data-next-error-digest\": 'digest' in err ? err.digest : '',\n                        \"data-next-error-stack\": err.stack\n                    }) : null\n                })\n            ]\n        }),\n        {},\n        null,\n        false\n    ];\n    const { GlobalError, styles: globalErrorStyles } = await getGlobalErrorStyles(tree, ctx);\n    const isPossiblyPartialHead = workStore.isStaticGeneration && ctx.renderOpts.experimental.isRoutePPREnabled === true;\n    return {\n        b: ctx.sharedContext.buildId,\n        p: ctx.assetPrefix,\n        c: prepareInitialCanonicalUrl(url),\n        m: undefined,\n        i: false,\n        f: [\n            [\n                initialTree,\n                seedData,\n                initialHead,\n                isPossiblyPartialHead\n            ]\n        ],\n        G: [\n            GlobalError,\n            globalErrorStyles\n        ],\n        s: typeof ctx.renderOpts.postponed === 'string',\n        S: workStore.isStaticGeneration\n    };\n}\nfunction assertClientReferenceManifest(clientReferenceManifest) {\n    if (!clientReferenceManifest) {\n        throw Object.defineProperty(new InvariantError('Expected clientReferenceManifest to be defined.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E692\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n// This component must run in an SSR context. It will render the RSC root component\nfunction App({ reactServerStream, preinitScripts, clientReferenceManifest, ServerInsertedHTMLProvider, nonce }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        // This is not used during hydration, so we don't have to pass a\n        // real timestamp.\n        navigatedAt: -1,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        initialParallelRoutes: new Map(),\n        // location is not initialized in the SSR render\n        // it's set to window.location during hydration\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState, null);\n    const { HeadManagerContext } = require('../../shared/lib/head-manager-context.shared-runtime');\n    return /*#__PURE__*/ _jsx(HeadManagerContext.Provider, {\n        value: {\n            appDir: true,\n            nonce\n        },\n        children: /*#__PURE__*/ _jsx(ServerInsertedHTMLProvider, {\n            children: /*#__PURE__*/ _jsx(AppRouter, {\n                actionQueue: actionQueue,\n                globalErrorState: response.G,\n                assetPrefix: response.p\n            })\n        })\n    });\n}\n// @TODO our error stream should be probably just use the same root component. But it was previously\n// different I don't want to figure out if that is meaningful at this time so just keeping the behavior\n// consistent for now.\nfunction ErrorApp({ reactServerStream, preinitScripts, clientReferenceManifest, ServerInsertedHTMLProvider, nonce }) {\n    preinitScripts();\n    const response = React.use(useFlightStream(reactServerStream, clientReferenceManifest, nonce));\n    const initialState = createInitialRouterState({\n        // This is not used during hydration, so we don't have to pass a\n        // real timestamp.\n        navigatedAt: -1,\n        initialFlightData: response.f,\n        initialCanonicalUrlParts: response.c,\n        initialParallelRoutes: new Map(),\n        // location is not initialized in the SSR render\n        // it's set to window.location during hydration\n        location: null,\n        couldBeIntercepted: response.i,\n        postponed: response.s,\n        prerendered: response.S\n    });\n    const actionQueue = createMutableActionQueue(initialState, null);\n    return /*#__PURE__*/ _jsx(ServerInsertedHTMLProvider, {\n        children: /*#__PURE__*/ _jsx(AppRouter, {\n            actionQueue: actionQueue,\n            globalErrorState: response.G,\n            assetPrefix: response.p\n        })\n    });\n}\nasync function renderToHTMLOrFlightImpl(req, res, url, pagePath, query, renderOpts, workStore, parsedRequestHeaders, postponedState, serverComponentsHmrCache, sharedContext, fallbackRouteParams) {\n    const isNotFoundPath = pagePath === '/404';\n    if (isNotFoundPath) {\n        res.statusCode = 404;\n    }\n    // A unique request timestamp used by development to ensure that it's\n    // consistent and won't change during this request. This is important to\n    // avoid that resources can be deduped by React Float if the same resource is\n    // rendered or preloaded multiple times: `<link href=\"a.css?v={Date.now()}\"/>`.\n    const requestTimestamp = Date.now();\n    const { clientReferenceManifest, serverActionsManifest, ComponentMod, nextFontManifest, serverActions, assetPrefix = '', enableTainting } = renderOpts;\n    // We need to expose the bundled `require` API globally for\n    // react-server-dom-webpack. This is a hack until we find a better way.\n    if (ComponentMod.__next_app__) {\n        const instrumented = wrapClientComponentLoader(ComponentMod);\n        // When we are prerendering if there is a cacheSignal for tracking\n        // cache reads we track calls to `loadChunk` and `require`. This allows us\n        // to treat chunk/module loading with similar semantics as cache reads to avoid\n        // module loading from causing a prerender to abort too early.\n        const shouldTrackModuleLoading = ()=>{\n            if (!renderOpts.experimental.cacheComponents) {\n                return false;\n            }\n            if (renderOpts.dev) {\n                return true;\n            }\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            if (!workUnitStore) {\n                return false;\n            }\n            switch(workUnitStore.type){\n                case 'prerender':\n                case 'prerender-client':\n                case 'prerender-runtime':\n                case 'cache':\n                case 'private-cache':\n                    return true;\n                case 'prerender-ppr':\n                case 'prerender-legacy':\n                case 'request':\n                case 'unstable-cache':\n                    return false;\n                default:\n                    workUnitStore;\n            }\n        };\n        const __next_require__ = (...args)=>{\n            const exportsOrPromise = instrumented.require(...args);\n            if (shouldTrackModuleLoading()) {\n                // requiring an async module returns a promise.\n                trackPendingImport(exportsOrPromise);\n            }\n            return exportsOrPromise;\n        };\n        // @ts-expect-error\n        globalThis.__next_require__ = __next_require__;\n        const __next_chunk_load__ = (...args)=>{\n            const loadingChunk = instrumented.loadChunk(...args);\n            if (shouldTrackModuleLoading()) {\n                trackPendingChunkLoad(loadingChunk);\n            }\n            return loadingChunk;\n        };\n        // @ts-expect-error\n        globalThis.__next_chunk_load__ = __next_chunk_load__;\n    }\n    if (process.env.NODE_ENV === 'development') {\n        // reset isr status at start of request\n        const { pathname } = new URL(req.url || '/', 'http://n');\n        renderOpts.setIsrStatus == null ? void 0 : renderOpts.setIsrStatus.call(renderOpts, pathname, null);\n    }\n    if (// The type check here ensures that `req` is correctly typed, and the\n    // environment variable check provides dead code elimination.\n    process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req)) {\n        res.onClose(()=>{\n            // We stop tracking fetch metrics when the response closes, since we\n            // report them at that time.\n            workStore.shouldTrackFetchMetrics = false;\n        });\n        req.originalRequest.on('end', ()=>{\n            if ('performance' in globalThis) {\n                const metrics = getClientComponentLoaderMetrics({\n                    reset: true\n                });\n                if (metrics) {\n                    getTracer().startSpan(NextNodeServerSpan.clientComponentLoading, {\n                        startTime: metrics.clientComponentLoadStart,\n                        attributes: {\n                            'next.clientComponentLoadCount': metrics.clientComponentLoadCount,\n                            'next.span_type': NextNodeServerSpan.clientComponentLoading\n                        }\n                    }).end(metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes);\n                }\n            }\n        });\n    }\n    const metadata = {\n        statusCode: isNotFoundPath ? 404 : undefined\n    };\n    const appUsingSizeAdjustment = !!(nextFontManifest == null ? void 0 : nextFontManifest.appUsingSizeAdjust);\n    assertClientReferenceManifest(clientReferenceManifest);\n    const serverModuleMap = createServerModuleMap({\n        serverActionsManifest\n    });\n    setReferenceManifestsSingleton({\n        page: workStore.page,\n        clientReferenceManifest,\n        serverActionsManifest,\n        serverModuleMap\n    });\n    ComponentMod.patchFetch();\n    // Pull out the hooks/references from the component.\n    const { tree: loaderTree, taintObjectReference } = ComponentMod;\n    if (enableTainting) {\n        taintObjectReference('Do not pass process.env to Client Components since it will leak sensitive data', process.env);\n    }\n    workStore.fetchMetrics = [];\n    metadata.fetchMetrics = workStore.fetchMetrics;\n    // don't modify original query object\n    query = {\n        ...query\n    };\n    stripInternalQueries(query);\n    const { flightRouterState, isPrefetchRequest, isRuntimePrefetchRequest, isRSCRequest, isDevWarmupRequest, isHmrRefresh, nonce } = parsedRequestHeaders;\n    const { isStaticGeneration } = workStore;\n    /**\n   * The metadata items array created in next-app-loader with all relevant information\n   * that we need to resolve the final metadata.\n   */ let requestId;\n    if (isStaticGeneration) {\n        requestId = Buffer.from(await crypto.subtle.digest('SHA-1', Buffer.from(req.url))).toString('hex');\n    } else if (process.env.NEXT_RUNTIME === 'edge') {\n        requestId = crypto.randomUUID();\n    } else {\n        requestId = require('next/dist/compiled/nanoid').nanoid();\n    }\n    /**\n   * Dynamic parameters. E.g. when you visit `/dashboard/vercel` which is rendered by `/dashboard/[slug]` the value will be {\"slug\": \"vercel\"}.\n   */ const params = renderOpts.params ?? {};\n    const getDynamicParamFromSegment = makeGetDynamicParamFromSegment(params, pagePath, fallbackRouteParams);\n    const isPossibleActionRequest = getIsPossibleServerAction(req);\n    const implicitTags = await getImplicitTags(workStore.page, url, fallbackRouteParams);\n    const ctx = {\n        componentMod: ComponentMod,\n        url,\n        renderOpts,\n        workStore,\n        parsedRequestHeaders,\n        getDynamicParamFromSegment,\n        query,\n        isPrefetch: isPrefetchRequest,\n        isPossibleServerAction: isPossibleActionRequest,\n        requestTimestamp,\n        appUsingSizeAdjustment,\n        flightRouterState,\n        requestId,\n        pagePath,\n        clientReferenceManifest,\n        assetPrefix,\n        isNotFoundPath,\n        nonce,\n        res,\n        sharedContext,\n        implicitTags\n    };\n    getTracer().setRootSpanAttribute('next.route', pagePath);\n    if (isStaticGeneration) {\n        // We're either building or revalidating. In either case we need to\n        // prerender our page rather than render it.\n        const prerenderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `prerender route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, prerenderToStream);\n        const response = await prerenderToStreamWithTracing(req, res, ctx, metadata, loaderTree, fallbackRouteParams);\n        // If we're debugging partial prerendering, print all the dynamic API accesses\n        // that occurred during the render.\n        // @TODO move into renderToStream function\n        if (response.dynamicAccess && accessedDynamicData(response.dynamicAccess) && renderOpts.isDebugDynamicAccesses) {\n            warn('The following dynamic usage was detected:');\n            for (const access of formatDynamicAPIAccesses(response.dynamicAccess)){\n                warn(access);\n            }\n        }\n        // If we encountered any unexpected errors during build we fail the\n        // prerendering phase and the build.\n        if (workStore.invalidDynamicUsageError) {\n            logDisallowedDynamicError(workStore, workStore.invalidDynamicUsageError);\n            throw new StaticGenBailoutError();\n        }\n        if (response.digestErrorsMap.size) {\n            const buildFailingError = response.digestErrorsMap.values().next().value;\n            if (buildFailingError) throw buildFailingError;\n        }\n        // Pick first userland SSR error, which is also not a RSC error.\n        if (response.ssrErrors.length) {\n            const buildFailingError = response.ssrErrors.find((err)=>isUserLandError(err));\n            if (buildFailingError) throw buildFailingError;\n        }\n        const options = {\n            metadata,\n            contentType: HTML_CONTENT_TYPE_HEADER\n        };\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.pendingRevalidatedTags) {\n            const pendingPromise = executeRevalidates(workStore).finally(()=>{\n                if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                    console.log('pending revalidates promise finished for:', url);\n                }\n            });\n            if (renderOpts.waitUntil) {\n                renderOpts.waitUntil(pendingPromise);\n            } else {\n                options.waitUntil = pendingPromise;\n            }\n        }\n        applyMetadataFromPrerenderResult(response, metadata, workStore);\n        if (response.renderResumeDataCache) {\n            metadata.renderResumeDataCache = response.renderResumeDataCache;\n        }\n        return new RenderResult(await streamToString(response.stream), options);\n    } else {\n        // We're rendering dynamically\n        const renderResumeDataCache = renderOpts.renderResumeDataCache ?? (postponedState == null ? void 0 : postponedState.renderResumeDataCache);\n        const rootParams = getRootParams(loaderTree, ctx.getDynamicParamFromSegment);\n        const devValidatingFallbackParams = getRequestMeta(req, 'devValidatingFallbackParams') || null;\n        const requestStore = createRequestStoreForRender(req, res, url, rootParams, implicitTags, renderOpts.onUpdateCookies, renderOpts.previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache, devValidatingFallbackParams);\n        if (process.env.NODE_ENV === 'development' && renderOpts.setIsrStatus && // The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(req) && !isDevWarmupRequest) {\n            const setIsrStatus = renderOpts.setIsrStatus;\n            req.originalRequest.on('end', ()=>{\n                if (!requestStore.usedDynamic && !workStore.forceDynamic) {\n                    // only node can be ISR so we only need to update the status here\n                    const { pathname } = new URL(req.url || '/', 'http://n');\n                    setIsrStatus(pathname, true);\n                }\n            });\n        }\n        if (isDevWarmupRequest) {\n            return warmupDevRender(req, ctx);\n        } else if (isRSCRequest) {\n            if (isRuntimePrefetchRequest) {\n                return generateRuntimePrefetchResult(req, res, ctx, requestStore);\n            } else {\n                return generateDynamicFlightRenderResult(req, ctx, requestStore);\n            }\n        }\n        const renderToStreamWithTracing = getTracer().wrap(AppRenderSpan.getBodyResult, {\n            spanName: `render route (app) ${pagePath}`,\n            attributes: {\n                'next.route': pagePath\n            }\n        }, renderToStream);\n        let formState = null;\n        if (isPossibleActionRequest) {\n            // For action requests, we handle them differently with a special render result.\n            const actionRequestResult = await handleAction({\n                req,\n                res,\n                ComponentMod,\n                serverModuleMap,\n                generateFlight: generateDynamicFlightRenderResult,\n                workStore,\n                requestStore,\n                serverActions,\n                ctx,\n                metadata\n            });\n            if (actionRequestResult) {\n                if (actionRequestResult.type === 'not-found') {\n                    const notFoundLoaderTree = createNotFoundLoaderTree(loaderTree);\n                    res.statusCode = 404;\n                    metadata.statusCode = 404;\n                    const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, notFoundLoaderTree, formState, postponedState, metadata, devValidatingFallbackParams);\n                    return new RenderResult(stream, {\n                        metadata,\n                        contentType: HTML_CONTENT_TYPE_HEADER\n                    });\n                } else if (actionRequestResult.type === 'done') {\n                    if (actionRequestResult.result) {\n                        actionRequestResult.result.assignMetadata(metadata);\n                        return actionRequestResult.result;\n                    } else if (actionRequestResult.formState) {\n                        formState = actionRequestResult.formState;\n                    }\n                }\n            }\n        }\n        const options = {\n            metadata,\n            contentType: HTML_CONTENT_TYPE_HEADER\n        };\n        const stream = await renderToStreamWithTracing(requestStore, req, res, ctx, loaderTree, formState, postponedState, metadata, devValidatingFallbackParams);\n        // Invalid dynamic usages should only error the request in development.\n        // In production, it's better to produce a result.\n        // (the dynamic error will still be thrown inside the component tree, but it's catchable by error boundaries)\n        if (workStore.invalidDynamicUsageError && workStore.dev) {\n            throw workStore.invalidDynamicUsageError;\n        }\n        // If we have pending revalidates, wait until they are all resolved.\n        if (workStore.pendingRevalidates || workStore.pendingRevalidateWrites || workStore.pendingRevalidatedTags) {\n            const pendingPromise = executeRevalidates(workStore).finally(()=>{\n                if (process.env.NEXT_PRIVATE_DEBUG_CACHE) {\n                    console.log('pending revalidates promise finished for:', url);\n                }\n            });\n            if (renderOpts.waitUntil) {\n                renderOpts.waitUntil(pendingPromise);\n            } else {\n                options.waitUntil = pendingPromise;\n            }\n        }\n        // Create the new render result for the response.\n        return new RenderResult(stream, options);\n    }\n}\nexport const renderToHTMLOrFlight = (req, res, pagePath, query, fallbackRouteParams, renderOpts, serverComponentsHmrCache, isDevWarmup, sharedContext)=>{\n    var _renderOpts_previewProps;\n    if (!req.url) {\n        throw Object.defineProperty(new Error('Invalid URL'), \"__NEXT_ERROR_CODE\", {\n            value: \"E182\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const url = parseRelativeUrl(req.url, undefined, false);\n    // We read these values from the request object as, in certain cases,\n    // base-server will strip them to opt into different rendering behavior.\n    const parsedRequestHeaders = parseRequestHeaders(req.headers, {\n        isDevWarmup,\n        isRoutePPREnabled: renderOpts.experimental.isRoutePPREnabled === true,\n        previewModeId: (_renderOpts_previewProps = renderOpts.previewProps) == null ? void 0 : _renderOpts_previewProps.previewModeId\n    });\n    const { isPrefetchRequest, previouslyRevalidatedTags } = parsedRequestHeaders;\n    let postponedState = null;\n    // If provided, the postpone state should be parsed so it can be provided to\n    // React.\n    if (typeof renderOpts.postponed === 'string') {\n        if (fallbackRouteParams) {\n            throw Object.defineProperty(new InvariantError('postponed state should not be provided when fallback params are provided'), \"__NEXT_ERROR_CODE\", {\n                value: \"E592\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        postponedState = parsePostponedState(renderOpts.postponed, renderOpts.params);\n    }\n    if ((postponedState == null ? void 0 : postponedState.renderResumeDataCache) && renderOpts.renderResumeDataCache) {\n        throw Object.defineProperty(new InvariantError('postponed state and dev warmup immutable resume data cache should not be provided together'), \"__NEXT_ERROR_CODE\", {\n            value: \"E589\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workStore = createWorkStore({\n        page: renderOpts.routeModule.definition.page,\n        renderOpts,\n        // @TODO move to workUnitStore of type Request\n        isPrefetchRequest,\n        buildId: sharedContext.buildId,\n        previouslyRevalidatedTags\n    });\n    return workAsyncStorage.run(workStore, // The function to run\n    renderToHTMLOrFlightImpl, // all of it's args\n    req, res, url, pagePath, query, renderOpts, workStore, parsedRequestHeaders, postponedState, serverComponentsHmrCache, sharedContext, fallbackRouteParams);\n};\nfunction applyMetadataFromPrerenderResult(response, metadata, workStore) {\n    var _metadata_cacheControl;\n    if (response.collectedTags) {\n        metadata.fetchTags = response.collectedTags.join(',');\n    }\n    // Let the client router know how long to keep the cached entry around.\n    const staleHeader = String(response.collectedStale);\n    metadata.headers ??= {};\n    metadata.headers[NEXT_ROUTER_STALE_TIME_HEADER] = staleHeader;\n    // If force static is specifically set to false, we should not revalidate\n    // the page.\n    if (workStore.forceStatic === false || response.collectedRevalidate === 0) {\n        metadata.cacheControl = {\n            revalidate: 0,\n            expire: undefined\n        };\n    } else {\n        // Copy the cache control value onto the render result metadata.\n        metadata.cacheControl = {\n            revalidate: response.collectedRevalidate >= INFINITE_CACHE ? false : response.collectedRevalidate,\n            expire: response.collectedExpire >= INFINITE_CACHE ? undefined : response.collectedExpire\n        };\n    }\n    // provide bailout info for debugging\n    if (((_metadata_cacheControl = metadata.cacheControl) == null ? void 0 : _metadata_cacheControl.revalidate) === 0) {\n        metadata.staticBailoutInfo = {\n            description: workStore.dynamicUsageDescription,\n            stack: workStore.dynamicUsageStack\n        };\n    }\n}\nasync function renderToStream(requestStore, req, res, ctx, tree, formState, postponedState, metadata, devValidatingFallbackParams) {\n    const { assetPrefix, nonce, pagePath, renderOpts } = ctx;\n    const { basePath, buildManifest, clientReferenceManifest, ComponentMod, crossOrigin, dev = false, experimental, nextExport = false, onInstrumentationRequestError, page, reactMaxHeadersLength, shouldWaitOnAllReady, subresourceIntegrityManifest, supportsDynamicResponse } = renderOpts;\n    assertClientReferenceManifest(clientReferenceManifest);\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const getServerInsertedMetadata = createServerInsertedMetadata(nonce);\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), experimental.clientTraceMetadata);\n    const polyfills = buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>({\n            src: `${assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: subresourceIntegrityManifest == null ? void 0 : subresourceIntegrityManifest[polyfill],\n            crossOrigin,\n            noModule: true,\n            nonce\n        }));\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    assetPrefix, crossOrigin, subresourceIntegrityManifest, getAssetQueryString(ctx, true), nonce, page);\n    const reactServerErrorsByDigest = new Map();\n    const silenceLogger = false;\n    function onHTMLRenderRSCError(err) {\n        return onInstrumentationRequestError == null ? void 0 : onInstrumentationRequestError(err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(dev, nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return onInstrumentationRequestError == null ? void 0 : onInstrumentationRequestError(err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(dev, nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerResult = null;\n    const setHeader = res.setHeader.bind(res);\n    const appendHeader = res.appendHeader.bind(res);\n    try {\n        if (// We only want this behavior when running `next dev`\n        dev && // We only want this behavior when we have React's dev builds available\n        process.env.NODE_ENV === 'development' && // Edge routes never prerender so we don't have a Prerender environment for anything in edge runtime\n        process.env.NEXT_RUNTIME !== 'edge' && // We only have a Prerender environment for projects opted into cacheComponents\n        experimental.cacheComponents) {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const [resolveValidation, validationOutlet] = createValidationOutlet();\n            RSCPayload._validation = validationOutlet;\n            const reactServerStream = await workUnitAsyncStorage.run(requestStore, scheduleInSequentialTasks, ()=>{\n                requestStore.prerenderPhase = true;\n                return ComponentMod.renderToReadableStream(RSCPayload, clientReferenceManifest.clientModules, {\n                    onError: serverComponentsErrorHandler,\n                    environmentName: ()=>requestStore.prerenderPhase === true ? 'Prerender' : 'Server',\n                    filterStackFrame\n                });\n            }, ()=>{\n                requestStore.prerenderPhase = false;\n            });\n            spawnDynamicValidationInDev(resolveValidation, tree, ctx, res.statusCode === 404, clientReferenceManifest, requestStore, devValidatingFallbackParams);\n            reactServerResult = new ReactServerResult(reactServerStream);\n        } else {\n            // This is a dynamic render. We don't do dynamic tracking because we're not prerendering\n            const RSCPayload = await workUnitAsyncStorage.run(requestStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            reactServerResult = new ReactServerResult(workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                filterStackFrame,\n                onError: serverComponentsErrorHandler\n            }));\n        }\n        // React doesn't start rendering synchronously but we want the RSC render to have a chance to start\n        // before we begin SSR rendering because we want to capture any available preload headers so we tick\n        // one task before continuing\n        await waitAtLeastOneReactRenderTask();\n        // If provided, the postpone state should be parsed as JSON so it can be\n        // provided to React.\n        if (typeof renderOpts.postponed === 'string') {\n            if ((postponedState == null ? void 0 : postponedState.type) === DynamicState.DATA) {\n                // We have a complete HTML Document in the prerender but we need to\n                // still include the new server component render because it was not included\n                // in the static prelude.\n                const inlinedReactServerDataStream = createInlinedDataReadableStream(reactServerResult.tee(), nonce, formState);\n                return chainStreams(inlinedReactServerDataStream, createDocumentClosingStream());\n            } else if (postponedState) {\n                // We assume we have dynamic HTML requiring a resume render to complete\n                const { postponed, preludeState } = getPostponedFromState(postponedState);\n                const resume = require('react-dom/server').resume;\n                const htmlStream = await workUnitAsyncStorage.run(requestStore, resume, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: reactServerResult.tee(),\n                    preinitScripts: preinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    nonce: nonce\n                }), postponed, {\n                    onError: htmlRendererErrorHandler,\n                    nonce\n                });\n                const getServerInsertedHTML = makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: allCapturedErrors,\n                    basePath,\n                    tracingMetadata: tracingMetadata\n                });\n                return await continueDynamicHTMLResume(htmlStream, {\n                    // If the prelude is empty (i.e. is no static shell), we should wait for initial HTML to be rendered\n                    // to avoid injecting RSC data too early.\n                    // If we have a non-empty-prelude (i.e. a static HTML shell), then it's already been sent separately,\n                    // so we shouldn't wait for any HTML to be emitted from the resume before sending RSC data.\n                    delayDataUntilFirstHtmlChunk: preludeState === DynamicHTMLPreludeState.Empty,\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), nonce, formState),\n                    getServerInsertedHTML,\n                    getServerInsertedMetadata\n                });\n            }\n        }\n        // This is a regular dynamic render\n        const renderToReadableStream = require('react-dom/server').renderToReadableStream;\n        const htmlStream = await workUnitAsyncStorage.run(requestStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n            reactServerStream: reactServerResult.tee(),\n            preinitScripts: preinitScripts,\n            clientReferenceManifest: clientReferenceManifest,\n            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n            nonce: nonce\n        }), {\n            onError: htmlRendererErrorHandler,\n            nonce,\n            onHeaders: (headers)=>{\n                headers.forEach((value, key)=>{\n                    appendHeader(key, value);\n                });\n            },\n            maxHeadersLength: reactMaxHeadersLength,\n            bootstrapScripts: [\n                bootstrapScript\n            ],\n            formState\n        });\n        const getServerInsertedHTML = makeGetServerInsertedHTML({\n            polyfills,\n            renderServerInsertedHTML,\n            serverCapturedErrors: allCapturedErrors,\n            basePath,\n            tracingMetadata: tracingMetadata\n        });\n        /**\n     * Rules of Static & Dynamic HTML:\n     *\n     *    1.) We must generate static HTML unless the caller explicitly opts\n     *        in to dynamic HTML support.\n     *\n     *    2.) If dynamic HTML support is requested, we must honor that request\n     *        or throw an error. It is the sole responsibility of the caller to\n     *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n     *\n     *   3.) If `shouldWaitOnAllReady` is true, which indicates we need to\n     *       resolve all suspenses and generate a full HTML. e.g. when it's a\n     *       html limited bot requests, we produce the full HTML content.\n     *\n     * These rules help ensure that other existing features like request caching,\n     * coalescing, and ISR continue working as intended.\n     */ const generateStaticHTML = supportsDynamicResponse !== true || !!shouldWaitOnAllReady;\n        return await continueFizzStream(htmlStream, {\n            inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consume(), nonce, formState),\n            isStaticGeneration: generateStaticHTML,\n            isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n            buildId: ctx.workStore.buildId,\n            getServerInsertedHTML,\n            getServerInsertedMetadata,\n            validateRootLayout: dev\n        });\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        let errorType;\n        if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            metadata.statusCode = res.statusCode;\n            errorType = getAccessFallbackErrorTypeByStatus(res.statusCode);\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            metadata.statusCode = res.statusCode;\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), basePath);\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            const headers = new Headers();\n            if (appendMutableCookies(headers, requestStore.mutableCookies)) {\n                setHeader('set-cookie', Array.from(headers.values()));\n            }\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n            metadata.statusCode = res.statusCode;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(buildManifest, assetPrefix, crossOrigin, subresourceIntegrityManifest, getAssetQueryString(ctx, false), nonce, '/_not-found/page');\n        const errorRSCPayload = await workUnitAsyncStorage.run(requestStore, getErrorRSCPayload, tree, ctx, reactServerErrorsByDigest.has(err.digest) ? null : err, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(requestStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            filterStackFrame,\n            onError: serverComponentsErrorHandler\n        });\n        if (reactServerResult === null) {\n            // We errored when we did not have an RSC stream to read from. This is not just a render\n            // error, we need to throw early\n            throw err;\n        }\n        try {\n            const fizzStream = await workUnitAsyncStorage.run(requestStore, renderToInitialFizzStream, {\n                ReactDOMServer: require('react-dom/server'),\n                element: /*#__PURE__*/ _jsx(ErrorApp, {\n                    reactServerStream: errorServerStream,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: nonce\n                }),\n                streamOptions: {\n                    nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            /**\n       * Rules of Static & Dynamic HTML:\n       *\n       *    1.) We must generate static HTML unless the caller explicitly opts\n       *        in to dynamic HTML support.\n       *\n       *    2.) If dynamic HTML support is requested, we must honor that request\n       *        or throw an error. It is the sole responsibility of the caller to\n       *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n       *    3.) If `shouldWaitOnAllReady` is true, which indicates we need to\n       *        resolve all suspenses and generate a full HTML. e.g. when it's a\n       *        html limited bot requests, we produce the full HTML content.\n       *\n       * These rules help ensure that other existing features like request caching,\n       * coalescing, and ISR continue working as intended.\n       */ const generateStaticHTML = supportsDynamicResponse !== true || !!shouldWaitOnAllReady;\n            return await continueFizzStream(fizzStream, {\n                inlinedDataStream: createInlinedDataReadableStream(// This is intentionally using the readable datastream from the\n                // main render rather than the flight data from the error page\n                // render\n                reactServerResult.consume(), nonce, formState),\n                isStaticGeneration: generateStaticHTML,\n                isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n                buildId: ctx.workStore.buildId,\n                getServerInsertedHTML: makeGetServerInsertedHTML({\n                    polyfills,\n                    renderServerInsertedHTML,\n                    serverCapturedErrors: [],\n                    basePath,\n                    tracingMetadata: tracingMetadata\n                }),\n                getServerInsertedMetadata,\n                validateRootLayout: dev\n            });\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isHTTPAccessFallbackError(finalErr)) {\n                const { bailOnRootNotFound } = require('../../client/components/dev-root-http-access-fallback-boundary');\n                bailOnRootNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nfunction createValidationOutlet() {\n    let resolveValidation;\n    let outlet = new Promise((resolve)=>{\n        resolveValidation = resolve;\n    });\n    return [\n        resolveValidation,\n        outlet\n    ];\n}\n/**\n * This function is a fork of prerenderToStream cacheComponents branch.\n * While it doesn't return a stream we want it to have identical\n * prerender semantics to prerenderToStream and should update it\n * in conjunction with any changes to that function.\n */ async function spawnDynamicValidationInDev(resolveValidation, tree, ctx, isNotFound, clientReferenceManifest, requestStore, fallbackRouteParams) {\n    var _requestStore_cookies_get;\n    const { componentMod: ComponentMod, getDynamicParamFromSegment, implicitTags, nonce, renderOpts, workStore } = ctx;\n    const { allowEmptyStaticShell = false } = renderOpts;\n    // These values are placeholder values for this validating render\n    // that are provided during the actual prerenderToStream.\n    const preinitScripts = ()=>{};\n    const { ServerInsertedHTMLProvider } = createServerInsertedHTML();\n    const rootParams = getRootParams(ComponentMod.tree, getDynamicParamFromSegment);\n    const hmrRefreshHash = (_requestStore_cookies_get = requestStore.cookies.get(NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _requestStore_cookies_get.value;\n    // The prerender controller represents the lifetime of the prerender. It will\n    // be aborted when a task is complete or a synchronously aborting API is\n    // called. Notably, during prospective prerenders, this does not actually\n    // terminate the prerender itself, which will continue until all caches are\n    // filled.\n    const initialServerPrerenderController = new AbortController();\n    // This controller is used to abort the React prerender.\n    const initialServerReactController = new AbortController();\n    // This controller represents the lifetime of the React prerender. Its signal\n    // can be used for any I/O operation to abort the I/O and/or to reject, when\n    // prerendering aborts. This includes our own hanging promises for accessing\n    // request data, and for fetch calls. It might be replaced in the future by\n    // React.cacheSignal(). It's aborted after the React controller, so that no\n    // pending I/O can register abort listeners that are called before React's\n    // abort listener is called. This ensures that pending I/O is not rejected too\n    // early when aborting the prerender. Notably, during the prospective\n    // prerender, it is different from the prerender controller because we don't\n    // want to end the React prerender until all caches are filled.\n    const initialServerRenderController = new AbortController();\n    // The cacheSignal helps us track whether caches are still filling or we are\n    // ready to cut the render off.\n    const cacheSignal = new CacheSignal();\n    const captureOwnerStackClient = React.captureOwnerStack;\n    const captureOwnerStackServer = ComponentMod.captureOwnerStack;\n    // The resume data cache here should use a fresh instance as it's\n    // performing a fresh prerender. If we get to implementing the\n    // prerendering of an already prerendered page, we should use the passed\n    // resume data cache instead.\n    const prerenderResumeDataCache = createPrerenderResumeDataCache();\n    const initialServerPayloadPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        fallbackRouteParams,\n        implicitTags,\n        // While this render signal isn't going to be used to abort a React render while getting the RSC payload\n        // various request data APIs bind to this controller to reject after completion.\n        renderSignal: initialServerRenderController.signal,\n        // When we generate the RSC payload we might abort this controller due to sync IO\n        // but we don't actually care about sync IO in this phase so we use a throw away controller\n        // that isn't connected to anything\n        controller: new AbortController(),\n        // During the initial prerender we need to track all cache reads to ensure\n        // we render long enough to fill every cache it is possible to visit during\n        // the final prerender.\n        cacheSignal,\n        dynamicTracking: null,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash,\n        captureOwnerStack: captureOwnerStackServer\n    };\n    // We're not going to use the result of this render because the only time it could be used\n    // is if it completes in a microtask and that's likely very rare for any non-trivial app\n    const initialServerPayload = await workUnitAsyncStorage.run(initialServerPayloadPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    const initialServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        fallbackRouteParams,\n        implicitTags,\n        renderSignal: initialServerRenderController.signal,\n        controller: initialServerPrerenderController,\n        // During the initial prerender we need to track all cache reads to ensure\n        // we render long enough to fill every cache it is possible to visit during\n        // the final prerender.\n        cacheSignal,\n        dynamicTracking: null,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash,\n        captureOwnerStack: captureOwnerStackServer\n    };\n    const pendingInitialServerResult = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.prerender, initialServerPayload, clientReferenceManifest.clientModules, {\n        filterStackFrame,\n        onError: (err)=>{\n            const digest = getDigestForWellKnownError(err);\n            if (digest) {\n                return digest;\n            }\n            if (isReactLargeShellError(err)) {\n                // TODO: Aggregate\n                console.error(err);\n                return undefined;\n            }\n            if (initialServerPrerenderController.signal.aborted) {\n                // The render aborted before this error was handled which indicates\n                // the error is caused by unfinished components within the render\n                return;\n            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                printDebugThrownValueForProspectiveRender(err, workStore.route);\n            }\n        },\n        // we don't care to track postpones during the prospective render because we need\n        // to always do a final render anyway\n        onPostpone: undefined,\n        // We don't want to stop rendering until the cacheSignal is complete so we pass\n        // a different signal to this render call than is used by dynamic APIs to signify\n        // transitioning out of the prerender environment\n        signal: initialServerReactController.signal\n    });\n    // The listener to abort our own render controller must be added after React\n    // has added its listener, to ensure that pending I/O is not aborted/rejected\n    // too early.\n    initialServerReactController.signal.addEventListener('abort', ()=>{\n        initialServerRenderController.abort();\n    }, {\n        once: true\n    });\n    // Wait for all caches to be finished filling and for async imports to resolve\n    trackPendingModules(cacheSignal);\n    await cacheSignal.cacheReady();\n    initialServerReactController.abort();\n    // We don't need to continue the prerender process if we already\n    // detected invalid dynamic usage in the initial prerender phase.\n    const { invalidDynamicUsageError } = workStore;\n    if (invalidDynamicUsageError) {\n        resolveValidation(/*#__PURE__*/ _jsx(LogSafely, {\n            fn: ()=>{\n                console.error(invalidDynamicUsageError);\n            }\n        }));\n        return;\n    }\n    let initialServerResult;\n    try {\n        initialServerResult = await createReactServerPrerenderResult(pendingInitialServerResult);\n    } catch (err) {\n        if (initialServerReactController.signal.aborted || initialServerPrerenderController.signal.aborted) {\n        // These are expected errors that might error the prerender. we ignore them.\n        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n            // We don't normally log these errors because we are going to retry anyway but\n            // it can be useful for debugging Next.js itself to get visibility here when needed\n            printDebugThrownValueForProspectiveRender(err, workStore.route);\n        }\n    }\n    if (initialServerResult) {\n        const initialClientPrerenderController = new AbortController();\n        const initialClientReactController = new AbortController();\n        const initialClientRenderController = new AbortController();\n        const initialClientPrerenderStore = {\n            type: 'prerender-client',\n            phase: 'render',\n            rootParams,\n            fallbackRouteParams,\n            implicitTags,\n            renderSignal: initialClientRenderController.signal,\n            controller: initialClientPrerenderController,\n            // For HTML Generation the only cache tracked activity\n            // is module loading, which has it's own cache signal\n            cacheSignal: null,\n            dynamicTracking: null,\n            allowEmptyStaticShell,\n            revalidate: INFINITE_CACHE,\n            expire: INFINITE_CACHE,\n            stale: INFINITE_CACHE,\n            tags: [\n                ...implicitTags.tags\n            ],\n            prerenderResumeDataCache,\n            renderResumeDataCache: null,\n            hmrRefreshHash: undefined,\n            captureOwnerStack: captureOwnerStackClient\n        };\n        const prerender = require('react-dom/static').prerender;\n        const pendingInitialClientResult = workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n            reactServerStream: initialServerResult.asUnclosingStream(),\n            preinitScripts: preinitScripts,\n            clientReferenceManifest: clientReferenceManifest,\n            ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n            nonce: nonce\n        }), {\n            signal: initialClientReactController.signal,\n            onError: (err)=>{\n                const digest = getDigestForWellKnownError(err);\n                if (digest) {\n                    return digest;\n                }\n                if (isReactLargeShellError(err)) {\n                    // TODO: Aggregate\n                    console.error(err);\n                    return undefined;\n                }\n                if (initialClientReactController.signal.aborted) {\n                // These are expected errors that might error the prerender. we ignore them.\n                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                    // We don't normally log these errors because we are going to retry anyway but\n                    // it can be useful for debugging Next.js itself to get visibility here when needed\n                    printDebugThrownValueForProspectiveRender(err, workStore.route);\n                }\n            }\n        });\n        // The listener to abort our own render controller must be added after React\n        // has added its listener, to ensure that pending I/O is not\n        // aborted/rejected too early.\n        initialClientReactController.signal.addEventListener('abort', ()=>{\n            initialClientRenderController.abort();\n        }, {\n            once: true\n        });\n        pendingInitialClientResult.catch((err)=>{\n            if (initialClientReactController.signal.aborted || isPrerenderInterruptedError(err)) {\n            // These are expected errors that might error the prerender. we ignore them.\n            } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                // We don't normally log these errors because we are going to retry anyway but\n                // it can be useful for debugging Next.js itself to get visibility here when needed\n                printDebugThrownValueForProspectiveRender(err, workStore.route);\n            }\n        });\n        // This is mostly needed for dynamic `import()`s in client components.\n        // Promises passed to client were already awaited above (assuming that they came from cached functions)\n        trackPendingModules(cacheSignal);\n        await cacheSignal.cacheReady();\n        initialClientReactController.abort();\n    }\n    const finalServerReactController = new AbortController();\n    const finalServerRenderController = new AbortController();\n    const finalServerPayloadPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        fallbackRouteParams,\n        implicitTags,\n        // While this render signal isn't going to be used to abort a React render while getting the RSC payload\n        // various request data APIs bind to this controller to reject after completion.\n        renderSignal: finalServerRenderController.signal,\n        // When we generate the RSC payload we might abort this controller due to sync IO\n        // but we don't actually care about sync IO in this phase so we use a throw away controller\n        // that isn't connected to anything\n        controller: new AbortController(),\n        // All caches we could read must already be filled so no tracking is necessary\n        cacheSignal: null,\n        dynamicTracking: null,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash,\n        captureOwnerStack: captureOwnerStackServer\n    };\n    const finalAttemptRSCPayload = await workUnitAsyncStorage.run(finalServerPayloadPrerenderStore, getRSCPayload, tree, ctx, isNotFound);\n    const serverDynamicTracking = createDynamicTrackingState(false // isDebugDynamicAccesses\n    );\n    const finalServerPrerenderStore = {\n        type: 'prerender',\n        phase: 'render',\n        rootParams,\n        fallbackRouteParams,\n        implicitTags,\n        renderSignal: finalServerRenderController.signal,\n        controller: finalServerReactController,\n        // All caches we could read must already be filled so no tracking is necessary\n        cacheSignal: null,\n        dynamicTracking: serverDynamicTracking,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash,\n        captureOwnerStack: captureOwnerStackServer\n    };\n    const reactServerResult = await createReactServerPrerenderResult(prerenderAndAbortInSequentialTasks(async ()=>{\n        const pendingPrerenderResult = workUnitAsyncStorage.run(// The store to scope\n        finalServerPrerenderStore, // The function to run\n        ComponentMod.prerender, // ... the arguments for the function to run\n        finalAttemptRSCPayload, clientReferenceManifest.clientModules, {\n            filterStackFrame,\n            onError: (err)=>{\n                if (finalServerReactController.signal.aborted && isPrerenderInterruptedError(err)) {\n                    return err.digest;\n                }\n                if (isReactLargeShellError(err)) {\n                    // TODO: Aggregate\n                    console.error(err);\n                    return undefined;\n                }\n                return getDigestForWellKnownError(err);\n            },\n            signal: finalServerReactController.signal\n        });\n        // The listener to abort our own render controller must be added after\n        // React has added its listener, to ensure that pending I/O is not\n        // aborted/rejected too early.\n        finalServerReactController.signal.addEventListener('abort', ()=>{\n            finalServerRenderController.abort();\n        }, {\n            once: true\n        });\n        return pendingPrerenderResult;\n    }, ()=>{\n        finalServerReactController.abort();\n    }));\n    const clientDynamicTracking = createDynamicTrackingState(false //isDebugDynamicAccesses\n    );\n    const finalClientReactController = new AbortController();\n    const finalClientRenderController = new AbortController();\n    const finalClientPrerenderStore = {\n        type: 'prerender-client',\n        phase: 'render',\n        rootParams,\n        fallbackRouteParams,\n        implicitTags,\n        renderSignal: finalClientRenderController.signal,\n        controller: finalClientReactController,\n        // No APIs require a cacheSignal through the workUnitStore during the HTML prerender\n        cacheSignal: null,\n        dynamicTracking: clientDynamicTracking,\n        allowEmptyStaticShell,\n        revalidate: INFINITE_CACHE,\n        expire: INFINITE_CACHE,\n        stale: INFINITE_CACHE,\n        tags: [\n            ...implicitTags.tags\n        ],\n        prerenderResumeDataCache,\n        renderResumeDataCache: null,\n        hmrRefreshHash,\n        captureOwnerStack: captureOwnerStackClient\n    };\n    let dynamicValidation = createDynamicValidationState();\n    try {\n        const prerender = require('react-dom/static').prerender;\n        let { prelude: unprocessedPrelude } = await prerenderAndAbortInSequentialTasks(()=>{\n            const pendingFinalClientResult = workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: nonce\n            }), {\n                signal: finalClientReactController.signal,\n                onError: (err, errorInfo)=>{\n                    if (isPrerenderInterruptedError(err) || finalClientReactController.signal.aborted) {\n                        const componentStack = errorInfo.componentStack;\n                        if (typeof componentStack === 'string') {\n                            trackAllowedDynamicAccess(workStore, componentStack, dynamicValidation, clientDynamicTracking);\n                        }\n                        return;\n                    }\n                    if (isReactLargeShellError(err)) {\n                        // TODO: Aggregate\n                        console.error(err);\n                        return undefined;\n                    }\n                    return getDigestForWellKnownError(err);\n                }\n            });\n            // The listener to abort our own render controller must be added after\n            // React has added its listener, to ensure that pending I/O is not\n            // aborted/rejected too early.\n            finalClientReactController.signal.addEventListener('abort', ()=>{\n                finalClientRenderController.abort();\n            }, {\n                once: true\n            });\n            return pendingFinalClientResult;\n        }, ()=>{\n            finalClientReactController.abort();\n        });\n        const { preludeIsEmpty } = await processPrelude(unprocessedPrelude);\n        resolveValidation(/*#__PURE__*/ _jsx(LogSafely, {\n            fn: throwIfDisallowedDynamic.bind(null, workStore, preludeIsEmpty ? PreludeState.Empty : PreludeState.Full, dynamicValidation, serverDynamicTracking)\n        }));\n    } catch (thrownValue) {\n        // Even if the root errors we still want to report any cache components errors\n        // that were discovered before the root errored.\n        let loggingFunction = throwIfDisallowedDynamic.bind(null, workStore, PreludeState.Errored, dynamicValidation, serverDynamicTracking);\n        if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n            // We don't normally log these errors because we are going to retry anyway but\n            // it can be useful for debugging Next.js itself to get visibility here when needed\n            const originalLoggingFunction = loggingFunction;\n            loggingFunction = ()=>{\n                console.error('During dynamic validation the root of the page errored. The next logged error is the thrown value. It may be a duplicate of errors reported during the normal development mode render.');\n                console.error(thrownValue);\n                originalLoggingFunction();\n            };\n        }\n        resolveValidation(/*#__PURE__*/ _jsx(LogSafely, {\n            fn: loggingFunction\n        }));\n    }\n}\nasync function LogSafely({ fn }) {\n    try {\n        await fn();\n    } catch  {}\n    return null;\n}\n/**\n * Determines whether we should generate static flight data.\n */ function shouldGenerateStaticFlightData(workStore) {\n    const { isStaticGeneration } = workStore;\n    if (!isStaticGeneration) return false;\n    return true;\n}\nasync function prerenderToStream(req, res, ctx, metadata, tree, fallbackRouteParams) {\n    // When prerendering formState is always null. We still include it\n    // because some shared APIs expect a formState value and this is slightly\n    // more explicit than making it an optional function argument\n    const formState = null;\n    const { assetPrefix, getDynamicParamFromSegment, implicitTags, nonce, pagePath, renderOpts, workStore } = ctx;\n    const { allowEmptyStaticShell = false, basePath, buildManifest, clientReferenceManifest, ComponentMod, crossOrigin, dev = false, experimental, isDebugDynamicAccesses, nextExport = false, onInstrumentationRequestError, page, reactMaxHeadersLength, subresourceIntegrityManifest } = renderOpts;\n    assertClientReferenceManifest(clientReferenceManifest);\n    const rootParams = getRootParams(tree, getDynamicParamFromSegment);\n    const { ServerInsertedHTMLProvider, renderServerInsertedHTML } = createServerInsertedHTML();\n    const getServerInsertedMetadata = createServerInsertedMetadata(nonce);\n    const tracingMetadata = getTracedMetadata(getTracer().getTracePropagationData(), experimental.clientTraceMetadata);\n    const polyfills = buildManifest.polyfillFiles.filter((polyfill)=>polyfill.endsWith('.js') && !polyfill.endsWith('.module.js')).map((polyfill)=>({\n            src: `${assetPrefix}/_next/${polyfill}${getAssetQueryString(ctx, false)}`,\n            integrity: subresourceIntegrityManifest == null ? void 0 : subresourceIntegrityManifest[polyfill],\n            crossOrigin,\n            noModule: true,\n            nonce\n        }));\n    const [preinitScripts, bootstrapScript] = getRequiredScripts(buildManifest, // Why is assetPrefix optional on renderOpts?\n    // @TODO make it default empty string on renderOpts and get rid of it from ctx\n    assetPrefix, crossOrigin, subresourceIntegrityManifest, getAssetQueryString(ctx, true), nonce, page);\n    const reactServerErrorsByDigest = new Map();\n    // We don't report errors during prerendering through our instrumentation hooks\n    const silenceLogger = !!experimental.isRoutePPREnabled;\n    function onHTMLRenderRSCError(err) {\n        return onInstrumentationRequestError == null ? void 0 : onInstrumentationRequestError(err, req, createErrorContext(ctx, 'react-server-components'));\n    }\n    const serverComponentsErrorHandler = createHTMLReactServerErrorHandler(dev, nextExport, reactServerErrorsByDigest, silenceLogger, onHTMLRenderRSCError);\n    function onHTMLRenderSSRError(err) {\n        return onInstrumentationRequestError == null ? void 0 : onInstrumentationRequestError(err, req, createErrorContext(ctx, 'server-rendering'));\n    }\n    const allCapturedErrors = [];\n    const htmlRendererErrorHandler = createHTMLErrorHandler(dev, nextExport, reactServerErrorsByDigest, allCapturedErrors, silenceLogger, onHTMLRenderSSRError);\n    let reactServerPrerenderResult = null;\n    const setMetadataHeader = (name)=>{\n        metadata.headers ??= {};\n        metadata.headers[name] = res.getHeader(name);\n    };\n    const setHeader = (name, value)=>{\n        res.setHeader(name, value);\n        setMetadataHeader(name);\n        return res;\n    };\n    const appendHeader = (name, value)=>{\n        if (Array.isArray(value)) {\n            value.forEach((item)=>{\n                res.appendHeader(name, item);\n            });\n        } else {\n            res.appendHeader(name, value);\n        }\n        setMetadataHeader(name);\n    };\n    const selectStaleTime = createSelectStaleTime(experimental);\n    let prerenderStore = null;\n    try {\n        if (experimental.cacheComponents) {\n            /**\n       * cacheComponents with PPR\n       *\n       * The general approach is to render the RSC stream first allowing any cache reads to resolve.\n       * Once we have settled all cache reads we restart the render and abort after a single Task.\n       *\n       * Unlike with the non PPR case we can't synchronously abort the render when a dynamic API is used\n       * during the initial render because we need to ensure all caches can be filled as part of the initial Task\n       * and a synchronous abort might prevent us from filling all caches.\n       *\n       * Once the render is complete we allow the SSR render to finish and use a combination of the postponed state\n       * and the reactServerIsDynamic value to determine how to treat the resulting render\n       */ // The prerender controller represents the lifetime of the prerender. It\n            // will be aborted when a task is complete or a synchronously aborting API\n            // is called. Notably, during prospective prerenders, this does not\n            // actually terminate the prerender itself, which will continue until all\n            // caches are filled.\n            const initialServerPrerenderController = new AbortController();\n            // This controller is used to abort the React prerender.\n            const initialServerReactController = new AbortController();\n            // This controller represents the lifetime of the React prerender. Its\n            // signal can be used for any I/O operation to abort the I/O and/or to\n            // reject, when prerendering aborts. This includes our own hanging\n            // promises for accessing request data, and for fetch calls. It might be\n            // replaced in the future by React.cacheSignal(). It's aborted after the\n            // React controller, so that no pending I/O can register abort listeners\n            // that are called before React's abort listener is called. This ensures\n            // that pending I/O is not rejected too early when aborting the prerender.\n            // Notably, during the prospective prerender, it is different from the\n            // prerender controller because we don't want to end the React prerender\n            // until all caches are filled.\n            const initialServerRenderController = new AbortController();\n            // The cacheSignal helps us track whether caches are still filling or we are ready\n            // to cut the render off.\n            const cacheSignal = new CacheSignal();\n            let resumeDataCache;\n            let renderResumeDataCache = null;\n            let prerenderResumeDataCache = null;\n            if (renderOpts.renderResumeDataCache) {\n                // If a prefilled immutable render resume data cache is provided, e.g.\n                // when prerendering an optional fallback shell after having prerendered\n                // pages with defined params, we use this instead of a prerender resume\n                // data cache.\n                resumeDataCache = renderResumeDataCache = renderOpts.renderResumeDataCache;\n            } else {\n                // Otherwise we create a new mutable prerender resume data cache.\n                resumeDataCache = prerenderResumeDataCache = createPrerenderResumeDataCache();\n            }\n            const initialServerPayloadPrerenderStore = {\n                type: 'prerender',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                // While this render signal isn't going to be used to abort a React render while getting the RSC payload\n                // various request data APIs bind to this controller to reject after completion.\n                renderSignal: initialServerRenderController.signal,\n                // When we generate the RSC payload we might abort this controller due to sync IO\n                // but we don't actually care about sync IO in this phase so we use a throw away controller\n                // that isn't connected to anything\n                controller: new AbortController(),\n                // During the initial prerender we need to track all cache reads to ensure\n                // we render long enough to fill every cache it is possible to visit during\n                // the final prerender.\n                cacheSignal,\n                dynamicTracking: null,\n                allowEmptyStaticShell,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache,\n                renderResumeDataCache,\n                hmrRefreshHash: undefined,\n                captureOwnerStack: undefined\n            };\n            // We're not going to use the result of this render because the only time it could be used\n            // is if it completes in a microtask and that's likely very rare for any non-trivial app\n            const initialServerPayload = await workUnitAsyncStorage.run(initialServerPayloadPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const initialServerPrerenderStore = prerenderStore = {\n                type: 'prerender',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                renderSignal: initialServerRenderController.signal,\n                controller: initialServerPrerenderController,\n                // During the initial prerender we need to track all cache reads to ensure\n                // we render long enough to fill every cache it is possible to visit during\n                // the final prerender.\n                cacheSignal,\n                dynamicTracking: null,\n                allowEmptyStaticShell,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache,\n                renderResumeDataCache,\n                hmrRefreshHash: undefined,\n                captureOwnerStack: undefined\n            };\n            const pendingInitialServerResult = workUnitAsyncStorage.run(initialServerPrerenderStore, ComponentMod.prerender, initialServerPayload, clientReferenceManifest.clientModules, {\n                filterStackFrame,\n                onError: (err)=>{\n                    const digest = getDigestForWellKnownError(err);\n                    if (digest) {\n                        return digest;\n                    }\n                    if (isReactLargeShellError(err)) {\n                        // TODO: Aggregate\n                        console.error(err);\n                        return undefined;\n                    }\n                    if (initialServerPrerenderController.signal.aborted) {\n                        // The render aborted before this error was handled which indicates\n                        // the error is caused by unfinished components within the render\n                        return;\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                },\n                // we don't care to track postpones during the prospective render because we need\n                // to always do a final render anyway\n                onPostpone: undefined,\n                // We don't want to stop rendering until the cacheSignal is complete so we pass\n                // a different signal to this render call than is used by dynamic APIs to signify\n                // transitioning out of the prerender environment\n                signal: initialServerReactController.signal\n            });\n            // The listener to abort our own render controller must be added after\n            // React has added its listener, to ensure that pending I/O is not\n            // aborted/rejected too early.\n            initialServerReactController.signal.addEventListener('abort', ()=>{\n                initialServerRenderController.abort();\n            }, {\n                once: true\n            });\n            // Wait for all caches to be finished filling and for async imports to resolve\n            trackPendingModules(cacheSignal);\n            await cacheSignal.cacheReady();\n            initialServerReactController.abort();\n            // We don't need to continue the prerender process if we already\n            // detected invalid dynamic usage in the initial prerender phase.\n            if (workStore.invalidDynamicUsageError) {\n                logDisallowedDynamicError(workStore, workStore.invalidDynamicUsageError);\n                throw new StaticGenBailoutError();\n            }\n            let initialServerResult;\n            try {\n                initialServerResult = await createReactServerPrerenderResult(pendingInitialServerResult);\n            } catch (err) {\n                if (initialServerReactController.signal.aborted || initialServerPrerenderController.signal.aborted) {\n                // These are expected errors that might error the prerender. we ignore them.\n                } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                    // We don't normally log these errors because we are going to retry anyway but\n                    // it can be useful for debugging Next.js itself to get visibility here when needed\n                    printDebugThrownValueForProspectiveRender(err, workStore.route);\n                }\n            }\n            if (initialServerResult) {\n                const initialClientPrerenderController = new AbortController();\n                const initialClientReactController = new AbortController();\n                const initialClientRenderController = new AbortController();\n                const initialClientPrerenderStore = {\n                    type: 'prerender-client',\n                    phase: 'render',\n                    rootParams,\n                    fallbackRouteParams,\n                    implicitTags,\n                    renderSignal: initialClientRenderController.signal,\n                    controller: initialClientPrerenderController,\n                    // For HTML Generation the only cache tracked activity\n                    // is module loading, which has it's own cache signal\n                    cacheSignal: null,\n                    dynamicTracking: null,\n                    allowEmptyStaticShell,\n                    revalidate: INFINITE_CACHE,\n                    expire: INFINITE_CACHE,\n                    stale: INFINITE_CACHE,\n                    tags: [\n                        ...implicitTags.tags\n                    ],\n                    prerenderResumeDataCache,\n                    renderResumeDataCache,\n                    hmrRefreshHash: undefined,\n                    captureOwnerStack: undefined\n                };\n                const prerender = require('react-dom/static').prerender;\n                const pendingInitialClientResult = workUnitAsyncStorage.run(initialClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: initialServerResult.asUnclosingStream(),\n                    preinitScripts: preinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    nonce: nonce\n                }), {\n                    signal: initialClientReactController.signal,\n                    onError: (err)=>{\n                        const digest = getDigestForWellKnownError(err);\n                        if (digest) {\n                            return digest;\n                        }\n                        if (isReactLargeShellError(err)) {\n                            // TODO: Aggregate\n                            console.error(err);\n                            return undefined;\n                        }\n                        if (initialClientReactController.signal.aborted) {\n                        // These are expected errors that might error the prerender. we ignore them.\n                        } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                            // We don't normally log these errors because we are going to retry anyway but\n                            // it can be useful for debugging Next.js itself to get visibility here when needed\n                            printDebugThrownValueForProspectiveRender(err, workStore.route);\n                        }\n                    },\n                    bootstrapScripts: [\n                        bootstrapScript\n                    ]\n                });\n                // The listener to abort our own render controller must be added after\n                // React has added its listener, to ensure that pending I/O is not\n                // aborted/rejected too early.\n                initialClientReactController.signal.addEventListener('abort', ()=>{\n                    initialClientRenderController.abort();\n                }, {\n                    once: true\n                });\n                pendingInitialClientResult.catch((err)=>{\n                    if (initialClientReactController.signal.aborted || isPrerenderInterruptedError(err)) {\n                    // These are expected errors that might error the prerender. we ignore them.\n                    } else if (process.env.NEXT_DEBUG_BUILD || process.env.__NEXT_VERBOSE_LOGGING) {\n                        // We don't normally log these errors because we are going to retry anyway but\n                        // it can be useful for debugging Next.js itself to get visibility here when needed\n                        printDebugThrownValueForProspectiveRender(err, workStore.route);\n                    }\n                });\n                // This is mostly needed for dynamic `import()`s in client components.\n                // Promises passed to client were already awaited above (assuming that they came from cached functions)\n                trackPendingModules(cacheSignal);\n                await cacheSignal.cacheReady();\n                initialClientReactController.abort();\n            }\n            const finalServerReactController = new AbortController();\n            const finalServerRenderController = new AbortController();\n            const finalServerPayloadPrerenderStore = {\n                type: 'prerender',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                // While this render signal isn't going to be used to abort a React render while getting the RSC payload\n                // various request data APIs bind to this controller to reject after completion.\n                renderSignal: finalServerRenderController.signal,\n                // When we generate the RSC payload we might abort this controller due to sync IO\n                // but we don't actually care about sync IO in this phase so we use a throw away controller\n                // that isn't connected to anything\n                controller: new AbortController(),\n                // All caches we could read must already be filled so no tracking is necessary\n                cacheSignal: null,\n                dynamicTracking: null,\n                allowEmptyStaticShell,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache,\n                renderResumeDataCache,\n                hmrRefreshHash: undefined,\n                captureOwnerStack: undefined\n            };\n            const finalAttemptRSCPayload = await workUnitAsyncStorage.run(finalServerPayloadPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const serverDynamicTracking = createDynamicTrackingState(isDebugDynamicAccesses);\n            let serverIsDynamic = false;\n            const finalServerPrerenderStore = prerenderStore = {\n                type: 'prerender',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                renderSignal: finalServerRenderController.signal,\n                controller: finalServerReactController,\n                // All caches we could read must already be filled so no tracking is necessary\n                cacheSignal: null,\n                dynamicTracking: serverDynamicTracking,\n                allowEmptyStaticShell,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache,\n                renderResumeDataCache,\n                hmrRefreshHash: undefined,\n                captureOwnerStack: undefined\n            };\n            let prerenderIsPending = true;\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResult(prerenderAndAbortInSequentialTasks(async ()=>{\n                const pendingPrerenderResult = workUnitAsyncStorage.run(// The store to scope\n                finalServerPrerenderStore, // The function to run\n                ComponentMod.prerender, // ... the arguments for the function to run\n                finalAttemptRSCPayload, clientReferenceManifest.clientModules, {\n                    filterStackFrame,\n                    onError: (err)=>{\n                        return serverComponentsErrorHandler(err);\n                    },\n                    signal: finalServerReactController.signal\n                });\n                // The listener to abort our own render controller must be added\n                // after React has added its listener, to ensure that pending I/O\n                // is not aborted/rejected too early.\n                finalServerReactController.signal.addEventListener('abort', ()=>{\n                    finalServerRenderController.abort();\n                }, {\n                    once: true\n                });\n                const prerenderResult = await pendingPrerenderResult;\n                prerenderIsPending = false;\n                return prerenderResult;\n            }, ()=>{\n                if (finalServerReactController.signal.aborted) {\n                    // If the server controller is already aborted we must have called something\n                    // that required aborting the prerender synchronously such as with new Date()\n                    serverIsDynamic = true;\n                    return;\n                }\n                if (prerenderIsPending) {\n                    // If prerenderIsPending then we have blocked for longer than a Task and we assume\n                    // there is something unfinished.\n                    serverIsDynamic = true;\n                }\n                finalServerReactController.abort();\n            }));\n            const clientDynamicTracking = createDynamicTrackingState(isDebugDynamicAccesses);\n            const finalClientReactController = new AbortController();\n            const finalClientRenderController = new AbortController();\n            const finalClientPrerenderStore = {\n                type: 'prerender-client',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                renderSignal: finalClientRenderController.signal,\n                controller: finalClientReactController,\n                // No APIs require a cacheSignal through the workUnitStore during the HTML prerender\n                cacheSignal: null,\n                dynamicTracking: clientDynamicTracking,\n                allowEmptyStaticShell,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache,\n                renderResumeDataCache,\n                hmrRefreshHash: undefined,\n                captureOwnerStack: undefined\n            };\n            let dynamicValidation = createDynamicValidationState();\n            const prerender = require('react-dom/static').prerender;\n            let { prelude: unprocessedPrelude, postponed } = await prerenderAndAbortInSequentialTasks(()=>{\n                const pendingFinalClientResult = workUnitAsyncStorage.run(finalClientPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                    reactServerStream: reactServerResult.asUnclosingStream(),\n                    preinitScripts: preinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    nonce: nonce\n                }), {\n                    signal: finalClientReactController.signal,\n                    onError: (err, errorInfo)=>{\n                        if (isPrerenderInterruptedError(err) || finalClientReactController.signal.aborted) {\n                            const componentStack = errorInfo.componentStack;\n                            if (typeof componentStack === 'string') {\n                                trackAllowedDynamicAccess(workStore, componentStack, dynamicValidation, clientDynamicTracking);\n                            }\n                            return;\n                        }\n                        return htmlRendererErrorHandler(err, errorInfo);\n                    },\n                    onHeaders: (headers)=>{\n                        headers.forEach((value, key)=>{\n                            appendHeader(key, value);\n                        });\n                    },\n                    maxHeadersLength: reactMaxHeadersLength,\n                    bootstrapScripts: [\n                        bootstrapScript\n                    ]\n                });\n                // The listener to abort our own render controller must be added\n                // after React has added its listener, to ensure that pending I/O is\n                // not aborted/rejected too early.\n                finalClientReactController.signal.addEventListener('abort', ()=>{\n                    finalClientRenderController.abort();\n                }, {\n                    once: true\n                });\n                return pendingFinalClientResult;\n            }, ()=>{\n                finalClientReactController.abort();\n            });\n            const { prelude, preludeIsEmpty } = await processPrelude(unprocessedPrelude);\n            // If we've disabled throwing on empty static shell, then we don't need to\n            // track any dynamic access that occurs above the suspense boundary because\n            // we'll do so in the route shell.\n            if (!allowEmptyStaticShell) {\n                throwIfDisallowedDynamic(workStore, preludeIsEmpty ? PreludeState.Empty : PreludeState.Full, dynamicValidation, serverDynamicTracking);\n            }\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath,\n                tracingMetadata: tracingMetadata\n            });\n            const flightData = await streamToBuffer(reactServerResult.asStream());\n            metadata.flightData = flightData;\n            metadata.segmentData = await collectSegmentData(flightData, finalServerPrerenderStore, ComponentMod, renderOpts);\n            // If there are fallback route params, the RSC data is inherently dynamic\n            // today because it's encoded into the flight router state. Until we can\n            // move the fallback route params out of the flight router state, we need\n            // to always perform a dynamic resume after the static prerender.\n            const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n            if (serverIsDynamic || hasFallbackRouteParams) {\n                // Dynamic case\n                // We will always need to perform a \"resume\" render of some kind when this route is accessed\n                // because the RSC data itself is dynamic. We determine if there are any HTML holes or not\n                // but generally this is a \"partial\" prerender in that there will be a per-request compute\n                // concatenated to the static shell.\n                if (postponed != null) {\n                    // Dynamic HTML case\n                    metadata.postponed = await getDynamicHTMLPostponedState(postponed, preludeIsEmpty ? DynamicHTMLPreludeState.Empty : DynamicHTMLPreludeState.Full, fallbackRouteParams, resumeDataCache);\n                } else {\n                    // Dynamic Data case\n                    metadata.postponed = await getDynamicDataPostponedState(resumeDataCache);\n                }\n                reactServerResult.consume();\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: finalServerPrerenderStore.revalidate,\n                    collectedExpire: finalServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(finalServerPrerenderStore.stale),\n                    collectedTags: finalServerPrerenderStore.tags,\n                    renderResumeDataCache: createRenderResumeDataCache(resumeDataCache)\n                };\n            } else {\n                // Static case\n                // We will not perform resumption per request. The result can be served statically to the requestor\n                // and if there was anything dynamic it will only be rendered in the browser.\n                if (workStore.forceDynamic) {\n                    throw Object.defineProperty(new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E598\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                let htmlStream = prelude;\n                if (postponed != null) {\n                    // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                    // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                    const resume = require('react-dom/server').resume;\n                    // We don't actually want to render anything so we just pass a stream\n                    // that never resolves. The resume call is going to abort immediately anyway\n                    const foreverStream = new ReadableStream();\n                    const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                        reactServerStream: foreverStream,\n                        preinitScripts: ()=>{},\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        nonce: nonce\n                    }), JSON.parse(JSON.stringify(postponed)), {\n                        signal: createRenderInBrowserAbortSignal(),\n                        onError: htmlRendererErrorHandler,\n                        nonce\n                    });\n                    // First we write everything from the prerender, then we write everything from the aborted resume render\n                    htmlStream = chainStreams(prelude, resumeStream);\n                }\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueStaticPrerender(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata,\n                        isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n                        buildId: ctx.workStore.buildId\n                    }),\n                    dynamicAccess: consumeDynamicAccess(serverDynamicTracking, clientDynamicTracking),\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: finalServerPrerenderStore.revalidate,\n                    collectedExpire: finalServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(finalServerPrerenderStore.stale),\n                    collectedTags: finalServerPrerenderStore.tags,\n                    renderResumeDataCache: createRenderResumeDataCache(resumeDataCache)\n                };\n            }\n        } else if (experimental.isRoutePPREnabled) {\n            // We're statically generating with PPR and need to do dynamic tracking\n            let dynamicTracking = createDynamicTrackingState(isDebugDynamicAccesses);\n            const prerenderResumeDataCache = createPrerenderResumeDataCache();\n            const reactServerPrerenderStore = prerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache\n            };\n            const RSCPayload = await workUnitAsyncStorage.run(reactServerPrerenderStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(reactServerPrerenderStore, ComponentMod.renderToReadableStream, // ... the arguments for the function to run\n            RSCPayload, clientReferenceManifest.clientModules, {\n                filterStackFrame,\n                onError: serverComponentsErrorHandler\n            }));\n            const ssrPrerenderStore = {\n                type: 'prerender-ppr',\n                phase: 'render',\n                rootParams,\n                fallbackRouteParams,\n                implicitTags,\n                dynamicTracking,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ],\n                prerenderResumeDataCache\n            };\n            const prerender = require('react-dom/static').prerender;\n            const { prelude: unprocessedPrelude, postponed } = await workUnitAsyncStorage.run(ssrPrerenderStore, prerender, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                onHeaders: (headers)=>{\n                    headers.forEach((value, key)=>{\n                        appendHeader(key, value);\n                    });\n                },\n                maxHeadersLength: reactMaxHeadersLength,\n                bootstrapScripts: [\n                    bootstrapScript\n                ]\n            });\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath,\n                tracingMetadata: tracingMetadata\n            });\n            // After awaiting here we've waited for the entire RSC render to complete. Crucially this means\n            // that when we detect whether we've used dynamic APIs below we know we'll have picked up even\n            // parts of the React Server render that might not be used in the SSR render.\n            const flightData = await streamToBuffer(reactServerResult.asStream());\n            if (shouldGenerateStaticFlightData(workStore)) {\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, ssrPrerenderStore, ComponentMod, renderOpts);\n            }\n            const { prelude, preludeIsEmpty } = await processPrelude(unprocessedPrelude);\n            /**\n       * When prerendering there are three outcomes to consider\n       *\n       *   Dynamic HTML:      The prerender has dynamic holes (caused by using Next.js Dynamic Rendering APIs)\n       *                      We will need to resume this result when requests are handled and we don't include\n       *                      any server inserted HTML or inlined flight data in the static HTML\n       *\n       *   Dynamic Data:      The prerender has no dynamic holes but dynamic APIs were used. We will not\n       *                      resume this render when requests are handled but we will generate new inlined\n       *                      flight data since it is dynamic and differences may end up reconciling on the client\n       *\n       *   Static:            The prerender has no dynamic holes and no dynamic APIs were used. We statically encode\n       *                      all server inserted HTML and flight data\n       */ // First we check if we have any dynamic holes in our HTML prerender\n            if (accessedDynamicData(dynamicTracking.dynamicAccesses)) {\n                if (postponed != null) {\n                    // Dynamic HTML case.\n                    metadata.postponed = await getDynamicHTMLPostponedState(postponed, preludeIsEmpty ? DynamicHTMLPreludeState.Empty : DynamicHTMLPreludeState.Full, fallbackRouteParams, prerenderResumeDataCache);\n                } else {\n                    // Dynamic Data case.\n                    metadata.postponed = await getDynamicDataPostponedState(prerenderResumeDataCache);\n                }\n                // Regardless of whether this is the Dynamic HTML or Dynamic Data case we need to ensure we include\n                // server inserted html in the static response because the html that is part of the prerender may depend on it\n                // It is possible in the set of stream transforms for Dynamic HTML vs Dynamic Data may differ but currently both states\n                // require the same set so we unify the code path here\n                reactServerResult.consume();\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else if (fallbackRouteParams && fallbackRouteParams.size > 0) {\n                // Rendering the fallback case.\n                metadata.postponed = await getDynamicDataPostponedState(prerenderResumeDataCache);\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueDynamicPrerender(prelude, {\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            } else {\n                // Static case\n                // We still have not used any dynamic APIs. At this point we can produce an entirely static prerender response\n                if (workStore.forceDynamic) {\n                    throw Object.defineProperty(new StaticGenBailoutError('Invariant: a Page with `dynamic = \"force-dynamic\"` did not trigger the dynamic pathway. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E598\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                let htmlStream = prelude;\n                if (postponed != null) {\n                    // We postponed but nothing dynamic was used. We resume the render now and immediately abort it\n                    // so we can set all the postponed boundaries to client render mode before we store the HTML response\n                    const resume = require('react-dom/server').resume;\n                    // We don't actually want to render anything so we just pass a stream\n                    // that never resolves. The resume call is going to abort immediately anyway\n                    const foreverStream = new ReadableStream();\n                    const resumeStream = await resume(/*#__PURE__*/ _jsx(App, {\n                        reactServerStream: foreverStream,\n                        preinitScripts: ()=>{},\n                        clientReferenceManifest: clientReferenceManifest,\n                        ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                        nonce: nonce\n                    }), JSON.parse(JSON.stringify(postponed)), {\n                        signal: createRenderInBrowserAbortSignal(),\n                        onError: htmlRendererErrorHandler,\n                        nonce\n                    });\n                    // First we write everything from the prerender, then we write everything from the aborted resume render\n                    htmlStream = chainStreams(prelude, resumeStream);\n                }\n                return {\n                    digestErrorsMap: reactServerErrorsByDigest,\n                    ssrErrors: allCapturedErrors,\n                    stream: await continueStaticPrerender(htmlStream, {\n                        inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                        getServerInsertedHTML,\n                        getServerInsertedMetadata,\n                        isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n                        buildId: ctx.workStore.buildId\n                    }),\n                    dynamicAccess: dynamicTracking.dynamicAccesses,\n                    // TODO: Should this include the SSR pass?\n                    collectedRevalidate: reactServerPrerenderStore.revalidate,\n                    collectedExpire: reactServerPrerenderStore.expire,\n                    collectedStale: selectStaleTime(reactServerPrerenderStore.stale),\n                    collectedTags: reactServerPrerenderStore.tags\n                };\n            }\n        } else {\n            const prerenderLegacyStore = prerenderStore = {\n                type: 'prerender-legacy',\n                phase: 'render',\n                rootParams,\n                implicitTags,\n                revalidate: INFINITE_CACHE,\n                expire: INFINITE_CACHE,\n                stale: INFINITE_CACHE,\n                tags: [\n                    ...implicitTags.tags\n                ]\n            };\n            // This is a regular static generation. We don't do dynamic tracking because we rely on\n            // the old-school dynamic error handling to bail out of static generation\n            const RSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getRSCPayload, tree, ctx, res.statusCode === 404);\n            const reactServerResult = reactServerPrerenderResult = await createReactServerPrerenderResultFromRender(workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, RSCPayload, clientReferenceManifest.clientModules, {\n                filterStackFrame,\n                onError: serverComponentsErrorHandler\n            }));\n            const renderToReadableStream = require('react-dom/server').renderToReadableStream;\n            const htmlStream = await workUnitAsyncStorage.run(prerenderLegacyStore, renderToReadableStream, /*#__PURE__*/ _jsx(App, {\n                reactServerStream: reactServerResult.asUnclosingStream(),\n                preinitScripts: preinitScripts,\n                clientReferenceManifest: clientReferenceManifest,\n                ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                nonce: nonce\n            }), {\n                onError: htmlRendererErrorHandler,\n                nonce,\n                bootstrapScripts: [\n                    bootstrapScript\n                ]\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                const flightData = await streamToBuffer(reactServerResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, prerenderLegacyStore, ComponentMod, renderOpts);\n            }\n            const getServerInsertedHTML = makeGetServerInsertedHTML({\n                polyfills,\n                renderServerInsertedHTML,\n                serverCapturedErrors: allCapturedErrors,\n                basePath,\n                tracingMetadata: tracingMetadata\n            });\n            return {\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(htmlStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(reactServerResult.consumeAsStream(), nonce, formState),\n                    isStaticGeneration: true,\n                    isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n                    buildId: ctx.workStore.buildId,\n                    getServerInsertedHTML,\n                    getServerInsertedMetadata\n                }),\n                // TODO: Should this include the SSR pass?\n                collectedRevalidate: prerenderLegacyStore.revalidate,\n                collectedExpire: prerenderLegacyStore.expire,\n                collectedStale: selectStaleTime(prerenderLegacyStore.stale),\n                collectedTags: prerenderLegacyStore.tags\n            };\n        }\n    } catch (err) {\n        if (isStaticGenBailoutError(err) || typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string' && err.message.includes('https://nextjs.org/docs/advanced-features/static-html-export')) {\n            // Ensure that \"next dev\" prints the red error overlay\n            throw err;\n        }\n        // If this is a static generation error, we need to throw it so that it\n        // can be handled by the caller if we're in static generation mode.\n        if (isDynamicServerError(err)) {\n            throw err;\n        }\n        // If a bailout made it to this point, it means it wasn't wrapped inside\n        // a suspense boundary.\n        const shouldBailoutToCSR = isBailoutToCSRError(err);\n        if (shouldBailoutToCSR) {\n            const stack = getStackWithoutErrorMessage(err);\n            error(`${err.reason} should be wrapped in a suspense boundary at page \"${pagePath}\". Read more: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\\n${stack}`);\n            throw err;\n        }\n        // If we errored when we did not have an RSC stream to read from. This is\n        // not just a render error, we need to throw early.\n        if (reactServerPrerenderResult === null) {\n            throw err;\n        }\n        let errorType;\n        if (isHTTPAccessFallbackError(err)) {\n            res.statusCode = getAccessFallbackHTTPStatus(err);\n            metadata.statusCode = res.statusCode;\n            errorType = getAccessFallbackErrorTypeByStatus(res.statusCode);\n        } else if (isRedirectError(err)) {\n            errorType = 'redirect';\n            res.statusCode = getRedirectStatusCodeFromError(err);\n            metadata.statusCode = res.statusCode;\n            const redirectUrl = addPathPrefix(getURLFromRedirectError(err), basePath);\n            setHeader('location', redirectUrl);\n        } else if (!shouldBailoutToCSR) {\n            res.statusCode = 500;\n            metadata.statusCode = res.statusCode;\n        }\n        const [errorPreinitScripts, errorBootstrapScript] = getRequiredScripts(buildManifest, assetPrefix, crossOrigin, subresourceIntegrityManifest, getAssetQueryString(ctx, false), nonce, '/_not-found/page');\n        const prerenderLegacyStore = prerenderStore = {\n            type: 'prerender-legacy',\n            phase: 'render',\n            rootParams,\n            implicitTags: implicitTags,\n            revalidate: typeof (prerenderStore == null ? void 0 : prerenderStore.revalidate) !== 'undefined' ? prerenderStore.revalidate : INFINITE_CACHE,\n            expire: typeof (prerenderStore == null ? void 0 : prerenderStore.expire) !== 'undefined' ? prerenderStore.expire : INFINITE_CACHE,\n            stale: typeof (prerenderStore == null ? void 0 : prerenderStore.stale) !== 'undefined' ? prerenderStore.stale : INFINITE_CACHE,\n            tags: [\n                ...(prerenderStore == null ? void 0 : prerenderStore.tags) || implicitTags.tags\n            ]\n        };\n        const errorRSCPayload = await workUnitAsyncStorage.run(prerenderLegacyStore, getErrorRSCPayload, tree, ctx, reactServerErrorsByDigest.has(err.digest) ? undefined : err, errorType);\n        const errorServerStream = workUnitAsyncStorage.run(prerenderLegacyStore, ComponentMod.renderToReadableStream, errorRSCPayload, clientReferenceManifest.clientModules, {\n            filterStackFrame,\n            onError: serverComponentsErrorHandler\n        });\n        try {\n            // TODO we should use the same prerender semantics that we initially rendered\n            // with in this case too. The only reason why this is ok atm is because it's essentially\n            // an empty page and no user code runs.\n            const fizzStream = await workUnitAsyncStorage.run(prerenderLegacyStore, renderToInitialFizzStream, {\n                ReactDOMServer: require('react-dom/server'),\n                element: /*#__PURE__*/ _jsx(ErrorApp, {\n                    reactServerStream: errorServerStream,\n                    ServerInsertedHTMLProvider: ServerInsertedHTMLProvider,\n                    preinitScripts: errorPreinitScripts,\n                    clientReferenceManifest: clientReferenceManifest,\n                    nonce: nonce\n                }),\n                streamOptions: {\n                    nonce,\n                    // Include hydration scripts in the HTML\n                    bootstrapScripts: [\n                        errorBootstrapScript\n                    ],\n                    formState\n                }\n            });\n            if (shouldGenerateStaticFlightData(workStore)) {\n                const flightData = await streamToBuffer(reactServerPrerenderResult.asStream());\n                metadata.flightData = flightData;\n                metadata.segmentData = await collectSegmentData(flightData, prerenderLegacyStore, ComponentMod, renderOpts);\n            }\n            // This is intentionally using the readable datastream from the main\n            // render rather than the flight data from the error page render\n            const flightStream = reactServerPrerenderResult.consumeAsStream();\n            return {\n                // Returning the error that was thrown so it can be used to handle\n                // the response in the caller.\n                digestErrorsMap: reactServerErrorsByDigest,\n                ssrErrors: allCapturedErrors,\n                stream: await continueFizzStream(fizzStream, {\n                    inlinedDataStream: createInlinedDataReadableStream(flightStream, nonce, formState),\n                    isStaticGeneration: true,\n                    isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,\n                    buildId: ctx.workStore.buildId,\n                    getServerInsertedHTML: makeGetServerInsertedHTML({\n                        polyfills,\n                        renderServerInsertedHTML,\n                        serverCapturedErrors: [],\n                        basePath,\n                        tracingMetadata: tracingMetadata\n                    }),\n                    getServerInsertedMetadata,\n                    validateRootLayout: dev\n                }),\n                dynamicAccess: null,\n                collectedRevalidate: prerenderStore !== null ? prerenderStore.revalidate : INFINITE_CACHE,\n                collectedExpire: prerenderStore !== null ? prerenderStore.expire : INFINITE_CACHE,\n                collectedStale: selectStaleTime(prerenderStore !== null ? prerenderStore.stale : INFINITE_CACHE),\n                collectedTags: prerenderStore !== null ? prerenderStore.tags : null\n            };\n        } catch (finalErr) {\n            if (process.env.NODE_ENV === 'development' && isHTTPAccessFallbackError(finalErr)) {\n                const { bailOnRootNotFound } = require('../../client/components/dev-root-http-access-fallback-boundary');\n                bailOnRootNotFound();\n            }\n            throw finalErr;\n        }\n    }\n}\nconst getGlobalErrorStyles = async (tree, ctx)=>{\n    const { modules: { 'global-error': globalErrorModule } } = parseLoaderTree(tree);\n    const GlobalErrorComponent = ctx.componentMod.GlobalError;\n    let globalErrorStyles;\n    if (globalErrorModule) {\n        const [, styles] = await createComponentStylesAndScripts({\n            ctx,\n            filePath: globalErrorModule[1],\n            getComponent: globalErrorModule[0],\n            injectedCSS: new Set(),\n            injectedJS: new Set()\n        });\n        globalErrorStyles = styles;\n    }\n    if (ctx.renderOpts.dev) {\n        const dir = (process.env.NEXT_RUNTIME === 'edge' ? process.env.__NEXT_EDGE_PROJECT_DIR : ctx.renderOpts.dir) || '';\n        const globalErrorModulePath = normalizeConventionFilePath(dir, globalErrorModule == null ? void 0 : globalErrorModule[1]);\n        if (ctx.renderOpts.devtoolSegmentExplorer && globalErrorModulePath) {\n            const SegmentViewNode = ctx.componentMod.SegmentViewNode;\n            globalErrorStyles = // This will be rendered next to GlobalError component under ErrorBoundary,\n            // it requires a key to avoid React warning about duplicate keys.\n            /*#__PURE__*/ _jsx(SegmentViewNode, {\n                type: \"global-error\",\n                pagePath: globalErrorModulePath,\n                children: globalErrorStyles\n            }, \"ge-svn\");\n        }\n    }\n    return {\n        GlobalError: GlobalErrorComponent,\n        styles: globalErrorStyles\n    };\n};\nfunction createSelectStaleTime(experimental) {\n    return (stale)=>{\n        var _experimental_staleTimes;\n        return stale === INFINITE_CACHE && typeof ((_experimental_staleTimes = experimental.staleTimes) == null ? void 0 : _experimental_staleTimes.static) === 'number' ? experimental.staleTimes.static : stale;\n    };\n}\nasync function collectSegmentData(fullPageDataBuffer, prerenderStore, ComponentMod, renderOpts) {\n    // Per-segment prefetch data\n    //\n    // All of the segments for a page are generated simultaneously, including\n    // during revalidations. This is to ensure consistency, because it's\n    // possible for a mismatch between a layout and page segment can cause the\n    // client to error during rendering. We want to preserve the ability of the\n    // client to recover from such a mismatch by re-requesting all the segments\n    // to get a consistent view of the page.\n    //\n    // For performance, we reuse the Flight output that was created when\n    // generating the initial page HTML. The Flight stream for the whole page is\n    // decomposed into a separate stream per segment.\n    const clientReferenceManifest = renderOpts.clientReferenceManifest;\n    if (!clientReferenceManifest || // Do not generate per-segment data unless the experimental Segment Cache\n    // flag is enabled.\n    //\n    // We also skip generating segment data if flag is set to \"client-only\",\n    // rather than true. (The \"client-only\" option only affects the behavior of\n    // the client-side implementation; per-segment prefetches are intentionally\n    // disabled in that configuration).\n    renderOpts.experimental.clientSegmentCache !== true) {\n        return;\n    }\n    // Manifest passed to the Flight client for reading the full-page Flight\n    // stream. Based off similar code in use-cache-wrapper.ts.\n    const isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\n    const serverConsumerManifest = {\n        // moduleLoading must be null because we don't want to trigger preloads of ClientReferences\n        // to be added to the consumer. Instead, we'll wait for any ClientReference to be emitted\n        // which themselves will handle the preloading.\n        moduleLoading: null,\n        moduleMap: isEdgeRuntime ? clientReferenceManifest.edgeRscModuleMapping : clientReferenceManifest.rscModuleMapping,\n        serverModuleMap: getServerModuleMap()\n    };\n    const staleTime = prerenderStore.stale;\n    return await ComponentMod.collectSegmentData(renderOpts.experimental.clientParamParsing, fullPageDataBuffer, staleTime, clientReferenceManifest.clientModules, serverConsumerManifest);\n}\n\n//# sourceMappingURL=app-render.js.map","import MODERN_BROWSERSLIST_TARGET from './modern-browserslist-target'\n\nexport { MODERN_BROWSERSLIST_TARGET }\n\nexport type ValueOf<T> = Required<T>[keyof T]\n\nexport const COMPILER_NAMES = {\n  client: 'client',\n  server: 'server',\n  edgeServer: 'edge-server',\n} as const\n\nexport type CompilerNameValues = ValueOf<typeof COMPILER_NAMES>\n\nexport enum AdapterOutputType {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `PRERENDER` represents an ISR enabled route that might\n   * have a seeded cache entry or fallback generated during build\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * `STATIC_FILE` represents a static file (ie /_next/static)\n   */\n  STATIC_FILE = 'STATIC_FILE',\n\n  /**\n   * `MIDDLEWARE` represents the middleware output if present\n   */\n  MIDDLEWARE = 'MIDDLEWARE',\n}\n\nexport const COMPILER_INDEXES: {\n  [compilerKey in CompilerNameValues]: number\n} = {\n  [COMPILER_NAMES.client]: 0,\n  [COMPILER_NAMES.server]: 1,\n  [COMPILER_NAMES.edgeServer]: 2,\n} as const\n\nexport const UNDERSCORE_NOT_FOUND_ROUTE = '/_not-found'\nexport const UNDERSCORE_NOT_FOUND_ROUTE_ENTRY = `${UNDERSCORE_NOT_FOUND_ROUTE}/page`\nexport const PHASE_EXPORT = 'phase-export'\nexport const PHASE_PRODUCTION_BUILD = 'phase-production-build'\nexport const PHASE_PRODUCTION_SERVER = 'phase-production-server'\nexport const PHASE_DEVELOPMENT_SERVER = 'phase-development-server'\nexport const PHASE_TEST = 'phase-test'\nexport const PHASE_INFO = 'phase-info'\nexport const PAGES_MANIFEST = 'pages-manifest.json'\nexport const WEBPACK_STATS = 'webpack-stats.json'\nexport const APP_PATHS_MANIFEST = 'app-paths-manifest.json'\nexport const APP_PATH_ROUTES_MANIFEST = 'app-path-routes-manifest.json'\nexport const BUILD_MANIFEST = 'build-manifest.json'\nexport const APP_BUILD_MANIFEST = 'app-build-manifest.json'\nexport const FUNCTIONS_CONFIG_MANIFEST = 'functions-config-manifest.json'\nexport const SUBRESOURCE_INTEGRITY_MANIFEST = 'subresource-integrity-manifest'\nexport const NEXT_FONT_MANIFEST = 'next-font-manifest'\nexport const EXPORT_MARKER = 'export-marker.json'\nexport const EXPORT_DETAIL = 'export-detail.json'\nexport const PRERENDER_MANIFEST = 'prerender-manifest.json'\nexport const ROUTES_MANIFEST = 'routes-manifest.json'\nexport const IMAGES_MANIFEST = 'images-manifest.json'\nexport const SERVER_FILES_MANIFEST = 'required-server-files.json'\nexport const DEV_CLIENT_PAGES_MANIFEST = '_devPagesManifest.json'\nexport const MIDDLEWARE_MANIFEST = 'middleware-manifest.json'\nexport const TURBOPACK_CLIENT_MIDDLEWARE_MANIFEST =\n  '_clientMiddlewareManifest.json'\nexport const TURBOPACK_CLIENT_BUILD_MANIFEST = 'client-build-manifest.json'\nexport const DEV_CLIENT_MIDDLEWARE_MANIFEST = '_devMiddlewareManifest.json'\nexport const REACT_LOADABLE_MANIFEST = 'react-loadable-manifest.json'\nexport const SERVER_DIRECTORY = 'server'\nexport const CONFIG_FILES = [\n  'next.config.js',\n  'next.config.mjs',\n  'next.config.ts',\n]\nexport const BUILD_ID_FILE = 'BUILD_ID'\nexport const BLOCKED_PAGES = ['/_document', '/_app', '/_error']\nexport const CLIENT_PUBLIC_FILES_PATH = 'public'\nexport const CLIENT_STATIC_FILES_PATH = 'static'\nexport const STRING_LITERAL_DROP_BUNDLE = '__NEXT_DROP_CLIENT_FILE__'\nexport const NEXT_BUILTIN_DOCUMENT = '__NEXT_BUILTIN_DOCUMENT__'\nexport const BARREL_OPTIMIZATION_PREFIX = '__barrel_optimize__'\n\n// server/[entry]/page_client-reference-manifest.js\nexport const CLIENT_REFERENCE_MANIFEST = 'client-reference-manifest'\n// server/server-reference-manifest\nexport const SERVER_REFERENCE_MANIFEST = 'server-reference-manifest'\n// server/middleware-build-manifest.js\nexport const MIDDLEWARE_BUILD_MANIFEST = 'middleware-build-manifest'\n// server/middleware-react-loadable-manifest.js\nexport const MIDDLEWARE_REACT_LOADABLE_MANIFEST =\n  'middleware-react-loadable-manifest'\n// server/interception-route-rewrite-manifest.js\nexport const INTERCEPTION_ROUTE_REWRITE_MANIFEST =\n  'interception-route-rewrite-manifest'\n// server/dynamic-css-manifest.js\nexport const DYNAMIC_CSS_MANIFEST = 'dynamic-css-manifest'\n\n// static/runtime/main.js\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN = `main`\nexport const CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = `${CLIENT_STATIC_FILES_RUNTIME_MAIN}-app`\n// next internal client components chunk for layouts\nexport const APP_CLIENT_INTERNALS = 'app-pages-internals'\n// static/runtime/react-refresh.js\nexport const CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = `react-refresh`\n// static/runtime/amp.js\nexport const CLIENT_STATIC_FILES_RUNTIME_AMP = `amp`\n// static/runtime/webpack.js\nexport const CLIENT_STATIC_FILES_RUNTIME_WEBPACK = `webpack`\n// static/runtime/polyfills.js\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = 'polyfills'\nexport const CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(\n  CLIENT_STATIC_FILES_RUNTIME_POLYFILLS\n)\nexport const DEFAULT_RUNTIME_WEBPACK = 'webpack-runtime'\nexport const EDGE_RUNTIME_WEBPACK = 'edge-runtime-webpack'\nexport const STATIC_PROPS_ID = '__N_SSG'\nexport const SERVER_PROPS_ID = '__N_SSP'\nexport const DEFAULT_SERIF_FONT = {\n  name: 'Times New Roman',\n  xAvgCharWidth: 821,\n  azAvgWidth: 854.3953488372093,\n  unitsPerEm: 2048,\n}\nexport const DEFAULT_SANS_SERIF_FONT = {\n  name: 'Arial',\n  xAvgCharWidth: 904,\n  azAvgWidth: 934.5116279069767,\n  unitsPerEm: 2048,\n}\nexport const STATIC_STATUS_PAGES = ['/500']\nexport const TRACE_OUTPUT_VERSION = 1\n// in `MB`\nexport const TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000\n\nexport const RSC_MODULE_TYPES = {\n  client: 'client',\n  server: 'server',\n} as const\n\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nexport const EDGE_UNSUPPORTED_NODE_APIS = [\n  'clearImmediate',\n  'setImmediate',\n  'BroadcastChannel',\n  'ByteLengthQueuingStrategy',\n  'CompressionStream',\n  'CountQueuingStrategy',\n  'DecompressionStream',\n  'DomException',\n  'MessageChannel',\n  'MessageEvent',\n  'MessagePort',\n  'ReadableByteStreamController',\n  'ReadableStreamBYOBRequest',\n  'ReadableStreamDefaultController',\n  'TransformStreamDefaultController',\n  'WritableStreamDefaultController',\n]\n\nexport const SYSTEM_ENTRYPOINTS = new Set<string>([\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n])\n","import { pathHasPrefix } from '../router/utils/path-has-prefix'\n\n/**\n * strip _next/data/<build-id>/ prefix and .json suffix\n */\nexport function normalizeDataPath(pathname: string) {\n  if (!pathHasPrefix(pathname || '/', '/_next/data')) {\n    return pathname\n  }\n  pathname = pathname\n    .replace(/\\/_next\\/data\\/[^/]{1,}/, '')\n    .replace(/\\.json$/, '')\n\n  if (pathname === '/index') {\n    return '/'\n  }\n  return pathname\n}\n","import { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { isAppRouteRoute } from '../is-app-route-route';\nexport const STATIC_METADATA_IMAGES = {\n    icon: {\n        filename: 'icon',\n        extensions: [\n            'ico',\n            'jpg',\n            'jpeg',\n            'png',\n            'svg'\n        ]\n    },\n    apple: {\n        filename: 'apple-icon',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png'\n        ]\n    },\n    favicon: {\n        filename: 'favicon',\n        extensions: [\n            'ico'\n        ]\n    },\n    openGraph: {\n        filename: 'opengraph-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    },\n    twitter: {\n        filename: 'twitter-image',\n        extensions: [\n            'jpg',\n            'jpeg',\n            'png',\n            'gif'\n        ]\n    }\n};\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nexport const DEFAULT_METADATA_ROUTE_EXTENSIONS = [\n    'js',\n    'jsx',\n    'ts',\n    'tsx'\n];\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png`, `/opengraph-image.ts`\nexport const getExtensionRegexString = (staticExtensions, dynamicExtensions)=>{\n    // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n    if (!dynamicExtensions || dynamicExtensions.length === 0) {\n        return `(\\\\.(?:${staticExtensions.join('|')}))`;\n    }\n    return `(?:\\\\.(${staticExtensions.join('|')})|(\\\\.(${dynamicExtensions.join('|')})))`;\n};\n/**\n * Determine if the file is a metadata route file entry\n * @param appDirRelativePath the relative file path to app/\n * @param pageExtensions the js extensions, such as ['js', 'jsx', 'ts', 'tsx']\n * @param strictlyMatchExtensions if it's true, match the file with page extension, otherwise match the file with default corresponding extension\n * @returns if the file is a metadata route file\n */ export function isMetadataRouteFile(appDirRelativePath, pageExtensions, strictlyMatchExtensions) {\n    // End with the extension or optional to have the extension\n    // When strictlyMatchExtensions is true, it's used for match file path;\n    // When strictlyMatchExtensions, the dynamic extension is skipped but\n    // static extension is kept, which is usually used for matching route path.\n    const trailingMatcher = (strictlyMatchExtensions ? '' : '?') + '$';\n    // Match the optional variants like /opengraph-image2, /icon-a102f4.png, etc.\n    const variantsMatcher = '\\\\d?';\n    // The -\\w{6} is the suffix that normalized from group routes;\n    const groupSuffix = strictlyMatchExtensions ? '' : '(-\\\\w{6})?';\n    const suffixMatcher = `${variantsMatcher}${groupSuffix}`;\n    const metadataRouteFilesRegex = [\n        new RegExp(`^[\\\\\\\\/]robots${getExtensionRegexString(pageExtensions.concat('txt'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]manifest${getExtensionRegexString(pageExtensions.concat('webmanifest', 'json'), null)}${trailingMatcher}`),\n        new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n        new RegExp(`[\\\\\\\\/]sitemap${getExtensionRegexString([\n            'xml'\n        ], pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.icon.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.apple.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.openGraph.extensions, pageExtensions)}${trailingMatcher}`),\n        new RegExp(`[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}${suffixMatcher}${getExtensionRegexString(STATIC_METADATA_IMAGES.twitter.extensions, pageExtensions)}${trailingMatcher}`)\n    ];\n    const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath);\n    const matched = metadataRouteFilesRegex.some((r)=>r.test(normalizedAppDirRelativePath));\n    return matched;\n}\n// Check if the route is a static metadata route, with /route suffix\n// e.g. /favicon.ico/route, /icon.png/route, etc.\n// But skip the text routes like robots.txt since they might also be dynamic.\n// Checking route path is not enough to determine if text routes is dynamic.\nexport function isStaticMetadataRoute(route) {\n    // extract ext with regex\n    const pathname = route.replace(/\\/route$/, '');\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(pathname, [], true) && // These routes can either be built by static or dynamic entrypoints,\n    // so we assume they're dynamic\n    pathname !== '/robots.txt' && pathname !== '/manifest.webmanifest' && !pathname.endsWith('/sitemap.xml');\n    return matched;\n}\n/**\n * Determine if a page or pathname is a metadata page.\n *\n * The input is a page or pathname, which can be with or without page suffix /foo/page or /foo.\n * But it will not contain the /route suffix.\n *\n * .e.g\n * /robots -> true\n * /sitemap -> true\n * /foo -> false\n */ export function isMetadataPage(page) {\n    const matched = !isAppRouteRoute(page) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n/*\n * Determine if a Next.js route is a metadata route.\n * `route` will has a route suffix.\n *\n * e.g.\n * /app/robots/route -> true\n * /robots/route -> true\n * /sitemap/[__metadata_id__]/route -> true\n * /app/sitemap/page -> false\n * /icon-a102f4/route -> true\n */ export function isMetadataRoute(route) {\n    let page = normalizeAppPath(route).replace(/^\\/?app\\//, '')// Remove the dynamic route id\n    .replace('/[__metadata_id__]', '')// Remove the /route suffix\n    .replace(/\\/route$/, '');\n    if (page[0] !== '/') page = '/' + page;\n    const matched = isAppRouteRoute(route) && isMetadataRouteFile(page, [], false);\n    return matched;\n}\n\n//# sourceMappingURL=is-metadata-route.js.map","export const RouterServerContextSymbol = Symbol.for('@next/router-server-methods');\nexport const routerServerGlobal = globalThis;\n\n//# sourceMappingURL=router-server-context.js.map","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(\n  segment: string,\n  escapeEncoded?: boolean\n): string {\n  return segment.replace(\n    new RegExp(`([/#?]${escapeEncoded ? '|%(2f|23|3f|5c)' : ''})`, 'gi'),\n    (char: string) => encodeURIComponent(char)\n  )\n}\n","import escapePathDelimiters from '../../../shared/lib/router/utils/escape-path-delimiters';\nimport { DecodeError } from '../../../shared/lib/utils';\n/**\n * We only encode path delimiters for path segments from\n * getStaticPaths so we need to attempt decoding the URL\n * to match against and only escape the path delimiters\n * this allows non-ascii values to be handled e.g.\n * Japanese characters.\n * */ function decodePathParams(pathname) {\n    // TODO: investigate adding this handling for non-SSG\n    // pages so non-ascii names also work there.\n    return pathname.split('/').map((seg)=>{\n        try {\n            seg = escapePathDelimiters(decodeURIComponent(seg), true);\n        } catch (_) {\n            // An improperly encoded URL was provided\n            throw Object.defineProperty(new DecodeError('Failed to decode path param(s).'), \"__NEXT_ERROR_CODE\", {\n                value: \"E539\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return seg;\n    }).join('/');\n}\nexport { decodePathParams };\n\n//# sourceMappingURL=decode-path-params.js.map","import { BUILD_ID_FILE, BUILD_MANIFEST, CLIENT_REFERENCE_MANIFEST, DYNAMIC_CSS_MANIFEST, NEXT_FONT_MANIFEST, PRERENDER_MANIFEST, REACT_LOADABLE_MANIFEST, ROUTES_MANIFEST, SERVER_FILES_MANIFEST, SERVER_REFERENCE_MANIFEST, SUBRESOURCE_INTEGRITY_MANIFEST } from '../../shared/lib/constants';\nimport { parseReqUrl } from '../../lib/url';\nimport { normalizeLocalePath } from '../../shared/lib/i18n/normalize-locale-path';\nimport { isDynamicRoute } from '../../shared/lib/router/utils';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { getServerUtils } from '../server-utils';\nimport { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { checkIsOnDemandRevalidate } from '../api-utils';\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { addRequestMeta, getRequestMeta } from '../request-meta';\nimport { normalizePagePath } from '../../shared/lib/page-path/normalize-page-path';\nimport { isStaticMetadataRoute } from '../../lib/metadata/is-metadata-route';\nimport { IncrementalCache } from '../lib/incremental-cache';\nimport { initializeCacheHandlers, setCacheHandler } from '../use-cache/handlers';\nimport { interopDefault } from '../app-render/interop-default';\nimport ResponseCache from '../response-cache';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { RouterServerContextSymbol, routerServerGlobal } from '../lib/router-utils/router-server-context';\nimport { decodePathParams } from '../lib/router-utils/decode-path-params';\nimport { removeTrailingSlash } from '../../shared/lib/router/utils/remove-trailing-slash';\nimport { isInterceptionRouteRewrite } from '../../lib/generate-interception-routes-rewrites';\nconst dynamicImportEsmDefault = (id)=>import(/* webpackIgnore: true */ /* turbopackIgnore: true */ id).then((mod)=>mod.default || mod);\n/**\n * RouteModule is the base class for all route modules. This class should be\n * extended by all route modules.\n */ export class RouteModule {\n    constructor({ userland, definition, distDir, relativeProjectDir }){\n        this.userland = userland;\n        this.definition = definition;\n        this.isDev = process.env.NODE_ENV === 'development';\n        this.distDir = distDir;\n        this.relativeProjectDir = relativeProjectDir;\n    }\n    async instrumentationOnRequestError(req, ...args) {\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            const { getEdgeInstrumentationModule } = await import('../web/globals');\n            const instrumentation = await getEdgeInstrumentationModule();\n            if (instrumentation) {\n                await (instrumentation.onRequestError == null ? void 0 : instrumentation.onRequestError.call(instrumentation, ...args));\n            }\n        } else {\n            const { join } = require('node:path');\n            const absoluteProjectDir = join(process.cwd(), getRequestMeta(req, 'relativeProjectDir') || this.relativeProjectDir);\n            const { instrumentationOnRequestError } = await import('../lib/router-utils/instrumentation-globals.external.js');\n            return instrumentationOnRequestError(absoluteProjectDir, this.distDir, ...args);\n        }\n    }\n    loadManifests(srcPage, projectDir) {\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            var _self___RSC_MANIFEST;\n            const { getEdgePreviewProps } = require('../web/get-edge-preview-props');\n            const maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\n            return {\n                buildId: process.env.__NEXT_BUILD_ID || '',\n                buildManifest: self.__BUILD_MANIFEST,\n                fallbackBuildManifest: {},\n                reactLoadableManifest: maybeJSONParse(self.__REACT_LOADABLE_MANIFEST),\n                nextFontManifest: maybeJSONParse(self.__NEXT_FONT_MANIFEST),\n                prerenderManifest: {\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    version: 4,\n                    preview: getEdgePreviewProps()\n                },\n                routesManifest: {\n                    version: 4,\n                    caseSensitive: Boolean(process.env.__NEXT_CASE_SENSITIVE_ROUTES),\n                    basePath: process.env.__NEXT_BASE_PATH || '',\n                    rewrites: process.env.__NEXT_REWRITES || {\n                        beforeFiles: [],\n                        afterFiles: [],\n                        fallback: []\n                    },\n                    redirects: [],\n                    headers: [],\n                    i18n: process.env.__NEXT_I18N_CONFIG || undefined,\n                    skipMiddlewareUrlNormalize: Boolean(process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE)\n                },\n                serverFilesManifest: {\n                    config: globalThis.nextConfig || {}\n                },\n                clientReferenceManifest: (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[srcPage],\n                serverActionsManifest: maybeJSONParse(self.__RSC_SERVER_MANIFEST),\n                subresourceIntegrityManifest: maybeJSONParse(self.__SUBRESOURCE_INTEGRITY_MANIFEST),\n                dynamicCssManifest: maybeJSONParse(self.__DYNAMIC_CSS_MANIFEST),\n                interceptionRoutePatterns: (maybeJSONParse(self.__INTERCEPTION_ROUTE_REWRITE_MANIFEST) ?? []).map((rewrite)=>new RegExp(rewrite.regex))\n            };\n        } else {\n            var _clientReferenceManifest___RSC_MANIFEST;\n            if (!projectDir) {\n                throw Object.defineProperty(new Error('Invariant: projectDir is required for node runtime'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E718\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const { loadManifestFromRelativePath } = require('../load-manifest.external');\n            const normalizedPagePath = normalizePagePath(srcPage);\n            const [routesManifest, prerenderManifest, buildManifest, fallbackBuildManifest, reactLoadableManifest, nextFontManifest, clientReferenceManifest, serverActionsManifest, subresourceIntegrityManifest, serverFilesManifest, buildId, dynamicCssManifest] = [\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: ROUTES_MANIFEST,\n                    shouldCache: !this.isDev\n                }),\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: PRERENDER_MANIFEST,\n                    shouldCache: !this.isDev\n                }),\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: BUILD_MANIFEST,\n                    shouldCache: !this.isDev\n                }),\n                srcPage === '/_error' ? loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: `fallback-${BUILD_MANIFEST}`,\n                    shouldCache: !this.isDev,\n                    handleMissing: true\n                }) : {},\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: process.env.TURBOPACK ? `server/${this.isAppRouter ? 'app' : 'pages'}${normalizedPagePath}/${REACT_LOADABLE_MANIFEST}` : REACT_LOADABLE_MANIFEST,\n                    handleMissing: true,\n                    shouldCache: !this.isDev\n                }),\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: `server/${NEXT_FONT_MANIFEST}.json`,\n                    shouldCache: !this.isDev\n                }),\n                this.isAppRouter && !isStaticMetadataRoute(srcPage) ? loadManifestFromRelativePath({\n                    distDir: this.distDir,\n                    projectDir,\n                    useEval: true,\n                    handleMissing: true,\n                    manifest: `server/app${srcPage.replace(/%5F/g, '_') + '_' + CLIENT_REFERENCE_MANIFEST}.js`,\n                    shouldCache: !this.isDev\n                }) : undefined,\n                this.isAppRouter ? loadManifestFromRelativePath({\n                    distDir: this.distDir,\n                    projectDir,\n                    manifest: `server/${SERVER_REFERENCE_MANIFEST}.json`,\n                    handleMissing: true,\n                    shouldCache: !this.isDev\n                }) : {},\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: `server/${SUBRESOURCE_INTEGRITY_MANIFEST}.json`,\n                    handleMissing: true,\n                    shouldCache: !this.isDev\n                }),\n                this.isDev ? {} : loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: SERVER_FILES_MANIFEST\n                }),\n                this.isDev ? 'development' : loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: BUILD_ID_FILE,\n                    skipParse: true\n                }),\n                loadManifestFromRelativePath({\n                    projectDir,\n                    distDir: this.distDir,\n                    manifest: DYNAMIC_CSS_MANIFEST,\n                    handleMissing: true\n                })\n            ];\n            return {\n                buildId,\n                buildManifest,\n                fallbackBuildManifest,\n                routesManifest,\n                nextFontManifest,\n                prerenderManifest,\n                serverFilesManifest,\n                reactLoadableManifest,\n                clientReferenceManifest: clientReferenceManifest == null ? void 0 : (_clientReferenceManifest___RSC_MANIFEST = clientReferenceManifest.__RSC_MANIFEST) == null ? void 0 : _clientReferenceManifest___RSC_MANIFEST[srcPage.replace(/%5F/g, '_')],\n                serverActionsManifest,\n                subresourceIntegrityManifest,\n                dynamicCssManifest,\n                interceptionRoutePatterns: routesManifest.rewrites.beforeFiles.filter(isInterceptionRouteRewrite).map((rewrite)=>new RegExp(rewrite.regex))\n            };\n        }\n    }\n    async loadCustomCacheHandlers(req, nextConfig) {\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            const { cacheHandlers } = nextConfig.experimental;\n            if (!cacheHandlers) return;\n            // If we've already initialized the cache handlers interface, don't do it\n            // again.\n            if (!initializeCacheHandlers()) return;\n            for (const [kind, handler] of Object.entries(cacheHandlers)){\n                if (!handler) continue;\n                const { formatDynamicImportPath } = require('../../lib/format-dynamic-import-path');\n                const { join } = require('node:path');\n                const absoluteProjectDir = join(process.cwd(), getRequestMeta(req, 'relativeProjectDir') || this.relativeProjectDir);\n                setCacheHandler(kind, interopDefault(await dynamicImportEsmDefault(formatDynamicImportPath(`${absoluteProjectDir}/${this.distDir}`, handler))));\n            }\n        }\n    }\n    async getIncrementalCache(req, nextConfig, prerenderManifest) {\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            return globalThis.__incrementalCache;\n        } else {\n            let CacheHandler;\n            const { cacheHandler } = nextConfig;\n            if (cacheHandler) {\n                const { formatDynamicImportPath } = require('../../lib/format-dynamic-import-path');\n                CacheHandler = interopDefault(await dynamicImportEsmDefault(formatDynamicImportPath(this.distDir, cacheHandler)));\n            }\n            const { join } = require('node:path');\n            const projectDir = join(process.cwd(), getRequestMeta(req, 'relativeProjectDir') || this.relativeProjectDir);\n            await this.loadCustomCacheHandlers(req, nextConfig);\n            // incremental-cache is request specific\n            // although can have shared caches in module scope\n            // per-cache handler\n            return new IncrementalCache({\n                fs: require('../lib/node-fs-methods').nodeFs,\n                dev: this.isDev,\n                requestHeaders: req.headers,\n                allowedRevalidateHeaderKeys: nextConfig.experimental.allowedRevalidateHeaderKeys,\n                minimalMode: getRequestMeta(req, 'minimalMode'),\n                serverDistDir: `${projectDir}/${this.distDir}/server`,\n                fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n                maxMemoryCacheSize: nextConfig.cacheMaxMemorySize,\n                flushToDisk: nextConfig.experimental.isrFlushToDisk,\n                getPrerenderManifest: ()=>prerenderManifest,\n                CurCacheHandler: CacheHandler\n            });\n        }\n    }\n    async onRequestError(req, err, errorContext, routerServerContext) {\n        if (routerServerContext == null ? void 0 : routerServerContext.logErrorWithOriginalStack) {\n            routerServerContext.logErrorWithOriginalStack(err, 'app-dir');\n        } else {\n            console.error(err);\n        }\n        await this.instrumentationOnRequestError(req, err, {\n            path: req.url || '/',\n            headers: req.headers,\n            method: req.method || 'GET'\n        }, errorContext);\n    }\n    async prepare(req, res, { srcPage, multiZoneDraftMode }) {\n        var _routerServerGlobal_RouterServerContextSymbol;\n        let absoluteProjectDir;\n        // edge runtime handles loading instrumentation at the edge adapter level\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            const { join, relative } = require('node:path');\n            absoluteProjectDir = join(process.cwd(), getRequestMeta(req, 'relativeProjectDir') || this.relativeProjectDir);\n            const absoluteDistDir = getRequestMeta(req, 'distDir');\n            if (absoluteDistDir) {\n                this.distDir = relative(absoluteProjectDir, absoluteDistDir);\n            }\n            const { ensureInstrumentationRegistered } = await import('../lib/router-utils/instrumentation-globals.external.js');\n            // ensure instrumentation is registered and pass\n            // onRequestError below\n            ensureInstrumentationRegistered(absoluteProjectDir, this.distDir);\n        }\n        const manifests = await this.loadManifests(srcPage, absoluteProjectDir);\n        const { routesManifest, prerenderManifest, serverFilesManifest } = manifests;\n        const { basePath, i18n, rewrites } = routesManifest;\n        if (basePath) {\n            req.url = removePathPrefix(req.url || '/', basePath);\n        }\n        const parsedUrl = parseReqUrl(req.url || '/');\n        // if we couldn't parse the URL we can't continue\n        if (!parsedUrl) {\n            return;\n        }\n        let isNextDataRequest = false;\n        if (pathHasPrefix(parsedUrl.pathname || '/', '/_next/data')) {\n            isNextDataRequest = true;\n            parsedUrl.pathname = normalizeDataPath(parsedUrl.pathname || '/');\n        }\n        let originalPathname = parsedUrl.pathname || '/';\n        const originalQuery = {\n            ...parsedUrl.query\n        };\n        const pageIsDynamic = isDynamicRoute(srcPage);\n        let localeResult;\n        let detectedLocale;\n        if (i18n) {\n            localeResult = normalizeLocalePath(parsedUrl.pathname || '/', i18n.locales);\n            if (localeResult.detectedLocale) {\n                req.url = `${localeResult.pathname}${parsedUrl.search}`;\n                originalPathname = localeResult.pathname;\n                if (!detectedLocale) {\n                    detectedLocale = localeResult.detectedLocale;\n                }\n            }\n        }\n        const serverUtils = getServerUtils({\n            page: srcPage,\n            i18n,\n            basePath,\n            rewrites,\n            pageIsDynamic,\n            trailingSlash: process.env.__NEXT_TRAILING_SLASH,\n            caseSensitive: Boolean(routesManifest.caseSensitive)\n        });\n        const domainLocale = detectDomainLocale(i18n == null ? void 0 : i18n.domains, getHostname(parsedUrl, req.headers), detectedLocale);\n        addRequestMeta(req, 'isLocaleDomain', Boolean(domainLocale));\n        const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) || (i18n == null ? void 0 : i18n.defaultLocale);\n        // Ensure parsedUrl.pathname includes locale before processing\n        // rewrites or they won't match correctly.\n        if (defaultLocale && !detectedLocale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname === '/' ? '' : parsedUrl.pathname}`;\n        }\n        const locale = getRequestMeta(req, 'locale') || detectedLocale || defaultLocale;\n        const rewriteParamKeys = Object.keys(serverUtils.handleRewrites(req, parsedUrl));\n        // after processing rewrites we want to remove locale\n        // from parsedUrl pathname\n        if (i18n) {\n            parsedUrl.pathname = normalizeLocalePath(parsedUrl.pathname || '/', i18n.locales).pathname;\n        }\n        let params = getRequestMeta(req, 'params');\n        // attempt parsing from pathname\n        if (!params && serverUtils.dynamicRouteMatcher) {\n            const paramsMatch = serverUtils.dynamicRouteMatcher(normalizeDataPath((localeResult == null ? void 0 : localeResult.pathname) || parsedUrl.pathname || '/'));\n            const paramsResult = serverUtils.normalizeDynamicRouteParams(paramsMatch || {}, true);\n            if (paramsResult.hasValidParams) {\n                params = paramsResult.params;\n            }\n        }\n        // Local \"next start\" expects the routing parsed query values\n        // to not be present in the URL although when deployed proxies\n        // will add query values from resolving the routes to pass to function.\n        // TODO: do we want to change expectations for \"next start\"\n        // to include these query values in the URL which affects asPath\n        // but would match deployed behavior, e.g. a rewrite from middleware\n        // that adds a query param would be in asPath as query but locally\n        // it won't be in the asPath but still available in the query object\n        const query = getRequestMeta(req, 'query') || {\n            ...parsedUrl.query\n        };\n        const routeParamKeys = new Set();\n        const combinedParamKeys = [];\n        // we don't include rewriteParamKeys in the combinedParamKeys\n        // for app router since the searchParams is populated from the\n        // URL so we don't want to strip the rewrite params from the URL\n        // so that searchParams can include them\n        if (!this.isAppRouter) {\n            for (const key of [\n                ...rewriteParamKeys,\n                ...Object.keys(serverUtils.defaultRouteMatches || {})\n            ]){\n                // We only want to filter rewrite param keys from the URL\n                // if they are matches from the URL e.g. the key/value matches\n                // before and after applying the rewrites /:path for /hello and\n                // { path: 'hello' } but not for { path: 'another' } and /hello\n                // TODO: we should prefix rewrite param keys the same as we do\n                // for dynamic routes so we can identify them properly\n                const originalValue = Array.isArray(originalQuery[key]) ? originalQuery[key].join('') : originalQuery[key];\n                const queryValue = Array.isArray(query[key]) ? query[key].join('') : query[key];\n                if (!(key in originalQuery) || originalValue === queryValue) {\n                    combinedParamKeys.push(key);\n                }\n            }\n        }\n        serverUtils.normalizeCdnUrl(req, combinedParamKeys);\n        serverUtils.normalizeQueryParams(query, routeParamKeys);\n        serverUtils.filterInternalQuery(originalQuery, combinedParamKeys);\n        if (pageIsDynamic) {\n            const queryResult = serverUtils.normalizeDynamicRouteParams(query, true);\n            const paramsResult = serverUtils.normalizeDynamicRouteParams(params || {}, true);\n            const paramsToInterpolate = paramsResult.hasValidParams && params ? params : queryResult.hasValidParams ? query : {};\n            req.url = serverUtils.interpolateDynamicPath(req.url || '/', paramsToInterpolate);\n            parsedUrl.pathname = serverUtils.interpolateDynamicPath(parsedUrl.pathname || '/', paramsToInterpolate);\n            originalPathname = serverUtils.interpolateDynamicPath(originalPathname, paramsToInterpolate);\n            // try pulling from query if valid\n            if (!params) {\n                if (queryResult.hasValidParams) {\n                    params = Object.assign({}, queryResult.params);\n                    // If we pulled from query remove it so it's\n                    // only in params\n                    for(const key in serverUtils.defaultRouteMatches){\n                        delete query[key];\n                    }\n                } else {\n                    // use final params from URL matching\n                    const paramsMatch = serverUtils.dynamicRouteMatcher == null ? void 0 : serverUtils.dynamicRouteMatcher.call(serverUtils, normalizeDataPath((localeResult == null ? void 0 : localeResult.pathname) || parsedUrl.pathname || '/'));\n                    // we don't normalize these as they are allowed to be\n                    // the literal slug matches here e.g. /blog/[slug]\n                    // actually being requested\n                    if (paramsMatch) {\n                        params = Object.assign({}, paramsMatch);\n                    }\n                }\n            }\n        }\n        // Remove any normalized params from the query if they\n        // weren't present as non-prefixed query key e.g.\n        // ?search=1&nxtPsearch=hello we don't delete search\n        for (const key of routeParamKeys){\n            if (!(key in originalQuery)) {\n                delete query[key];\n            }\n        }\n        const { isOnDemandRevalidate, revalidateOnlyGenerated } = checkIsOnDemandRevalidate(req, prerenderManifest.preview);\n        let isDraftMode = false;\n        let previewData;\n        // preview data relies on non-edge utils\n        if (process.env.NEXT_RUNTIME !== 'edge' && res) {\n            const { tryGetPreviewData } = require('../api-utils/node/try-get-preview-data');\n            previewData = tryGetPreviewData(req, res, prerenderManifest.preview, Boolean(multiZoneDraftMode));\n            isDraftMode = previewData !== false;\n        }\n        const relativeProjectDir = getRequestMeta(req, 'relativeProjectDir') || this.relativeProjectDir;\n        const routerServerContext = (_routerServerGlobal_RouterServerContextSymbol = routerServerGlobal[RouterServerContextSymbol]) == null ? void 0 : _routerServerGlobal_RouterServerContextSymbol[relativeProjectDir];\n        const nextConfig = (routerServerContext == null ? void 0 : routerServerContext.nextConfig) || serverFilesManifest.config;\n        const normalizedSrcPage = normalizeAppPath(srcPage);\n        let resolvedPathname = getRequestMeta(req, 'rewroteURL') || normalizedSrcPage;\n        if (isDynamicRoute(resolvedPathname) && params) {\n            resolvedPathname = serverUtils.interpolateDynamicPath(resolvedPathname, params);\n        }\n        if (resolvedPathname === '/index') {\n            resolvedPathname = '/';\n        }\n        try {\n            resolvedPathname = decodePathParams(resolvedPathname);\n        } catch (_) {}\n        resolvedPathname = removeTrailingSlash(resolvedPathname);\n        return {\n            query,\n            originalQuery,\n            originalPathname,\n            params,\n            parsedUrl,\n            locale,\n            isNextDataRequest,\n            locales: i18n == null ? void 0 : i18n.locales,\n            defaultLocale,\n            isDraftMode,\n            previewData,\n            pageIsDynamic,\n            resolvedPathname,\n            isOnDemandRevalidate,\n            revalidateOnlyGenerated,\n            ...manifests,\n            serverActionsManifest: manifests.serverActionsManifest,\n            clientReferenceManifest: manifests.clientReferenceManifest,\n            nextConfig,\n            routerServerContext\n        };\n    }\n    getResponseCache(req) {\n        if (!this.responseCache) {\n            const minimalMode = getRequestMeta(req, 'minimalMode') ?? false;\n            this.responseCache = new ResponseCache(minimalMode);\n        }\n        return this.responseCache;\n    }\n    async handleResponse({ req, nextConfig, cacheKey, routeKind, isFallback, prerenderManifest, isRoutePPREnabled, isOnDemandRevalidate, revalidateOnlyGenerated, responseGenerator, waitUntil }) {\n        const responseCache = this.getResponseCache(req);\n        const cacheEntry = await responseCache.get(cacheKey, responseGenerator, {\n            routeKind,\n            isFallback,\n            isRoutePPREnabled,\n            isOnDemandRevalidate,\n            isPrefetch: req.headers.purpose === 'prefetch',\n            incrementalCache: await this.getIncrementalCache(req, nextConfig, prerenderManifest),\n            waitUntil\n        });\n        if (!cacheEntry) {\n            if (cacheKey && // revalidate only generated can bail even if cacheKey is provided\n            !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n                // A cache entry might not be generated if a response is written\n                // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                // have a cache key. If we do have a cache key but we don't end up\n                // with a cache entry, then either Next.js or the application has a\n                // bug that needs fixing.\n                throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E62\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        return cacheEntry;\n    }\n}\n\n//# sourceMappingURL=route-module.js.map","import React from 'react'\nimport type { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","export const VALID_LOADERS = [\n  'default',\n  'imgix',\n  'cloudinary',\n  'akamai',\n  'custom',\n] as const\n\nexport type LoaderValue = (typeof VALID_LOADERS)[number]\n\nexport type ImageLoaderProps = {\n  src: string\n  width: number\n  quality?: number\n}\n\nexport type ImageLoaderPropsWithConfig = ImageLoaderProps & {\n  config: Readonly<ImageConfig>\n}\n\nexport type LocalPattern = {\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\nexport type RemotePattern = {\n  /**\n   * Must be `http` or `https`.\n   */\n  protocol?: 'http' | 'https'\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single subdomain.\n   * Double `**` matches any number of subdomains.\n   */\n  hostname: string\n\n  /**\n   * Can be literal port such as `8080` or empty string\n   * meaning no port.\n   */\n  port?: string\n\n  /**\n   * Can be literal or wildcard.\n   * Single `*` matches a single path segment.\n   * Double `**` matches any number of path segments.\n   */\n  pathname?: string\n\n  /**\n   * Can be literal query string such as `?v=1` or\n   * empty string meaning no query string.\n   */\n  search?: string\n}\n\ntype ImageFormat = 'image/avif' | 'image/webp'\n\n/**\n * Image configurations\n *\n * @see [Image configuration options](https://nextjs.org/docs/api-reference/next/image#configuration-options)\n */\nexport type ImageConfigComplete = {\n  /** @see [Device sizes documentation](https://nextjs.org/docs/api-reference/next/image#device-sizes) */\n  deviceSizes: number[]\n\n  /** @see [Image sizing documentation](https://nextjs.org/docs/app/building-your-application/optimizing/images#image-sizing) */\n  imageSizes: number[]\n\n  /** @see [Image loaders configuration](https://nextjs.org/docs/api-reference/next/legacy/image#loader) */\n  loader: LoaderValue\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/app/api-reference/components/image#path) */\n  path: string\n\n  /** @see [Image loader configuration](https://nextjs.org/docs/api-reference/next/image#loader-configuration) */\n  loaderFile: string\n\n  /**\n   * @deprecated Use `remotePatterns` instead.\n   */\n  domains: string[]\n\n  /** @see [Disable static image import configuration](https://nextjs.org/docs/api-reference/next/image#disable-static-imports) */\n  disableStaticImages: boolean\n\n  /** @see [Cache behavior](https://nextjs.org/docs/api-reference/next/image#caching-behavior) */\n  minimumCacheTTL: number\n\n  /** @see [Acceptable formats](https://nextjs.org/docs/api-reference/next/image#acceptable-formats) */\n  formats: ImageFormat[]\n\n  /** @see [Dangerously Allow SVG](https://nextjs.org/docs/api-reference/next/image#dangerously-allow-svg) */\n  dangerouslyAllowSVG: boolean\n\n  /** @see [Content Security Policy](https://nextjs.org/docs/api-reference/next/image#contentsecuritypolicy) */\n  contentSecurityPolicy: string\n\n  /** @see [Content Disposition Type](https://nextjs.org/docs/api-reference/next/image#contentdispositiontype) */\n  contentDispositionType: 'inline' | 'attachment'\n\n  /** @see [Remote Patterns](https://nextjs.org/docs/api-reference/next/image#remotepatterns) */\n  remotePatterns: Array<URL | RemotePattern>\n\n  /** @see [Local Patterns](https://nextjs.org/docs/api-reference/next/image#localPatterns) */\n  localPatterns: LocalPattern[] | undefined\n\n  /** @see [Qualities](https://nextjs.org/docs/api-reference/next/image#qualities) */\n  qualities: number[] | undefined\n\n  /** @see [Unoptimized](https://nextjs.org/docs/api-reference/next/image#unoptimized) */\n  unoptimized: boolean\n}\n\nexport type ImageConfig = Partial<ImageConfigComplete>\n\nexport const imageConfigDefault: ImageConfigComplete = {\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  path: '/_next/image',\n  loader: 'default',\n  loaderFile: '',\n  domains: [],\n  disableStaticImages: false,\n  minimumCacheTTL: 60,\n  formats: ['image/webp'],\n  dangerouslyAllowSVG: false,\n  contentSecurityPolicy: `script-src 'none'; frame-src 'none'; sandbox;`,\n  contentDispositionType: 'attachment',\n  localPatterns: undefined, // default: allow all local images\n  remotePatterns: [], // default: allow no remote images\n  qualities: undefined, // default: allow all qualities\n  unoptimized: false,\n}\n","import React from 'react'\nimport type { ImageConfigComplete } from './image-config'\nimport { imageConfigDefault } from './image-config'\n\nexport const ImageConfigContext =\n  React.createContext<ImageConfigComplete>(imageConfigDefault)\n\nif (process.env.NODE_ENV !== 'production') {\n  ImageConfigContext.displayName = 'ImageConfigContext'\n}\n","export * as HeadManagerContext from '../../../../../shared/lib/head-manager-context.shared-runtime';\nexport * as ServerInsertedHtml from '../../../../../shared/lib/server-inserted-html.shared-runtime';\nexport * as AppRouterContext from '../../../../../shared/lib/app-router-context.shared-runtime';\nexport * as HooksClientContext from '../../../../../shared/lib/hooks-client-context.shared-runtime';\nexport * as RouterContext from '../../../../../shared/lib/router-context.shared-runtime';\nexport * as AmpContext from '../../../../../shared/lib/amp-context.shared-runtime';\nexport * as ImageConfigContext from '../../../../../shared/lib/image-config-context.shared-runtime';\n\n//# sourceMappingURL=entrypoints.js.map","import { getRouteMatcher } from '../../../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../../../shared/lib/router/utils/route-regex';\n/**\n * A matcher for the prerender manifest.\n *\n * This class is used to match the pathname to the dynamic route.\n */ export class PrerenderManifestMatcher {\n    constructor(pathname, prerenderManifest){\n        this.matchers = Object.entries(prerenderManifest.dynamicRoutes).filter(([source, route])=>{\n            // If the pathname is a fallback source route, or the source route is\n            // the same as the pathname, then we should include it in the matchers.\n            return route.fallbackSourceRoute === pathname || source === pathname;\n        }).map(([source, route])=>({\n                source,\n                route\n            }));\n    }\n    /**\n   * Match the pathname to the dynamic route. If no match is found, an error is\n   * thrown.\n   *\n   * @param pathname - The pathname to match.\n   * @returns The dynamic route that matches the pathname.\n   */ match(pathname) {\n        // Iterate over the matchers. They're already in the correct order of\n        // specificity as they were inserted into the prerender manifest that way\n        // and iterating over them with Object.entries guarantees that.\n        for (const matcher of this.matchers){\n            // Lazily create the matcher, this is only done once per matcher.\n            if (!matcher.matcher) {\n                matcher.matcher = getRouteMatcher(getRouteRegex(matcher.source));\n            }\n            const match = matcher.matcher(pathname);\n            if (match) {\n                return matcher.route;\n            }\n        }\n        return null;\n    }\n}\n\n//# sourceMappingURL=prerender-manifest-matcher.js.map","import { renderToHTMLOrFlight } from '../../app-render/app-render';\nimport { RouteModule } from '../route-module';\nimport * as vendoredContexts from './vendored/contexts/entrypoints';\nimport { PrerenderManifestMatcher } from './helpers/prerender-manifest-matcher';\nimport { NEXT_ROUTER_PREFETCH_HEADER, NEXT_ROUTER_SEGMENT_PREFETCH_HEADER, NEXT_ROUTER_STATE_TREE_HEADER, NEXT_URL, RSC_HEADER } from '../../../client/components/app-router-headers';\nimport { isInterceptionRouteAppPath } from '../../../shared/lib/router/utils/interception-routes';\nlet vendoredReactRSC;\nlet vendoredReactSSR;\n// the vendored Reacts are loaded from their original source in the edge runtime\nif (process.env.NEXT_RUNTIME !== 'edge') {\n    vendoredReactRSC = require('./vendored/rsc/entrypoints');\n    vendoredReactSSR = require('./vendored/ssr/entrypoints');\n}\nexport class AppPageRouteModule extends RouteModule {\n    constructor(options){\n        super(options), this.matchers = new WeakMap();\n        this.isAppRouter = true;\n    }\n    match(pathname, prerenderManifest) {\n        // Lazily create the matcher based on the provided prerender manifest.\n        let matcher = this.matchers.get(prerenderManifest);\n        if (!matcher) {\n            matcher = new PrerenderManifestMatcher(this.definition.pathname, prerenderManifest);\n            this.matchers.set(prerenderManifest, matcher);\n        }\n        // Match the pathname to the dynamic route.\n        return matcher.match(pathname);\n    }\n    render(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, false, context.sharedContext);\n    }\n    warmup(req, res, context) {\n        return renderToHTMLOrFlight(req, res, context.page, context.query, context.fallbackRouteParams, context.renderOpts, context.serverComponentsHmrCache, true, context.sharedContext);\n    }\n    pathCouldBeIntercepted(resolvedPathname, interceptionRoutePatterns) {\n        return isInterceptionRouteAppPath(resolvedPathname) || interceptionRoutePatterns.some((regexp)=>{\n            return regexp.test(resolvedPathname);\n        });\n    }\n    getVaryHeader(resolvedPathname, interceptionRoutePatterns) {\n        const baseVaryHeader = `${RSC_HEADER}, ${NEXT_ROUTER_STATE_TREE_HEADER}, ${NEXT_ROUTER_PREFETCH_HEADER}, ${NEXT_ROUTER_SEGMENT_PREFETCH_HEADER}`;\n        if (this.pathCouldBeIntercepted(resolvedPathname, interceptionRoutePatterns)) {\n            // Interception route responses can vary based on the `Next-URL` header.\n            // We use the Vary header to signal this behavior to the client to properly cache the response.\n            return `${baseVaryHeader}, ${NEXT_URL}`;\n        } else {\n            // We don't need to include `Next-URL` in the Vary header for non-interception routes since it won't affect the response.\n            // We also set this header for pages to avoid caching issues when navigating between pages and app.\n            return baseVaryHeader;\n        }\n    }\n}\nconst vendored = {\n    'react-rsc': vendoredReactRSC,\n    'react-ssr': vendoredReactSSR,\n    contexts: vendoredContexts\n};\nexport { renderToHTMLOrFlight, vendored };\nexport default AppPageRouteModule;\n\n//# sourceMappingURL=module.js.map","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react.react-server.development.js');\n}\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","import { ensureLeadingSlash } from './ensure-leading-slash'\nimport { isDynamicRoute } from '../router/utils'\nimport { NormalizeError } from '../utils'\n\n/**\n * Takes a page and transforms it into its file counterpart ensuring that the\n * output is normalized. Note this function is not idempotent because a page\n * `/index` can be referencing `/index/index.js` and `/index/index` could be\n * referencing `/index/index/index.js`. Examples:\n *  - `/` -> `/index`\n *  - `/index/foo` -> `/index/index/foo`\n *  - `/index` -> `/index/index`\n */\nexport function normalizePagePath(page: string): string {\n  const normalized =\n    /^\\/index(\\/|$)/.test(page) && !isDynamicRoute(page)\n      ? `/index${page}`\n      : page === '/'\n        ? '/index'\n        : ensureLeadingSlash(page)\n\n  if (process.env.NEXT_RUNTIME !== 'edge') {\n    const { posix } = require('path') as typeof import('path')\n    const resolvedPage = posix.normalize(normalized)\n    if (resolvedPage !== normalized) {\n      throw new NormalizeError(\n        `Requested and resolved page mismatch: ${normalized} ${resolvedPage}`\n      )\n    }\n  }\n\n  return normalized\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import type {\n  FlightRouterState,\n  Segment,\n} from '../../../server/app-render/types'\nimport { INTERCEPTION_ROUTE_MARKERS } from '../../../shared/lib/router/utils/interception-routes'\nimport type { Params } from '../../../server/request/params'\nimport {\n  isGroupSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\n\nconst removeLeadingSlash = (segment: string): string => {\n  return segment[0] === '/' ? segment.slice(1) : segment\n}\n\nconst segmentToPathname = (segment: Segment): string => {\n  if (typeof segment === 'string') {\n    // 'children' is not a valid path -- it's technically a parallel route that corresponds with the current segment's page\n    // if we don't skip it, then the computed pathname might be something like `/children` which doesn't make sense.\n    if (segment === 'children') return ''\n\n    return segment\n  }\n\n  return segment[1]\n}\n\nfunction normalizeSegments(segments: string[]): string {\n  return (\n    segments.reduce((acc, segment) => {\n      segment = removeLeadingSlash(segment)\n      if (segment === '' || isGroupSegment(segment)) {\n        return acc\n      }\n\n      return `${acc}/${segment}`\n    }, '') || '/'\n  )\n}\n\nexport function extractPathFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): string | undefined {\n  const segment = Array.isArray(flightRouterState[0])\n    ? flightRouterState[0][1]\n    : flightRouterState[0]\n\n  if (\n    segment === DEFAULT_SEGMENT_KEY ||\n    INTERCEPTION_ROUTE_MARKERS.some((m) => segment.startsWith(m))\n  )\n    return undefined\n\n  if (segment.startsWith(PAGE_SEGMENT_KEY)) return ''\n\n  const segments = [segmentToPathname(segment)]\n  const parallelRoutes = flightRouterState[1] ?? {}\n\n  const childrenPath = parallelRoutes.children\n    ? extractPathFromFlightRouterState(parallelRoutes.children)\n    : undefined\n\n  if (childrenPath !== undefined) {\n    segments.push(childrenPath)\n  } else {\n    for (const [key, value] of Object.entries(parallelRoutes)) {\n      if (key === 'children') continue\n\n      const childPath = extractPathFromFlightRouterState(value)\n\n      if (childPath !== undefined) {\n        segments.push(childPath)\n      }\n    }\n  }\n\n  return normalizeSegments(segments)\n}\n\nfunction computeChangedPathImpl(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const [segmentA, parallelRoutesA] = treeA\n  const [segmentB, parallelRoutesB] = treeB\n\n  const normalizedSegmentA = segmentToPathname(segmentA)\n  const normalizedSegmentB = segmentToPathname(segmentB)\n\n  if (\n    INTERCEPTION_ROUTE_MARKERS.some(\n      (m) =>\n        normalizedSegmentA.startsWith(m) || normalizedSegmentB.startsWith(m)\n    )\n  ) {\n    return ''\n  }\n\n  if (!matchSegment(segmentA, segmentB)) {\n    // once we find where the tree changed, we compute the rest of the path by traversing the tree\n    return extractPathFromFlightRouterState(treeB) ?? ''\n  }\n\n  for (const parallelRouterKey in parallelRoutesA) {\n    if (parallelRoutesB[parallelRouterKey]) {\n      const changedPath = computeChangedPathImpl(\n        parallelRoutesA[parallelRouterKey],\n        parallelRoutesB[parallelRouterKey]\n      )\n      if (changedPath !== null) {\n        return `${segmentToPathname(segmentB)}/${changedPath}`\n      }\n    }\n  }\n\n  return null\n}\n\nexport function computeChangedPath(\n  treeA: FlightRouterState,\n  treeB: FlightRouterState\n): string | null {\n  const changedPath = computeChangedPathImpl(treeA, treeB)\n\n  if (changedPath == null || changedPath === '/') {\n    return changedPath\n  }\n\n  // lightweight normalization to remove route groups\n  return normalizeSegments(changedPath.split('/'))\n}\n\n/**\n * Recursively extracts dynamic parameters from FlightRouterState.\n */\nexport function getSelectedParams(\n  currentTree: FlightRouterState,\n  params: Params = {}\n): Params {\n  const parallelRoutes = currentTree[1]\n\n  for (const parallelRoute of Object.values(parallelRoutes)) {\n    const segment = parallelRoute[0]\n    const isDynamicParameter = Array.isArray(segment)\n    const segmentValue = isDynamicParameter ? segment[1] : segment\n    if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) continue\n\n    // Ensure catchAll and optional catchall are turned into an array\n    const isCatchAll =\n      isDynamicParameter && (segment[2] === 'c' || segment[2] === 'oc')\n\n    if (isCatchAll) {\n      params[segment[0]] = segment[1].split('/')\n    } else if (isDynamicParameter) {\n      params[segment[0]] = segment[1]\n    }\n\n    params = getSelectedParams(parallelRoute, params)\n  }\n\n  return params\n}\n","import { HTTPAccessErrorFallback } from '../http-access-fallback/error-fallback'\n\nexport default function NotFound() {\n  return (\n    <HTTPAccessErrorFallback\n      status={404}\n      message=\"This page could not be found.\"\n    />\n  )\n}\n","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n  '_debugInfo',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n","// Combined load times for loading client components\nlet clientComponentLoadStart = 0;\nlet clientComponentLoadTimes = 0;\nlet clientComponentLoadCount = 0;\nexport function wrapClientComponentLoader(ComponentMod) {\n    if (!('performance' in globalThis)) {\n        return ComponentMod.__next_app__;\n    }\n    return {\n        require: (...args)=>{\n            const startTime = performance.now();\n            if (clientComponentLoadStart === 0) {\n                clientComponentLoadStart = startTime;\n            }\n            try {\n                clientComponentLoadCount += 1;\n                return ComponentMod.__next_app__.require(...args);\n            } finally{\n                clientComponentLoadTimes += performance.now() - startTime;\n            }\n        },\n        loadChunk: (...args)=>{\n            const startTime = performance.now();\n            const result = ComponentMod.__next_app__.loadChunk(...args);\n            // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n            // We only need to know when it's settled.\n            result.finally(()=>{\n                clientComponentLoadTimes += performance.now() - startTime;\n            });\n            return result;\n        }\n    };\n}\nexport function getClientComponentLoaderMetrics(options = {}) {\n    const metrics = clientComponentLoadStart === 0 ? undefined : {\n        clientComponentLoadStart,\n        clientComponentLoadTimes,\n        clientComponentLoadCount\n    };\n    if (options.reset) {\n        clientComponentLoadStart = 0;\n        clientComponentLoadTimes = 0;\n        clientComponentLoadCount = 0;\n    }\n    return metrics;\n}\n\n//# sourceMappingURL=client-component-renderer-logger.js.map",null,"import type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { getNextFlightSegmentPath } from '../../flight-data-helpers'\nimport { matchSegment } from '../match-segments'\nimport { addRefreshMarkerToActiveParallelSegments } from './refetch-inactive-parallel-segments'\n\n/**\n * Deep merge of the two router states. Parallel route keys are preserved if the patch doesn't have them.\n */\nfunction applyPatch(\n  initialTree: FlightRouterState,\n  patchTree: FlightRouterState\n): FlightRouterState {\n  const [initialSegment, initialParallelRoutes] = initialTree\n  const [patchSegment, patchParallelRoutes] = patchTree\n\n  // if the applied patch segment is __DEFAULT__ then it can be ignored in favor of the initial tree\n  // this is because the __DEFAULT__ segment is used as a placeholder on navigation\n  if (\n    patchSegment === DEFAULT_SEGMENT_KEY &&\n    initialSegment !== DEFAULT_SEGMENT_KEY\n  ) {\n    return initialTree\n  }\n\n  if (matchSegment(initialSegment, patchSegment)) {\n    const newParallelRoutes: FlightRouterState[1] = {}\n    for (const key in initialParallelRoutes) {\n      const isInPatchTreeParallelRoutes =\n        typeof patchParallelRoutes[key] !== 'undefined'\n      if (isInPatchTreeParallelRoutes) {\n        newParallelRoutes[key] = applyPatch(\n          initialParallelRoutes[key],\n          patchParallelRoutes[key]\n        )\n      } else {\n        newParallelRoutes[key] = initialParallelRoutes[key]\n      }\n    }\n\n    for (const key in patchParallelRoutes) {\n      if (newParallelRoutes[key]) {\n        continue\n      }\n\n      newParallelRoutes[key] = patchParallelRoutes[key]\n    }\n\n    const tree: FlightRouterState = [initialSegment, newParallelRoutes]\n\n    // Copy over the existing tree\n    if (initialTree[2]) {\n      tree[2] = initialTree[2]\n    }\n\n    if (initialTree[3]) {\n      tree[3] = initialTree[3]\n    }\n\n    if (initialTree[4]) {\n      tree[4] = initialTree[4]\n    }\n\n    return tree\n  }\n\n  return patchTree\n}\n\n/**\n * Apply the router state from the Flight response, but skip patching default segments.\n * Useful for patching the router cache when navigating, where we persist the existing default segment if there isn't a new one.\n * Creates a new router state tree.\n */\nexport function applyRouterStatePatchToTree(\n  flightSegmentPath: FlightSegmentPath,\n  flightRouterState: FlightRouterState,\n  treePatch: FlightRouterState,\n  path: string\n): FlightRouterState | null {\n  const [segment, parallelRoutes, url, refetch, isRootLayout] =\n    flightRouterState\n\n  // Root refresh\n  if (flightSegmentPath.length === 1) {\n    const tree: FlightRouterState = applyPatch(flightRouterState, treePatch)\n\n    addRefreshMarkerToActiveParallelSegments(tree, path)\n\n    return tree\n  }\n\n  const [currentSegment, parallelRouteKey] = flightSegmentPath\n\n  // Tree path returned from the server should always match up with the current tree in the browser\n  if (!matchSegment(currentSegment, segment)) {\n    return null\n  }\n\n  const lastSegment = flightSegmentPath.length === 2\n\n  let parallelRoutePatch\n  if (lastSegment) {\n    parallelRoutePatch = applyPatch(parallelRoutes[parallelRouteKey], treePatch)\n  } else {\n    parallelRoutePatch = applyRouterStatePatchToTree(\n      getNextFlightSegmentPath(flightSegmentPath),\n      parallelRoutes[parallelRouteKey],\n      treePatch,\n      path\n    )\n\n    if (parallelRoutePatch === null) {\n      return null\n    }\n  }\n\n  const tree: FlightRouterState = [\n    flightSegmentPath[0],\n    {\n      ...parallelRoutes,\n      [parallelRouteKey]: parallelRoutePatch,\n    },\n    url,\n    refetch,\n  ]\n\n  // Current segment is the root layout\n  if (isRootLayout) {\n    tree[4] = true\n  }\n\n  addRefreshMarkerToActiveParallelSegments(tree, path)\n\n  return tree\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../../../server/app-render/types'\nimport type {\n  CacheNode,\n  ChildSegmentMap,\n  HeadData,\n  LoadingModuleData,\n  ReadyCacheNode,\n} from '../../../shared/lib/app-router-context.shared-runtime'\nimport { DEFAULT_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport { matchSegment } from '../match-segments'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { FetchServerResponseResult } from './fetch-server-response'\nimport { isNavigatingToNewRootLayout } from './is-navigating-to-new-root-layout'\nimport { DYNAMIC_STALETIME_MS } from './prefetch-cache-utils'\n\n// This is yet another tree type that is used to track pending promises that\n// need to be fulfilled once the dynamic data is received. The terminal nodes of\n// this tree represent the new Cache Node trees that were created during this\n// request. We can't use the Cache Node tree or Route State tree directly\n// because those include reused nodes, too. This tree is discarded as soon as\n// the navigation response is received.\ntype SPANavigationTask = {\n  // The router state that corresponds to the tree that this Task represents.\n  route: FlightRouterState\n  // The CacheNode that corresponds to the tree that this Task represents. If\n  // `children` is null (i.e. if this is a terminal task node), then `node`\n  // represents a brand new Cache Node tree, which way or may not need to be\n  // filled with dynamic data from the server.\n  node: CacheNode | null\n  // The tree sent to the server during the dynamic request. This is the\n  // same as `route`, except with the `refetch` marker set on dynamic segments.\n  // If all the segments are static, then this will be null, and no server\n  // request is required.\n  dynamicRequestTree: FlightRouterState | null\n  children: Map<string, SPANavigationTask> | null\n}\n\n// A special type used to bail out and trigger a full-page navigation.\ntype MPANavigationTask = {\n  // MPA tasks are distinguised from SPA tasks by having a null `route`.\n  route: null\n  node: null\n  dynamicRequestTree: null\n  children: null\n}\n\nconst MPA_NAVIGATION_TASK: MPANavigationTask = {\n  route: null,\n  node: null,\n  dynamicRequestTree: null,\n  children: null,\n}\n\nexport type Task = SPANavigationTask | MPANavigationTask\n\n// Creates a new Cache Node tree (i.e. copy-on-write) that represents the\n// optimistic result of a navigation, using both the current Cache Node tree and\n// data that was prefetched prior to navigation.\n//\n// At the moment we call this function, we haven't yet received the navigation\n// response from the server. It could send back something completely different\n// from the tree that was prefetched — due to rewrites, default routes, parallel\n// routes, etc.\n//\n// But in most cases, it will return the same tree that we prefetched, just with\n// the dynamic holes filled in. So we optimistically assume this will happen,\n// and accept that the real result could be arbitrarily different.\n//\n// We'll reuse anything that was already in the previous tree, since that's what\n// the server does.\n//\n// New segments (ones that don't appear in the old tree) are assigned an\n// unresolved promise. The data for these promises will be fulfilled later, when\n// the navigation response is received.\n//\n// The tree can be rendered immediately after it is created (that's why this is\n// a synchronous function). Any new trees that do not have prefetch data will\n// suspend during rendering, until the dynamic data streams in.\n//\n// Returns a Task object, which contains both the updated Cache Node and a path\n// to the pending subtrees that need to be resolved by the navigation response.\n//\n// A return value of `null` means there were no changes, and the previous tree\n// can be reused without initiating a server request.\nexport function startPPRNavigation(\n  navigatedAt: number,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  const segmentPath: Array<FlightSegmentPath> = []\n  return updateCacheNodeOnNavigation(\n    navigatedAt,\n    oldCacheNode,\n    oldRouterState,\n    newRouterState,\n    false,\n    prefetchData,\n    prefetchHead,\n    isPrefetchHeadPartial,\n    isSamePageNavigation,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction updateCacheNodeOnNavigation(\n  navigatedAt: number,\n  oldCacheNode: CacheNode,\n  oldRouterState: FlightRouterState,\n  newRouterState: FlightRouterState,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  isSamePageNavigation: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task | null {\n  // Diff the old and new trees to reuse the shared layouts.\n  const oldRouterStateChildren = oldRouterState[1]\n  const newRouterStateChildren = newRouterState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n\n  if (!didFindRootLayout) {\n    // We're currently traversing the part of the tree that was also part of\n    // the previous route. If we discover a root layout, then we don't need to\n    // trigger an MPA navigation. See beginRenderingNewRouteTree for context.\n    const isRootLayout = newRouterState[4] === true\n    if (isRootLayout) {\n      // Found a matching root layout.\n      didFindRootLayout = true\n    }\n  }\n\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n\n  // Clone the current set of segment children, even if they aren't active in\n  // the new tree.\n  // TODO: We currently retain all the inactive segments indefinitely, until\n  // there's an explicit refresh, or a parent layout is lazily refreshed. We\n  // rely on this for popstate navigations, which update the Router State Tree\n  // but do not eagerly perform a data fetch, because they expect the segment\n  // data to already be in the Cache Node tree. For highly static sites that\n  // are mostly read-only, this may happen only rarely, causing memory to\n  // leak. We should figure out a better model for the lifetime of inactive\n  // segments, so we can maintain instant back/forward navigations without\n  // leaking memory indefinitely.\n  const prefetchParallelRoutes = new Map(oldParallelRoutes)\n\n  // As we diff the trees, we may sometimes modify (copy-on-write, not mutate)\n  // the Route Tree that was returned by the server — for example, in the case\n  // of default parallel routes, we preserve the currently active segment. To\n  // avoid mutating the original tree, we clone the router state children along\n  // the return path.\n  let patchedRouterStateChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let taskChildren = null\n\n  // Most navigations require a request to fetch additional data from the\n  // server, either because the data was not already prefetched, or because the\n  // target route contains dynamic data that cannot be prefetched.\n  //\n  // However, if the target route is fully static, and it's already completely\n  // loaded into the segment cache, then we can skip the server request.\n  //\n  // This starts off as `false`, and is set to `true` if any of the child\n  // routes requires a dynamic request.\n  let needsDynamicRequest = false\n  // As we traverse the children, we'll construct a FlightRouterState that can\n  // be sent to the server to request the dynamic data. If it turns out that\n  // nothing in the subtree is dynamic (i.e. needsDynamicRequest is false at the\n  // end), then this will be discarded.\n  // TODO: We can probably optimize the format of this data structure to only\n  // include paths that are dynamic. Instead of reusing the\n  // FlightRouterState type.\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n\n  for (let parallelRouteKey in newRouterStateChildren) {\n    const newRouterStateChild: FlightRouterState =\n      newRouterStateChildren[parallelRouteKey]\n    const oldRouterStateChild: FlightRouterState | void =\n      oldRouterStateChildren[parallelRouteKey]\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    const prefetchDataChild: CacheNodeSeedData | void | null =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const newSegmentChild = newRouterStateChild[0]\n    const newSegmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      newSegmentChild,\n    ])\n    const newSegmentKeyChild = createRouterCacheKey(newSegmentChild)\n\n    const oldSegmentChild =\n      oldRouterStateChild !== undefined ? oldRouterStateChild[0] : undefined\n\n    const oldCacheNodeChild =\n      oldSegmentMapChild !== undefined\n        ? oldSegmentMapChild.get(newSegmentKeyChild)\n        : undefined\n\n    let taskChild: Task | null\n    if (newSegmentChild === DEFAULT_SEGMENT_KEY) {\n      // This is another kind of leaf segment — a default route.\n      //\n      // Default routes have special behavior. When there's no matching segment\n      // for a parallel route, Next.js preserves the currently active segment\n      // during a client navigation — but not for initial render. The server\n      // leaves it to the client to account for this. So we need to handle\n      // it here.\n      if (oldRouterStateChild !== undefined) {\n        // Reuse the existing Router State for this segment. We spawn a \"task\"\n        // just to keep track of the updated router state; unlike most, it's\n        // already fulfilled and won't be affected by the dynamic response.\n        taskChild = spawnReusedTask(oldRouterStateChild)\n      } else {\n        // There's no currently active segment. Switch to the \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else if (\n      isSamePageNavigation &&\n      // Check if this is a page segment.\n      // TODO: We're not consistent about how we do this check. Some places\n      // check if the segment starts with PAGE_SEGMENT_KEY, but most seem to\n      // check if there any any children, which is why I'm doing it here. We\n      // should probably encode an empty children set as `null` though. Either\n      // way, we should update all the checks to be consistent.\n      Object.keys(newRouterStateChild[1]).length === 0\n    ) {\n      // We special case navigations to the exact same URL as the current\n      // location. It's a common UI pattern for apps to refresh when you click a\n      // link to the current page. So when this happens, we refresh the dynamic\n      // data in the page segments.\n      //\n      // Note that this does not apply if the any part of the hash or search\n      // query has changed. This might feel a bit weird but it makes more sense\n      // when you consider that the way to trigger this behavior is to click\n      // the same link multiple times.\n      //\n      // TODO: We should probably refresh the *entire* route when this case\n      // occurs, not just the page segments. Essentially treating it the same as\n      // a refresh() triggered by an action, which is the more explicit way of\n      // modeling the UI pattern described above.\n      //\n      // Also note that this only refreshes the dynamic data, not static/\n      // cached data. If the page segment is fully static and prefetched, the\n      // request is skipped. (This is also how refresh() works.)\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    } else if (\n      oldRouterStateChild !== undefined &&\n      oldSegmentChild !== undefined &&\n      matchSegment(newSegmentChild, oldSegmentChild)\n    ) {\n      if (\n        oldCacheNodeChild !== undefined &&\n        oldRouterStateChild !== undefined\n      ) {\n        // This segment exists in both the old and new trees. Recursively update\n        // the children.\n        taskChild = updateCacheNodeOnNavigation(\n          navigatedAt,\n          oldCacheNodeChild,\n          oldRouterStateChild,\n          newRouterStateChild,\n          didFindRootLayout,\n          prefetchDataChild,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          isSamePageNavigation,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      } else {\n        // There's no existing Cache Node for this segment. Switch to the\n        // \"create\" path.\n        taskChild = beginRenderingNewRouteTree(\n          navigatedAt,\n          oldRouterStateChild,\n          newRouterStateChild,\n          oldCacheNodeChild,\n          didFindRootLayout,\n          prefetchDataChild !== undefined ? prefetchDataChild : null,\n          prefetchHead,\n          isPrefetchHeadPartial,\n          newSegmentPathChild,\n          scrollableSegmentsResult\n        )\n      }\n    } else {\n      // This is a new tree. Switch to the \"create\" path.\n      taskChild = beginRenderingNewRouteTree(\n        navigatedAt,\n        oldRouterStateChild,\n        newRouterStateChild,\n        oldCacheNodeChild,\n        didFindRootLayout,\n        prefetchDataChild !== undefined ? prefetchDataChild : null,\n        prefetchHead,\n        isPrefetchHeadPartial,\n        newSegmentPathChild,\n        scrollableSegmentsResult\n      )\n    }\n\n    if (taskChild !== null) {\n      // Recursively propagate up the child tasks.\n\n      if (taskChild.route === null) {\n        // One of the child tasks discovered a change to the root layout.\n        // Immediately unwind from this recursive traversal.\n        return MPA_NAVIGATION_TASK\n      }\n\n      if (taskChildren === null) {\n        taskChildren = new Map()\n      }\n      taskChildren.set(parallelRouteKey, taskChild)\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(newSegmentKeyChild, newCacheNodeChild)\n        prefetchParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n\n      // The child tree's route state may be different from the prefetched\n      // route sent by the server. We need to clone it as we traverse back up\n      // the tree.\n      const taskChildRoute = taskChild.route\n      patchedRouterStateChildren[parallelRouteKey] = taskChildRoute\n\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = taskChildRoute\n      }\n    } else {\n      // The child didn't change. We can use the prefetched router state.\n      patchedRouterStateChildren[parallelRouteKey] = newRouterStateChild\n      dynamicRequestTreeChildren[parallelRouteKey] = newRouterStateChild\n    }\n  }\n\n  if (taskChildren === null) {\n    // No new tasks were spawned.\n    return null\n  }\n\n  const newCacheNode: ReadyCacheNode = {\n    lazyData: null,\n    rsc: oldCacheNode.rsc,\n    // We intentionally aren't updating the prefetchRsc field, since this node\n    // is already part of the current tree, because it would be weird for\n    // prefetch data to be newer than the final data. It probably won't ever be\n    // observable anyway, but it could happen if the segment is unmounted then\n    // mounted again, because LayoutRouter will momentarily switch to rendering\n    // prefetchRsc, via useDeferredValue.\n    prefetchRsc: oldCacheNode.prefetchRsc,\n    head: oldCacheNode.head,\n    prefetchHead: oldCacheNode.prefetchHead,\n    loading: oldCacheNode.loading,\n\n    // Everything is cloned except for the children, which we computed above.\n    parallelRoutes: prefetchParallelRoutes,\n\n    navigatedAt,\n  }\n\n  return {\n    // Return a cloned copy of the router state with updated children.\n    route: patchRouterStateWithNewChildren(\n      newRouterState,\n      patchedRouterStateChildren\n    ),\n    node: newCacheNode,\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(\n          newRouterState,\n          dynamicRequestTreeChildren\n        )\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction beginRenderingNewRouteTree(\n  navigatedAt: number,\n  oldRouterState: FlightRouterState | void,\n  newRouterState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  didFindRootLayout: boolean,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): Task {\n  if (!didFindRootLayout) {\n    // The route tree changed before we reached a layout. (The highest-level\n    // layout in a route tree is referred to as the \"root\" layout.) This could\n    // mean that we're navigating between two different root layouts. When this\n    // happens, we perform a full-page (MPA-style) navigation.\n    //\n    // However, the algorithm for deciding where to start rendering a route\n    // (i.e. the one performed in order to reach this function) is stricter\n    // than the one used to detect a change in the root layout. So just because\n    // we're re-rendering a segment outside of the root layout does not mean we\n    // should trigger a full-page navigation.\n    //\n    // Specifically, we handle dynamic parameters differently: two segments are\n    // considered the same even if their parameter values are different.\n    //\n    // Refer to isNavigatingToNewRootLayout for details.\n    //\n    // Note that we only have to perform this extra traversal if we didn't\n    // already discover a root layout in the part of the tree that is unchanged.\n    // In the common case, this branch is skipped completely.\n    if (\n      oldRouterState === undefined ||\n      isNavigatingToNewRootLayout(oldRouterState, newRouterState)\n    ) {\n      // The root layout changed. Perform a full-page navigation.\n      return MPA_NAVIGATION_TASK\n    }\n  }\n  return createCacheNodeOnNavigation(\n    navigatedAt,\n    newRouterState,\n    existingCacheNode,\n    prefetchData,\n    possiblyPartialPrefetchHead,\n    isPrefetchHeadPartial,\n    segmentPath,\n    scrollableSegmentsResult\n  )\n}\n\nfunction createCacheNodeOnNavigation(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  existingCacheNode: CacheNode | void,\n  prefetchData: CacheNodeSeedData | null,\n  possiblyPartialPrefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Same traversal as updateCacheNodeNavigation, but we switch to this path\n  // once we reach the part of the tree that was not in the previous route. We\n  // don't need to diff against the old tree, we just need to create a new one.\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const routerStateChildren = routerState[1]\n  const isLeafSegment = Object.keys(routerStateChildren).length === 0\n\n  // Even we're rendering inside the \"new\" part of the target tree, we may have\n  // a locally cached segment that we can reuse. This may come from either 1)\n  // the CacheNode tree, which lives in React state and is populated by previous\n  // navigations; or 2) the prefetch cache, which is a separate cache that is\n  // populated by prefetches.\n  let rsc: React.ReactNode\n  let loading: LoadingModuleData | Promise<LoadingModuleData>\n  let head: HeadData | null\n  let cacheNodeNavigatedAt: number\n  if (\n    existingCacheNode !== undefined &&\n    // DYNAMIC_STALETIME_MS defaults to 0, but it can be increased using\n    // the experimental.staleTimes.dynamic config. When set, we'll avoid\n    // refetching dynamic data if it was fetched within the given threshold.\n    existingCacheNode.navigatedAt + DYNAMIC_STALETIME_MS > navigatedAt\n  ) {\n    // We have an existing CacheNode for this segment, and it's not stale. We\n    // should reuse it rather than request a new one.\n    rsc = existingCacheNode.rsc\n    loading = existingCacheNode.loading\n    head = existingCacheNode.head\n\n    // Don't update the navigatedAt timestamp, since we're reusing stale data.\n    cacheNodeNavigatedAt = existingCacheNode.navigatedAt\n  } else if (prefetchData !== null) {\n    // There's no existing CacheNode for this segment, but we do have prefetch\n    // data. If the prefetch data is fully static (i.e. does not contain any\n    // dynamic holes), we don't need to request it from the server.\n    rsc = prefetchData[1]\n    loading = prefetchData[3]\n    head = isLeafSegment ? possiblyPartialPrefetchHead : null\n    // Even though we're accessing the data from the prefetch cache, this is\n    // conceptually a new segment, not a reused one. So we should update the\n    // navigatedAt timestamp.\n    cacheNodeNavigatedAt = navigatedAt\n    const isPrefetchRscPartial = prefetchData[4]\n    if (\n      // Check if the segment data is partial\n      isPrefetchRscPartial ||\n      // Check if the head is partial (only relevant if this is a leaf segment)\n      (isPrefetchHeadPartial && isLeafSegment)\n    ) {\n      // We only have partial data from this segment. Like missing segments, we\n      // must request the full data from the server.\n      return spawnPendingTask(\n        navigatedAt,\n        routerState,\n        prefetchData,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPath,\n        scrollableSegmentsResult\n      )\n    } else {\n      // The prefetch data is fully static, so we can omit it from the\n      // navigation request.\n    }\n  } else {\n    // There's no prefetch for this segment. Everything from this point will be\n    // requested from the server, even if there are static children below it.\n    // Create a terminal task node that will later be fulfilled by\n    // server response.\n    return spawnPendingTask(\n      navigatedAt,\n      routerState,\n      null,\n      possiblyPartialPrefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    )\n  }\n\n  // We already have a full segment we can render, so we don't need to request a\n  // new one from the server. Keep traversing down the tree until we reach\n  // something that requires a dynamic request.\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n  const taskChildren = new Map()\n  const existingCacheNodeChildren =\n    existingCacheNode !== undefined ? existingCacheNode.parallelRoutes : null\n  const cacheNodeChildren = new Map(existingCacheNodeChildren)\n  let dynamicRequestTreeChildren: {\n    [parallelRouteKey: string]: FlightRouterState\n  } = {}\n  let needsDynamicRequest = false\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  } else {\n    for (let parallelRouteKey in routerStateChildren) {\n      const routerStateChild: FlightRouterState =\n        routerStateChildren[parallelRouteKey]\n      const prefetchDataChild: CacheNodeSeedData | void | null =\n        prefetchDataChildren !== null\n          ? prefetchDataChildren[parallelRouteKey]\n          : null\n      const existingSegmentMapChild =\n        existingCacheNodeChildren !== null\n          ? existingCacheNodeChildren.get(parallelRouteKey)\n          : undefined\n      const segmentChild = routerStateChild[0]\n      const segmentPathChild = segmentPath.concat([\n        parallelRouteKey,\n        segmentChild,\n      ])\n      const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n      const existingCacheNodeChild =\n        existingSegmentMapChild !== undefined\n          ? existingSegmentMapChild.get(segmentKeyChild)\n          : undefined\n\n      const taskChild = createCacheNodeOnNavigation(\n        navigatedAt,\n        routerStateChild,\n        existingCacheNodeChild,\n        prefetchDataChild,\n        possiblyPartialPrefetchHead,\n        isPrefetchHeadPartial,\n        segmentPathChild,\n        scrollableSegmentsResult\n      )\n      taskChildren.set(parallelRouteKey, taskChild)\n      const dynamicRequestTreeChild = taskChild.dynamicRequestTree\n      if (dynamicRequestTreeChild !== null) {\n        // Something in the child tree is dynamic.\n        needsDynamicRequest = true\n        dynamicRequestTreeChildren[parallelRouteKey] = dynamicRequestTreeChild\n      } else {\n        dynamicRequestTreeChildren[parallelRouteKey] = routerStateChild\n      }\n      const newCacheNodeChild = taskChild.node\n      if (newCacheNodeChild !== null) {\n        const newSegmentMapChild: ChildSegmentMap = new Map()\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        cacheNodeChildren.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  return {\n    // Since we're inside a new route tree, unlike the\n    // `updateCacheNodeOnNavigation` path, the router state on the children\n    // tasks is always the same as the router state we pass in. So we don't need\n    // to clone/modify it.\n    route: routerState,\n    node: {\n      lazyData: null,\n      // Since this segment is already full, we don't need to use the\n      // `prefetchRsc` field.\n      rsc,\n      prefetchRsc: null,\n      head,\n      prefetchHead: null,\n      loading,\n      parallelRoutes: cacheNodeChildren,\n      navigatedAt: cacheNodeNavigatedAt,\n    },\n    dynamicRequestTree: needsDynamicRequest\n      ? patchRouterStateWithNewChildren(routerState, dynamicRequestTreeChildren)\n      : null,\n    children: taskChildren,\n  }\n}\n\nfunction patchRouterStateWithNewChildren(\n  baseRouterState: FlightRouterState,\n  newChildren: { [parallelRouteKey: string]: FlightRouterState }\n): FlightRouterState {\n  const clone: FlightRouterState = [baseRouterState[0], newChildren]\n  // Based on equivalent logic in apply-router-state-patch-to-tree, but should\n  // confirm whether we need to copy all of these fields. Not sure the server\n  // ever sends, e.g. the refetch marker.\n  if (2 in baseRouterState) {\n    clone[2] = baseRouterState[2]\n  }\n  if (3 in baseRouterState) {\n    clone[3] = baseRouterState[3]\n  }\n  if (4 in baseRouterState) {\n    clone[4] = baseRouterState[4]\n  }\n  return clone\n}\n\nfunction spawnPendingTask(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): SPANavigationTask {\n  // Create a task that will later be fulfilled by data from the server.\n\n  // Clone the prefetched route tree and the `refetch` marker to it. We'll send\n  // this to the server so it knows where to start rendering.\n  const dynamicRequestTree = patchRouterStateWithNewChildren(\n    routerState,\n    routerState[1]\n  )\n  dynamicRequestTree[3] = 'refetch'\n\n  const newTask: Task = {\n    route: routerState,\n\n    // Corresponds to the part of the route that will be rendered on the server.\n    node: createPendingCacheNode(\n      navigatedAt,\n      routerState,\n      prefetchData,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPath,\n      scrollableSegmentsResult\n    ),\n    // Because this is non-null, and it gets propagated up through the parent\n    // tasks, the root task will know that it needs to perform a server request.\n    dynamicRequestTree,\n    children: null,\n  }\n  return newTask\n}\n\nfunction spawnReusedTask(reusedRouterState: FlightRouterState): Task {\n  // Create a task that reuses an existing segment, e.g. when reusing\n  // the current active segment in place of a default route.\n  return {\n    route: reusedRouterState,\n    node: null,\n    dynamicRequestTree: null,\n    children: null,\n  }\n}\n\n// Writes a dynamic server response into the tree created by\n// updateCacheNodeOnNavigation. All pending promises that were spawned by the\n// navigation will be resolved, either with dynamic data from the server, or\n// `null` to indicate that the data is missing.\n//\n// A `null` value will trigger a lazy fetch during render, which will then patch\n// up the tree using the same mechanism as the non-PPR implementation\n// (serverPatchReducer).\n//\n// Usually, the server will respond with exactly the subset of data that we're\n// waiting for — everything below the nearest shared layout. But technically,\n// the server can return anything it wants.\n//\n// This does _not_ create a new tree; it modifies the existing one in place.\n// Which means it must follow the Suspense rules of cache safety.\nexport function listenForDynamicRequest(\n  task: SPANavigationTask,\n  responsePromise: Promise<FetchServerResponseResult>\n) {\n  responsePromise.then(\n    ({ flightData }: FetchServerResponseResult) => {\n      if (typeof flightData === 'string') {\n        // Happens when navigating to page in `pages` from `app`. We shouldn't\n        // get here because should have already handled this during\n        // the prefetch.\n        return\n      }\n      for (const normalizedFlightData of flightData) {\n        const {\n          segmentPath,\n          tree: serverRouterState,\n          seedData: dynamicData,\n          head: dynamicHead,\n        } = normalizedFlightData\n\n        if (!dynamicData) {\n          // This shouldn't happen. PPR should always send back a response.\n          // However, `FlightDataPath` is a shared type and the pre-PPR handling of\n          // this might return null.\n          continue\n        }\n\n        writeDynamicDataIntoPendingTask(\n          task,\n          segmentPath,\n          serverRouterState,\n          dynamicData,\n          dynamicHead\n        )\n      }\n\n      // Now that we've exhausted all the data we received from the server, if\n      // there are any remaining pending tasks in the tree, abort them now.\n      // If there's any missing data, it will trigger a lazy fetch.\n      abortTask(task, null)\n    },\n    (error: any) => {\n      // This will trigger an error during render\n      abortTask(task, error)\n    }\n  )\n}\n\nfunction writeDynamicDataIntoPendingTask(\n  rootTask: SPANavigationTask,\n  segmentPath: FlightSegmentPath,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n) {\n  // The data sent by the server represents only a subtree of the app. We need\n  // to find the part of the task tree that matches the server response, and\n  // fulfill it using the dynamic data.\n  //\n  // segmentPath represents the parent path of subtree. It's a repeating pattern\n  // of parallel route key and segment:\n  //\n  //   [string, Segment, string, Segment, string, Segment, ...]\n  //\n  // Iterate through the path and finish any tasks that match this payload.\n  let task = rootTask\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n    const taskChildren = task.children\n    if (taskChildren !== null) {\n      const taskChild = taskChildren.get(parallelRouteKey)\n      if (taskChild !== undefined) {\n        const taskSegment = taskChild.route[0]\n        if (matchSegment(segment, taskSegment)) {\n          // Found a match for this task. Keep traversing down the task tree.\n          task = taskChild\n          continue\n        }\n      }\n    }\n    // We didn't find a child task that matches the server data. Exit. We won't\n    // abort the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n    return\n  }\n\n  finishTaskUsingDynamicDataPayload(\n    task,\n    serverRouterState,\n    dynamicData,\n    dynamicHead\n  )\n}\n\nfunction finishTaskUsingDynamicDataPayload(\n  task: SPANavigationTask,\n  serverRouterState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n) {\n  if (task.dynamicRequestTree === null) {\n    // Everything in this subtree is already complete. Bail out.\n    return\n  }\n\n  // dynamicData may represent a larger subtree than the task. Before we can\n  // finish the task, we need to line them up.\n  const taskChildren = task.children\n  const taskNode = task.node\n  if (taskChildren === null) {\n    // We've reached the leaf node of the pending task. The server data tree\n    // lines up the pending Cache Node tree. We can now switch to the\n    // normal algorithm.\n    if (taskNode !== null) {\n      finishPendingCacheNode(\n        taskNode,\n        task.route,\n        serverRouterState,\n        dynamicData,\n        dynamicHead\n      )\n      // Set this to null to indicate that this task is now complete.\n      task.dynamicRequestTree = null\n    }\n    return\n  }\n  // The server returned more data than we need to finish the task. Skip over\n  // the extra segments until we reach the leaf task node.\n  const serverChildren = serverRouterState[1]\n  const dynamicDataChildren = dynamicData[2]\n\n  for (const parallelRouteKey in serverRouterState) {\n    const serverRouterStateChild: FlightRouterState =\n      serverChildren[parallelRouteKey]\n    const dynamicDataChild: CacheNodeSeedData | null | void =\n      dynamicDataChildren[parallelRouteKey]\n\n    const taskChild = taskChildren.get(parallelRouteKey)\n    if (taskChild !== undefined) {\n      const taskSegment = taskChild.route[0]\n      if (\n        matchSegment(serverRouterStateChild[0], taskSegment) &&\n        dynamicDataChild !== null &&\n        dynamicDataChild !== undefined\n      ) {\n        // Found a match for this task. Keep traversing down the task tree.\n        return finishTaskUsingDynamicDataPayload(\n          taskChild,\n          serverRouterStateChild,\n          dynamicDataChild,\n          dynamicHead\n        )\n      }\n    }\n    // We didn't find a child task that matches the server data. We won't abort\n    // the task, though, because a different FlightDataPath may be able to\n    // fulfill it (see loop in listenForDynamicRequest). We only abort tasks\n    // once we've run out of data.\n  }\n}\n\nfunction createPendingCacheNode(\n  navigatedAt: number,\n  routerState: FlightRouterState,\n  prefetchData: CacheNodeSeedData | null,\n  prefetchHead: HeadData | null,\n  isPrefetchHeadPartial: boolean,\n  segmentPath: FlightSegmentPath,\n  scrollableSegmentsResult: Array<FlightSegmentPath>\n): ReadyCacheNode {\n  const routerStateChildren = routerState[1]\n  const prefetchDataChildren = prefetchData !== null ? prefetchData[2] : null\n\n  const parallelRoutes = new Map()\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const prefetchDataChild: CacheNodeSeedData | null | void =\n      prefetchDataChildren !== null\n        ? prefetchDataChildren[parallelRouteKey]\n        : null\n\n    const segmentChild = routerStateChild[0]\n    const segmentPathChild = segmentPath.concat([\n      parallelRouteKey,\n      segmentChild,\n    ])\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n\n    const newCacheNodeChild = createPendingCacheNode(\n      navigatedAt,\n      routerStateChild,\n      prefetchDataChild === undefined ? null : prefetchDataChild,\n      prefetchHead,\n      isPrefetchHeadPartial,\n      segmentPathChild,\n      scrollableSegmentsResult\n    )\n\n    const newSegmentMapChild: ChildSegmentMap = new Map()\n    newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n    parallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n  }\n\n  // The head is assigned to every leaf segment delivered by the server. Based\n  // on corresponding logic in fill-lazy-items-till-leaf-with-head.ts\n  const isLeafSegment = parallelRoutes.size === 0\n\n  if (isLeafSegment) {\n    // The segment path of every leaf segment (i.e. page) is collected into\n    // a result array. This is used by the LayoutRouter to scroll to ensure that\n    // new pages are visible after a navigation.\n    // TODO: We should use a string to represent the segment path instead of\n    // an array. We already use a string representation for the path when\n    // accessing the Segment Cache, so we can use the same one.\n    scrollableSegmentsResult.push(segmentPath)\n  }\n\n  const maybePrefetchRsc = prefetchData !== null ? prefetchData[1] : null\n  const maybePrefetchLoading = prefetchData !== null ? prefetchData[3] : null\n  return {\n    lazyData: null,\n    parallelRoutes: parallelRoutes,\n\n    prefetchRsc: maybePrefetchRsc !== undefined ? maybePrefetchRsc : null,\n    prefetchHead: isLeafSegment ? prefetchHead : [null, null],\n\n    // TODO: Technically, a loading boundary could contain dynamic data. We must\n    // have separate `loading` and `prefetchLoading` fields to handle this, like\n    // we do for the segment data and head.\n    loading: maybePrefetchLoading !== undefined ? maybePrefetchLoading : null,\n\n    // Create a deferred promise. This will be fulfilled once the dynamic\n    // response is received from the server.\n    rsc: createDeferredRsc() as React.ReactNode,\n    head: isLeafSegment ? (createDeferredRsc() as React.ReactNode) : null,\n\n    navigatedAt,\n  }\n}\n\nfunction finishPendingCacheNode(\n  cacheNode: CacheNode,\n  taskState: FlightRouterState,\n  serverState: FlightRouterState,\n  dynamicData: CacheNodeSeedData,\n  dynamicHead: HeadData\n): void {\n  // Writes a dynamic response into an existing Cache Node tree. This does _not_\n  // create a new tree, it updates the existing tree in-place. So it must follow\n  // the Suspense rules of cache safety — it can resolve pending promises, but\n  // it cannot overwrite existing data. It can add segments to the tree (because\n  // a missing segment will cause the layout router to suspend).\n  // but it cannot delete them.\n  //\n  // We must resolve every promise in the tree, or else it will suspend\n  // indefinitely. If we did not receive data for a segment, we will resolve its\n  // data promise to `null` to trigger a lazy fetch during render.\n  const taskStateChildren = taskState[1]\n  const serverStateChildren = serverState[1]\n  const dataChildren = dynamicData[2]\n\n  // The router state that we traverse the tree with (taskState) is the same one\n  // that we used to construct the pending Cache Node tree. That way we're sure\n  // to resolve all the pending promises.\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in taskStateChildren) {\n    const taskStateChild: FlightRouterState =\n      taskStateChildren[parallelRouteKey]\n    const serverStateChild: FlightRouterState | void =\n      serverStateChildren[parallelRouteKey]\n    const dataChild: CacheNodeSeedData | null | void =\n      dataChildren[parallelRouteKey]\n\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    const taskSegmentChild = taskStateChild[0]\n    const taskSegmentKeyChild = createRouterCacheKey(taskSegmentChild)\n\n    const cacheNodeChild =\n      segmentMapChild !== undefined\n        ? segmentMapChild.get(taskSegmentKeyChild)\n        : undefined\n\n    if (cacheNodeChild !== undefined) {\n      if (\n        serverStateChild !== undefined &&\n        matchSegment(taskSegmentChild, serverStateChild[0])\n      ) {\n        if (dataChild !== undefined && dataChild !== null) {\n          // This is the happy path. Recursively update all the children.\n          finishPendingCacheNode(\n            cacheNodeChild,\n            taskStateChild,\n            serverStateChild,\n            dataChild,\n            dynamicHead\n          )\n        } else {\n          // The server never returned data for this segment. Trigger a lazy\n          // fetch during render. This shouldn't happen because the Route Tree\n          // and the Seed Data tree sent by the server should always be the same\n          // shape when part of the same server response.\n          abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n        }\n      } else {\n        // The server never returned data for this segment. Trigger a lazy\n        // fetch during render.\n        abortPendingCacheNode(taskStateChild, cacheNodeChild, null)\n      }\n    } else {\n      // The server response matches what was expected to receive, but there's\n      // no matching Cache Node in the task tree. This is a bug in the\n      // implementation because we should have created a node for every\n      // segment in the tree that's associated with this task.\n    }\n  }\n\n  // Use the dynamic data from the server to fulfill the deferred RSC promise\n  // on the Cache Node.\n  const rsc = cacheNode.rsc\n  const dynamicSegmentData = dynamicData[1]\n  if (rsc === null) {\n    // This is a lazy cache node. We can overwrite it. This is only safe\n    // because we know that the LayoutRouter suspends if `rsc` is `null`.\n    cacheNode.rsc = dynamicSegmentData\n  } else if (isDeferredRsc(rsc)) {\n    // This is a deferred RSC promise. We can fulfill it with the data we just\n    // received from the server. If it was already resolved by a different\n    // navigation, then this does nothing because we can't overwrite data.\n    rsc.resolve(dynamicSegmentData)\n  } else {\n    // This is not a deferred RSC promise, nor is it empty, so it must have\n    // been populated by a different navigation. We must not overwrite it.\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved with the dynamic head from\n  // the server.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(dynamicHead)\n  }\n}\n\nexport function abortTask(task: SPANavigationTask, error: any): void {\n  const cacheNode = task.node\n  if (cacheNode === null) {\n    // This indicates the task is already complete.\n    return\n  }\n\n  const taskChildren = task.children\n  if (taskChildren === null) {\n    // Reached the leaf task node. This is the root of a pending cache\n    // node tree.\n    abortPendingCacheNode(task.route, cacheNode, error)\n  } else {\n    // This is an intermediate task node. Keep traversing until we reach a\n    // task node with no children. That will be the root of the cache node tree\n    // that needs to be resolved.\n    for (const taskChild of taskChildren.values()) {\n      abortTask(taskChild, error)\n    }\n  }\n\n  // Set this to null to indicate that this task is now complete.\n  task.dynamicRequestTree = null\n}\n\nfunction abortPendingCacheNode(\n  routerState: FlightRouterState,\n  cacheNode: CacheNode,\n  error: any\n): void {\n  // For every pending segment in the tree, resolve its `rsc` promise to `null`\n  // to trigger a lazy fetch during render.\n  //\n  // Or, if an error object is provided, it will error instead.\n  const routerStateChildren = routerState[1]\n  const parallelRoutes = cacheNode.parallelRoutes\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentMapChild = parallelRoutes.get(parallelRouteKey)\n    if (segmentMapChild === undefined) {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n      continue\n    }\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const cacheNodeChild = segmentMapChild.get(segmentKeyChild)\n    if (cacheNodeChild !== undefined) {\n      abortPendingCacheNode(routerStateChild, cacheNodeChild, error)\n    } else {\n      // This shouldn't happen because we're traversing the same tree that was\n      // used to construct the cache nodes in the first place.\n    }\n  }\n  const rsc = cacheNode.rsc\n  if (isDeferredRsc(rsc)) {\n    if (error === null) {\n      // This will trigger a lazy fetch during render.\n      rsc.resolve(null)\n    } else {\n      // This will trigger an error during rendering.\n      rsc.reject(error)\n    }\n  }\n\n  // Check if this is a leaf segment. If so, it will have a `head` property with\n  // a pending promise that needs to be resolved. If an error was provided, we\n  // will not resolve it with an error, since this is rendered at the root of\n  // the app. We want the segment to error, not the entire app.\n  const head = cacheNode.head\n  if (isDeferredRsc(head)) {\n    head.resolve(null)\n  }\n}\n\nexport function updateCacheNodeOnPopstateRestoration(\n  oldCacheNode: CacheNode,\n  routerState: FlightRouterState\n): ReadyCacheNode {\n  // A popstate navigation reads data from the local cache. It does not issue\n  // new network requests (unless the cache entries have been evicted). So, we\n  // update the cache to drop the prefetch data for any segment whose dynamic\n  // data was already received. This prevents an unnecessary flash back to PPR\n  // state during a back/forward navigation.\n  //\n  // This function clones the entire cache node tree and sets the `prefetchRsc`\n  // field to `null` to prevent it from being rendered. We can't mutate the node\n  // in place because this is a concurrent data structure.\n\n  const routerStateChildren = routerState[1]\n  const oldParallelRoutes = oldCacheNode.parallelRoutes\n  const newParallelRoutes = new Map(oldParallelRoutes)\n  for (let parallelRouteKey in routerStateChildren) {\n    const routerStateChild: FlightRouterState =\n      routerStateChildren[parallelRouteKey]\n    const segmentChild = routerStateChild[0]\n    const segmentKeyChild = createRouterCacheKey(segmentChild)\n    const oldSegmentMapChild = oldParallelRoutes.get(parallelRouteKey)\n    if (oldSegmentMapChild !== undefined) {\n      const oldCacheNodeChild = oldSegmentMapChild.get(segmentKeyChild)\n      if (oldCacheNodeChild !== undefined) {\n        const newCacheNodeChild = updateCacheNodeOnPopstateRestoration(\n          oldCacheNodeChild,\n          routerStateChild\n        )\n        const newSegmentMapChild = new Map(oldSegmentMapChild)\n        newSegmentMapChild.set(segmentKeyChild, newCacheNodeChild)\n        newParallelRoutes.set(parallelRouteKey, newSegmentMapChild)\n      }\n    }\n  }\n\n  // Only show prefetched data if the dynamic data is still pending.\n  //\n  // Tehnically, what we're actually checking is whether the dynamic network\n  // response was received. But since it's a streaming response, this does not\n  // mean that all the dynamic data has fully streamed in. It just means that\n  // _some_ of the dynamic data was received. But as a heuristic, we assume that\n  // the rest dynamic data will stream in quickly, so it's still better to skip\n  // the prefetch state.\n  const rsc = oldCacheNode.rsc\n  const shouldUsePrefetch = isDeferredRsc(rsc) && rsc.status === 'pending'\n\n  return {\n    lazyData: null,\n    rsc,\n    head: oldCacheNode.head,\n\n    prefetchHead: shouldUsePrefetch ? oldCacheNode.prefetchHead : [null, null],\n    prefetchRsc: shouldUsePrefetch ? oldCacheNode.prefetchRsc : null,\n    loading: oldCacheNode.loading,\n\n    // These are the cloned children we computed above\n    parallelRoutes: newParallelRoutes,\n\n    navigatedAt: oldCacheNode.navigatedAt,\n  }\n}\n\nconst DEFERRED = Symbol()\n\ntype PendingDeferredRsc = Promise<React.ReactNode> & {\n  status: 'pending'\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype FulfilledDeferredRsc = Promise<React.ReactNode> & {\n  status: 'fulfilled'\n  value: React.ReactNode\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype RejectedDeferredRsc = Promise<React.ReactNode> & {\n  status: 'rejected'\n  reason: any\n  resolve: (value: React.ReactNode) => void\n  reject: (error: any) => void\n  tag: Symbol\n}\n\ntype DeferredRsc =\n  | PendingDeferredRsc\n  | FulfilledDeferredRsc\n  | RejectedDeferredRsc\n\n// This type exists to distinguish a DeferredRsc from a Flight promise. It's a\n// compromise to avoid adding an extra field on every Cache Node, which would be\n// awkward because the pre-PPR parts of codebase would need to account for it,\n// too. We can remove it once type Cache Node type is more settled.\nfunction isDeferredRsc(value: any): value is DeferredRsc {\n  return value && value.tag === DEFERRED\n}\n\nfunction createDeferredRsc(): PendingDeferredRsc {\n  let resolve: any\n  let reject: any\n  const pendingRsc = new Promise<React.ReactNode>((res, rej) => {\n    resolve = res\n    reject = rej\n  }) as PendingDeferredRsc\n  pendingRsc.status = 'pending'\n  pendingRsc.resolve = (value: React.ReactNode) => {\n    if (pendingRsc.status === 'pending') {\n      const fulfilledRsc: FulfilledDeferredRsc = pendingRsc as any\n      fulfilledRsc.status = 'fulfilled'\n      fulfilledRsc.value = value\n      resolve(value)\n    }\n  }\n  pendingRsc.reject = (error: any) => {\n    if (pendingRsc.status === 'pending') {\n      const rejectedRsc: RejectedDeferredRsc = pendingRsc as any\n      rejectedRsc.status = 'rejected'\n      rejectedRsc.reason = error\n      reject(error)\n    }\n  }\n  pendingRsc.tag = DEFERRED\n  return pendingRsc\n}\n","import type {\n  CacheNodeSeedData,\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport {\n  addSearchParamsIfPageSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\nimport { createEmptyCacheNode } from '../app-router'\nimport { applyRouterStatePatchToTree } from './apply-router-state-patch-to-tree'\nimport { createHrefFromUrl } from './create-href-from-url'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport { fillCacheWithNewSubTreeDataButOnlyLoading } from './fill-cache-with-new-subtree-data'\nimport { handleMutable } from './handle-mutable'\nimport { generateSegmentsFromPatch } from './reducers/navigate-reducer'\nimport type { Mutable, ReadonlyReducerState } from './router-reducer-types'\n\n/**\n * This is a stop-gap until per-segment caching is implemented. It leverages the `aliased` flag that is added\n * to prefetch entries when it's determined that the loading state from that entry should be used for this navigation.\n * This function takes the aliased entry and only applies the loading state to the updated cache node.\n * We should remove this once per-segment fetching is implemented as ideally the prefetch cache will contain a\n * more granular segment map and so the router will be able to simply re-use the loading segment for the new navigation.\n */\nexport function handleAliasedPrefetchEntry(\n  navigatedAt: number,\n  state: ReadonlyReducerState,\n  flightData: string | NormalizedFlightData[],\n  url: URL,\n  mutable: Mutable\n) {\n  let currentTree = state.tree\n  let currentCache = state.cache\n  const href = createHrefFromUrl(url)\n  let applied\n  let scrollableSegments: FlightSegmentPath[] = []\n\n  if (typeof flightData === 'string') {\n    return false\n  }\n\n  for (const normalizedFlightData of flightData) {\n    // If the segment doesn't have a loading component, we don't need to do anything.\n    if (!hasLoadingComponentInSeedData(normalizedFlightData.seedData)) {\n      continue\n    }\n\n    let treePatch = normalizedFlightData.tree\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    const { seedData, isRootRender, pathToSegment } = normalizedFlightData\n    // TODO-APP: remove ''\n    const flightSegmentPathWithLeadingEmpty = ['', ...pathToSegment]\n\n    // Segments are keyed by searchParams (e.g. __PAGE__?{\"foo\":\"bar\"}). We might return a less specific, param-less entry,\n    // so we ensure that the final tree contains the correct searchParams (reflected in the URL) are provided in the updated FlightRouterState tree.\n    // We only do this on the first read, as otherwise we'd be overwriting the searchParams that may have already been set\n    treePatch = addSearchParamsToPageSegments(\n      treePatch,\n      Object.fromEntries(url.searchParams)\n    )\n\n    let newTree = applyRouterStatePatchToTree(\n      flightSegmentPathWithLeadingEmpty,\n      currentTree,\n      treePatch,\n      href\n    )\n\n    const newCache = createEmptyCacheNode()\n\n    // The prefetch cache entry was aliased -- this signals that we only fill in the cache with the\n    // loading state and not the actual parallel route seed data.\n    if (isRootRender && seedData) {\n      // Fill in the cache with the new loading / rsc data\n      const rsc = seedData[1]\n      const loading = seedData[3]\n      newCache.loading = loading\n      newCache.rsc = rsc\n\n      // Construct a new tree and apply the aliased loading state for each parallel route\n      fillNewTreeWithOnlyLoadingSegments(\n        navigatedAt,\n        newCache,\n        currentCache,\n        treePatch,\n        seedData\n      )\n    } else {\n      // Copy rsc for the root node of the cache.\n      newCache.rsc = currentCache.rsc\n      newCache.prefetchRsc = currentCache.prefetchRsc\n      newCache.loading = currentCache.loading\n      newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n      // copy the loading state only into the leaf node (the part that changed)\n      fillCacheWithNewSubTreeDataButOnlyLoading(\n        navigatedAt,\n        newCache,\n        currentCache,\n        normalizedFlightData\n      )\n    }\n\n    // If we don't have an updated tree, there's no reason to update the cache, as the tree\n    // dictates what cache nodes to render.\n    if (newTree) {\n      currentTree = newTree\n      currentCache = newCache\n      applied = true\n    }\n\n    for (const subSegment of generateSegmentsFromPatch(treePatch)) {\n      const scrollableSegmentPath = [\n        ...normalizedFlightData.pathToSegment,\n        ...subSegment,\n      ]\n      // Filter out the __DEFAULT__ paths as they shouldn't be scrolled to in this case.\n      if (\n        scrollableSegmentPath[scrollableSegmentPath.length - 1] !==\n        DEFAULT_SEGMENT_KEY\n      ) {\n        scrollableSegments.push(scrollableSegmentPath)\n      }\n    }\n  }\n\n  if (!applied) {\n    return false\n  }\n\n  mutable.patchedTree = currentTree\n  mutable.cache = currentCache\n  mutable.canonicalUrl = href\n  mutable.hashFragment = url.hash\n  mutable.scrollableSegments = scrollableSegments\n\n  return handleMutable(state, mutable)\n}\n\nfunction hasLoadingComponentInSeedData(seedData: CacheNodeSeedData | null) {\n  if (!seedData) return false\n\n  const parallelRoutes = seedData[2]\n  const loading = seedData[3]\n\n  if (loading) {\n    return true\n  }\n\n  for (const key in parallelRoutes) {\n    if (hasLoadingComponentInSeedData(parallelRoutes[key])) {\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction fillNewTreeWithOnlyLoadingSegments(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null\n) {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    return\n  }\n\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const rsc = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        // copy the layout but null the page segment as that's not meant to be used\n        rsc: segmentForParallelRoute.includes(PAGE_SEGMENT_KEY) ? null : rsc,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n        navigatedAt,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt: -1,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillNewTreeWithOnlyLoadingSegments(\n      navigatedAt,\n      newCacheNode,\n      existingCache,\n      parallelRouteState,\n      parallelSeedData\n    )\n  }\n}\n\n/**\n * Add search params to the page segments in the flight router state\n * Page segments that are associated with search params have a page segment key\n * followed by a query string. This function will add those params to the page segment.\n * This is useful if we return an aliased prefetch entry (ie, won't have search params)\n * but the canonical router URL has search params.\n */\nexport function addSearchParamsToPageSegments(\n  flightRouterState: FlightRouterState,\n  searchParams: Record<string, string | string[] | undefined>\n): FlightRouterState {\n  const [segment, parallelRoutes, ...rest] = flightRouterState\n\n  // If it's a page segment, modify the segment by adding search params\n  if (segment.includes(PAGE_SEGMENT_KEY)) {\n    const newSegment = addSearchParamsIfPageSegment(segment, searchParams)\n    return [newSegment, parallelRoutes, ...rest]\n  }\n\n  // Otherwise, recurse through the parallel routes and return a new tree\n  const updatedParallelRoutes: { [key: string]: FlightRouterState } = {}\n\n  for (const [key, parallelRoute] of Object.entries(parallelRoutes)) {\n    updatedParallelRoutes[key] = addSearchParamsToPageSegments(\n      parallelRoute,\n      searchParams\n    )\n  }\n\n  return [segment, updatedParallelRoutes, ...rest]\n}\n","import type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../../server/app-render/types'\nimport { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { invalidateCacheBelowFlightSegmentPath } from '../invalidate-cache-below-flight-segmentpath'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { shouldHardNavigate } from '../should-hard-navigate'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport {\n  PrefetchCacheEntryStatus,\n  type Mutable,\n  type NavigateAction,\n  type ReadonlyReducerState,\n  type ReducerState,\n} from '../router-reducer-types'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport { prefetchQueue } from './prefetch-reducer'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { DEFAULT_SEGMENT_KEY } from '../../../../shared/lib/segment'\nimport { listenForDynamicRequest, startPPRNavigation } from '../ppr-navigations'\nimport {\n  getOrCreatePrefetchCacheEntry,\n  prunePrefetchCache,\n} from '../prefetch-cache-utils'\nimport { clearCacheNodeDataForSegmentPath } from '../clear-cache-node-data-for-segment-path'\nimport { handleAliasedPrefetchEntry } from '../aliased-prefetch-navigations'\nimport {\n  navigate as navigateUsingSegmentCache,\n  NavigationResultTag,\n  type NavigationResult,\n} from '../../segment-cache'\n\nexport function handleExternalUrl(\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  url: string,\n  pendingPush: boolean\n) {\n  mutable.mpaNavigation = true\n  mutable.canonicalUrl = url\n  mutable.pendingPush = pendingPush\n  mutable.scrollableSegments = undefined\n\n  return handleMutable(state, mutable)\n}\n\nexport function generateSegmentsFromPatch(\n  flightRouterPatch: FlightRouterState\n): FlightSegmentPath[] {\n  const segments: FlightSegmentPath[] = []\n  const [segment, parallelRoutes] = flightRouterPatch\n\n  if (Object.keys(parallelRoutes).length === 0) {\n    return [[segment]]\n  }\n\n  for (const [parallelRouteKey, parallelRoute] of Object.entries(\n    parallelRoutes\n  )) {\n    for (const childSegment of generateSegmentsFromPatch(parallelRoute)) {\n      // If the segment is empty, it means we are at the root of the tree\n      if (segment === '') {\n        segments.push([parallelRouteKey, ...childSegment])\n      } else {\n        segments.push([segment, parallelRouteKey, ...childSegment])\n      }\n    }\n  }\n\n  return segments\n}\n\nfunction triggerLazyFetchForLeafSegments(\n  newCache: CacheNode,\n  currentCache: CacheNode,\n  flightSegmentPath: FlightSegmentPath,\n  treePatch: FlightRouterState\n) {\n  let appliedPatch = false\n\n  newCache.rsc = currentCache.rsc\n  newCache.prefetchRsc = currentCache.prefetchRsc\n  newCache.loading = currentCache.loading\n  newCache.parallelRoutes = new Map(currentCache.parallelRoutes)\n\n  const segmentPathsToFill = generateSegmentsFromPatch(treePatch).map(\n    (segment) => [...flightSegmentPath, ...segment]\n  )\n\n  for (const segmentPaths of segmentPathsToFill) {\n    clearCacheNodeDataForSegmentPath(newCache, currentCache, segmentPaths)\n\n    appliedPatch = true\n  }\n\n  return appliedPatch\n}\n\nfunction handleNavigationResult(\n  url: URL,\n  state: ReadonlyReducerState,\n  mutable: Mutable,\n  pendingPush: boolean,\n  result: NavigationResult\n): ReducerState {\n  switch (result.tag) {\n    case NavigationResultTag.MPA: {\n      // Perform an MPA navigation.\n      const newUrl = result.data\n      return handleExternalUrl(state, mutable, newUrl, pendingPush)\n    }\n    case NavigationResultTag.NoOp: {\n      // The server responded with no change to the current page. However, if\n      // the URL changed, we still need to update that.\n      const newCanonicalUrl = result.data.canonicalUrl\n      mutable.canonicalUrl = newCanonicalUrl\n\n      // Check if the only thing that changed was the hash fragment.\n      const oldUrl = new URL(state.canonicalUrl, url)\n      const onlyHashChange =\n        // We don't need to compare the origins, because client-driven\n        // navigations are always same-origin.\n        url.pathname === oldUrl.pathname &&\n        url.search === oldUrl.search &&\n        url.hash !== oldUrl.hash\n      if (onlyHashChange) {\n        // The only updated part of the URL is the hash.\n        mutable.onlyHashChange = true\n        mutable.shouldScroll = result.data.shouldScroll\n        mutable.hashFragment = url.hash\n        // Setting this to an empty array triggers a scroll for all new and\n        // updated segments. See `ScrollAndFocusHandler` for more details.\n        mutable.scrollableSegments = []\n      }\n\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Success: {\n      // Received a new result.\n      mutable.cache = result.data.cacheNode\n      mutable.patchedTree = result.data.flightRouterState\n      mutable.canonicalUrl = result.data.canonicalUrl\n      mutable.scrollableSegments = result.data.scrollableSegments\n      mutable.shouldScroll = result.data.shouldScroll\n      mutable.hashFragment = result.data.hash\n      return handleMutable(state, mutable)\n    }\n    case NavigationResultTag.Async: {\n      return result.data.then(\n        (asyncResult) =>\n          handleNavigationResult(url, state, mutable, pendingPush, asyncResult),\n        // If the navigation failed, return the current state.\n        // TODO: This matches the current behavior but we need to do something\n        // better here if the network fails.\n        () => {\n          return state\n        }\n      )\n    }\n    default: {\n      result satisfies never\n      return state\n    }\n  }\n}\n\nexport function navigateReducer(\n  state: ReadonlyReducerState,\n  action: NavigateAction\n): ReducerState {\n  const { url, isExternalUrl, navigateType, shouldScroll, allowAliasing } =\n    action\n  const mutable: Mutable = {}\n  const { hash } = url\n  const href = createHrefFromUrl(url)\n  const pendingPush = navigateType === 'push'\n  // we want to prune the prefetch cache on every navigation to avoid it growing too large\n  prunePrefetchCache(state.prefetchCache)\n\n  mutable.preserveCustomHistoryState = false\n  mutable.pendingPush = pendingPush\n\n  if (isExternalUrl) {\n    return handleExternalUrl(state, mutable, url.toString(), pendingPush)\n  }\n\n  // Handles case where `<meta http-equiv=\"refresh\">` tag is present,\n  // which will trigger an MPA navigation.\n  if (document.getElementById('__next-page-redirect')) {\n    return handleExternalUrl(state, mutable, href, pendingPush)\n  }\n\n  if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n    // (Very Early Experimental Feature) Segment Cache\n    //\n    // Bypass the normal prefetch cache and use the new per-segment cache\n    // implementation instead. This is only supported if PPR is enabled, too.\n    //\n    // Temporary glue code between the router reducer and the new navigation\n    // implementation. Eventually we'll rewrite the router reducer to a\n    // state machine.\n    const result = navigateUsingSegmentCache(\n      url,\n      state.cache,\n      state.tree,\n      state.nextUrl,\n      shouldScroll\n    )\n    return handleNavigationResult(url, state, mutable, pendingPush, result)\n  }\n\n  const prefetchValues = getOrCreatePrefetchCacheEntry({\n    url,\n    nextUrl: state.nextUrl,\n    tree: state.tree,\n    prefetchCache: state.prefetchCache,\n    allowAliasing,\n  })\n  const { treeAtTimeOfPrefetch, data } = prefetchValues\n\n  prefetchQueue.bump(data)\n\n  return data.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride, postponed }) => {\n      const navigatedAt = Date.now()\n\n      let isFirstRead = false\n      // we only want to mark this once\n      if (!prefetchValues.lastUsedTime) {\n        // important: we should only mark the cache node as dirty after we unsuspend from the call above\n        prefetchValues.lastUsedTime = navigatedAt\n        isFirstRead = true\n      }\n\n      if (prefetchValues.aliased) {\n        // When alias is enabled, search param may not be included in the canonicalUrl.\n        // But we want to set url to canonicalUrl so that we use redirected path for fetching dynamic data.\n        const urlWithCanonicalPathname = new URL(url.href)\n        if (canonicalUrlOverride) {\n          urlWithCanonicalPathname.pathname = canonicalUrlOverride.pathname\n        }\n\n        const result = handleAliasedPrefetchEntry(\n          navigatedAt,\n          state,\n          flightData,\n          urlWithCanonicalPathname,\n          mutable\n        )\n\n        // We didn't return new router state because we didn't apply the aliased entry for some reason.\n        // We'll re-invoke the navigation handler but ensure that we don't attempt to use the aliased entry. This\n        // will create an on-demand prefetch entry.\n        if (result === false) {\n          return navigateReducer(state, { ...action, allowAliasing: false })\n        }\n\n        return result\n      }\n\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(state, mutable, flightData, pendingPush)\n      }\n\n      const updatedCanonicalUrl = canonicalUrlOverride\n        ? createHrefFromUrl(canonicalUrlOverride)\n        : href\n\n      const onlyHashChange =\n        !!hash &&\n        state.canonicalUrl.split('#', 1)[0] ===\n          updatedCanonicalUrl.split('#', 1)[0]\n\n      // If only the hash has changed, the server hasn't sent us any new data. We can just update\n      // the mutable properties responsible for URL and scroll handling and return early.\n      if (onlyHashChange) {\n        mutable.onlyHashChange = true\n        mutable.canonicalUrl = updatedCanonicalUrl\n        mutable.shouldScroll = shouldScroll\n        mutable.hashFragment = hash\n        mutable.scrollableSegments = []\n        return handleMutable(state, mutable)\n      }\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n      let scrollableSegments: FlightSegmentPath[] = []\n      for (const normalizedFlightData of flightData) {\n        const {\n          pathToSegment: flightSegmentPath,\n          seedData,\n          head,\n          isHeadPartial,\n          isRootRender,\n        } = normalizedFlightData\n        let treePatch = normalizedFlightData.tree\n\n        // TODO-APP: remove ''\n        const flightSegmentPathWithLeadingEmpty = ['', ...flightSegmentPath]\n\n        // Create new tree based on the flightSegmentPath and router state patch\n        let newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          flightSegmentPathWithLeadingEmpty,\n          currentTree,\n          treePatch,\n          href\n        )\n\n        // If the tree patch can't be applied to the current tree then we use the tree at time of prefetch\n        // TODO-APP: This should instead fill in the missing pieces in `currentTree` with the data from `treeAtTimeOfPrefetch`, then apply the patch.\n        if (newTree === null) {\n          newTree = applyRouterStatePatchToTree(\n            // TODO-APP: remove ''\n            flightSegmentPathWithLeadingEmpty,\n            treeAtTimeOfPrefetch,\n            treePatch,\n            href\n          )\n        }\n\n        if (newTree !== null) {\n          if (\n            // This is just a paranoid check. When a route is PPRed, the server\n            // will send back a static response that's rendered from\n            // the root. If for some reason it doesn't, we fall back to the\n            // non-PPR implementation.\n            // TODO: We should get rid of the else branch and do all navigations\n            // via startPPRNavigation. The current structure is just\n            // an incremental step.\n            seedData &&\n            isRootRender &&\n            postponed\n          ) {\n            const task = startPPRNavigation(\n              navigatedAt,\n              currentCache,\n              currentTree,\n              treePatch,\n              seedData,\n              head,\n              isHeadPartial,\n              false,\n              scrollableSegments\n            )\n\n            if (task !== null) {\n              if (task.route === null) {\n                // Detected a change to the root layout. Perform an full-\n                // page navigation.\n                return handleExternalUrl(state, mutable, href, pendingPush)\n              }\n              // Use the tree computed by startPPRNavigation instead\n              // of the one computed by applyRouterStatePatchToTree.\n              // TODO: We should remove applyRouterStatePatchToTree\n              // from the PPR path entirely.\n              const patchedRouterState: FlightRouterState = task.route\n              newTree = patchedRouterState\n\n              const newCache = task.node\n              if (newCache !== null) {\n                // We've created a new Cache Node tree that contains a prefetched\n                // version of the next page. This can be rendered instantly.\n                mutable.cache = newCache\n              }\n              const dynamicRequestTree = task.dynamicRequestTree\n              if (dynamicRequestTree !== null) {\n                // The prefetched tree has dynamic holes in it. We initiate a\n                // dynamic request to fill them in.\n                //\n                // Do not block on the result. We'll immediately render the Cache\n                // Node tree and suspend on the dynamic parts. When the request\n                // comes in, we'll fill in missing data and ping React to\n                // re-render. Unlike the lazy fetching model in the non-PPR\n                // implementation, this is modeled as a single React update +\n                // streaming, rather than multiple top-level updates. (However,\n                // even in the new model, we'll still need to sometimes update the\n                // root multiple times per navigation, like if the server sends us\n                // a different response than we expected. For now, we revert back\n                // to the lazy fetching mechanism in that case.)\n                const dynamicRequest = fetchServerResponse(\n                  new URL(updatedCanonicalUrl, url.origin),\n                  {\n                    flightRouterState: dynamicRequestTree,\n                    nextUrl: state.nextUrl,\n                  }\n                )\n\n                listenForDynamicRequest(task, dynamicRequest)\n                // We store the dynamic request on the `lazyData` property of the CacheNode\n                // because we're not going to await the dynamic request here. Since we're not blocking\n                // on the dynamic request, `layout-router` will\n                // task.node.lazyData = dynamicRequest\n              } else {\n                // The prefetched tree does not contain dynamic holes — it's\n                // fully static. We can skip the dynamic request.\n              }\n            } else {\n              // Nothing changed, so reuse the old cache.\n              // TODO: What if the head changed but not any of the segment data?\n              // Is that possible? If so, we should clone the whole tree and\n              // update the head.\n              newTree = treePatch\n            }\n          } else {\n            // The static response does not include any dynamic holes, so\n            // there's no need to do a second request.\n            // TODO: As an incremental step this just reverts back to the\n            // non-PPR implementation. We can simplify this branch further,\n            // given that PPR prefetches are always static and return the whole\n            // tree. Or in the meantime we could factor it out into a\n            // separate function.\n\n            if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n              return handleExternalUrl(state, mutable, href, pendingPush)\n            }\n\n            const cache: CacheNode = createEmptyCacheNode()\n            let applied = false\n\n            if (\n              prefetchValues.status === PrefetchCacheEntryStatus.stale &&\n              !isFirstRead\n            ) {\n              // When we have a stale prefetch entry, we only want to re-use the loading state of the route we're navigating to, to support instant loading navigations\n              // this will trigger a lazy fetch for the actual page data by nulling the `rsc` and `prefetchRsc` values for page data,\n              // while copying over the `loading` for the segment that contains the page data.\n              // We only do this on subsequent reads, as otherwise there'd be no loading data to re-use.\n\n              // We skip this branch if only the hash fragment has changed, as we don't want to trigger a lazy fetch in that case\n              applied = triggerLazyFetchForLeafSegments(\n                cache,\n                currentCache,\n                flightSegmentPath,\n                treePatch\n              )\n              // since we re-used the stale cache's loading state & refreshed the data,\n              // update the `lastUsedTime` so that it can continue to be re-used for the next 30s\n              prefetchValues.lastUsedTime = navigatedAt\n            } else {\n              applied = applyFlightData(\n                navigatedAt,\n                currentCache,\n                cache,\n                normalizedFlightData,\n                prefetchValues\n              )\n            }\n\n            const hardNavigate = shouldHardNavigate(\n              // TODO-APP: remove ''\n              flightSegmentPathWithLeadingEmpty,\n              currentTree\n            )\n\n            if (hardNavigate) {\n              // Copy rsc for the root node of the cache.\n              cache.rsc = currentCache.rsc\n              cache.prefetchRsc = currentCache.prefetchRsc\n\n              invalidateCacheBelowFlightSegmentPath(\n                cache,\n                currentCache,\n                flightSegmentPath\n              )\n              // Ensure the existing cache value is used when the cache was not invalidated.\n              mutable.cache = cache\n            } else if (applied) {\n              mutable.cache = cache\n              // If we applied the cache, we update the \"current cache\" value so any other\n              // segments in the FlightDataPath will be able to reference the updated cache.\n              currentCache = cache\n            }\n\n            for (const subSegment of generateSegmentsFromPatch(treePatch)) {\n              const scrollableSegmentPath = [\n                ...flightSegmentPath,\n                ...subSegment,\n              ]\n              // Filter out the __DEFAULT__ paths as they shouldn't be scrolled to in this case.\n              if (\n                scrollableSegmentPath[scrollableSegmentPath.length - 1] !==\n                DEFAULT_SEGMENT_KEY\n              ) {\n                scrollableSegments.push(scrollableSegmentPath)\n              }\n            }\n          }\n\n          currentTree = newTree\n        }\n      }\n\n      mutable.patchedTree = currentTree\n      mutable.canonicalUrl = updatedCanonicalUrl\n      mutable.scrollableSegments = scrollableSegments\n      mutable.hashFragment = hash\n      mutable.shouldScroll = shouldScroll\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ServerPatchAction,\n  ReducerState,\n  ReadonlyReducerState,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyFlightData } from '../apply-flight-data'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\n\nexport function serverPatchReducer(\n  state: ReadonlyReducerState,\n  action: ServerPatchAction\n): ReducerState {\n  const {\n    serverResponse: { flightData, canonicalUrl: canonicalUrlOverride },\n    navigatedAt,\n  } = action\n\n  const mutable: Mutable = {}\n\n  mutable.preserveCustomHistoryState = false\n\n  // Handle case when navigating to page in `pages` from `app`\n  if (typeof flightData === 'string') {\n    return handleExternalUrl(\n      state,\n      mutable,\n      flightData,\n      state.pushRef.pendingPush\n    )\n  }\n\n  let currentTree = state.tree\n  let currentCache = state.cache\n\n  for (const normalizedFlightData of flightData) {\n    const { segmentPath: flightSegmentPath, tree: treePatch } =\n      normalizedFlightData\n\n    const newTree = applyRouterStatePatchToTree(\n      // TODO-APP: remove ''\n      ['', ...flightSegmentPath],\n      currentTree,\n      treePatch,\n      state.canonicalUrl\n    )\n\n    // `applyRouterStatePatchToTree` returns `null` when it determined that the server response is not applicable to the current tree.\n    // In other words, the server responded with a tree that doesn't match what the client is currently rendering.\n    // This can happen if the server patch action took longer to resolve than a subsequent navigation which would have changed the tree.\n    // Previously this case triggered an MPA navigation but it should be safe to simply discard the server response rather than forcing\n    // the entire page to reload.\n    if (newTree === null) {\n      return state\n    }\n\n    if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n      return handleExternalUrl(\n        state,\n        mutable,\n        state.canonicalUrl,\n        state.pushRef.pendingPush\n      )\n    }\n\n    const canonicalUrlOverrideHref = canonicalUrlOverride\n      ? createHrefFromUrl(canonicalUrlOverride)\n      : undefined\n\n    if (canonicalUrlOverrideHref) {\n      mutable.canonicalUrl = canonicalUrlOverrideHref\n    }\n\n    const cache: CacheNode = createEmptyCacheNode()\n    applyFlightData(navigatedAt, currentCache, cache, normalizedFlightData)\n\n    mutable.patchedTree = newTree\n    mutable.cache = cache\n\n    currentCache = cache\n    currentTree = newTree\n  }\n\n  return handleMutable(state, mutable)\n}\n","import { createHrefFromUrl } from '../create-href-from-url'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  RestoreAction,\n} from '../router-reducer-types'\nimport { extractPathFromFlightRouterState } from '../compute-changed-path'\nimport { updateCacheNodeOnPopstateRestoration } from '../ppr-navigations'\n\nexport function restoreReducer(\n  state: ReadonlyReducerState,\n  action: RestoreAction\n): ReducerState {\n  const { url, tree } = action\n  const href = createHrefFromUrl(url)\n  // This action is used to restore the router state from the history state.\n  // However, it's possible that the history state no longer contains the `FlightRouterState`.\n  // We will copy over the internal state on pushState/replaceState events, but if a history entry\n  // occurred before hydration, or if the user navigated to a hash using a regular anchor link,\n  // the history state will not contain the `FlightRouterState`.\n  // In this case, we'll continue to use the existing tree so the router doesn't get into an invalid state.\n  const treeToRestore = tree || state.tree\n\n  const oldCache = state.cache\n  const newCache = process.env.__NEXT_PPR\n    ? // When PPR is enabled, we update the cache to drop the prefetch\n      // data for any segment whose dynamic data was already received. This\n      // prevents an unnecessary flash back to PPR state during a\n      // back/forward navigation.\n      updateCacheNodeOnPopstateRestoration(oldCache, treeToRestore)\n    : oldCache\n\n  return {\n    // Set canonical url\n    canonicalUrl: href,\n    pushRef: {\n      pendingPush: false,\n      mpaNavigation: false,\n      // Ensures that the custom history state that was set is preserved when applying this update.\n      preserveCustomHistoryState: true,\n    },\n    focusAndScrollRef: state.focusAndScrollRef,\n    cache: newCache,\n    prefetchCache: state.prefetchCache,\n    // Restore provided tree\n    tree: treeToRestore,\n    nextUrl: extractPathFromFlightRouterState(treeToRestore) ?? url.pathname,\n  }\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport { handleExternalUrl } from './reducers/navigate-reducer'\nimport type {\n  ReadonlyReducerState,\n  ReducerActions,\n} from './router-reducer-types'\n\n/**\n * Handles the case where the client router attempted to patch the tree but, due to a mismatch, the patch failed.\n * This will perform an MPA navigation to return the router to a valid state.\n */\nexport function handleSegmentMismatch(\n  state: ReadonlyReducerState,\n  action: ReducerActions,\n  treePatch: FlightRouterState\n) {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      'Performing hard navigation because your application experienced an unrecoverable error. If this keeps occurring, please file a Next.js issue.\\n\\n' +\n        'Reason: Segment mismatch\\n' +\n        `Last Action: ${action.type}\\n\\n` +\n        `Current Tree: ${JSON.stringify(state.tree)}\\n\\n` +\n        `Tree Patch Payload: ${JSON.stringify(treePatch)}`\n    )\n  }\n\n  return handleExternalUrl(state, {}, state.canonicalUrl, true)\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  Mutable,\n  ReadonlyReducerState,\n  ReducerState,\n  RefreshAction,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\nimport { revalidateEntireCache } from '../../segment-cache'\n\nexport function refreshReducer(\n  state: ReadonlyReducerState,\n  action: RefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [\n      currentTree[0],\n      currentTree[1],\n      currentTree[2],\n      'refetch',\n    ],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n  })\n\n  const navigatedAt = Date.now()\n  return cache.lazyData.then(\n    async ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n\n        // Handles case where prefetch only returns the router tree patch without rendered components.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const loading = cacheNodeSeedData[3]\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = loading\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            cache,\n            // Existing cache is not passed in as `router.refresh()` has to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            undefined\n          )\n          if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n            revalidateEntireCache(state.nextUrl, newTree)\n          } else {\n            mutable.prefetchCache = new Map()\n          }\n        }\n\n        await refreshInactiveParallelSegments({\n          navigatedAt,\n          state,\n          updatedTree: newTree,\n          updatedCache: cache,\n          includeNextUrl,\n          canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n        })\n\n        mutable.cache = cache\n        mutable.patchedTree = newTree\n\n        currentTree = newTree\n      }\n\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n","import { fetchServerResponse } from '../fetch-server-response'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type {\n  ReadonlyReducerState,\n  ReducerState,\n  HmrRefreshAction,\n  Mutable,\n} from '../router-reducer-types'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { handleMutable } from '../handle-mutable'\nimport { applyFlightData } from '../apply-flight-data'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\n\n// A version of refresh reducer that keeps the cache around instead of wiping all of it.\nfunction hmrRefreshReducerImpl(\n  state: ReadonlyReducerState,\n  action: HmrRefreshAction\n): ReducerState {\n  const { origin } = action\n  const mutable: Mutable = {}\n  const href = state.canonicalUrl\n\n  mutable.preserveCustomHistoryState = false\n\n  const cache: CacheNode = createEmptyCacheNode()\n  // If the current tree was intercepted, the nextUrl should be included in the request.\n  // This is to ensure that the refresh request doesn't get intercepted, accidentally triggering the interception route.\n  const includeNextUrl = hasInterceptionRouteInCurrentTree(state.tree)\n\n  // TODO-APP: verify that `href` is not an external url.\n  // Fetch data from the root of the tree.\n  const navigatedAt = Date.now()\n  cache.lazyData = fetchServerResponse(new URL(href, origin), {\n    flightRouterState: [state.tree[0], state.tree[1], state.tree[2], 'refetch'],\n    nextUrl: includeNextUrl ? state.nextUrl : null,\n    isHmrRefresh: true,\n  })\n\n  return cache.lazyData.then(\n    ({ flightData, canonicalUrl: canonicalUrlOverride }) => {\n      // Handle case when navigating to page in `pages` from `app`\n      if (typeof flightData === 'string') {\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      // Remove cache.lazyData as it has been resolved at this point.\n      cache.lazyData = null\n\n      let currentTree = state.tree\n      let currentCache = state.cache\n\n      for (const normalizedFlightData of flightData) {\n        const { tree: treePatch, isRootRender } = normalizedFlightData\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('REFRESH FAILED')\n          return state\n        }\n\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            href,\n            state.pushRef.pendingPush\n          )\n        }\n\n        const canonicalUrlOverrideHref = canonicalUrlOverride\n          ? createHrefFromUrl(canonicalUrlOverride)\n          : undefined\n\n        if (canonicalUrlOverride) {\n          mutable.canonicalUrl = canonicalUrlOverrideHref\n        }\n        const applied = applyFlightData(\n          navigatedAt,\n          currentCache,\n          cache,\n          normalizedFlightData\n        )\n\n        if (applied) {\n          mutable.cache = cache\n          currentCache = cache\n        }\n\n        mutable.patchedTree = newTree\n        mutable.canonicalUrl = href\n\n        currentTree = newTree\n      }\n      return handleMutable(state, mutable)\n    },\n    () => state\n  )\n}\n\nfunction hmrRefreshReducerNoop(\n  state: ReadonlyReducerState,\n  _action: HmrRefreshAction\n): ReducerState {\n  return state\n}\n\nexport const hmrRefreshReducer =\n  process.env.NODE_ENV === 'production'\n    ? hmrRefreshReducerNoop\n    : hmrRefreshReducerImpl\n","import type {\n  ActionFlightResponse,\n  ActionResult,\n} from '../../../../server/app-render/types'\nimport { callServer } from '../../../app-call-server'\nimport { findSourceMapURL } from '../../../app-find-source-map-url'\nimport {\n  ACTION_HEADER,\n  NEXT_ACTION_NOT_FOUND_HEADER,\n  NEXT_IS_PRERENDER_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  RSC_CONTENT_TYPE_HEADER,\n} from '../../app-router-headers'\nimport { UnrecognizedActionError } from '../../unrecognized-action-error'\n\n// TODO: Explicitly import from client.browser\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  createFromFetch as createFromFetchBrowser,\n  createTemporaryReferenceSet,\n  encodeReply,\n} from 'react-server-dom-webpack/client'\n\nimport {\n  PrefetchKind,\n  type ReadonlyReducerState,\n  type ReducerState,\n  type ServerActionAction,\n  type ServerActionMutable,\n} from '../router-reducer-types'\nimport { assignLocation } from '../../../assign-location'\nimport { createHrefFromUrl } from '../create-href-from-url'\nimport { handleExternalUrl } from './navigate-reducer'\nimport { applyRouterStatePatchToTree } from '../apply-router-state-patch-to-tree'\nimport { isNavigatingToNewRootLayout } from '../is-navigating-to-new-root-layout'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { handleMutable } from '../handle-mutable'\nimport { fillLazyItemsTillLeafWithHead } from '../fill-lazy-items-till-leaf-with-head'\nimport { createEmptyCacheNode } from '../../app-router'\nimport { hasInterceptionRouteInCurrentTree } from './has-interception-route-in-current-tree'\nimport { handleSegmentMismatch } from '../handle-segment-mismatch'\nimport { refreshInactiveParallelSegments } from '../refetch-inactive-parallel-segments'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n  type NormalizedFlightData,\n} from '../../../flight-data-helpers'\nimport { getRedirectError } from '../../redirect'\nimport { RedirectType } from '../../redirect-error'\nimport { createSeededPrefetchCacheEntry } from '../prefetch-cache-utils'\nimport { removeBasePath } from '../../../remove-base-path'\nimport { hasBasePath } from '../../../has-base-path'\nimport {\n  extractInfoFromServerReferenceId,\n  omitUnusedArgs,\n} from '../../../../shared/lib/server-reference-info'\nimport { revalidateEntireCache } from '../../segment-cache'\n\nconst createFromFetch =\n  createFromFetchBrowser as (typeof import('react-server-dom-webpack/client.browser'))['createFromFetch']\n\ntype FetchServerActionResult = {\n  redirectLocation: URL | undefined\n  redirectType: RedirectType | undefined\n  actionResult: ActionResult | undefined\n  actionFlightData: NormalizedFlightData[] | string | undefined\n  isPrerender: boolean\n  revalidatedParts: {\n    tag: boolean\n    cookie: boolean\n    paths: string[]\n  }\n}\n\nasync function fetchServerAction(\n  state: ReadonlyReducerState,\n  nextUrl: ReadonlyReducerState['nextUrl'],\n  { actionId, actionArgs }: ServerActionAction\n): Promise<FetchServerActionResult> {\n  const temporaryReferences = createTemporaryReferenceSet()\n  const info = extractInfoFromServerReferenceId(actionId)\n\n  // TODO: Currently, we're only omitting unused args for the experimental \"use\n  // cache\" functions. Once the server reference info byte feature is stable, we\n  // should apply this to server actions as well.\n  const usedArgs =\n    info.type === 'use-cache' ? omitUnusedArgs(actionArgs, info) : actionArgs\n\n  const body = await encodeReply(usedArgs, { temporaryReferences })\n\n  const res = await fetch(state.canonicalUrl, {\n    method: 'POST',\n    headers: {\n      Accept: RSC_CONTENT_TYPE_HEADER,\n      [ACTION_HEADER]: actionId,\n      [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(\n        state.tree\n      ),\n      ...(process.env.NEXT_DEPLOYMENT_ID\n        ? {\n            'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID,\n          }\n        : {}),\n      ...(nextUrl\n        ? {\n            [NEXT_URL]: nextUrl,\n          }\n        : {}),\n    },\n    body,\n  })\n\n  // Handle server actions that the server didn't recognize.\n  const unrecognizedActionHeader = res.headers.get(NEXT_ACTION_NOT_FOUND_HEADER)\n  if (unrecognizedActionHeader === '1') {\n    throw new UnrecognizedActionError(\n      `Server Action \"${actionId}\" was not found on the server. \\nRead more: https://nextjs.org/docs/messages/failed-to-find-server-action`\n    )\n  }\n\n  const redirectHeader = res.headers.get('x-action-redirect')\n  const [location, _redirectType] = redirectHeader?.split(';') || []\n  let redirectType: RedirectType | undefined\n  switch (_redirectType) {\n    case 'push':\n      redirectType = RedirectType.push\n      break\n    case 'replace':\n      redirectType = RedirectType.replace\n      break\n    default:\n      redirectType = undefined\n  }\n\n  const isPrerender = !!res.headers.get(NEXT_IS_PRERENDER_HEADER)\n  let revalidatedParts: FetchServerActionResult['revalidatedParts']\n  try {\n    const revalidatedHeader = JSON.parse(\n      res.headers.get('x-action-revalidated') || '[[],0,0]'\n    )\n    revalidatedParts = {\n      paths: revalidatedHeader[0] || [],\n      tag: !!revalidatedHeader[1],\n      cookie: revalidatedHeader[2],\n    }\n  } catch (e) {\n    revalidatedParts = NO_REVALIDATED_PARTS\n  }\n\n  const redirectLocation = location\n    ? assignLocation(\n        location,\n        new URL(state.canonicalUrl, window.location.href)\n      )\n    : undefined\n\n  const contentType = res.headers.get('content-type')\n  const isRscResponse = !!(\n    contentType && contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n  )\n\n  // Handle invalid server action responses.\n  // A valid response must have `content-type: text/x-component`, unless it's an external redirect.\n  // (external redirects have an 'x-action-redirect' header, but the body is an empty 'text/plain')\n  if (!isRscResponse && !redirectLocation) {\n    // The server can respond with a text/plain error message, but we'll fallback to something generic\n    // if there isn't one.\n    const message =\n      res.status >= 400 && contentType === 'text/plain'\n        ? await res.text()\n        : 'An unexpected response was received from the server.'\n\n    throw new Error(message)\n  }\n\n  let actionResult: FetchServerActionResult['actionResult']\n  let actionFlightData: FetchServerActionResult['actionFlightData']\n  if (isRscResponse) {\n    const response: ActionFlightResponse = await createFromFetch(\n      Promise.resolve(res),\n      { callServer, findSourceMapURL, temporaryReferences }\n    )\n\n    // An internal redirect can send an RSC response, but does not have a useful `actionResult`.\n    actionResult = redirectLocation ? undefined : response.a\n    actionFlightData = normalizeFlightData(response.f)\n  } else {\n    // An external redirect doesn't contain RSC data.\n    actionResult = undefined\n    actionFlightData = undefined\n  }\n\n  return {\n    actionResult,\n    actionFlightData,\n    redirectLocation,\n    redirectType,\n    revalidatedParts,\n    isPrerender,\n  }\n}\n\nconst NO_REVALIDATED_PARTS = {\n  paths: [],\n  tag: false,\n  cookie: false,\n}\n\n/*\n * This reducer is responsible for calling the server action and processing any side-effects from the server action.\n * It does not mutate the state by itself but rather delegates to other reducers to do the actual mutation.\n */\nexport function serverActionReducer(\n  state: ReadonlyReducerState,\n  action: ServerActionAction\n): ReducerState {\n  const { resolve, reject } = action\n  const mutable: ServerActionMutable = {}\n\n  let currentTree = state.tree\n\n  mutable.preserveCustomHistoryState = false\n\n  // only pass along the `nextUrl` param (used for interception routes) if the current route was intercepted.\n  // If the route has been intercepted, the action should be as well.\n  // Otherwise the server action might be intercepted with the wrong action id\n  // (ie, one that corresponds with the intercepted route)\n  const nextUrl =\n    state.nextUrl && hasInterceptionRouteInCurrentTree(state.tree)\n      ? state.nextUrl\n      : null\n\n  const navigatedAt = Date.now()\n\n  return fetchServerAction(state, nextUrl, action).then(\n    async ({\n      actionResult,\n      actionFlightData: flightData,\n      redirectLocation,\n      redirectType,\n      isPrerender,\n      revalidatedParts,\n    }) => {\n      let redirectHref: string | undefined\n\n      // honor the redirect type instead of defaulting to push in case of server actions.\n      if (redirectLocation) {\n        if (redirectType === RedirectType.replace) {\n          state.pushRef.pendingPush = false\n          mutable.pendingPush = false\n        } else {\n          state.pushRef.pendingPush = true\n          mutable.pendingPush = true\n        }\n\n        redirectHref = createHrefFromUrl(redirectLocation, false)\n        mutable.canonicalUrl = redirectHref\n      }\n\n      if (!flightData) {\n        resolve(actionResult)\n\n        // If there is a redirect but no flight data we need to do a mpaNavigation.\n        if (redirectLocation) {\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectLocation.href,\n            state.pushRef.pendingPush\n          )\n        }\n        return state\n      }\n\n      if (typeof flightData === 'string') {\n        // Handle case when navigating to page in `pages` from `app`\n        resolve(actionResult)\n\n        return handleExternalUrl(\n          state,\n          mutable,\n          flightData,\n          state.pushRef.pendingPush\n        )\n      }\n\n      const actionRevalidated =\n        revalidatedParts.paths.length > 0 ||\n        revalidatedParts.tag ||\n        revalidatedParts.cookie\n\n      for (const normalizedFlightData of flightData) {\n        const {\n          tree: treePatch,\n          seedData: cacheNodeSeedData,\n          head,\n          isRootRender,\n        } = normalizedFlightData\n\n        if (!isRootRender) {\n          // TODO-APP: handle this case better\n          console.log('SERVER ACTION APPLY FAILED')\n          resolve(actionResult)\n\n          return state\n        }\n\n        // Given the path can only have two items the items are only the router state and rsc for the root.\n        const newTree = applyRouterStatePatchToTree(\n          // TODO-APP: remove ''\n          [''],\n          currentTree,\n          treePatch,\n          redirectHref ? redirectHref : state.canonicalUrl\n        )\n\n        if (newTree === null) {\n          resolve(actionResult)\n\n          return handleSegmentMismatch(state, action, treePatch)\n        }\n\n        if (isNavigatingToNewRootLayout(currentTree, newTree)) {\n          resolve(actionResult)\n\n          return handleExternalUrl(\n            state,\n            mutable,\n            redirectHref || state.canonicalUrl,\n            state.pushRef.pendingPush\n          )\n        }\n\n        // The server sent back RSC data for the server action, so we need to apply it to the cache.\n        if (cacheNodeSeedData !== null) {\n          const rsc = cacheNodeSeedData[1]\n          const cache: CacheNode = createEmptyCacheNode()\n          cache.rsc = rsc\n          cache.prefetchRsc = null\n          cache.loading = cacheNodeSeedData[3]\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            cache,\n            // Existing cache is not passed in as server actions have to invalidate the entire cache.\n            undefined,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            undefined\n          )\n\n          mutable.cache = cache\n          if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n            revalidateEntireCache(state.nextUrl, newTree)\n          } else {\n            mutable.prefetchCache = new Map()\n          }\n          if (actionRevalidated) {\n            await refreshInactiveParallelSegments({\n              navigatedAt,\n              state,\n              updatedTree: newTree,\n              updatedCache: cache,\n              includeNextUrl: Boolean(nextUrl),\n              canonicalUrl: mutable.canonicalUrl || state.canonicalUrl,\n            })\n          }\n        }\n\n        mutable.patchedTree = newTree\n        currentTree = newTree\n      }\n\n      if (redirectLocation && redirectHref) {\n        if (!process.env.__NEXT_CLIENT_SEGMENT_CACHE && !actionRevalidated) {\n          // Because the RedirectBoundary will trigger a navigation, we need to seed the prefetch cache\n          // with the FlightData that we got from the server action for the target page, so that it's\n          // available when the page is navigated to and doesn't need to be re-fetched.\n          // We only do this if the server action didn't revalidate any data, as in that case the\n          // client cache will be cleared and the data will be re-fetched anyway.\n          // NOTE: We don't do this in the Segment Cache implementation.\n          // Dynamic data should never be placed into the cache, unless it's\n          // \"converted\" to static data using <Link prefetch={true}>. What we\n          // do instead is re-prefetch links and forms whenever the cache is\n          // invalidated.\n          createSeededPrefetchCacheEntry({\n            url: redirectLocation,\n            data: {\n              flightData,\n              canonicalUrl: undefined,\n              couldBeIntercepted: false,\n              prerendered: false,\n              postponed: false,\n              // TODO: We should be able to set this if the server action\n              // returned a fully static response.\n              staleTime: -1,\n            },\n            tree: state.tree,\n            prefetchCache: state.prefetchCache,\n            nextUrl: state.nextUrl,\n            kind: isPrerender ? PrefetchKind.FULL : PrefetchKind.AUTO,\n          })\n          mutable.prefetchCache = state.prefetchCache\n        }\n\n        // If the action triggered a redirect, the action promise will be rejected with\n        // a redirect so that it's handled by RedirectBoundary as we won't have a valid\n        // action result to resolve the promise with. This will effectively reset the state of\n        // the component that called the action as the error boundary will remount the tree.\n        // The status code doesn't matter here as the action handler will have already sent\n        // a response with the correct status code.\n        reject(\n          getRedirectError(\n            hasBasePath(redirectHref)\n              ? removeBasePath(redirectHref)\n              : redirectHref,\n            redirectType || RedirectType.push\n          )\n        )\n      } else {\n        resolve(actionResult)\n      }\n\n      return handleMutable(state, mutable)\n    },\n    (e: any) => {\n      // When the server action is rejected we don't update the state and instead call the reject handler of the promise.\n      reject(e)\n\n      return state\n    }\n  )\n}\n","import {\n  ACTION_NAVIGATE,\n  ACTION_SERVER_PATCH,\n  ACTION_RESTORE,\n  ACTION_REFRESH,\n  ACTION_PREFETCH,\n  ACTION_HMR_REFRESH,\n  ACTION_SERVER_ACTION,\n} from './router-reducer-types'\nimport type {\n  ReducerActions,\n  ReducerState,\n  ReadonlyReducerState,\n} from './router-reducer-types'\nimport { navigateReducer } from './reducers/navigate-reducer'\nimport { serverPatchReducer } from './reducers/server-patch-reducer'\nimport { restoreReducer } from './reducers/restore-reducer'\nimport { refreshReducer } from './reducers/refresh-reducer'\nimport { prefetchReducer } from './reducers/prefetch-reducer'\nimport { hmrRefreshReducer } from './reducers/hmr-refresh-reducer'\nimport { serverActionReducer } from './reducers/server-action-reducer'\n\n/**\n * Reducer that handles the app-router state updates.\n */\nfunction clientReducer(\n  state: ReadonlyReducerState,\n  action: ReducerActions\n): ReducerState {\n  switch (action.type) {\n    case ACTION_NAVIGATE: {\n      return navigateReducer(state, action)\n    }\n    case ACTION_SERVER_PATCH: {\n      return serverPatchReducer(state, action)\n    }\n    case ACTION_RESTORE: {\n      return restoreReducer(state, action)\n    }\n    case ACTION_REFRESH: {\n      return refreshReducer(state, action)\n    }\n    case ACTION_HMR_REFRESH: {\n      return hmrRefreshReducer(state, action)\n    }\n    case ACTION_PREFETCH: {\n      return prefetchReducer(state, action)\n    }\n    case ACTION_SERVER_ACTION: {\n      return serverActionReducer(state, action)\n    }\n    // This case should never be hit as dispatch is strongly typed.\n    default:\n      throw new Error('Unknown action')\n  }\n}\n\nfunction serverReducer(\n  state: ReadonlyReducerState,\n  _action: ReducerActions\n): ReducerState {\n  return state\n}\n\n// we don't run the client reducer on the server, so we use a noop function for better tree shaking\nexport const reducer =\n  typeof window === 'undefined' ? serverReducer : clientReducer\n","import {\n  type AppRouterState,\n  type ReducerActions,\n  type ReducerState,\n  ACTION_REFRESH,\n  ACTION_SERVER_ACTION,\n  ACTION_NAVIGATE,\n  ACTION_RESTORE,\n  type NavigateAction,\n  ACTION_HMR_REFRESH,\n  PrefetchKind,\n  ACTION_PREFETCH,\n} from './router-reducer/router-reducer-types'\nimport { reducer } from './router-reducer/router-reducer'\nimport { startTransition } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport {\n  FetchStrategy,\n  prefetch as prefetchWithSegmentCache,\n  type PrefetchTaskFetchStrategy,\n} from './segment-cache'\nimport { dispatchAppRouterAction } from './use-action-queue'\nimport { addBasePath } from '../add-base-path'\nimport { createPrefetchURL, isExternalURL } from './app-router'\nimport { prefetchReducer } from './router-reducer/reducers/prefetch-reducer'\nimport type {\n  AppRouterInstance,\n  NavigateOptions,\n  PrefetchOptions,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { setLinkForCurrentNavigation, type LinkInstance } from './links'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport type { ClientInstrumentationHooks } from '../app-index'\nimport type { GlobalErrorComponent } from './builtin/global-error'\n\nexport type DispatchStatePromise = React.Dispatch<ReducerState>\n\nexport type AppRouterActionQueue = {\n  state: AppRouterState\n  dispatch: (payload: ReducerActions, setState: DispatchStatePromise) => void\n  action: (state: AppRouterState, action: ReducerActions) => ReducerState\n\n  onRouterTransitionStart:\n    | ((url: string, type: 'push' | 'replace' | 'traverse') => void)\n    | null\n\n  pending: ActionQueueNode | null\n  needsRefresh?: boolean\n  last: ActionQueueNode | null\n}\n\nexport type GlobalErrorState = [\n  GlobalError: GlobalErrorComponent,\n  styles: React.ReactNode,\n]\n\nexport type ActionQueueNode = {\n  payload: ReducerActions\n  next: ActionQueueNode | null\n  resolve: (value: ReducerState) => void\n  reject: (err: Error) => void\n  discarded?: boolean\n}\n\nfunction runRemainingActions(\n  actionQueue: AppRouterActionQueue,\n  setState: DispatchStatePromise\n) {\n  if (actionQueue.pending !== null) {\n    actionQueue.pending = actionQueue.pending.next\n    if (actionQueue.pending !== null) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      runAction({\n        actionQueue,\n        action: actionQueue.pending,\n        setState,\n      })\n    } else {\n      // No more actions are pending, check if a refresh is needed\n      if (actionQueue.needsRefresh) {\n        actionQueue.needsRefresh = false\n        actionQueue.dispatch(\n          {\n            type: ACTION_REFRESH,\n            origin: window.location.origin,\n          },\n          setState\n        )\n      }\n    }\n  }\n}\n\nasync function runAction({\n  actionQueue,\n  action,\n  setState,\n}: {\n  actionQueue: AppRouterActionQueue\n  action: ActionQueueNode\n  setState: DispatchStatePromise\n}) {\n  const prevState = actionQueue.state\n\n  actionQueue.pending = action\n\n  const payload = action.payload\n  const actionResult = actionQueue.action(prevState, payload)\n\n  function handleResult(nextState: AppRouterState) {\n    // if we discarded this action, the state should also be discarded\n    if (action.discarded) {\n      return\n    }\n\n    actionQueue.state = nextState\n\n    runRemainingActions(actionQueue, setState)\n    action.resolve(nextState)\n  }\n\n  // if the action is a promise, set up a callback to resolve it\n  if (isThenable(actionResult)) {\n    actionResult.then(handleResult, (err) => {\n      runRemainingActions(actionQueue, setState)\n      action.reject(err)\n    })\n  } else {\n    handleResult(actionResult)\n  }\n}\n\nfunction dispatchAction(\n  actionQueue: AppRouterActionQueue,\n  payload: ReducerActions,\n  setState: DispatchStatePromise\n) {\n  let resolvers: {\n    resolve: (value: ReducerState) => void\n    reject: (reason: any) => void\n  } = { resolve: setState, reject: () => {} }\n\n  // most of the action types are async with the exception of restore\n  // it's important that restore is handled quickly since it's fired on the popstate event\n  // and we don't want to add any delay on a back/forward nav\n  // this only creates a promise for the async actions\n  if (payload.type !== ACTION_RESTORE) {\n    // Create the promise and assign the resolvers to the object.\n    const deferredPromise = new Promise<AppRouterState>((resolve, reject) => {\n      resolvers = { resolve, reject }\n    })\n\n    startTransition(() => {\n      // we immediately notify React of the pending promise -- the resolver is attached to the action node\n      // and will be called when the associated action promise resolves\n      setState(deferredPromise)\n    })\n  }\n\n  const newAction: ActionQueueNode = {\n    payload,\n    next: null,\n    resolve: resolvers.resolve,\n    reject: resolvers.reject,\n  }\n\n  // Check if the queue is empty\n  if (actionQueue.pending === null) {\n    // The queue is empty, so add the action and start it immediately\n    // Mark this action as the last in the queue\n    actionQueue.last = newAction\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else if (\n    payload.type === ACTION_NAVIGATE ||\n    payload.type === ACTION_RESTORE\n  ) {\n    // Navigations (including back/forward) take priority over any pending actions.\n    // Mark the pending action as discarded (so the state is never applied) and start the navigation action immediately.\n    actionQueue.pending.discarded = true\n\n    // The rest of the current queue should still execute after this navigation.\n    // (Note that it can't contain any earlier navigations, because we always put those into `actionQueue.pending` by calling `runAction`)\n    newAction.next = actionQueue.pending.next\n\n    // if the pending action was a server action, mark the queue as needing a refresh once events are processed\n    if (actionQueue.pending.payload.type === ACTION_SERVER_ACTION) {\n      actionQueue.needsRefresh = true\n    }\n\n    runAction({\n      actionQueue,\n      action: newAction,\n      setState,\n    })\n  } else {\n    // The queue is not empty, so add the action to the end of the queue\n    // It will be started by runRemainingActions after the previous action finishes\n    if (actionQueue.last !== null) {\n      actionQueue.last.next = newAction\n    }\n    actionQueue.last = newAction\n  }\n}\n\nlet globalActionQueue: AppRouterActionQueue | null = null\n\nexport function createMutableActionQueue(\n  initialState: AppRouterState,\n  instrumentationHooks: ClientInstrumentationHooks | null\n): AppRouterActionQueue {\n  const actionQueue: AppRouterActionQueue = {\n    state: initialState,\n    dispatch: (payload: ReducerActions, setState: DispatchStatePromise) =>\n      dispatchAction(actionQueue, payload, setState),\n    action: async (state: AppRouterState, action: ReducerActions) => {\n      const result = reducer(state, action)\n      return result\n    },\n    pending: null,\n    last: null,\n    onRouterTransitionStart:\n      instrumentationHooks !== null &&\n      typeof instrumentationHooks.onRouterTransitionStart === 'function'\n        ? // This profiling hook will be called at the start of every navigation.\n          instrumentationHooks.onRouterTransitionStart\n        : null,\n  }\n\n  if (typeof window !== 'undefined') {\n    // The action queue is lazily created on hydration, but after that point\n    // it doesn't change. So we can store it in a global rather than pass\n    // it around everywhere via props/context.\n    if (globalActionQueue !== null) {\n      throw new Error(\n        'Internal Next.js Error: createMutableActionQueue was called more ' +\n          'than once'\n      )\n    }\n    globalActionQueue = actionQueue\n  }\n\n  return actionQueue\n}\n\nexport function getCurrentAppRouterState(): AppRouterState | null {\n  return globalActionQueue !== null ? globalActionQueue.state : null\n}\n\nfunction getAppRouterActionQueue(): AppRouterActionQueue {\n  if (globalActionQueue === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  return globalActionQueue\n}\n\nfunction getProfilingHookForOnNavigationStart() {\n  if (globalActionQueue !== null) {\n    return globalActionQueue.onRouterTransitionStart\n  }\n  return null\n}\n\nexport function dispatchNavigateAction(\n  href: string,\n  navigateType: NavigateAction['navigateType'],\n  shouldScroll: boolean,\n  linkInstanceRef: LinkInstance | null\n): void {\n  // TODO: This stuff could just go into the reducer. Leaving as-is for now\n  // since we're about to rewrite all the router reducer stuff anyway.\n  const url = new URL(addBasePath(href), location.href)\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    window.next.__pendingUrl = url\n  }\n\n  setLinkForCurrentNavigation(linkInstanceRef)\n\n  const onRouterTransitionStart = getProfilingHookForOnNavigationStart()\n  if (onRouterTransitionStart !== null) {\n    onRouterTransitionStart(href, navigateType)\n  }\n\n  dispatchAppRouterAction({\n    type: ACTION_NAVIGATE,\n    url,\n    isExternalUrl: isExternalURL(url),\n    locationSearch: location.search,\n    shouldScroll,\n    navigateType,\n    allowAliasing: true,\n  })\n}\n\nexport function dispatchTraverseAction(\n  href: string,\n  tree: FlightRouterState | undefined\n) {\n  const onRouterTransitionStart = getProfilingHookForOnNavigationStart()\n  if (onRouterTransitionStart !== null) {\n    onRouterTransitionStart(href, 'traverse')\n  }\n  dispatchAppRouterAction({\n    type: ACTION_RESTORE,\n    url: new URL(href),\n    tree,\n  })\n}\n\n/**\n * The app router that is exposed through `useRouter`. These are public API\n * methods. Internal Next.js code should call the lower level methods directly\n * (although there's lots of existing code that doesn't do that).\n */\nexport const publicAppRouterInstance: AppRouterInstance = {\n  back: () => window.history.back(),\n  forward: () => window.history.forward(),\n  prefetch: process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? // Unlike the old implementation, the Segment Cache doesn't store its\n      // data in the router reducer state; it writes into a global mutable\n      // cache. So we don't need to dispatch an action.\n      (href: string, options?: PrefetchOptions) => {\n        const actionQueue = getAppRouterActionQueue()\n        const prefetchKind = options?.kind ?? PrefetchKind.AUTO\n\n        // We don't currently offer a way to issue a runtime prefetch via `router.prefetch()`.\n        // This will be possible when we update its API to not take a PrefetchKind.\n        let fetchStrategy: PrefetchTaskFetchStrategy\n        switch (prefetchKind) {\n          case PrefetchKind.AUTO: {\n            // We default to PPR. We'll discover whether or not the route supports it with the initial prefetch.\n            fetchStrategy = FetchStrategy.PPR\n            break\n          }\n          case PrefetchKind.FULL: {\n            fetchStrategy = FetchStrategy.Full\n            break\n          }\n          case PrefetchKind.TEMPORARY: {\n            // This concept doesn't exist in the segment cache implementation.\n            return\n          }\n          default: {\n            prefetchKind satisfies never\n            // Despite typescript thinking that this can't happen,\n            // we might get an unexpected value from user code.\n            // We don't know what they want, but we know they want a prefetch,\n            // so use the default.\n            fetchStrategy = FetchStrategy.PPR\n          }\n        }\n\n        prefetchWithSegmentCache(\n          href,\n          actionQueue.state.nextUrl,\n          actionQueue.state.tree,\n          fetchStrategy,\n          options?.onInvalidate ?? null\n        )\n      }\n    : (href: string, options?: PrefetchOptions) => {\n        // Use the old prefetch implementation.\n        const actionQueue = getAppRouterActionQueue()\n        const url = createPrefetchURL(href)\n        if (url !== null) {\n          // The prefetch reducer doesn't actually update any state or\n          // trigger a rerender. It just writes to a mutable cache. So we\n          // shouldn't bother calling setState/dispatch; we can just re-run\n          // the reducer directly using the current state.\n          // TODO: Refactor this away from a \"reducer\" so it's\n          // less confusing.\n          prefetchReducer(actionQueue.state, {\n            type: ACTION_PREFETCH,\n            url,\n            kind: options?.kind ?? PrefetchKind.FULL,\n          })\n        }\n      },\n  replace: (href: string, options?: NavigateOptions) => {\n    startTransition(() => {\n      dispatchNavigateAction(href, 'replace', options?.scroll ?? true, null)\n    })\n  },\n  push: (href: string, options?: NavigateOptions) => {\n    startTransition(() => {\n      dispatchNavigateAction(href, 'push', options?.scroll ?? true, null)\n    })\n  },\n  refresh: () => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_REFRESH,\n        origin: window.location.origin,\n      })\n    })\n  },\n  hmrRefresh: () => {\n    if (process.env.NODE_ENV !== 'development') {\n      throw new Error(\n        'hmrRefresh can only be used in development mode. Please use refresh instead.'\n      )\n    } else {\n      startTransition(() => {\n        dispatchAppRouterAction({\n          type: ACTION_HMR_REFRESH,\n          origin: window.location.origin,\n        })\n      })\n    }\n  },\n}\n\n// Exists for debugging purposes. Don't use in application code.\nif (typeof window !== 'undefined' && window.next) {\n  window.next.router = publicAppRouterInstance\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { Segment } from '../../../server/app-render/types'\nimport { invalidateCacheByRouterState } from './invalidate-cache-by-router-state'\nimport { fillLazyItemsTillLeafWithHead } from './fill-lazy-items-till-leaf-with-head'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport type { PrefetchCacheEntry } from './router-reducer-types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\nimport type { NormalizedFlightData } from '../../flight-data-helpers'\n\n/**\n * Common logic for filling cache with new sub tree data.\n */\nfunction fillCacheHelper(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry: PrefetchCacheEntry | undefined,\n  fillLazyItems: boolean\n): void {\n  const {\n    segmentPath,\n    seedData: cacheNodeSeedData,\n    tree: treePatch,\n    head,\n  } = flightData\n  let newCacheNode = newCache\n  let existingCacheNode = existingCache\n\n  for (let i = 0; i < segmentPath.length; i += 2) {\n    const parallelRouteKey: string = segmentPath[i]\n    const segment: Segment = segmentPath[i + 1]\n\n    // segmentPath is a repeating tuple of parallelRouteKey and segment\n    // we know we've hit the last entry we've reached our final pair\n    const isLastEntry = i === segmentPath.length - 2\n    const cacheKey = createRouterCacheKey(segment)\n\n    const existingChildSegmentMap =\n      existingCacheNode.parallelRoutes.get(parallelRouteKey)\n\n    if (!existingChildSegmentMap) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    let childSegmentMap = newCacheNode.parallelRoutes.get(parallelRouteKey)\n    if (!childSegmentMap || childSegmentMap === existingChildSegmentMap) {\n      childSegmentMap = new Map(existingChildSegmentMap)\n      newCacheNode.parallelRoutes.set(parallelRouteKey, childSegmentMap)\n    }\n\n    const existingChildCacheNode = existingChildSegmentMap.get(cacheKey)\n    let childCacheNode = childSegmentMap.get(cacheKey)\n\n    if (isLastEntry) {\n      if (\n        cacheNodeSeedData &&\n        (!childCacheNode ||\n          !childCacheNode.lazyData ||\n          childCacheNode === existingChildCacheNode)\n      ) {\n        const incomingSegment = cacheNodeSeedData[0]\n        const rsc = cacheNodeSeedData[1]\n        const loading = cacheNodeSeedData[3]\n\n        childCacheNode = {\n          lazyData: null,\n          // When `fillLazyItems` is false, we only want to fill the RSC data for the layout,\n          // not the page segment.\n          rsc:\n            fillLazyItems || incomingSegment !== PAGE_SEGMENT_KEY ? rsc : null,\n          prefetchRsc: null,\n          head: null,\n          prefetchHead: null,\n          loading,\n          parallelRoutes:\n            fillLazyItems && existingChildCacheNode\n              ? new Map(existingChildCacheNode.parallelRoutes)\n              : new Map(),\n          navigatedAt,\n        }\n\n        if (existingChildCacheNode && fillLazyItems) {\n          invalidateCacheByRouterState(\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch\n          )\n        }\n        if (fillLazyItems) {\n          fillLazyItemsTillLeafWithHead(\n            navigatedAt,\n            childCacheNode,\n            existingChildCacheNode,\n            treePatch,\n            cacheNodeSeedData,\n            head,\n            prefetchEntry\n          )\n        }\n\n        childSegmentMap.set(cacheKey, childCacheNode)\n      }\n      continue\n    }\n\n    if (!childCacheNode || !existingChildCacheNode) {\n      // Bailout because the existing cache does not have the path to the leaf node\n      // Will trigger lazy fetch in layout-router because of missing segment\n      continue\n    }\n\n    if (childCacheNode === existingChildCacheNode) {\n      childCacheNode = {\n        lazyData: childCacheNode.lazyData,\n        rsc: childCacheNode.rsc,\n        prefetchRsc: childCacheNode.prefetchRsc,\n        head: childCacheNode.head,\n        prefetchHead: childCacheNode.prefetchHead,\n        parallelRoutes: new Map(childCacheNode.parallelRoutes),\n        loading: childCacheNode.loading,\n      } as CacheNode\n      childSegmentMap.set(cacheKey, childCacheNode)\n    }\n\n    // Move deeper into the cache nodes\n    newCacheNode = childCacheNode\n    existingCacheNode = existingChildCacheNode\n  }\n}\n\n/**\n * Fill cache with rsc based on flightDataPath\n */\nexport function fillCacheWithNewSubTreeData(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(\n    navigatedAt,\n    newCache,\n    existingCache,\n    flightData,\n    prefetchEntry,\n    true\n  )\n}\n\nexport function fillCacheWithNewSubTreeDataButOnlyLoading(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode,\n  flightData: NormalizedFlightData,\n  prefetchEntry?: PrefetchCacheEntry\n): void {\n  fillCacheHelper(\n    navigatedAt,\n    newCache,\n    existingCache,\n    flightData,\n    prefetchEntry,\n    false\n  )\n}\n","import path from '../shared/lib/isomorphic/path';\n/**\n * MultiFileWriter is a utility for writing multiple files in parallel that\n * guarantees that all files will be written after their containing directory\n * is created, and that the directory will only be created once.\n */ export class MultiFileWriter {\n    constructor(/**\n     * The file system methods to use.\n     */ fs){\n        this.fs = fs;\n        this.tasks = [];\n    }\n    /**\n   * Finds or creates a task for a directory.\n   *\n   * @param directory - The directory to find or create a task for.\n   * @returns The task for the directory.\n   */ findOrCreateTask(directory) {\n        // See if this directory already has a task to create it.\n        for (const task of this.tasks){\n            if (task[0] === directory) {\n                return task;\n            }\n        }\n        const promise = this.fs.mkdir(directory);\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Otherwise, create a new task for this directory.\n        const task = [\n            directory,\n            promise,\n            []\n        ];\n        this.tasks.push(task);\n        return task;\n    }\n    /**\n   * Appends a file to the writer to be written after its containing directory\n   * is created. The file writer should be awaited after all the files have been\n   * appended. Any async operation that occurs between appending and awaiting\n   * may cause an unhandled promise rejection warning and potentially crash the\n   * process.\n   *\n   * @param filePath - The path to the file to write.\n   * @param data - The data to write to the file.\n   */ append(filePath, data) {\n        // Find or create a task for the directory that contains the file.\n        const task = this.findOrCreateTask(path.dirname(filePath));\n        const promise = task[1].then(()=>this.fs.writeFile(filePath, data));\n        // Attach a catch handler so that it doesn't throw an unhandled promise\n        // rejection warning.\n        promise.catch(()=>{});\n        // Add the file write to the task AFTER the directory promise has resolved.\n        task[2].push(promise);\n    }\n    /**\n   * Returns a promise that resolves when all the files have been written.\n   */ wait() {\n        return Promise.all(this.tasks.flatMap((task)=>task[2]));\n    }\n}\n\n//# sourceMappingURL=multi-file-writer.js.map","import { CachedRouteKind } from '../../response-cache/types';\nimport { LRUCache } from '../lru-cache';\nlet memoryCache;\nexport function getMemoryCache(maxMemoryCacheSize) {\n    if (!memoryCache) {\n        memoryCache = new LRUCache(maxMemoryCacheSize, function length({ value }) {\n            var _JSON_stringify;\n            if (!value) {\n                return 25;\n            } else if (value.kind === CachedRouteKind.REDIRECT) {\n                return JSON.stringify(value.props).length;\n            } else if (value.kind === CachedRouteKind.IMAGE) {\n                throw Object.defineProperty(new Error('invariant image should not be incremental-cache'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E501\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (value.kind === CachedRouteKind.FETCH) {\n                return JSON.stringify(value.data || '').length;\n            } else if (value.kind === CachedRouteKind.APP_ROUTE) {\n                return value.body.length;\n            }\n            // rough estimate of size of cache value\n            return value.html.length + (((_JSON_stringify = JSON.stringify(value.kind === CachedRouteKind.APP_PAGE ? value.rscData : value.pageData)) == null ? void 0 : _JSON_stringify.length) || 0);\n        });\n    }\n    return memoryCache;\n}\n\n//# sourceMappingURL=memory-cache.external.js.map","import { CachedRouteKind, IncrementalCacheKind } from '../../response-cache';\nimport path from '../../../shared/lib/isomorphic/path';\nimport { NEXT_CACHE_TAGS_HEADER, NEXT_DATA_SUFFIX, NEXT_META_SUFFIX, RSC_PREFETCH_SUFFIX, RSC_SEGMENT_SUFFIX, RSC_SEGMENTS_DIR_SUFFIX, RSC_SUFFIX } from '../../../lib/constants';\nimport { isStale, tagsManifest } from './tags-manifest.external';\nimport { MultiFileWriter } from '../../../lib/multi-file-writer';\nimport { getMemoryCache } from './memory-cache.external';\nexport default class FileSystemCache {\n    static #_ = this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n    constructor(ctx){\n        this.fs = ctx.fs;\n        this.flushToDisk = ctx.flushToDisk;\n        this.serverDistDir = ctx.serverDistDir;\n        this.revalidatedTags = ctx.revalidatedTags;\n        if (ctx.maxMemoryCacheSize) {\n            if (!FileSystemCache.memoryCache) {\n                if (FileSystemCache.debug) {\n                    console.log('using memory store for fetch cache');\n                }\n                FileSystemCache.memoryCache = getMemoryCache(ctx.maxMemoryCacheSize);\n            } else if (FileSystemCache.debug) {\n                console.log('memory store already initialized');\n            }\n        } else if (FileSystemCache.debug) {\n            console.log('not using memory store for fetch cache');\n        }\n    }\n    resetRequestCache() {}\n    async revalidateTag(...args) {\n        let [tags] = args;\n        tags = typeof tags === 'string' ? [\n            tags\n        ] : tags;\n        if (FileSystemCache.debug) {\n            console.log('revalidateTag', tags);\n        }\n        if (tags.length === 0) {\n            return;\n        }\n        for (const tag of tags){\n            if (!tagsManifest.has(tag)) {\n                tagsManifest.set(tag, Date.now());\n            }\n        }\n    }\n    async get(...args) {\n        var _FileSystemCache_memoryCache, _data_value, _data_value1, _data_value2, _data_value3;\n        const [key, ctx] = args;\n        const { kind } = ctx;\n        let data = (_FileSystemCache_memoryCache = FileSystemCache.memoryCache) == null ? void 0 : _FileSystemCache_memoryCache.get(key);\n        if (FileSystemCache.debug) {\n            if (kind === IncrementalCacheKind.FETCH) {\n                console.log('get', key, ctx.tags, kind, !!data);\n            } else {\n                console.log('get', key, kind, !!data);\n            }\n        }\n        // let's check the disk for seed data\n        if (!data && process.env.NEXT_RUNTIME !== 'edge') {\n            try {\n                if (kind === IncrementalCacheKind.APP_ROUTE) {\n                    const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n                    const fileData = await this.fs.readFile(filePath);\n                    const { mtime } = await this.fs.stat(filePath);\n                    const meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), 'utf8'));\n                    data = {\n                        lastModified: mtime.getTime(),\n                        value: {\n                            kind: CachedRouteKind.APP_ROUTE,\n                            body: fileData,\n                            headers: meta.headers,\n                            status: meta.status\n                        }\n                    };\n                } else {\n                    const filePath = this.getFilePath(kind === IncrementalCacheKind.FETCH ? key : `${key}.html`, kind);\n                    const fileData = await this.fs.readFile(filePath, 'utf8');\n                    const { mtime } = await this.fs.stat(filePath);\n                    if (kind === IncrementalCacheKind.FETCH) {\n                        var _data_value4;\n                        const { tags, fetchIdx, fetchUrl } = ctx;\n                        if (!this.flushToDisk) return null;\n                        const lastModified = mtime.getTime();\n                        const parsedData = JSON.parse(fileData);\n                        data = {\n                            lastModified,\n                            value: parsedData\n                        };\n                        if (((_data_value4 = data.value) == null ? void 0 : _data_value4.kind) === CachedRouteKind.FETCH) {\n                            var _data_value5;\n                            const storedTags = (_data_value5 = data.value) == null ? void 0 : _data_value5.tags;\n                            // update stored tags if a new one is being added\n                            // TODO: remove this when we can send the tags\n                            // via header on GET same as SET\n                            if (!(tags == null ? void 0 : tags.every((tag)=>storedTags == null ? void 0 : storedTags.includes(tag)))) {\n                                if (FileSystemCache.debug) {\n                                    console.log('tags vs storedTags mismatch', tags, storedTags);\n                                }\n                                await this.set(key, data.value, {\n                                    fetchCache: true,\n                                    tags,\n                                    fetchIdx,\n                                    fetchUrl\n                                });\n                            }\n                        }\n                    } else if (kind === IncrementalCacheKind.APP_PAGE) {\n                        // We try to load the metadata file, but if it fails, we don't\n                        // error. We also don't load it if this is a fallback.\n                        let meta;\n                        try {\n                            meta = JSON.parse(await this.fs.readFile(filePath.replace(/\\.html$/, NEXT_META_SUFFIX), 'utf8'));\n                        } catch  {}\n                        let maybeSegmentData;\n                        if (meta == null ? void 0 : meta.segmentPaths) {\n                            // Collect all the segment data for this page.\n                            // TODO: To optimize file system reads, we should consider creating\n                            // separate cache entries for each segment, rather than storing them\n                            // all on the page's entry. Though the behavior is\n                            // identical regardless.\n                            const segmentData = new Map();\n                            maybeSegmentData = segmentData;\n                            const segmentsDir = key + RSC_SEGMENTS_DIR_SUFFIX;\n                            await Promise.all(meta.segmentPaths.map(async (segmentPath)=>{\n                                const segmentDataFilePath = this.getFilePath(segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX, IncrementalCacheKind.APP_PAGE);\n                                try {\n                                    segmentData.set(segmentPath, await this.fs.readFile(segmentDataFilePath));\n                                } catch  {\n                                // This shouldn't happen, but if for some reason we fail to\n                                // load a segment from the filesystem, treat it the same as if\n                                // the segment is dynamic and does not have a prefetch.\n                                }\n                            }));\n                        }\n                        let rscData;\n                        if (!ctx.isFallback) {\n                            rscData = await this.fs.readFile(this.getFilePath(`${key}${ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX}`, IncrementalCacheKind.APP_PAGE));\n                        }\n                        data = {\n                            lastModified: mtime.getTime(),\n                            value: {\n                                kind: CachedRouteKind.APP_PAGE,\n                                html: fileData,\n                                rscData,\n                                postponed: meta == null ? void 0 : meta.postponed,\n                                headers: meta == null ? void 0 : meta.headers,\n                                status: meta == null ? void 0 : meta.status,\n                                segmentData: maybeSegmentData\n                            }\n                        };\n                    } else if (kind === IncrementalCacheKind.PAGES) {\n                        let meta;\n                        let pageData = {};\n                        if (!ctx.isFallback) {\n                            pageData = JSON.parse(await this.fs.readFile(this.getFilePath(`${key}${NEXT_DATA_SUFFIX}`, IncrementalCacheKind.PAGES), 'utf8'));\n                        }\n                        data = {\n                            lastModified: mtime.getTime(),\n                            value: {\n                                kind: CachedRouteKind.PAGES,\n                                html: fileData,\n                                pageData,\n                                headers: meta == null ? void 0 : meta.headers,\n                                status: meta == null ? void 0 : meta.status\n                            }\n                        };\n                    } else {\n                        throw Object.defineProperty(new Error(`Invariant: Unexpected route kind ${kind} in file system cache.`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E445\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                }\n                if (data) {\n                    var _FileSystemCache_memoryCache1;\n                    (_FileSystemCache_memoryCache1 = FileSystemCache.memoryCache) == null ? void 0 : _FileSystemCache_memoryCache1.set(key, data);\n                }\n            } catch  {\n                return null;\n            }\n        }\n        if ((data == null ? void 0 : (_data_value = data.value) == null ? void 0 : _data_value.kind) === CachedRouteKind.APP_PAGE || (data == null ? void 0 : (_data_value1 = data.value) == null ? void 0 : _data_value1.kind) === CachedRouteKind.APP_ROUTE || (data == null ? void 0 : (_data_value2 = data.value) == null ? void 0 : _data_value2.kind) === CachedRouteKind.PAGES) {\n            var _data_value_headers;\n            let cacheTags;\n            const tagsHeader = (_data_value_headers = data.value.headers) == null ? void 0 : _data_value_headers[NEXT_CACHE_TAGS_HEADER];\n            if (typeof tagsHeader === 'string') {\n                cacheTags = tagsHeader.split(',');\n            }\n            if (cacheTags == null ? void 0 : cacheTags.length) {\n                // we trigger a blocking validation if an ISR page\n                // had a tag revalidated, if we want to be a background\n                // revalidation instead we return data.lastModified = -1\n                if (isStale(cacheTags, (data == null ? void 0 : data.lastModified) || Date.now())) {\n                    return null;\n                }\n            }\n        } else if ((data == null ? void 0 : (_data_value3 = data.value) == null ? void 0 : _data_value3.kind) === CachedRouteKind.FETCH) {\n            const combinedTags = ctx.kind === IncrementalCacheKind.FETCH ? [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ] : [];\n            const wasRevalidated = combinedTags.some((tag)=>{\n                if (this.revalidatedTags.includes(tag)) {\n                    return true;\n                }\n                return isStale([\n                    tag\n                ], (data == null ? void 0 : data.lastModified) || Date.now());\n            });\n            // When revalidate tag is called we don't return\n            // stale data so it's updated right away\n            if (wasRevalidated) {\n                data = undefined;\n            }\n        }\n        return data ?? null;\n    }\n    async set(key, data, ctx) {\n        var _FileSystemCache_memoryCache;\n        (_FileSystemCache_memoryCache = FileSystemCache.memoryCache) == null ? void 0 : _FileSystemCache_memoryCache.set(key, {\n            value: data,\n            lastModified: Date.now()\n        });\n        if (FileSystemCache.debug) {\n            console.log('set', key);\n        }\n        if (!this.flushToDisk || !data) return;\n        // Create a new writer that will prepare to write all the files to disk\n        // after their containing directory is created.\n        const writer = new MultiFileWriter(this.fs);\n        if (data.kind === CachedRouteKind.APP_ROUTE) {\n            const filePath = this.getFilePath(`${key}.body`, IncrementalCacheKind.APP_ROUTE);\n            writer.append(filePath, data.body);\n            const meta = {\n                headers: data.headers,\n                status: data.status,\n                postponed: undefined,\n                segmentPaths: undefined\n            };\n            writer.append(filePath.replace(/\\.body$/, NEXT_META_SUFFIX), JSON.stringify(meta, null, 2));\n        } else if (data.kind === CachedRouteKind.PAGES || data.kind === CachedRouteKind.APP_PAGE) {\n            const isAppPath = data.kind === CachedRouteKind.APP_PAGE;\n            const htmlPath = this.getFilePath(`${key}.html`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES);\n            writer.append(htmlPath, data.html);\n            // Fallbacks don't generate a data file.\n            if (!ctx.fetchCache && !ctx.isFallback) {\n                writer.append(this.getFilePath(`${key}${isAppPath ? ctx.isRoutePPREnabled ? RSC_PREFETCH_SUFFIX : RSC_SUFFIX : NEXT_DATA_SUFFIX}`, isAppPath ? IncrementalCacheKind.APP_PAGE : IncrementalCacheKind.PAGES), isAppPath ? data.rscData : JSON.stringify(data.pageData));\n            }\n            if ((data == null ? void 0 : data.kind) === CachedRouteKind.APP_PAGE) {\n                let segmentPaths;\n                if (data.segmentData) {\n                    segmentPaths = [];\n                    const segmentsDir = htmlPath.replace(/\\.html$/, RSC_SEGMENTS_DIR_SUFFIX);\n                    for (const [segmentPath, buffer] of data.segmentData){\n                        segmentPaths.push(segmentPath);\n                        const segmentDataFilePath = segmentsDir + segmentPath + RSC_SEGMENT_SUFFIX;\n                        writer.append(segmentDataFilePath, buffer);\n                    }\n                }\n                const meta = {\n                    headers: data.headers,\n                    status: data.status,\n                    postponed: data.postponed,\n                    segmentPaths\n                };\n                writer.append(htmlPath.replace(/\\.html$/, NEXT_META_SUFFIX), JSON.stringify(meta));\n            }\n        } else if (data.kind === CachedRouteKind.FETCH) {\n            const filePath = this.getFilePath(key, IncrementalCacheKind.FETCH);\n            writer.append(filePath, JSON.stringify({\n                ...data,\n                tags: ctx.fetchCache ? ctx.tags : []\n            }));\n        }\n        // Wait for all FS operations to complete.\n        await writer.wait();\n    }\n    getFilePath(pathname, kind) {\n        switch(kind){\n            case IncrementalCacheKind.FETCH:\n                // we store in .next/cache/fetch-cache so it can be persisted\n                // across deploys\n                return path.join(this.serverDistDir, '..', 'cache', 'fetch-cache', pathname);\n            case IncrementalCacheKind.PAGES:\n                return path.join(this.serverDistDir, 'pages', pathname);\n            case IncrementalCacheKind.IMAGE:\n            case IncrementalCacheKind.APP_PAGE:\n            case IncrementalCacheKind.APP_ROUTE:\n                return path.join(this.serverDistDir, 'app', pathname);\n            default:\n                throw Object.defineProperty(new Error(`Unexpected file path kind: ${kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E479\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n}\n\n//# sourceMappingURL=file-system-cache.js.map","/**\n * This transforms a URL pathname into a route. It removes any trailing slashes\n * and the `/index` suffix.\n *\n * @param pathname - The URL path that needs to be optimized.\n * @returns - The route\n *\n * @example\n * // returns '/example'\n * toRoute('/example/index/');\n *\n * @example\n * // returns '/example'\n * toRoute('/example/');\n *\n * @example\n * // returns '/'\n * toRoute('/index/');\n *\n * @example\n * // returns '/'\n * toRoute('/');\n */ export function toRoute(pathname) {\n    return pathname.replace(/(?:\\/index)?\\/?$/, '') || '/';\n}\n\n//# sourceMappingURL=to-route.js.map","/**\n * A shared cache of cache controls for routes. This cache is used so we don't\n * have to modify the prerender manifest when we want to update the cache\n * control for a route.\n */ export class SharedCacheControls {\n    static #_ = /**\n   * The in-memory cache of cache lives for routes. This cache is populated when\n   * the cache is updated with new cache lives.\n   */ this.cacheControls = new Map();\n    constructor(/**\n     * The prerender manifest that contains the initial cache controls for\n     * routes.\n     */ prerenderManifest){\n        this.prerenderManifest = prerenderManifest;\n    }\n    /**\n   * Try to get the cache control value for a route. This will first try to get\n   * the value from the in-memory cache. If the value is not present in the\n   * in-memory cache, it will be sourced from the prerender manifest.\n   *\n   * @param route the route to get the cache control for\n   * @returns the cache control for the route, or undefined if the values\n   *          are not present in the in-memory cache or the prerender manifest\n   */ get(route) {\n        // This is a copy on write cache that is updated when the cache is updated.\n        // If the cache is never written to, then the values will be sourced from\n        // the prerender manifest.\n        let cacheControl = SharedCacheControls.cacheControls.get(route);\n        if (cacheControl) return cacheControl;\n        let prerenderData = this.prerenderManifest.routes[route];\n        if (prerenderData) {\n            const { initialRevalidateSeconds, initialExpireSeconds } = prerenderData;\n            if (typeof initialRevalidateSeconds !== 'undefined') {\n                return {\n                    revalidate: initialRevalidateSeconds,\n                    expire: initialExpireSeconds\n                };\n            }\n        }\n        const dynamicPrerenderData = this.prerenderManifest.dynamicRoutes[route];\n        if (dynamicPrerenderData) {\n            const { fallbackRevalidate, fallbackExpire } = dynamicPrerenderData;\n            if (typeof fallbackRevalidate !== 'undefined') {\n                return {\n                    revalidate: fallbackRevalidate,\n                    expire: fallbackExpire\n                };\n            }\n        }\n        return undefined;\n    }\n    /**\n   * Set the cache control for a route.\n   *\n   * @param route the route to set the cache control for\n   * @param cacheControl the cache control for the route\n   */ set(route, cacheControl) {\n        SharedCacheControls.cacheControls.set(route, cacheControl);\n    }\n    /**\n   * Clear the in-memory cache of cache controls for routes.\n   */ clear() {\n        SharedCacheControls.cacheControls.clear();\n    }\n}\n\n//# sourceMappingURL=shared-cache-controls.external.js.map","import { IncrementalCacheKind, CachedRouteKind } from '../../response-cache';\nimport FileSystemCache from './file-system-cache';\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path';\nimport { CACHE_ONE_YEAR, PRERENDER_REVALIDATE_HEADER } from '../../../lib/constants';\nimport { toRoute } from '../to-route';\nimport { SharedCacheControls } from './shared-cache-controls.external';\nimport { getPrerenderResumeDataCache, getRenderResumeDataCache, workUnitAsyncStorage } from '../../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../../shared/lib/invariant-error';\nimport { getPreviouslyRevalidatedTags } from '../../server-utils';\nimport { workAsyncStorage } from '../../app-render/work-async-storage.external';\nimport { DetachedPromise } from '../../../lib/detached-promise';\nexport class CacheHandler {\n    // eslint-disable-next-line\n    constructor(_ctx){}\n    async get(_cacheKey, _ctx) {\n        return {};\n    }\n    async set(_cacheKey, _data, _ctx) {}\n    async revalidateTag(..._args) {}\n    resetRequestCache() {}\n}\nexport class IncrementalCache {\n    static #_ = this.debug = !!process.env.NEXT_PRIVATE_DEBUG_CACHE;\n    constructor({ fs, dev, flushToDisk, minimalMode, serverDistDir, requestHeaders, maxMemoryCacheSize, getPrerenderManifest, fetchCacheKeyPrefix, CurCacheHandler, allowedRevalidateHeaderKeys }){\n        var _this_prerenderManifest_preview, _this_prerenderManifest;\n        this.locks = new Map();\n        this.hasCustomCacheHandler = Boolean(CurCacheHandler);\n        const cacheHandlersSymbol = Symbol.for('@next/cache-handlers');\n        const _globalThis = globalThis;\n        if (!CurCacheHandler) {\n            // if we have a global cache handler available leverage it\n            const globalCacheHandler = _globalThis[cacheHandlersSymbol];\n            if (globalCacheHandler == null ? void 0 : globalCacheHandler.FetchCache) {\n                CurCacheHandler = globalCacheHandler.FetchCache;\n            } else {\n                if (fs && serverDistDir) {\n                    if (IncrementalCache.debug) {\n                        console.log('using filesystem cache handler');\n                    }\n                    CurCacheHandler = FileSystemCache;\n                }\n            }\n        } else if (IncrementalCache.debug) {\n            console.log('using custom cache handler', CurCacheHandler.name);\n        }\n        if (process.env.__NEXT_TEST_MAX_ISR_CACHE) {\n            // Allow cache size to be overridden for testing purposes\n            maxMemoryCacheSize = parseInt(process.env.__NEXT_TEST_MAX_ISR_CACHE, 10);\n        }\n        this.dev = dev;\n        this.disableForTestmode = process.env.NEXT_PRIVATE_TEST_PROXY === 'true';\n        // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n        // because we replace this.minimalMode to true in production bundles.\n        const minimalModeKey = 'minimalMode';\n        this[minimalModeKey] = minimalMode;\n        this.requestHeaders = requestHeaders;\n        this.allowedRevalidateHeaderKeys = allowedRevalidateHeaderKeys;\n        this.prerenderManifest = getPrerenderManifest();\n        this.cacheControls = new SharedCacheControls(this.prerenderManifest);\n        this.fetchCacheKeyPrefix = fetchCacheKeyPrefix;\n        let revalidatedTags = [];\n        if (requestHeaders[PRERENDER_REVALIDATE_HEADER] === ((_this_prerenderManifest = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview = _this_prerenderManifest.preview) == null ? void 0 : _this_prerenderManifest_preview.previewModeId)) {\n            this.isOnDemandRevalidate = true;\n        }\n        if (minimalMode) {\n            var _this_prerenderManifest_preview1, _this_prerenderManifest1;\n            revalidatedTags = getPreviouslyRevalidatedTags(requestHeaders, (_this_prerenderManifest1 = this.prerenderManifest) == null ? void 0 : (_this_prerenderManifest_preview1 = _this_prerenderManifest1.preview) == null ? void 0 : _this_prerenderManifest_preview1.previewModeId);\n        }\n        if (CurCacheHandler) {\n            this.cacheHandler = new CurCacheHandler({\n                dev,\n                fs,\n                flushToDisk,\n                serverDistDir,\n                revalidatedTags,\n                maxMemoryCacheSize,\n                _requestHeaders: requestHeaders,\n                fetchCacheKeyPrefix\n            });\n        }\n    }\n    calculateRevalidate(pathname, fromTime, dev, isFallback) {\n        // in development we don't have a prerender-manifest\n        // and default to always revalidating to allow easier debugging\n        if (dev) return Math.floor(performance.timeOrigin + performance.now() - 1000);\n        const cacheControl = this.cacheControls.get(toRoute(pathname));\n        // if an entry isn't present in routes we fallback to a default\n        // of revalidating after 1 second unless it's a fallback request.\n        const initialRevalidateSeconds = cacheControl ? cacheControl.revalidate : isFallback ? false : 1;\n        const revalidateAfter = typeof initialRevalidateSeconds === 'number' ? initialRevalidateSeconds * 1000 + fromTime : initialRevalidateSeconds;\n        return revalidateAfter;\n    }\n    _getPathname(pathname, fetchCache) {\n        return fetchCache ? pathname : normalizePagePath(pathname);\n    }\n    resetRequestCache() {\n        var _this_cacheHandler_resetRequestCache, _this_cacheHandler;\n        (_this_cacheHandler = this.cacheHandler) == null ? void 0 : (_this_cacheHandler_resetRequestCache = _this_cacheHandler.resetRequestCache) == null ? void 0 : _this_cacheHandler_resetRequestCache.call(_this_cacheHandler);\n    }\n    async lock(cacheKey) {\n        // Wait for any existing lock on this cache key to be released\n        // This implements a simple queue-based locking mechanism\n        while(true){\n            const lock = this.locks.get(cacheKey);\n            if (IncrementalCache.debug) {\n                console.log('lock get', cacheKey, !!lock);\n            }\n            // If no lock exists, we can proceed to acquire it\n            if (!lock) break;\n            // Wait for the existing lock to be released before trying again\n            await lock;\n        }\n        // Create a new detached promise that will represent this lock\n        // The resolve function (unlock) will be returned to the caller\n        const { resolve, promise } = new DetachedPromise();\n        if (IncrementalCache.debug) {\n            console.log('successfully locked', cacheKey);\n        }\n        // Store the lock promise in the locks map\n        this.locks.set(cacheKey, promise);\n        return ()=>{\n            // Resolve the promise to release the lock.\n            resolve();\n            // Remove the lock from the map once it's released so that future gets\n            // can acquire the lock.\n            this.locks.delete(cacheKey);\n        };\n    }\n    async revalidateTag(tags) {\n        var _this_cacheHandler;\n        return (_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.revalidateTag(tags);\n    }\n    // x-ref: https://github.com/facebook/react/blob/2655c9354d8e1c54ba888444220f63e836925caa/packages/react/src/ReactFetch.js#L23\n    async generateCacheKey(url, init = {}) {\n        // this should be bumped anytime a fix is made to cache entries\n        // that should bust the cache\n        const MAIN_KEY_PREFIX = 'v3';\n        const bodyChunks = [];\n        const encoder = new TextEncoder();\n        const decoder = new TextDecoder();\n        if (init.body) {\n            // handle Uint8Array body\n            if (init.body instanceof Uint8Array) {\n                bodyChunks.push(decoder.decode(init.body));\n                init._ogBody = init.body;\n            } else if (typeof init.body.getReader === 'function') {\n                const readableBody = init.body;\n                const chunks = [];\n                try {\n                    await readableBody.pipeTo(new WritableStream({\n                        write (chunk) {\n                            if (typeof chunk === 'string') {\n                                chunks.push(encoder.encode(chunk));\n                                bodyChunks.push(chunk);\n                            } else {\n                                chunks.push(chunk);\n                                bodyChunks.push(decoder.decode(chunk, {\n                                    stream: true\n                                }));\n                            }\n                        }\n                    }));\n                    // Flush the decoder.\n                    bodyChunks.push(decoder.decode());\n                    // Create a new buffer with all the chunks.\n                    const length = chunks.reduce((total, arr)=>total + arr.length, 0);\n                    const arrayBuffer = new Uint8Array(length);\n                    // Push each of the chunks into the new array buffer.\n                    let offset = 0;\n                    for (const chunk of chunks){\n                        arrayBuffer.set(chunk, offset);\n                        offset += chunk.length;\n                    }\n                    ;\n                    init._ogBody = arrayBuffer;\n                } catch (err) {\n                    console.error('Problem reading body', err);\n                }\n            } else if (typeof init.body.keys === 'function') {\n                const formData = init.body;\n                init._ogBody = init.body;\n                for (const key of new Set([\n                    ...formData.keys()\n                ])){\n                    const values = formData.getAll(key);\n                    bodyChunks.push(`${key}=${(await Promise.all(values.map(async (val)=>{\n                        if (typeof val === 'string') {\n                            return val;\n                        } else {\n                            return await val.text();\n                        }\n                    }))).join(',')}`);\n                }\n            // handle blob body\n            } else if (typeof init.body.arrayBuffer === 'function') {\n                const blob = init.body;\n                const arrayBuffer = await blob.arrayBuffer();\n                bodyChunks.push(await blob.text());\n                init._ogBody = new Blob([\n                    arrayBuffer\n                ], {\n                    type: blob.type\n                });\n            } else if (typeof init.body === 'string') {\n                bodyChunks.push(init.body);\n                init._ogBody = init.body;\n            }\n        }\n        const headers = typeof (init.headers || {}).keys === 'function' ? Object.fromEntries(init.headers) : Object.assign({}, init.headers);\n        // w3c trace context headers can break request caching and deduplication\n        // so we remove them from the cache key\n        if ('traceparent' in headers) delete headers['traceparent'];\n        if ('tracestate' in headers) delete headers['tracestate'];\n        const cacheString = JSON.stringify([\n            MAIN_KEY_PREFIX,\n            this.fetchCacheKeyPrefix || '',\n            url,\n            init.method,\n            headers,\n            init.mode,\n            init.redirect,\n            init.credentials,\n            init.referrer,\n            init.referrerPolicy,\n            init.integrity,\n            init.cache,\n            bodyChunks\n        ]);\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            function bufferToHex(buffer) {\n                return Array.prototype.map.call(new Uint8Array(buffer), (b)=>b.toString(16).padStart(2, '0')).join('');\n            }\n            const buffer = encoder.encode(cacheString);\n            return bufferToHex(await crypto.subtle.digest('SHA-256', buffer));\n        } else {\n            const crypto1 = require('crypto');\n            return crypto1.createHash('sha256').update(cacheString).digest('hex');\n        }\n    }\n    async get(cacheKey, ctx) {\n        var _this_cacheHandler, _cacheData_value;\n        // Unlike other caches if we have a resume data cache, we use it even if\n        // testmode would normally disable it or if requestHeaders say 'no-cache'.\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const resumeDataCache = workUnitStore ? getRenderResumeDataCache(workUnitStore) : null;\n            if (resumeDataCache) {\n                const memoryCacheData = resumeDataCache.fetch.get(cacheKey);\n                if ((memoryCacheData == null ? void 0 : memoryCacheData.kind) === CachedRouteKind.FETCH) {\n                    return {\n                        isStale: false,\n                        value: memoryCacheData\n                    };\n                }\n            }\n        }\n        // we don't leverage the prerender cache in dev mode\n        // so that getStaticProps is always called for easier debugging\n        if (this.disableForTestmode || this.dev && (ctx.kind !== IncrementalCacheKind.FETCH || this.requestHeaders['cache-control'] === 'no-cache')) {\n            return null;\n        }\n        cacheKey = this._getPathname(cacheKey, ctx.kind === IncrementalCacheKind.FETCH);\n        const cacheData = await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.get(cacheKey, ctx));\n        if (ctx.kind === IncrementalCacheKind.FETCH) {\n            var _cacheData_value1;\n            if (!cacheData) {\n                return null;\n            }\n            if (((_cacheData_value1 = cacheData.value) == null ? void 0 : _cacheData_value1.kind) !== CachedRouteKind.FETCH) {\n                var _cacheData_value2;\n                throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} to be a \"FETCH\" kind, got ${JSON.stringify((_cacheData_value2 = cacheData.value) == null ? void 0 : _cacheData_value2.kind)} instead.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E653\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const workStore = workAsyncStorage.getStore();\n            const combinedTags = [\n                ...ctx.tags || [],\n                ...ctx.softTags || []\n            ];\n            // if a tag was revalidated we don't return stale data\n            if (combinedTags.some((tag)=>{\n                var _this_revalidatedTags, _workStore_pendingRevalidatedTags;\n                return ((_this_revalidatedTags = this.revalidatedTags) == null ? void 0 : _this_revalidatedTags.includes(tag)) || (workStore == null ? void 0 : (_workStore_pendingRevalidatedTags = workStore.pendingRevalidatedTags) == null ? void 0 : _workStore_pendingRevalidatedTags.includes(tag));\n            })) {\n                return null;\n            }\n            const revalidate = ctx.revalidate || cacheData.value.revalidate;\n            const age = (performance.timeOrigin + performance.now() - (cacheData.lastModified || 0)) / 1000;\n            const isStale = age > revalidate;\n            const data = cacheData.value.data;\n            return {\n                isStale,\n                value: {\n                    kind: CachedRouteKind.FETCH,\n                    data,\n                    revalidate\n                }\n            };\n        } else if ((cacheData == null ? void 0 : (_cacheData_value = cacheData.value) == null ? void 0 : _cacheData_value.kind) === CachedRouteKind.FETCH) {\n            throw Object.defineProperty(new InvariantError(`Expected cached value for cache key ${JSON.stringify(cacheKey)} not to be a ${JSON.stringify(ctx.kind)} kind, got \"FETCH\" instead.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E652\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        let entry = null;\n        const cacheControl = this.cacheControls.get(toRoute(cacheKey));\n        let isStale;\n        let revalidateAfter;\n        if ((cacheData == null ? void 0 : cacheData.lastModified) === -1) {\n            isStale = -1;\n            revalidateAfter = -1 * CACHE_ONE_YEAR;\n        } else {\n            revalidateAfter = this.calculateRevalidate(cacheKey, (cacheData == null ? void 0 : cacheData.lastModified) || performance.timeOrigin + performance.now(), this.dev ?? false, ctx.isFallback);\n            isStale = revalidateAfter !== false && revalidateAfter < performance.timeOrigin + performance.now() ? true : undefined;\n        }\n        if (cacheData) {\n            entry = {\n                isStale,\n                cacheControl,\n                revalidateAfter,\n                value: cacheData.value\n            };\n        }\n        if (!cacheData && this.prerenderManifest.notFoundRoutes.includes(cacheKey)) {\n            // for the first hit after starting the server the cache\n            // may not have a way to save notFound: true so if\n            // the prerender-manifest marks this as notFound then we\n            // return that entry and trigger a cache set to give it a\n            // chance to update in-memory entries\n            entry = {\n                isStale,\n                value: null,\n                cacheControl,\n                revalidateAfter\n            };\n            this.set(cacheKey, entry.value, {\n                ...ctx,\n                cacheControl\n            });\n        }\n        return entry;\n    }\n    async set(pathname, data, ctx) {\n        // Even if we otherwise disable caching for testMode or if no fetchCache is\n        // configured we still always stash results in the resume data cache if one\n        // exists. This is because this is a transient in memory cache that\n        // populates caches ahead of a dynamic render in dev mode to allow the RSC\n        // debug info to have the right environment associated to it.\n        if ((data == null ? void 0 : data.kind) === CachedRouteKind.FETCH) {\n            const workUnitStore = workUnitAsyncStorage.getStore();\n            const prerenderResumeDataCache = workUnitStore ? getPrerenderResumeDataCache(workUnitStore) : null;\n            if (prerenderResumeDataCache) {\n                prerenderResumeDataCache.fetch.set(pathname, data);\n            }\n        }\n        if (this.disableForTestmode || this.dev && !ctx.fetchCache) return;\n        pathname = this._getPathname(pathname, ctx.fetchCache);\n        // FetchCache has upper limit of 2MB per-entry currently\n        const itemSize = JSON.stringify(data).length;\n        if (ctx.fetchCache && itemSize > 2 * 1024 * 1024 && // We ignore the size limit when custom cache handler is being used, as it\n        // might not have this limit\n        !this.hasCustomCacheHandler && // We also ignore the size limit when it's an implicit build-time-only\n        // caching that the user isn't even aware of.\n        !ctx.isImplicitBuildTimeCache) {\n            const warningText = `Failed to set Next.js data cache for ${ctx.fetchUrl || pathname}, items over 2MB can not be cached (${itemSize} bytes)`;\n            if (this.dev) {\n                throw Object.defineProperty(new Error(warningText), \"__NEXT_ERROR_CODE\", {\n                    value: \"E394\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            console.warn(warningText);\n            return;\n        }\n        try {\n            var _this_cacheHandler;\n            if (!ctx.fetchCache && ctx.cacheControl) {\n                this.cacheControls.set(toRoute(pathname), ctx.cacheControl);\n            }\n            await ((_this_cacheHandler = this.cacheHandler) == null ? void 0 : _this_cacheHandler.set(pathname, data, ctx));\n        } catch (error) {\n            console.warn('Failed to update prerender cache for', pathname, error);\n        }\n    }\n}\n\n//# sourceMappingURL=index.js.map","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n  PrerenderStoreModernRuntime,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport {\n  getRuntimeStagePromise,\n  workUnitAsyncStorage,\n} from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n  ROOT_LAYOUT_BOUNDARY_NAME,\n} from '../../lib/framework/boundary-constants'\nimport { scheduleOnNextTick } from '../../lib/scheduler'\nimport { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicErrorWithStack: null | Error\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspenseAboveBody: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasAllowedDynamic: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspenseAboveBody: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasAllowedDynamic: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'cache':\n      case 'unstable-cache':\n        // Inside cache scopes, marking a scope as dynamic has no effect,\n        // because the outer cache scope creates a cache boundary. This is\n        // subtly different from reading a dynamic data source, which is\n        // forbidden inside a cache scope.\n        return\n      case 'private-cache':\n        // A private cache scope is already dynamic by definition.\n        return\n      case 'prerender-legacy':\n      case 'prerender-ppr':\n      case 'request':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-ppr':\n        return postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      case 'prerender-legacy':\n        workUnitStore.revalidate = 0\n\n        // We aren't prerendering, but we are generating a static page. We need\n        // to bail out of static generation.\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      case 'request':\n        if (process.env.NODE_ENV !== 'production') {\n          workUnitStore.usedDynamic = true\n        }\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\n/**\n * This function is meant to be used when prerendering without cacheComponents or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(workUnitStore: WorkUnitStore) {\n  switch (workUnitStore.type) {\n    case 'cache':\n    case 'unstable-cache':\n      // Inside cache scopes, marking a scope as dynamic has no effect,\n      // because the outer cache scope creates a cache boundary. This is\n      // subtly different from reading a dynamic data source, which is\n      // forbidden inside a cache scope.\n      return\n    case 'private-cache':\n      // A private cache scope is already dynamic by definition.\n      return\n    case 'prerender':\n    case 'prerender-runtime':\n    case 'prerender-legacy':\n    case 'prerender-ppr':\n    case 'prerender-client':\n      break\n    case 'request':\n      if (process.env.NODE_ENV !== 'production') {\n        workUnitStore.usedDynamic = true\n      }\n      break\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  // It is important that we set this tracking value after aborting. Aborts are executed\n  // synchronously except for the case where you abort during render itself. By setting this\n  // value late we can use it to determine if any of the aborted tasks are the task that\n  // called the sync IO expression in the first place.\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with cacheComponents. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in cacheComponents mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const prerenderSignal = prerenderStore.controller.signal\n  if (prerenderSignal.aborted === false) {\n    // TODO it would be better to move this aborted check into the callsite so we can avoid making\n    // the error object when it isn't relevant to the aborting of the prerender however\n    // since we need the throw semantics regardless of whether we abort it is easier to land\n    // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n    // to ideal implementation\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    const dynamicTracking = prerenderStore.dynamicTracking\n    if (dynamicTracking) {\n      if (dynamicTracking.syncDynamicErrorWithStack === null) {\n        dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      }\n    }\n  }\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n/**\n * Use this function when dynamically prerendering with dynamicIO.\n * We don't want to error, because it's better to return something\n * (and we've already aborted the render at the point where the sync dynamic error occured),\n * but we should log an error server-side.\n * @internal\n */\nexport function warnOnSyncDynamicError(dynamicTracking: DynamicTrackingState) {\n  if (dynamicTracking.syncDynamicErrorWithStack) {\n    // the server did something sync dynamic, likely\n    // leading to an early termination of the prerender.\n    console.error(dynamicTracking.syncDynamicErrorWithStack)\n  }\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createRenderInBrowserAbortSignal(): AbortSignal {\n  const controller = new AbortController()\n  controller.abort(new BailoutToCSRError('Render in Browser'))\n  return controller.signal\n}\n\n/**\n * In a prerender, we may end up with hanging Promises as inputs due them\n * stalling on connection() or because they're loading dynamic data. In that\n * case we need to abort the encoding of arguments since they'll never complete.\n */\nexport function createHangingInputAbortSignal(\n  workUnitStore: WorkUnitStore\n): AbortSignal | undefined {\n  switch (workUnitStore.type) {\n    case 'prerender':\n    case 'prerender-runtime':\n      const controller = new AbortController()\n\n      if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If\n        // the input we're waiting on is coming from another cache, we do want\n        // to wait for it so that we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(() => {\n          controller.abort()\n        })\n      } else {\n        // Otherwise we're in the final render and we should already have all\n        // our caches filled.\n        // If the prerender uses stages, we have wait until the runtime stage,\n        // at which point all runtime inputs will be resolved.\n        // (otherwise, a runtime prerender might consider `cookies()` hanging\n        //  even though they'd resolve in the next task.)\n        //\n        // We might still be waiting on some microtasks so we\n        // wait one tick before giving up. When we give up, we still want to\n        // render the content of this cache as deeply as we can so that we can\n        // suspend as deeply as possible in the tree or not at all if we don't\n        // end up waiting for the input.\n        const runtimeStagePromise = getRuntimeStagePromise(workUnitStore)\n        if (runtimeStagePromise) {\n          runtimeStagePromise.then(() =>\n            scheduleOnNextTick(() => controller.abort())\n          )\n        } else {\n          scheduleOnNextTick(() => controller.abort())\n        }\n      }\n\n      return controller.signal\n    case 'prerender-client':\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n    case 'request':\n    case 'cache':\n    case 'private-cache':\n    case 'unstable-cache':\n      return undefined\n    default:\n      workUnitStore satisfies never\n  }\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workStore && workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender-client':\n      case 'prerender': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          // We are in a prerender with cacheComponents semantics. We are going to\n          // hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole.\n          React.use(\n            makeHangingPromise(\n              workUnitStore.renderSignal,\n              workStore.route,\n              expression\n            )\n          )\n        }\n        break\n      }\n      case 'prerender-ppr': {\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        if (fallbackParams && fallbackParams.size > 0) {\n          return postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        }\n        break\n      }\n      case 'prerender-runtime':\n        throw new InvariantError(\n          `\\`${expression}\\` was called during a runtime prerender. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'cache':\n      case 'private-cache':\n        throw new InvariantError(\n          `\\`${expression}\\` was called inside a cache scope. Next.js should be preventing ${expression} from being included in server components statically, but did not in this case.`\n        )\n      case 'prerender-legacy':\n      case 'request':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\n\n// Common implicit body tags that React will treat as body when placed directly in html\nconst bodyAndImplicitTags =\n  'body|div|main|section|article|aside|header|footer|nav|form|p|span|h1|h2|h3|h4|h5|h6'\n\n// Detects when RootLayoutBoundary (our framework marker component) appears\n// after Suspense in the component stack, indicating the root layout is wrapped\n// within a Suspense boundary. Ensures no body/html/implicit-body components are in between.\n//\n// Example matches:\n//   at Suspense (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\n//\n// Or with other components in between (but not body/html/implicit-body):\n//   at Suspense (<anonymous>)\n//   at SomeComponent (<anonymous>)\n//   at __next_root_layout_boundary__ (<anonymous>)\nconst hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex = new RegExp(\n  `\\\\n\\\\s+at Suspense \\\\(<anonymous>\\\\)(?:(?!\\\\n\\\\s+at (?:${bodyAndImplicitTags}) \\\\(<anonymous>\\\\))[\\\\s\\\\S])*?\\\\n\\\\s+at ${ROOT_LAYOUT_BOUNDARY_NAME} \\\\([^\\\\n]*\\\\)`\n)\n\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  workStore: WorkStore,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (\n    hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex.test(\n      componentStack\n    )\n  ) {\n    // For Suspense within body, the prelude wouldn't be empty so it wouldn't violate the empty static shells rule.\n    // But if you have Suspense above body, the prelude is empty but we allow that because having Suspense\n    // is an explicit signal from the user that they acknowledge the empty shell and want dynamic rendering.\n    dynamicValidation.hasAllowedDynamic = true\n    dynamicValidation.hasSuspenseAboveBody = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    // this error had a Suspense boundary above it so we don't need to report it as a source\n    // of disallowed\n    dynamicValidation.hasAllowedDynamic = true\n    return\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    // This task was the task that called the sync error.\n    dynamicValidation.dynamicErrors.push(\n      clientDynamic.syncDynamicErrorWithStack\n    )\n    return\n  } else {\n    const message = `Route \"${workStore.route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentOrOwnerStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */\nfunction createErrorWithComponentOrOwnerStack(\n  message: string,\n  componentStack: string\n) {\n  const ownerStack =\n    process.env.NODE_ENV !== 'production' && React.captureOwnerStack\n      ? React.captureOwnerStack()\n      : null\n\n  const error = new Error(message)\n  error.stack = error.name + ': ' + message + (ownerStack ?? componentStack)\n  return error\n}\n\nexport enum PreludeState {\n  Full = 0,\n  Empty = 1,\n  Errored = 2,\n}\n\nexport function logDisallowedDynamicError(\n  workStore: WorkStore,\n  error: Error\n): void {\n  console.error(error)\n\n  if (!workStore.dev) {\n    if (workStore.hasReadableErrorStacks) {\n      console.error(\n        `To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.`\n      )\n    } else {\n      console.error(`To get a more detailed stack trace and pinpoint the issue, try one of the following:\n  - Start the app in development mode by running \\`next dev\\`, then open \"${workStore.route}\" in your browser to investigate the error.\n  - Rerun the production build with \\`next build --debug-prerender\\` to generate better stack traces.`)\n    }\n  }\n}\n\nexport function throwIfDisallowedDynamic(\n  workStore: WorkStore,\n  prelude: PreludeState,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState\n): void {\n  if (prelude !== PreludeState.Full) {\n    if (dynamicValidation.hasSuspenseAboveBody) {\n      // This route has opted into allowing fully dynamic rendering\n      // by including a Suspense boundary above the body. In this case\n      // a lack of a shell is not considered disallowed so we simply return\n      return\n    }\n\n    if (serverDynamic.syncDynamicErrorWithStack) {\n      // There is no shell and the server did something sync dynamic likely\n      // leading to an early termination of the prerender before the shell\n      // could be completed. We terminate the build/validating render.\n      logDisallowedDynamicError(\n        workStore,\n        serverDynamic.syncDynamicErrorWithStack\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    // We didn't have any sync bailouts but there may be user code which\n    // blocked the root. We would have captured these during the prerender\n    // and can log them here and then terminate the build/validating render\n    const dynamicErrors = dynamicValidation.dynamicErrors\n    if (dynamicErrors.length > 0) {\n      for (let i = 0; i < dynamicErrors.length; i++) {\n        logDisallowedDynamicError(workStore, dynamicErrors[i])\n      }\n\n      throw new StaticGenBailoutError()\n    }\n\n    // If we got this far then the only other thing that could be blocking\n    // the root is dynamic Viewport. If this is dynamic then\n    // you need to opt into that by adding a Suspense boundary above the body\n    // to indicate your are ok with fully dynamic rendering.\n    if (dynamicValidation.hasDynamicViewport) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport`\n      )\n      throw new StaticGenBailoutError()\n    }\n\n    if (prelude === PreludeState.Empty) {\n      // If we ever get this far then we messed up the tracking of invalid dynamic.\n      // We still adhere to the constraint that you must produce a shell but invite the\n      // user to report this as a bug in Next.js.\n      console.error(\n        `Route \"${workStore.route}\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.`\n      )\n      throw new StaticGenBailoutError()\n    }\n  } else {\n    if (\n      dynamicValidation.hasAllowedDynamic === false &&\n      dynamicValidation.hasDynamicMetadata\n    ) {\n      console.error(\n        `Route \"${workStore.route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or uncached external data (\\`fetch(...)\\`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata`\n      )\n      throw new StaticGenBailoutError()\n    }\n  }\n}\n\nexport function delayUntilRuntimeStage<T>(\n  prerenderStore: PrerenderStoreModernRuntime,\n  result: Promise<T>\n): Promise<T> {\n  if (prerenderStore.runtimeStagePromise) {\n    return prerenderStore.runtimeStagePromise.then(() => result)\n  }\n  return result\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport const matchSegment = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  // segment is either Array or string\n  if (typeof existingSegment === 'string') {\n    if (typeof segment === 'string') {\n      // Common case: segment is just a string\n      return existingSegment === segment\n    }\n    return false\n  }\n\n  if (typeof segment === 'string') {\n    return false\n  }\n  return existingSegment[0] === segment[0] && existingSegment[1] === segment[1]\n}\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const AsyncMetadataOutlet = registerClientReference(\nfunction() { throw new Error(\"Attempted to call AsyncMetadataOutlet() from the server but AsyncMetadataOutlet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/metadata/async-metadata.js\",\n\"AsyncMetadataOutlet\",\n);","/**\n * Node in the doubly-linked list used for LRU tracking.\n * Each node represents a cache entry with bidirectional pointers.\n */ class LRUNode {\n    constructor(key, data, size){\n        this.prev = null;\n        this.next = null;\n        this.key = key;\n        this.data = data;\n        this.size = size;\n    }\n}\n/**\n * Sentinel node used for head/tail boundaries.\n * These nodes don't contain actual cache data but simplify list operations.\n */ class SentinelNode {\n    constructor(){\n        this.prev = null;\n        this.next = null;\n    }\n}\n/**\n * LRU (Least Recently Used) Cache implementation using a doubly-linked list\n * and hash map for O(1) operations.\n *\n * Algorithm:\n * - Uses a doubly-linked list to maintain access order (most recent at head)\n * - Hash map provides O(1) key-to-node lookup\n * - Sentinel head/tail nodes simplify edge case handling\n * - Size-based eviction supports custom size calculation functions\n *\n * Data Structure Layout:\n * HEAD <-> [most recent] <-> ... <-> [least recent] <-> TAIL\n *\n * Operations:\n * - get(): Move accessed node to head (mark as most recent)\n * - set(): Add new node at head, evict from tail if over capacity\n * - Eviction: Remove least recent node (tail.prev) when size exceeds limit\n */ export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize;\n        // Create sentinel nodes to simplify doubly-linked list operations\n        // HEAD <-> TAIL (empty list)\n        this.head = new SentinelNode();\n        this.tail = new SentinelNode();\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    }\n    /**\n   * Adds a node immediately after the head (marks as most recently used).\n   * Used when inserting new items or when an item is accessed.\n   * PRECONDITION: node must be disconnected (prev/next should be null)\n   */ addToHead(node) {\n        node.prev = this.head;\n        node.next = this.head.next;\n        // head.next is always non-null (points to tail or another node)\n        this.head.next.prev = node;\n        this.head.next = node;\n    }\n    /**\n   * Removes a node from its current position in the doubly-linked list.\n   * Updates the prev/next pointers of adjacent nodes to maintain list integrity.\n   * PRECONDITION: node must be connected (prev/next are non-null)\n   */ removeNode(node) {\n        // Connected nodes always have non-null prev/next\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n    }\n    /**\n   * Moves an existing node to the head position (marks as most recently used).\n   * This is the core LRU operation - accessed items become most recent.\n   */ moveToHead(node) {\n        this.removeNode(node);\n        this.addToHead(node);\n    }\n    /**\n   * Removes and returns the least recently used node (the one before tail).\n   * This is called during eviction when the cache exceeds capacity.\n   * PRECONDITION: cache is not empty (ensured by caller)\n   */ removeTail() {\n        const lastNode = this.tail.prev;\n        // tail.prev is always non-null and always LRUNode when cache is not empty\n        this.removeNode(lastNode);\n        return lastNode;\n    }\n    /**\n   * Sets a key-value pair in the cache.\n   * If the key exists, updates the value and moves to head.\n   * If new, adds at head and evicts from tail if necessary.\n   *\n   * Time Complexity:\n   * - O(1) for uniform item sizes\n   * - O(k) where k is the number of items evicted (can be O(N) for variable sizes)\n   */ set(key, value) {\n        const size = (this.calculateSize == null ? void 0 : this.calculateSize.call(this, value)) ?? 1;\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        const existing = this.cache.get(key);\n        if (existing) {\n            // Update existing node: adjust size and move to head (most recent)\n            existing.data = value;\n            this.totalSize = this.totalSize - existing.size + size;\n            existing.size = size;\n            this.moveToHead(existing);\n        } else {\n            // Add new node at head (most recent position)\n            const newNode = new LRUNode(key, value, size);\n            this.cache.set(key, newNode);\n            this.addToHead(newNode);\n            this.totalSize += size;\n        }\n        // Evict least recently used items until under capacity\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            const tail = this.removeTail();\n            this.cache.delete(tail.key);\n            this.totalSize -= tail.size;\n        }\n    }\n    /**\n   * Checks if a key exists in the cache.\n   * This is a pure query operation - does NOT update LRU order.\n   *\n   * Time Complexity: O(1)\n   */ has(key) {\n        return this.cache.has(key);\n    }\n    /**\n   * Retrieves a value by key and marks it as most recently used.\n   * Moving to head maintains the LRU property for future evictions.\n   *\n   * Time Complexity: O(1)\n   */ get(key) {\n        const node = this.cache.get(key);\n        if (!node) return undefined;\n        // Mark as most recently used by moving to head\n        this.moveToHead(node);\n        return node.data;\n    }\n    /**\n   * Returns an iterator over the cache entries. The order is outputted in the\n   * order of most recently used to least recently used.\n   */ *[Symbol.iterator]() {\n        let current = this.head.next;\n        while(current && current !== this.tail){\n            // Between head and tail, current is always LRUNode\n            const node = current;\n            yield [\n                node.key,\n                node.data\n            ];\n            current = current.next;\n        }\n    }\n    /**\n   * Removes a specific key from the cache.\n   * Updates both the hash map and doubly-linked list.\n   *\n   * Time Complexity: O(1)\n   */ remove(key) {\n        const node = this.cache.get(key);\n        if (!node) return;\n        this.removeNode(node);\n        this.cache.delete(key);\n        this.totalSize -= node.size;\n    }\n    /**\n   * Returns the number of items in the cache.\n   */ get size() {\n        return this.cache.size;\n    }\n    /**\n   * Returns the current total size of all cached items.\n   * This uses the custom size calculation if provided.\n   */ get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","import PromiseQueue from 'next/dist/compiled/p-queue';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { isThenable } from '../../shared/lib/is-thenable';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { withExecuteRevalidates } from '../revalidation-utils';\nimport { bindSnapshot } from '../app-render/async-local-storage';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external';\nexport class AfterContext {\n    constructor({ waitUntil, onClose, onTaskError }){\n        this.workUnitStores = new Set();\n        this.waitUntil = waitUntil;\n        this.onClose = onClose;\n        this.onTaskError = onTaskError;\n        this.callbackQueue = new PromiseQueue();\n        this.callbackQueue.pause();\n    }\n    after(task) {\n        if (isThenable(task)) {\n            if (!this.waitUntil) {\n                errorWaitUntilNotAvailable();\n            }\n            this.waitUntil(task.catch((error)=>this.reportTaskError('promise', error)));\n        } else if (typeof task === 'function') {\n            // TODO(after): implement tracing\n            this.addCallback(task);\n        } else {\n            throw Object.defineProperty(new Error('`after()`: Argument must be a promise or a function'), \"__NEXT_ERROR_CODE\", {\n                value: \"E50\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    addCallback(callback) {\n        // if something is wrong, throw synchronously, bubbling up to the `after` callsite.\n        if (!this.waitUntil) {\n            errorWaitUntilNotAvailable();\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            this.workUnitStores.add(workUnitStore);\n        }\n        const afterTaskStore = afterTaskAsyncStorage.getStore();\n        // This is used for checking if request APIs can be called inside `after`.\n        // Note that we need to check the phase in which the *topmost* `after` was called (which should be \"action\"),\n        // not the current phase (which might be \"after\" if we're in a nested after).\n        // Otherwise, we might allow `after(() => headers())`, but not `after(() => after(() => headers()))`.\n        const rootTaskSpawnPhase = afterTaskStore ? afterTaskStore.rootTaskSpawnPhase // nested after\n         : workUnitStore == null ? void 0 : workUnitStore.phase // topmost after\n        ;\n        // this should only happen once.\n        if (!this.runCallbacksOnClosePromise) {\n            this.runCallbacksOnClosePromise = this.runCallbacksOnClose();\n            this.waitUntil(this.runCallbacksOnClosePromise);\n        }\n        // Bind the callback to the current execution context (i.e. preserve all currently available ALS-es).\n        // We do this because we want all of these to be equivalent in every regard except timing:\n        //   after(() => x())\n        //   after(x())\n        //   await x()\n        const wrappedCallback = bindSnapshot(async ()=>{\n            try {\n                await afterTaskAsyncStorage.run({\n                    rootTaskSpawnPhase\n                }, ()=>callback());\n            } catch (error) {\n                this.reportTaskError('function', error);\n            }\n        });\n        this.callbackQueue.add(wrappedCallback);\n    }\n    async runCallbacksOnClose() {\n        await new Promise((resolve)=>this.onClose(resolve));\n        return this.runCallbacks();\n    }\n    async runCallbacks() {\n        if (this.callbackQueue.size === 0) return;\n        for (const workUnitStore of this.workUnitStores){\n            workUnitStore.phase = 'after';\n        }\n        const workStore = workAsyncStorage.getStore();\n        if (!workStore) {\n            throw Object.defineProperty(new InvariantError('Missing workStore in AfterContext.runCallbacks'), \"__NEXT_ERROR_CODE\", {\n                value: \"E547\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return withExecuteRevalidates(workStore, ()=>{\n            this.callbackQueue.start();\n            return this.callbackQueue.onIdle();\n        });\n    }\n    reportTaskError(taskKind, error) {\n        // TODO(after): this is fine for now, but will need better intergration with our error reporting.\n        // TODO(after): should we log this if we have a onTaskError callback?\n        console.error(taskKind === 'promise' ? `A promise passed to \\`after()\\` rejected:` : `An error occurred in a function passed to \\`after()\\`:`, error);\n        if (this.onTaskError) {\n            // this is very defensive, but we really don't want anything to blow up in an error handler\n            try {\n                this.onTaskError == null ? void 0 : this.onTaskError.call(this, error);\n            } catch (handlerError) {\n                console.error(Object.defineProperty(new InvariantError('`onTaskError` threw while handling an error thrown from an `after` task', {\n                    cause: handlerError\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E569\",\n                    enumerable: false,\n                    configurable: true\n                }));\n            }\n        }\n    }\n}\nfunction errorWaitUntilNotAvailable() {\n    throw Object.defineProperty(new Error('`after()` will not work correctly, because `waitUntil` is not available in the current environment.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E91\",\n        enumerable: false,\n        configurable: true\n    });\n}\n\n//# sourceMappingURL=after-context.js.map","import { AfterContext } from '../after/after-context';\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { createLazyResult } from '../lib/lazy-result';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nimport { createSnapshot } from '../app-render/async-local-storage';\nexport function createWorkStore({ page, renderOpts, isPrefetchRequest, buildId, previouslyRevalidatedTags }) {\n    /**\n   * Rules of Static & Dynamic HTML:\n   *\n   *    1.) We must generate static HTML unless the caller explicitly opts\n   *        in to dynamic HTML support.\n   *\n   *    2.) If dynamic HTML support is requested, we must honor that request\n   *        or throw an error. It is the sole responsibility of the caller to\n   *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n   *\n   *    3.) If the request is in draft mode, we must generate dynamic HTML.\n   *\n   *    4.) If the request is a server action, we must generate dynamic HTML.\n   *\n   * These rules help ensure that other existing features like request caching,\n   * coalescing, and ISR continue working as intended.\n   */ const isStaticGeneration = !renderOpts.shouldWaitOnAllReady && !renderOpts.supportsDynamicResponse && !renderOpts.isDraftMode && !renderOpts.isPossibleServerAction;\n    const isDevelopment = renderOpts.dev ?? false;\n    const shouldTrackFetchMetrics = isDevelopment || // The only times we want to track fetch metrics outside of development is\n    // when we are performing a static generation and we either are in debug\n    // mode, or tracking fetch metrics was specifically opted into.\n    isStaticGeneration && (!!process.env.NEXT_DEBUG_BUILD || process.env.NEXT_SSG_FETCH_METRICS === '1');\n    const store = {\n        isStaticGeneration,\n        page,\n        route: normalizeAppPath(page),\n        incrementalCache: // we fallback to a global incremental cache for edge-runtime locally\n        // so that it can access the fs cache without mocks\n        renderOpts.incrementalCache || globalThis.__incrementalCache,\n        cacheLifeProfiles: renderOpts.cacheLifeProfiles,\n        isRevalidate: renderOpts.isRevalidate,\n        isBuildTimePrerendering: renderOpts.nextExport,\n        hasReadableErrorStacks: renderOpts.hasReadableErrorStacks,\n        fetchCache: renderOpts.fetchCache,\n        isOnDemandRevalidate: renderOpts.isOnDemandRevalidate,\n        isDraftMode: renderOpts.isDraftMode,\n        isPrefetchRequest,\n        buildId,\n        reactLoadableManifest: (renderOpts == null ? void 0 : renderOpts.reactLoadableManifest) || {},\n        assetPrefix: (renderOpts == null ? void 0 : renderOpts.assetPrefix) || '',\n        afterContext: createAfterContext(renderOpts),\n        cacheComponentsEnabled: renderOpts.experimental.cacheComponents,\n        dev: isDevelopment,\n        previouslyRevalidatedTags,\n        refreshTagsByCacheKind: createRefreshTagsByCacheKind(),\n        runInCleanSnapshot: createSnapshot(),\n        shouldTrackFetchMetrics\n    };\n    // TODO: remove this when we resolve accessing the store outside the execution context\n    renderOpts.store = store;\n    return store;\n}\nfunction createAfterContext(renderOpts) {\n    const { waitUntil, onClose, onAfterTaskError } = renderOpts;\n    return new AfterContext({\n        waitUntil,\n        onClose,\n        onTaskError: onAfterTaskError\n    });\n}\n/**\n * Creates a map with lazy results that refresh tags for the respective cache\n * kind when they're awaited for the first time.\n */ function createRefreshTagsByCacheKind() {\n    const refreshTagsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('refreshTags' in cacheHandler) {\n                refreshTagsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.refreshTags()));\n            }\n        }\n    }\n    return refreshTagsByCacheKind;\n}\n\n//# sourceMappingURL=work-store.js.map","/**\n * @license React\n * react-server-dom-webpack-client.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactDOM = require(\"react-dom\"),\n  decoderOptions = { stream: !0 };\nfunction resolveClientReference(bundlerConfig, metadata) {\n  if (bundlerConfig) {\n    var moduleExports = bundlerConfig[metadata[0]];\n    if ((bundlerConfig = moduleExports && moduleExports[metadata[2]]))\n      moduleExports = bundlerConfig.name;\n    else {\n      bundlerConfig = moduleExports && moduleExports[\"*\"];\n      if (!bundlerConfig)\n        throw Error(\n          'Could not find the module \"' +\n            metadata[0] +\n            '\" in the React Server Consumer Manifest. This is probably a bug in the React Server Components bundler.'\n        );\n      moduleExports = metadata[2];\n    }\n    return 4 === metadata.length\n      ? [bundlerConfig.id, bundlerConfig.chunks, moduleExports, 1]\n      : [bundlerConfig.id, bundlerConfig.chunks, moduleExports];\n  }\n  return metadata;\n}\nfunction resolveServerReference(bundlerConfig, id) {\n  var name = \"\",\n    resolvedModuleData = bundlerConfig[id];\n  if (resolvedModuleData) name = resolvedModuleData.name;\n  else {\n    var idx = id.lastIndexOf(\"#\");\n    -1 !== idx &&\n      ((name = id.slice(idx + 1)),\n      (resolvedModuleData = bundlerConfig[id.slice(0, idx)]));\n    if (!resolvedModuleData)\n      throw Error(\n        'Could not find the module \"' +\n          id +\n          '\" in the React Server Manifest. This is probably a bug in the React Server Components bundler.'\n      );\n  }\n  return resolvedModuleData.async\n    ? [resolvedModuleData.id, resolvedModuleData.chunks, name, 1]\n    : [resolvedModuleData.id, resolvedModuleData.chunks, name];\n}\nvar chunkCache = new Map();\nfunction requireAsyncModule(id) {\n  var promise = globalThis.__next_require__(id);\n  if (\"function\" !== typeof promise.then || \"fulfilled\" === promise.status)\n    return null;\n  promise.then(\n    function (value) {\n      promise.status = \"fulfilled\";\n      promise.value = value;\n    },\n    function (reason) {\n      promise.status = \"rejected\";\n      promise.reason = reason;\n    }\n  );\n  return promise;\n}\nfunction ignoreReject() {}\nfunction preloadModule(metadata) {\n  for (var chunks = metadata[1], promises = [], i = 0; i < chunks.length; ) {\n    var chunkId = chunks[i++];\n    chunks[i++];\n    var entry = chunkCache.get(chunkId);\n    if (void 0 === entry) {\n      entry = __webpack_chunk_load__(chunkId);\n      promises.push(entry);\n      var resolve = chunkCache.set.bind(chunkCache, chunkId, null);\n      entry.then(resolve, ignoreReject);\n      chunkCache.set(chunkId, entry);\n    } else null !== entry && promises.push(entry);\n  }\n  return 4 === metadata.length\n    ? 0 === promises.length\n      ? requireAsyncModule(metadata[0])\n      : Promise.all(promises).then(function () {\n          return requireAsyncModule(metadata[0]);\n        })\n    : 0 < promises.length\n      ? Promise.all(promises)\n      : null;\n}\nfunction requireModule(metadata) {\n  var moduleExports = globalThis.__next_require__(metadata[0]);\n  if (4 === metadata.length && \"function\" === typeof moduleExports.then)\n    if (\"fulfilled\" === moduleExports.status)\n      moduleExports = moduleExports.value;\n    else throw moduleExports.reason;\n  return \"*\" === metadata[2]\n    ? moduleExports\n    : \"\" === metadata[2]\n      ? moduleExports.__esModule\n        ? moduleExports.default\n        : moduleExports\n      : moduleExports[metadata[2]];\n}\nfunction prepareDestinationWithChunks(moduleLoading, chunks, nonce$jscomp$0) {\n  if (null !== moduleLoading)\n    for (var i = 1; i < chunks.length; i += 2) {\n      var nonce = nonce$jscomp$0,\n        JSCompiler_temp_const = ReactDOMSharedInternals.d,\n        JSCompiler_temp_const$jscomp$0 = JSCompiler_temp_const.X,\n        JSCompiler_temp_const$jscomp$1 = moduleLoading.prefix + chunks[i];\n      var JSCompiler_inline_result = moduleLoading.crossOrigin;\n      JSCompiler_inline_result =\n        \"string\" === typeof JSCompiler_inline_result\n          ? \"use-credentials\" === JSCompiler_inline_result\n            ? JSCompiler_inline_result\n            : \"\"\n          : void 0;\n      JSCompiler_temp_const$jscomp$0.call(\n        JSCompiler_temp_const,\n        JSCompiler_temp_const$jscomp$1,\n        { crossOrigin: JSCompiler_inline_result, nonce: nonce }\n      );\n    }\n}\nvar ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ASYNC_ITERATOR = Symbol.asyncIterator,\n  isArrayImpl = Array.isArray,\n  getPrototypeOf = Object.getPrototypeOf,\n  ObjectPrototype = Object.prototype,\n  knownServerReferences = new WeakMap();\nfunction serializeNumber(number) {\n  return Number.isFinite(number)\n    ? 0 === number && -Infinity === 1 / number\n      ? \"$-0\"\n      : number\n    : Infinity === number\n      ? \"$Infinity\"\n      : -Infinity === number\n        ? \"$-Infinity\"\n        : \"$NaN\";\n}\nfunction processReply(\n  root,\n  formFieldPrefix,\n  temporaryReferences,\n  resolve,\n  reject\n) {\n  function serializeTypedArray(tag, typedArray) {\n    typedArray = new Blob([\n      new Uint8Array(\n        typedArray.buffer,\n        typedArray.byteOffset,\n        typedArray.byteLength\n      )\n    ]);\n    var blobId = nextPartId++;\n    null === formData && (formData = new FormData());\n    formData.append(formFieldPrefix + blobId, typedArray);\n    return \"$\" + tag + blobId.toString(16);\n  }\n  function serializeBinaryReader(reader) {\n    function progress(entry) {\n      entry.done\n        ? ((entry = nextPartId++),\n          data.append(formFieldPrefix + entry, new Blob(buffer)),\n          data.append(\n            formFieldPrefix + streamId,\n            '\"$o' + entry.toString(16) + '\"'\n          ),\n          data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data))\n        : (buffer.push(entry.value),\n          reader.read(new Uint8Array(1024)).then(progress, reject));\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++,\n      buffer = [];\n    reader.read(new Uint8Array(1024)).then(progress, reject);\n    return \"$r\" + streamId.toString(16);\n  }\n  function serializeReader(reader) {\n    function progress(entry) {\n      if (entry.done)\n        data.append(formFieldPrefix + streamId, \"C\"),\n          pendingParts--,\n          0 === pendingParts && resolve(data);\n      else\n        try {\n          var partJSON = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON);\n          reader.read().then(progress, reject);\n        } catch (x) {\n          reject(x);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    reader.read().then(progress, reject);\n    return \"$R\" + streamId.toString(16);\n  }\n  function serializeReadableStream(stream) {\n    try {\n      var binaryReader = stream.getReader({ mode: \"byob\" });\n    } catch (x) {\n      return serializeReader(stream.getReader());\n    }\n    return serializeBinaryReader(binaryReader);\n  }\n  function serializeAsyncIterable(iterable, iterator) {\n    function progress(entry) {\n      if (entry.done) {\n        if (void 0 === entry.value)\n          data.append(formFieldPrefix + streamId, \"C\");\n        else\n          try {\n            var partJSON = JSON.stringify(entry.value, resolveToJSON);\n            data.append(formFieldPrefix + streamId, \"C\" + partJSON);\n          } catch (x) {\n            reject(x);\n            return;\n          }\n        pendingParts--;\n        0 === pendingParts && resolve(data);\n      } else\n        try {\n          var partJSON$21 = JSON.stringify(entry.value, resolveToJSON);\n          data.append(formFieldPrefix + streamId, partJSON$21);\n          iterator.next().then(progress, reject);\n        } catch (x$22) {\n          reject(x$22);\n        }\n    }\n    null === formData && (formData = new FormData());\n    var data = formData;\n    pendingParts++;\n    var streamId = nextPartId++;\n    iterable = iterable === iterator;\n    iterator.next().then(progress, reject);\n    return \"$\" + (iterable ? \"x\" : \"X\") + streamId.toString(16);\n  }\n  function resolveToJSON(key, value) {\n    if (null === value) return null;\n    if (\"object\" === typeof value) {\n      switch (value.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          if (void 0 !== temporaryReferences && -1 === key.indexOf(\":\")) {\n            var parentReference = writtenObjects.get(this);\n            if (void 0 !== parentReference)\n              return (\n                temporaryReferences.set(parentReference + \":\" + key, value),\n                \"$T\"\n              );\n          }\n          throw Error(\n            \"React Element cannot be passed to Server Functions from the Client without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n          );\n        case REACT_LAZY_TYPE:\n          parentReference = value._payload;\n          var init = value._init;\n          null === formData && (formData = new FormData());\n          pendingParts++;\n          try {\n            var resolvedModel = init(parentReference),\n              lazyId = nextPartId++,\n              partJSON = serializeModel(resolvedModel, lazyId);\n            formData.append(formFieldPrefix + lazyId, partJSON);\n            return \"$\" + lazyId.toString(16);\n          } catch (x) {\n            if (\n              \"object\" === typeof x &&\n              null !== x &&\n              \"function\" === typeof x.then\n            ) {\n              pendingParts++;\n              var lazyId$23 = nextPartId++;\n              parentReference = function () {\n                try {\n                  var partJSON$24 = serializeModel(value, lazyId$23),\n                    data$25 = formData;\n                  data$25.append(formFieldPrefix + lazyId$23, partJSON$24);\n                  pendingParts--;\n                  0 === pendingParts && resolve(data$25);\n                } catch (reason) {\n                  reject(reason);\n                }\n              };\n              x.then(parentReference, parentReference);\n              return \"$\" + lazyId$23.toString(16);\n            }\n            reject(x);\n            return null;\n          } finally {\n            pendingParts--;\n          }\n      }\n      if (\"function\" === typeof value.then) {\n        null === formData && (formData = new FormData());\n        pendingParts++;\n        var promiseId = nextPartId++;\n        value.then(function (partValue) {\n          try {\n            var partJSON$27 = serializeModel(partValue, promiseId);\n            partValue = formData;\n            partValue.append(formFieldPrefix + promiseId, partJSON$27);\n            pendingParts--;\n            0 === pendingParts && resolve(partValue);\n          } catch (reason) {\n            reject(reason);\n          }\n        }, reject);\n        return \"$@\" + promiseId.toString(16);\n      }\n      parentReference = writtenObjects.get(value);\n      if (void 0 !== parentReference)\n        if (modelRoot === value) modelRoot = null;\n        else return parentReference;\n      else\n        -1 === key.indexOf(\":\") &&\n          ((parentReference = writtenObjects.get(this)),\n          void 0 !== parentReference &&\n            ((key = parentReference + \":\" + key),\n            writtenObjects.set(value, key),\n            void 0 !== temporaryReferences &&\n              temporaryReferences.set(key, value)));\n      if (isArrayImpl(value)) return value;\n      if (value instanceof FormData) {\n        null === formData && (formData = new FormData());\n        var data$31 = formData;\n        key = nextPartId++;\n        var prefix = formFieldPrefix + key + \"_\";\n        value.forEach(function (originalValue, originalKey) {\n          data$31.append(prefix + originalKey, originalValue);\n        });\n        return \"$K\" + key.toString(16);\n      }\n      if (value instanceof Map)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$Q\" + key.toString(16)\n        );\n      if (value instanceof Set)\n        return (\n          (key = nextPartId++),\n          (parentReference = serializeModel(Array.from(value), key)),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + key, parentReference),\n          \"$W\" + key.toString(16)\n        );\n      if (value instanceof ArrayBuffer)\n        return (\n          (key = new Blob([value])),\n          (parentReference = nextPartId++),\n          null === formData && (formData = new FormData()),\n          formData.append(formFieldPrefix + parentReference, key),\n          \"$A\" + parentReference.toString(16)\n        );\n      if (value instanceof Int8Array) return serializeTypedArray(\"O\", value);\n      if (value instanceof Uint8Array) return serializeTypedArray(\"o\", value);\n      if (value instanceof Uint8ClampedArray)\n        return serializeTypedArray(\"U\", value);\n      if (value instanceof Int16Array) return serializeTypedArray(\"S\", value);\n      if (value instanceof Uint16Array) return serializeTypedArray(\"s\", value);\n      if (value instanceof Int32Array) return serializeTypedArray(\"L\", value);\n      if (value instanceof Uint32Array) return serializeTypedArray(\"l\", value);\n      if (value instanceof Float32Array) return serializeTypedArray(\"G\", value);\n      if (value instanceof Float64Array) return serializeTypedArray(\"g\", value);\n      if (value instanceof BigInt64Array)\n        return serializeTypedArray(\"M\", value);\n      if (value instanceof BigUint64Array)\n        return serializeTypedArray(\"m\", value);\n      if (value instanceof DataView) return serializeTypedArray(\"V\", value);\n      if (\"function\" === typeof Blob && value instanceof Blob)\n        return (\n          null === formData && (formData = new FormData()),\n          (key = nextPartId++),\n          formData.append(formFieldPrefix + key, value),\n          \"$B\" + key.toString(16)\n        );\n      if ((key = getIteratorFn(value)))\n        return (\n          (parentReference = key.call(value)),\n          parentReference === value\n            ? ((key = nextPartId++),\n              (parentReference = serializeModel(\n                Array.from(parentReference),\n                key\n              )),\n              null === formData && (formData = new FormData()),\n              formData.append(formFieldPrefix + key, parentReference),\n              \"$i\" + key.toString(16))\n            : Array.from(parentReference)\n        );\n      if (\n        \"function\" === typeof ReadableStream &&\n        value instanceof ReadableStream\n      )\n        return serializeReadableStream(value);\n      key = value[ASYNC_ITERATOR];\n      if (\"function\" === typeof key)\n        return serializeAsyncIterable(value, key.call(value));\n      key = getPrototypeOf(value);\n      if (\n        key !== ObjectPrototype &&\n        (null === key || null !== getPrototypeOf(key))\n      ) {\n        if (void 0 === temporaryReferences)\n          throw Error(\n            \"Only plain objects, and a few built-ins, can be passed to Server Functions. Classes or null prototypes are not supported.\"\n          );\n        return \"$T\";\n      }\n      return value;\n    }\n    if (\"string\" === typeof value) {\n      if (\"Z\" === value[value.length - 1] && this[key] instanceof Date)\n        return \"$D\" + value;\n      key = \"$\" === value[0] ? \"$\" + value : value;\n      return key;\n    }\n    if (\"boolean\" === typeof value) return value;\n    if (\"number\" === typeof value) return serializeNumber(value);\n    if (\"undefined\" === typeof value) return \"$undefined\";\n    if (\"function\" === typeof value) {\n      parentReference = knownServerReferences.get(value);\n      if (void 0 !== parentReference)\n        return (\n          (key = JSON.stringify(\n            { id: parentReference.id, bound: parentReference.bound },\n            resolveToJSON\n          )),\n          null === formData && (formData = new FormData()),\n          (parentReference = nextPartId++),\n          formData.set(formFieldPrefix + parentReference, key),\n          \"$F\" + parentReference.toString(16)\n        );\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Client Functions cannot be passed directly to Server Functions. Only Functions passed from the Server can be passed back again.\"\n      );\n    }\n    if (\"symbol\" === typeof value) {\n      if (\n        void 0 !== temporaryReferences &&\n        -1 === key.indexOf(\":\") &&\n        ((parentReference = writtenObjects.get(this)),\n        void 0 !== parentReference)\n      )\n        return (\n          temporaryReferences.set(parentReference + \":\" + key, value), \"$T\"\n        );\n      throw Error(\n        \"Symbols cannot be passed to a Server Function without a temporary reference set. Pass a TemporaryReferenceSet to the options.\"\n      );\n    }\n    if (\"bigint\" === typeof value) return \"$n\" + value.toString(10);\n    throw Error(\n      \"Type \" +\n        typeof value +\n        \" is not supported as an argument to a Server Function.\"\n    );\n  }\n  function serializeModel(model, id) {\n    \"object\" === typeof model &&\n      null !== model &&\n      ((id = \"$\" + id.toString(16)),\n      writtenObjects.set(model, id),\n      void 0 !== temporaryReferences && temporaryReferences.set(id, model));\n    modelRoot = model;\n    return JSON.stringify(model, resolveToJSON);\n  }\n  var nextPartId = 1,\n    pendingParts = 0,\n    formData = null,\n    writtenObjects = new WeakMap(),\n    modelRoot = root,\n    json = serializeModel(root, 0);\n  null === formData\n    ? resolve(json)\n    : (formData.set(formFieldPrefix + \"0\", json),\n      0 === pendingParts && resolve(formData));\n  return function () {\n    0 < pendingParts &&\n      ((pendingParts = 0),\n      null === formData ? resolve(json) : resolve(formData));\n  };\n}\nvar boundCache = new WeakMap();\nfunction encodeFormData(reference) {\n  var resolve,\n    reject,\n    thenable = new Promise(function (res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n  processReply(\n    reference,\n    \"\",\n    void 0,\n    function (body) {\n      if (\"string\" === typeof body) {\n        var data = new FormData();\n        data.append(\"0\", body);\n        body = data;\n      }\n      thenable.status = \"fulfilled\";\n      thenable.value = body;\n      resolve(body);\n    },\n    function (e) {\n      thenable.status = \"rejected\";\n      thenable.reason = e;\n      reject(e);\n    }\n  );\n  return thenable;\n}\nfunction defaultEncodeFormAction(identifierPrefix) {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  var data = null;\n  if (null !== referenceClosure.bound) {\n    data = boundCache.get(referenceClosure);\n    data ||\n      ((data = encodeFormData({\n        id: referenceClosure.id,\n        bound: referenceClosure.bound\n      })),\n      boundCache.set(referenceClosure, data));\n    if (\"rejected\" === data.status) throw data.reason;\n    if (\"fulfilled\" !== data.status) throw data;\n    referenceClosure = data.value;\n    var prefixedData = new FormData();\n    referenceClosure.forEach(function (value, key) {\n      prefixedData.append(\"$ACTION_\" + identifierPrefix + \":\" + key, value);\n    });\n    data = prefixedData;\n    referenceClosure = \"$ACTION_REF_\" + identifierPrefix;\n  } else referenceClosure = \"$ACTION_ID_\" + referenceClosure.id;\n  return {\n    name: referenceClosure,\n    method: \"POST\",\n    encType: \"multipart/form-data\",\n    data: data\n  };\n}\nfunction isSignatureEqual(referenceId, numberOfBoundArgs) {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure)\n    throw Error(\n      \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n    );\n  if (referenceClosure.id !== referenceId) return !1;\n  var boundPromise = referenceClosure.bound;\n  if (null === boundPromise) return 0 === numberOfBoundArgs;\n  switch (boundPromise.status) {\n    case \"fulfilled\":\n      return boundPromise.value.length === numberOfBoundArgs;\n    case \"pending\":\n      throw boundPromise;\n    case \"rejected\":\n      throw boundPromise.reason;\n    default:\n      throw (\n        (\"string\" !== typeof boundPromise.status &&\n          ((boundPromise.status = \"pending\"),\n          boundPromise.then(\n            function (boundArgs) {\n              boundPromise.status = \"fulfilled\";\n              boundPromise.value = boundArgs;\n            },\n            function (error) {\n              boundPromise.status = \"rejected\";\n              boundPromise.reason = error;\n            }\n          )),\n        boundPromise)\n      );\n  }\n}\nfunction registerBoundServerReference(reference, id, bound, encodeFormAction) {\n  knownServerReferences.has(reference) ||\n    (knownServerReferences.set(reference, {\n      id: id,\n      originalBind: reference.bind,\n      bound: bound\n    }),\n    Object.defineProperties(reference, {\n      $$FORM_ACTION: {\n        value:\n          void 0 === encodeFormAction\n            ? defaultEncodeFormAction\n            : function () {\n                var referenceClosure = knownServerReferences.get(this);\n                if (!referenceClosure)\n                  throw Error(\n                    \"Tried to encode a Server Action from a different instance than the encoder is from. This is a bug in React.\"\n                  );\n                var boundPromise = referenceClosure.bound;\n                null === boundPromise && (boundPromise = Promise.resolve([]));\n                return encodeFormAction(referenceClosure.id, boundPromise);\n              }\n      },\n      $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n      bind: { value: bind }\n    }));\n}\nvar FunctionBind = Function.prototype.bind,\n  ArraySlice = Array.prototype.slice;\nfunction bind() {\n  var referenceClosure = knownServerReferences.get(this);\n  if (!referenceClosure) return FunctionBind.apply(this, arguments);\n  var newFn = referenceClosure.originalBind.apply(this, arguments),\n    args = ArraySlice.call(arguments, 1),\n    boundPromise = null;\n  boundPromise =\n    null !== referenceClosure.bound\n      ? Promise.resolve(referenceClosure.bound).then(function (boundArgs) {\n          return boundArgs.concat(args);\n        })\n      : Promise.resolve(args);\n  knownServerReferences.set(newFn, {\n    id: referenceClosure.id,\n    originalBind: newFn.bind,\n    bound: boundPromise\n  });\n  Object.defineProperties(newFn, {\n    $$FORM_ACTION: { value: this.$$FORM_ACTION },\n    $$IS_SIGNATURE_EQUAL: { value: isSignatureEqual },\n    bind: { value: bind }\n  });\n  return newFn;\n}\nfunction createBoundServerReference(metaData, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return bound\n      ? \"fulfilled\" === bound.status\n        ? callServer(id, bound.value.concat(args))\n        : Promise.resolve(bound).then(function (boundArgs) {\n            return callServer(id, boundArgs.concat(args));\n          })\n      : callServer(id, args);\n  }\n  var id = metaData.id,\n    bound = metaData.bound;\n  registerBoundServerReference(action, id, bound, encodeFormAction);\n  return action;\n}\nfunction createServerReference$1(id, callServer, encodeFormAction) {\n  function action() {\n    var args = Array.prototype.slice.call(arguments);\n    return callServer(id, args);\n  }\n  registerBoundServerReference(action, id, null, encodeFormAction);\n  return action;\n}\nfunction ReactPromise(status, value, reason) {\n  this.status = status;\n  this.value = value;\n  this.reason = reason;\n}\nReactPromise.prototype = Object.create(Promise.prototype);\nReactPromise.prototype.then = function (resolve, reject) {\n  switch (this.status) {\n    case \"resolved_model\":\n      initializeModelChunk(this);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(this);\n  }\n  switch (this.status) {\n    case \"fulfilled\":\n      \"function\" === typeof resolve && resolve(this.value);\n      break;\n    case \"pending\":\n    case \"blocked\":\n      \"function\" === typeof resolve &&\n        (null === this.value && (this.value = []), this.value.push(resolve));\n      \"function\" === typeof reject &&\n        (null === this.reason && (this.reason = []), this.reason.push(reject));\n      break;\n    case \"halted\":\n      break;\n    default:\n      \"function\" === typeof reject && reject(this.reason);\n  }\n};\nfunction readChunk(chunk) {\n  switch (chunk.status) {\n    case \"resolved_model\":\n      initializeModelChunk(chunk);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(chunk);\n  }\n  switch (chunk.status) {\n    case \"fulfilled\":\n      return chunk.value;\n    case \"pending\":\n    case \"blocked\":\n    case \"halted\":\n      throw chunk;\n    default:\n      throw chunk.reason;\n  }\n}\nfunction wakeChunk(listeners, value) {\n  for (var i = 0; i < listeners.length; i++) {\n    var listener = listeners[i];\n    \"function\" === typeof listener\n      ? listener(value)\n      : fulfillReference(listener, value);\n  }\n}\nfunction rejectChunk(listeners, error) {\n  for (var i = 0; i < listeners.length; i++) {\n    var listener = listeners[i];\n    \"function\" === typeof listener\n      ? listener(error)\n      : rejectReference(listener, error);\n  }\n}\nfunction resolveBlockedCycle(resolvedChunk, reference) {\n  var referencedChunk = reference.handler.chunk;\n  if (null === referencedChunk) return null;\n  if (referencedChunk === resolvedChunk) return reference.handler;\n  reference = referencedChunk.value;\n  if (null !== reference)\n    for (\n      referencedChunk = 0;\n      referencedChunk < reference.length;\n      referencedChunk++\n    ) {\n      var listener = reference[referencedChunk];\n      if (\n        \"function\" !== typeof listener &&\n        ((listener = resolveBlockedCycle(resolvedChunk, listener)),\n        null !== listener)\n      )\n        return listener;\n    }\n  return null;\n}\nfunction wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners) {\n  switch (chunk.status) {\n    case \"fulfilled\":\n      wakeChunk(resolveListeners, chunk.value);\n      break;\n    case \"blocked\":\n      for (var i = 0; i < resolveListeners.length; i++) {\n        var listener = resolveListeners[i];\n        if (\"function\" !== typeof listener) {\n          var cyclicHandler = resolveBlockedCycle(chunk, listener);\n          null !== cyclicHandler &&\n            (fulfillReference(listener, cyclicHandler.value),\n            resolveListeners.splice(i, 1),\n            i--,\n            null !== rejectListeners &&\n              ((listener = rejectListeners.indexOf(listener)),\n              -1 !== listener && rejectListeners.splice(listener, 1)));\n        }\n      }\n    case \"pending\":\n      if (chunk.value)\n        for (i = 0; i < resolveListeners.length; i++)\n          chunk.value.push(resolveListeners[i]);\n      else chunk.value = resolveListeners;\n      if (chunk.reason) {\n        if (rejectListeners)\n          for (\n            resolveListeners = 0;\n            resolveListeners < rejectListeners.length;\n            resolveListeners++\n          )\n            chunk.reason.push(rejectListeners[resolveListeners]);\n      } else chunk.reason = rejectListeners;\n      break;\n    case \"rejected\":\n      rejectListeners && rejectChunk(rejectListeners, chunk.reason);\n  }\n}\nfunction triggerErrorOnChunk(response, chunk, error) {\n  \"pending\" !== chunk.status && \"blocked\" !== chunk.status\n    ? chunk.reason.error(error)\n    : ((response = chunk.reason),\n      (chunk.status = \"rejected\"),\n      (chunk.reason = error),\n      null !== response && rejectChunk(response, error));\n}\nfunction createResolvedIteratorResultChunk(response, value, done) {\n  return new ReactPromise(\n    \"resolved_model\",\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\",\n    response\n  );\n}\nfunction resolveIteratorResultChunk(response, chunk, value, done) {\n  resolveModelChunk(\n    response,\n    chunk,\n    (done ? '{\"done\":true,\"value\":' : '{\"done\":false,\"value\":') + value + \"}\"\n  );\n}\nfunction resolveModelChunk(response, chunk, value) {\n  if (\"pending\" !== chunk.status) chunk.reason.enqueueModel(value);\n  else {\n    var resolveListeners = chunk.value,\n      rejectListeners = chunk.reason;\n    chunk.status = \"resolved_model\";\n    chunk.value = value;\n    chunk.reason = response;\n    null !== resolveListeners &&\n      (initializeModelChunk(chunk),\n      wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners));\n  }\n}\nfunction resolveModuleChunk(response, chunk, value) {\n  if (\"pending\" === chunk.status || \"blocked\" === chunk.status) {\n    response = chunk.value;\n    var rejectListeners = chunk.reason;\n    chunk.status = \"resolved_module\";\n    chunk.value = value;\n    null !== response &&\n      (initializeModuleChunk(chunk),\n      wakeChunkIfInitialized(chunk, response, rejectListeners));\n  }\n}\nvar initializingHandler = null;\nfunction initializeModelChunk(chunk) {\n  var prevHandler = initializingHandler;\n  initializingHandler = null;\n  var resolvedModel = chunk.value,\n    response = chunk.reason;\n  chunk.status = \"blocked\";\n  chunk.value = null;\n  chunk.reason = null;\n  try {\n    var value = JSON.parse(resolvedModel, response._fromJSON),\n      resolveListeners = chunk.value;\n    null !== resolveListeners &&\n      ((chunk.value = null),\n      (chunk.reason = null),\n      wakeChunk(resolveListeners, value));\n    if (null !== initializingHandler) {\n      if (initializingHandler.errored) throw initializingHandler.reason;\n      if (0 < initializingHandler.deps) {\n        initializingHandler.value = value;\n        initializingHandler.chunk = chunk;\n        return;\n      }\n    }\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  } finally {\n    initializingHandler = prevHandler;\n  }\n}\nfunction initializeModuleChunk(chunk) {\n  try {\n    var value = requireModule(chunk.value);\n    chunk.status = \"fulfilled\";\n    chunk.value = value;\n  } catch (error) {\n    (chunk.status = \"rejected\"), (chunk.reason = error);\n  }\n}\nfunction reportGlobalError(weakResponse, error) {\n  weakResponse._closed = !0;\n  weakResponse._closedReason = error;\n  weakResponse._chunks.forEach(function (chunk) {\n    \"pending\" === chunk.status &&\n      triggerErrorOnChunk(weakResponse, chunk, error);\n  });\n}\nfunction createLazyChunkWrapper(chunk) {\n  return { $$typeof: REACT_LAZY_TYPE, _payload: chunk, _init: readChunk };\n}\nfunction getChunk(response, id) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  chunk ||\n    ((chunk = response._closed\n      ? new ReactPromise(\"rejected\", null, response._closedReason)\n      : new ReactPromise(\"pending\", null, null)),\n    chunks.set(id, chunk));\n  return chunk;\n}\nfunction fulfillReference(reference, value) {\n  for (\n    var response = reference.response,\n      handler = reference.handler,\n      parentObject = reference.parentObject,\n      key = reference.key,\n      map = reference.map,\n      path = reference.path,\n      i = 1;\n    i < path.length;\n    i++\n  ) {\n    for (; value.$$typeof === REACT_LAZY_TYPE; )\n      if (((value = value._payload), value === handler.chunk))\n        value = handler.value;\n      else {\n        switch (value.status) {\n          case \"resolved_model\":\n            initializeModelChunk(value);\n            break;\n          case \"resolved_module\":\n            initializeModuleChunk(value);\n        }\n        switch (value.status) {\n          case \"fulfilled\":\n            value = value.value;\n            continue;\n          case \"blocked\":\n            var cyclicHandler = resolveBlockedCycle(value, reference);\n            if (null !== cyclicHandler) {\n              value = cyclicHandler.value;\n              continue;\n            }\n          case \"pending\":\n            path.splice(0, i - 1);\n            null === value.value\n              ? (value.value = [reference])\n              : value.value.push(reference);\n            null === value.reason\n              ? (value.reason = [reference])\n              : value.reason.push(reference);\n            return;\n          case \"halted\":\n            return;\n          default:\n            rejectReference(reference, value.reason);\n            return;\n        }\n      }\n    value = value[path[i]];\n  }\n  reference = map(response, value, parentObject, key);\n  parentObject[key] = reference;\n  \"\" === key && null === handler.value && (handler.value = reference);\n  if (\n    parentObject[0] === REACT_ELEMENT_TYPE &&\n    \"object\" === typeof handler.value &&\n    null !== handler.value &&\n    handler.value.$$typeof === REACT_ELEMENT_TYPE\n  )\n    switch (((parentObject = handler.value), key)) {\n      case \"3\":\n        parentObject.props = reference;\n    }\n  handler.deps--;\n  0 === handler.deps &&\n    ((key = handler.chunk),\n    null !== key &&\n      \"blocked\" === key.status &&\n      ((parentObject = key.value),\n      (key.status = \"fulfilled\"),\n      (key.value = handler.value),\n      (key.reason = handler.reason),\n      null !== parentObject && wakeChunk(parentObject, handler.value)));\n}\nfunction rejectReference(reference, error) {\n  var handler = reference.handler;\n  reference = reference.response;\n  handler.errored ||\n    ((handler.errored = !0),\n    (handler.value = null),\n    (handler.reason = error),\n    (handler = handler.chunk),\n    null !== handler &&\n      \"blocked\" === handler.status &&\n      triggerErrorOnChunk(reference, handler, error));\n}\nfunction waitForReference(\n  referencedChunk,\n  parentObject,\n  key,\n  response,\n  map,\n  path\n) {\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      reason: null,\n      deps: 1,\n      errored: !1\n    };\n  parentObject = {\n    response: response,\n    handler: handler,\n    parentObject: parentObject,\n    key: key,\n    map: map,\n    path: path\n  };\n  null === referencedChunk.value\n    ? (referencedChunk.value = [parentObject])\n    : referencedChunk.value.push(parentObject);\n  null === referencedChunk.reason\n    ? (referencedChunk.reason = [parentObject])\n    : referencedChunk.reason.push(parentObject);\n  return null;\n}\nfunction loadServerReference(response, metaData, parentObject, key) {\n  if (!response._serverReferenceConfig)\n    return createBoundServerReference(\n      metaData,\n      response._callServer,\n      response._encodeFormAction\n    );\n  var serverReference = resolveServerReference(\n      response._serverReferenceConfig,\n      metaData.id\n    ),\n    promise = preloadModule(serverReference);\n  if (promise)\n    metaData.bound && (promise = Promise.all([promise, metaData.bound]));\n  else if (metaData.bound) promise = Promise.resolve(metaData.bound);\n  else\n    return (\n      (promise = requireModule(serverReference)),\n      registerBoundServerReference(\n        promise,\n        metaData.id,\n        metaData.bound,\n        response._encodeFormAction\n      ),\n      promise\n    );\n  if (initializingHandler) {\n    var handler = initializingHandler;\n    handler.deps++;\n  } else\n    handler = initializingHandler = {\n      parent: null,\n      chunk: null,\n      value: null,\n      reason: null,\n      deps: 1,\n      errored: !1\n    };\n  promise.then(\n    function () {\n      var resolvedValue = requireModule(serverReference);\n      if (metaData.bound) {\n        var boundArgs = metaData.bound.value.slice(0);\n        boundArgs.unshift(null);\n        resolvedValue = resolvedValue.bind.apply(resolvedValue, boundArgs);\n      }\n      registerBoundServerReference(\n        resolvedValue,\n        metaData.id,\n        metaData.bound,\n        response._encodeFormAction\n      );\n      parentObject[key] = resolvedValue;\n      \"\" === key && null === handler.value && (handler.value = resolvedValue);\n      if (\n        parentObject[0] === REACT_ELEMENT_TYPE &&\n        \"object\" === typeof handler.value &&\n        null !== handler.value &&\n        handler.value.$$typeof === REACT_ELEMENT_TYPE\n      )\n        switch (((boundArgs = handler.value), key)) {\n          case \"3\":\n            boundArgs.props = resolvedValue;\n        }\n      handler.deps--;\n      0 === handler.deps &&\n        ((resolvedValue = handler.chunk),\n        null !== resolvedValue &&\n          \"blocked\" === resolvedValue.status &&\n          ((boundArgs = resolvedValue.value),\n          (resolvedValue.status = \"fulfilled\"),\n          (resolvedValue.value = handler.value),\n          null !== boundArgs && wakeChunk(boundArgs, handler.value)));\n    },\n    function (error) {\n      if (!handler.errored) {\n        handler.errored = !0;\n        handler.value = null;\n        handler.reason = error;\n        var chunk = handler.chunk;\n        null !== chunk &&\n          \"blocked\" === chunk.status &&\n          triggerErrorOnChunk(response, chunk, error);\n      }\n    }\n  );\n  return null;\n}\nfunction getOutlinedModel(response, reference, parentObject, key, map) {\n  reference = reference.split(\":\");\n  var id = parseInt(reference[0], 16);\n  id = getChunk(response, id);\n  switch (id.status) {\n    case \"resolved_model\":\n      initializeModelChunk(id);\n      break;\n    case \"resolved_module\":\n      initializeModuleChunk(id);\n  }\n  switch (id.status) {\n    case \"fulfilled\":\n      var value = id.value;\n      for (id = 1; id < reference.length; id++) {\n        for (; value.$$typeof === REACT_LAZY_TYPE; ) {\n          value = value._payload;\n          switch (value.status) {\n            case \"resolved_model\":\n              initializeModelChunk(value);\n              break;\n            case \"resolved_module\":\n              initializeModuleChunk(value);\n          }\n          switch (value.status) {\n            case \"fulfilled\":\n              value = value.value;\n              break;\n            case \"blocked\":\n            case \"pending\":\n              return waitForReference(\n                value,\n                parentObject,\n                key,\n                response,\n                map,\n                reference.slice(id - 1)\n              );\n            case \"halted\":\n              return (\n                initializingHandler\n                  ? ((response = initializingHandler), response.deps++)\n                  : (initializingHandler = {\n                      parent: null,\n                      chunk: null,\n                      value: null,\n                      reason: null,\n                      deps: 1,\n                      errored: !1\n                    }),\n                null\n              );\n            default:\n              return (\n                initializingHandler\n                  ? ((initializingHandler.errored = !0),\n                    (initializingHandler.value = null),\n                    (initializingHandler.reason = value.reason))\n                  : (initializingHandler = {\n                      parent: null,\n                      chunk: null,\n                      value: null,\n                      reason: value.reason,\n                      deps: 0,\n                      errored: !0\n                    }),\n                null\n              );\n          }\n        }\n        value = value[reference[id]];\n      }\n      return map(response, value, parentObject, key);\n    case \"pending\":\n    case \"blocked\":\n      return waitForReference(id, parentObject, key, response, map, reference);\n    case \"halted\":\n      return (\n        initializingHandler\n          ? ((response = initializingHandler), response.deps++)\n          : (initializingHandler = {\n              parent: null,\n              chunk: null,\n              value: null,\n              reason: null,\n              deps: 1,\n              errored: !1\n            }),\n        null\n      );\n    default:\n      return (\n        initializingHandler\n          ? ((initializingHandler.errored = !0),\n            (initializingHandler.value = null),\n            (initializingHandler.reason = id.reason))\n          : (initializingHandler = {\n              parent: null,\n              chunk: null,\n              value: null,\n              reason: id.reason,\n              deps: 0,\n              errored: !0\n            }),\n        null\n      );\n  }\n}\nfunction createMap(response, model) {\n  return new Map(model);\n}\nfunction createSet(response, model) {\n  return new Set(model);\n}\nfunction createBlob(response, model) {\n  return new Blob(model.slice(1), { type: model[0] });\n}\nfunction createFormData(response, model) {\n  response = new FormData();\n  for (var i = 0; i < model.length; i++)\n    response.append(model[i][0], model[i][1]);\n  return response;\n}\nfunction extractIterator(response, model) {\n  return model[Symbol.iterator]();\n}\nfunction createModel(response, model) {\n  return model;\n}\nfunction parseModelString(response, parentObject, key, value) {\n  if (\"$\" === value[0]) {\n    if (\"$\" === value)\n      return (\n        null !== initializingHandler &&\n          \"0\" === key &&\n          (initializingHandler = {\n            parent: initializingHandler,\n            chunk: null,\n            value: null,\n            reason: null,\n            deps: 0,\n            errored: !1\n          }),\n        REACT_ELEMENT_TYPE\n      );\n    switch (value[1]) {\n      case \"$\":\n        return value.slice(1);\n      case \"L\":\n        return (\n          (parentObject = parseInt(value.slice(2), 16)),\n          (response = getChunk(response, parentObject)),\n          createLazyChunkWrapper(response)\n        );\n      case \"@\":\n        return (\n          (parentObject = parseInt(value.slice(2), 16)),\n          getChunk(response, parentObject)\n        );\n      case \"S\":\n        return Symbol.for(value.slice(2));\n      case \"F\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(\n            response,\n            value,\n            parentObject,\n            key,\n            loadServerReference\n          )\n        );\n      case \"T\":\n        parentObject = \"$\" + value.slice(2);\n        response = response._tempRefs;\n        if (null == response)\n          throw Error(\n            \"Missing a temporary reference set but the RSC response returned a temporary reference. Pass a temporaryReference option with the set that was used with the reply.\"\n          );\n        return response.get(parentObject);\n      case \"Q\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createMap)\n        );\n      case \"W\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createSet)\n        );\n      case \"B\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createBlob)\n        );\n      case \"K\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, createFormData)\n        );\n      case \"Z\":\n        return resolveErrorProd();\n      case \"i\":\n        return (\n          (value = value.slice(2)),\n          getOutlinedModel(response, value, parentObject, key, extractIterator)\n        );\n      case \"I\":\n        return Infinity;\n      case \"-\":\n        return \"$-0\" === value ? -0 : -Infinity;\n      case \"N\":\n        return NaN;\n      case \"u\":\n        return;\n      case \"D\":\n        return new Date(Date.parse(value.slice(2)));\n      case \"n\":\n        return BigInt(value.slice(2));\n      default:\n        return (\n          (value = value.slice(1)),\n          getOutlinedModel(response, value, parentObject, key, createModel)\n        );\n    }\n  }\n  return value;\n}\nfunction missingCall() {\n  throw Error(\n    'Trying to call a function from \"use server\" but the callServer option was not implemented in your router runtime.'\n  );\n}\nfunction ResponseInstance(\n  bundlerConfig,\n  serverReferenceConfig,\n  moduleLoading,\n  callServer,\n  encodeFormAction,\n  nonce,\n  temporaryReferences\n) {\n  var chunks = new Map();\n  this._bundlerConfig = bundlerConfig;\n  this._serverReferenceConfig = serverReferenceConfig;\n  this._moduleLoading = moduleLoading;\n  this._callServer = void 0 !== callServer ? callServer : missingCall;\n  this._encodeFormAction = encodeFormAction;\n  this._nonce = nonce;\n  this._chunks = chunks;\n  this._stringDecoder = new TextDecoder();\n  this._fromJSON = null;\n  this._closed = !1;\n  this._closedReason = null;\n  this._tempRefs = temporaryReferences;\n  this._fromJSON = createFromJSONCallback(this);\n}\nfunction resolveBuffer(response, id, buffer) {\n  response = response._chunks;\n  var chunk = response.get(id);\n  chunk && \"pending\" !== chunk.status\n    ? chunk.reason.enqueueValue(buffer)\n    : response.set(id, new ReactPromise(\"fulfilled\", buffer, null));\n}\nfunction resolveModule(response, id, model) {\n  var chunks = response._chunks,\n    chunk = chunks.get(id);\n  model = JSON.parse(model, response._fromJSON);\n  var clientReference = resolveClientReference(response._bundlerConfig, model);\n  prepareDestinationWithChunks(\n    response._moduleLoading,\n    model[1],\n    response._nonce\n  );\n  if ((model = preloadModule(clientReference))) {\n    if (chunk) {\n      var blockedChunk = chunk;\n      blockedChunk.status = \"blocked\";\n    } else\n      (blockedChunk = new ReactPromise(\"blocked\", null, null)),\n        chunks.set(id, blockedChunk);\n    model.then(\n      function () {\n        return resolveModuleChunk(response, blockedChunk, clientReference);\n      },\n      function (error) {\n        return triggerErrorOnChunk(response, blockedChunk, error);\n      }\n    );\n  } else\n    chunk\n      ? resolveModuleChunk(response, chunk, clientReference)\n      : chunks.set(\n          id,\n          new ReactPromise(\"resolved_module\", clientReference, null)\n        );\n}\nfunction resolveStream(response, id, stream, controller) {\n  var chunks = response._chunks;\n  response = chunks.get(id);\n  response\n    ? \"pending\" === response.status &&\n      ((id = response.value),\n      (response.status = \"fulfilled\"),\n      (response.value = stream),\n      (response.reason = controller),\n      null !== id && wakeChunk(id, response.value))\n    : chunks.set(id, new ReactPromise(\"fulfilled\", stream, controller));\n}\nfunction startReadableStream(response, id, type) {\n  var controller = null;\n  type = new ReadableStream({\n    type: type,\n    start: function (c) {\n      controller = c;\n    }\n  });\n  var previousBlockedChunk = null;\n  resolveStream(response, id, type, {\n    enqueueValue: function (value) {\n      null === previousBlockedChunk\n        ? controller.enqueue(value)\n        : previousBlockedChunk.then(function () {\n            controller.enqueue(value);\n          });\n    },\n    enqueueModel: function (json) {\n      if (null === previousBlockedChunk) {\n        var chunk = new ReactPromise(\"resolved_model\", json, response);\n        initializeModelChunk(chunk);\n        \"fulfilled\" === chunk.status\n          ? controller.enqueue(chunk.value)\n          : (chunk.then(\n              function (v) {\n                return controller.enqueue(v);\n              },\n              function (e) {\n                return controller.error(e);\n              }\n            ),\n            (previousBlockedChunk = chunk));\n      } else {\n        chunk = previousBlockedChunk;\n        var chunk$52 = new ReactPromise(\"pending\", null, null);\n        chunk$52.then(\n          function (v) {\n            return controller.enqueue(v);\n          },\n          function (e) {\n            return controller.error(e);\n          }\n        );\n        previousBlockedChunk = chunk$52;\n        chunk.then(function () {\n          previousBlockedChunk === chunk$52 && (previousBlockedChunk = null);\n          resolveModelChunk(response, chunk$52, json);\n        });\n      }\n    },\n    close: function () {\n      if (null === previousBlockedChunk) controller.close();\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.close();\n        });\n      }\n    },\n    error: function (error) {\n      if (null === previousBlockedChunk) controller.error(error);\n      else {\n        var blockedChunk = previousBlockedChunk;\n        previousBlockedChunk = null;\n        blockedChunk.then(function () {\n          return controller.error(error);\n        });\n      }\n    }\n  });\n}\nfunction asyncIterator() {\n  return this;\n}\nfunction createIterator(next) {\n  next = { next: next };\n  next[ASYNC_ITERATOR] = asyncIterator;\n  return next;\n}\nfunction startAsyncIterable(response, id, iterator) {\n  var buffer = [],\n    closed = !1,\n    nextWriteIndex = 0,\n    iterable = {};\n  iterable[ASYNC_ITERATOR] = function () {\n    var nextReadIndex = 0;\n    return createIterator(function (arg) {\n      if (void 0 !== arg)\n        throw Error(\n          \"Values cannot be passed to next() of AsyncIterables passed to Client Components.\"\n        );\n      if (nextReadIndex === buffer.length) {\n        if (closed)\n          return new ReactPromise(\n            \"fulfilled\",\n            { done: !0, value: void 0 },\n            null\n          );\n        buffer[nextReadIndex] = new ReactPromise(\"pending\", null, null);\n      }\n      return buffer[nextReadIndex++];\n    });\n  };\n  resolveStream(\n    response,\n    id,\n    iterator ? iterable[ASYNC_ITERATOR]() : iterable,\n    {\n      enqueueValue: function (value) {\n        if (nextWriteIndex === buffer.length)\n          buffer[nextWriteIndex] = new ReactPromise(\n            \"fulfilled\",\n            { done: !1, value: value },\n            null\n          );\n        else {\n          var chunk = buffer[nextWriteIndex],\n            resolveListeners = chunk.value,\n            rejectListeners = chunk.reason;\n          chunk.status = \"fulfilled\";\n          chunk.value = { done: !1, value: value };\n          null !== resolveListeners &&\n            wakeChunkIfInitialized(chunk, resolveListeners, rejectListeners);\n        }\n        nextWriteIndex++;\n      },\n      enqueueModel: function (value) {\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !1\n            ))\n          : resolveIteratorResultChunk(\n              response,\n              buffer[nextWriteIndex],\n              value,\n              !1\n            );\n        nextWriteIndex++;\n      },\n      close: function (value) {\n        closed = !0;\n        nextWriteIndex === buffer.length\n          ? (buffer[nextWriteIndex] = createResolvedIteratorResultChunk(\n              response,\n              value,\n              !0\n            ))\n          : resolveIteratorResultChunk(\n              response,\n              buffer[nextWriteIndex],\n              value,\n              !0\n            );\n        for (nextWriteIndex++; nextWriteIndex < buffer.length; )\n          resolveIteratorResultChunk(\n            response,\n            buffer[nextWriteIndex++],\n            '\"$undefined\"',\n            !0\n          );\n      },\n      error: function (error) {\n        closed = !0;\n        for (\n          nextWriteIndex === buffer.length &&\n          (buffer[nextWriteIndex] = new ReactPromise(\"pending\", null, null));\n          nextWriteIndex < buffer.length;\n\n        )\n          triggerErrorOnChunk(response, buffer[nextWriteIndex++], error);\n      }\n    }\n  );\n}\nfunction resolveErrorProd() {\n  var error = Error(\n    \"An error occurred in the Server Components render. The specific message is omitted in production builds to avoid leaking sensitive details. A digest property is included on this error instance which may provide additional details about the nature of the error.\"\n  );\n  error.stack = \"Error: \" + error.message;\n  return error;\n}\nfunction mergeBuffer(buffer, lastChunk) {\n  for (var l = buffer.length, byteLength = lastChunk.length, i = 0; i < l; i++)\n    byteLength += buffer[i].byteLength;\n  byteLength = new Uint8Array(byteLength);\n  for (var i$53 = (i = 0); i$53 < l; i$53++) {\n    var chunk = buffer[i$53];\n    byteLength.set(chunk, i);\n    i += chunk.byteLength;\n  }\n  byteLength.set(lastChunk, i);\n  return byteLength;\n}\nfunction resolveTypedArray(\n  response,\n  id,\n  buffer,\n  lastChunk,\n  constructor,\n  bytesPerElement\n) {\n  buffer =\n    0 === buffer.length && 0 === lastChunk.byteOffset % bytesPerElement\n      ? lastChunk\n      : mergeBuffer(buffer, lastChunk);\n  constructor = new constructor(\n    buffer.buffer,\n    buffer.byteOffset,\n    buffer.byteLength / bytesPerElement\n  );\n  resolveBuffer(response, id, constructor);\n}\nfunction processFullBinaryRow(response, id, tag, buffer, chunk) {\n  switch (tag) {\n    case 65:\n      resolveBuffer(response, id, mergeBuffer(buffer, chunk).buffer);\n      return;\n    case 79:\n      resolveTypedArray(response, id, buffer, chunk, Int8Array, 1);\n      return;\n    case 111:\n      resolveBuffer(\n        response,\n        id,\n        0 === buffer.length ? chunk : mergeBuffer(buffer, chunk)\n      );\n      return;\n    case 85:\n      resolveTypedArray(response, id, buffer, chunk, Uint8ClampedArray, 1);\n      return;\n    case 83:\n      resolveTypedArray(response, id, buffer, chunk, Int16Array, 2);\n      return;\n    case 115:\n      resolveTypedArray(response, id, buffer, chunk, Uint16Array, 2);\n      return;\n    case 76:\n      resolveTypedArray(response, id, buffer, chunk, Int32Array, 4);\n      return;\n    case 108:\n      resolveTypedArray(response, id, buffer, chunk, Uint32Array, 4);\n      return;\n    case 71:\n      resolveTypedArray(response, id, buffer, chunk, Float32Array, 4);\n      return;\n    case 103:\n      resolveTypedArray(response, id, buffer, chunk, Float64Array, 8);\n      return;\n    case 77:\n      resolveTypedArray(response, id, buffer, chunk, BigInt64Array, 8);\n      return;\n    case 109:\n      resolveTypedArray(response, id, buffer, chunk, BigUint64Array, 8);\n      return;\n    case 86:\n      resolveTypedArray(response, id, buffer, chunk, DataView, 1);\n      return;\n  }\n  for (\n    var stringDecoder = response._stringDecoder, row = \"\", i = 0;\n    i < buffer.length;\n    i++\n  )\n    row += stringDecoder.decode(buffer[i], decoderOptions);\n  buffer = row += stringDecoder.decode(chunk);\n  switch (tag) {\n    case 73:\n      resolveModule(response, id, buffer);\n      break;\n    case 72:\n      id = buffer[0];\n      buffer = buffer.slice(1);\n      response = JSON.parse(buffer, response._fromJSON);\n      buffer = ReactDOMSharedInternals.d;\n      switch (id) {\n        case \"D\":\n          buffer.D(response);\n          break;\n        case \"C\":\n          \"string\" === typeof response\n            ? buffer.C(response)\n            : buffer.C(response[0], response[1]);\n          break;\n        case \"L\":\n          id = response[0];\n          tag = response[1];\n          3 === response.length\n            ? buffer.L(id, tag, response[2])\n            : buffer.L(id, tag);\n          break;\n        case \"m\":\n          \"string\" === typeof response\n            ? buffer.m(response)\n            : buffer.m(response[0], response[1]);\n          break;\n        case \"X\":\n          \"string\" === typeof response\n            ? buffer.X(response)\n            : buffer.X(response[0], response[1]);\n          break;\n        case \"S\":\n          \"string\" === typeof response\n            ? buffer.S(response)\n            : buffer.S(\n                response[0],\n                0 === response[1] ? void 0 : response[1],\n                3 === response.length ? response[2] : void 0\n              );\n          break;\n        case \"M\":\n          \"string\" === typeof response\n            ? buffer.M(response)\n            : buffer.M(response[0], response[1]);\n      }\n      break;\n    case 69:\n      tag = response._chunks;\n      chunk = tag.get(id);\n      buffer = JSON.parse(buffer);\n      stringDecoder = resolveErrorProd();\n      stringDecoder.digest = buffer.digest;\n      chunk\n        ? triggerErrorOnChunk(response, chunk, stringDecoder)\n        : tag.set(id, new ReactPromise(\"rejected\", null, stringDecoder));\n      break;\n    case 84:\n      response = response._chunks;\n      (tag = response.get(id)) && \"pending\" !== tag.status\n        ? tag.reason.enqueueValue(buffer)\n        : response.set(id, new ReactPromise(\"fulfilled\", buffer, null));\n      break;\n    case 78:\n    case 68:\n    case 74:\n    case 87:\n      throw Error(\n        \"Failed to read a RSC payload created by a development version of React on the server while using a production version on the client. Always use matching versions on the server and the client.\"\n      );\n    case 82:\n      startReadableStream(response, id, void 0);\n      break;\n    case 114:\n      startReadableStream(response, id, \"bytes\");\n      break;\n    case 88:\n      startAsyncIterable(response, id, !1);\n      break;\n    case 120:\n      startAsyncIterable(response, id, !0);\n      break;\n    case 67:\n      (response = response._chunks.get(id)) &&\n        \"fulfilled\" === response.status &&\n        response.reason.close(\"\" === buffer ? '\"$undefined\"' : buffer);\n      break;\n    default:\n      (tag = response._chunks),\n        (chunk = tag.get(id))\n          ? resolveModelChunk(response, chunk, buffer)\n          : tag.set(id, new ReactPromise(\"resolved_model\", buffer, response));\n  }\n}\nfunction createFromJSONCallback(response) {\n  return function (key, value) {\n    if (\"string\" === typeof value)\n      return parseModelString(response, this, key, value);\n    if (\"object\" === typeof value && null !== value) {\n      if (value[0] === REACT_ELEMENT_TYPE) {\n        if (\n          ((key = {\n            $$typeof: REACT_ELEMENT_TYPE,\n            type: value[1],\n            key: value[2],\n            ref: null,\n            props: value[3]\n          }),\n          null !== initializingHandler)\n        )\n          if (\n            ((value = initializingHandler),\n            (initializingHandler = value.parent),\n            value.errored)\n          )\n            (key = new ReactPromise(\"rejected\", null, value.reason)),\n              (key = createLazyChunkWrapper(key));\n          else if (0 < value.deps) {\n            var blockedChunk = new ReactPromise(\"blocked\", null, null);\n            value.value = key;\n            value.chunk = blockedChunk;\n            key = createLazyChunkWrapper(blockedChunk);\n          }\n      } else key = value;\n      return key;\n    }\n    return value;\n  };\n}\nfunction noServerCall() {\n  throw Error(\n    \"Server Functions cannot be called during initial render. This would create a fetch waterfall. Try to use a Server Component to pass data to Client Components instead.\"\n  );\n}\nfunction createResponseFromOptions(options) {\n  return new ResponseInstance(\n    options.serverConsumerManifest.moduleMap,\n    options.serverConsumerManifest.serverModuleMap,\n    options.serverConsumerManifest.moduleLoading,\n    noServerCall,\n    options.encodeFormAction,\n    \"string\" === typeof options.nonce ? options.nonce : void 0,\n    options && options.temporaryReferences\n      ? options.temporaryReferences\n      : void 0\n  );\n}\nfunction startReadingFromStream(response, stream) {\n  function progress(_ref) {\n    var value = _ref.value;\n    if (_ref.done) reportGlobalError(response, Error(\"Connection closed.\"));\n    else {\n      var i = 0,\n        rowState = streamState._rowState;\n      _ref = streamState._rowID;\n      for (\n        var rowTag = streamState._rowTag,\n          rowLength = streamState._rowLength,\n          buffer = streamState._buffer,\n          chunkLength = value.length;\n        i < chunkLength;\n\n      ) {\n        var lastIdx = -1;\n        switch (rowState) {\n          case 0:\n            lastIdx = value[i++];\n            58 === lastIdx\n              ? (rowState = 1)\n              : (_ref =\n                  (_ref << 4) | (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 1:\n            rowState = value[i];\n            84 === rowState ||\n            65 === rowState ||\n            79 === rowState ||\n            111 === rowState ||\n            85 === rowState ||\n            83 === rowState ||\n            115 === rowState ||\n            76 === rowState ||\n            108 === rowState ||\n            71 === rowState ||\n            103 === rowState ||\n            77 === rowState ||\n            109 === rowState ||\n            86 === rowState\n              ? ((rowTag = rowState), (rowState = 2), i++)\n              : (64 < rowState && 91 > rowState) ||\n                  35 === rowState ||\n                  114 === rowState ||\n                  120 === rowState\n                ? ((rowTag = rowState), (rowState = 3), i++)\n                : ((rowTag = 0), (rowState = 3));\n            continue;\n          case 2:\n            lastIdx = value[i++];\n            44 === lastIdx\n              ? (rowState = 4)\n              : (rowLength =\n                  (rowLength << 4) |\n                  (96 < lastIdx ? lastIdx - 87 : lastIdx - 48));\n            continue;\n          case 3:\n            lastIdx = value.indexOf(10, i);\n            break;\n          case 4:\n            (lastIdx = i + rowLength), lastIdx > value.length && (lastIdx = -1);\n        }\n        var offset = value.byteOffset + i;\n        if (-1 < lastIdx)\n          (rowLength = new Uint8Array(value.buffer, offset, lastIdx - i)),\n            processFullBinaryRow(response, _ref, rowTag, buffer, rowLength),\n            (i = lastIdx),\n            3 === rowState && i++,\n            (rowLength = _ref = rowTag = rowState = 0),\n            (buffer.length = 0);\n        else {\n          value = new Uint8Array(value.buffer, offset, value.byteLength - i);\n          buffer.push(value);\n          rowLength -= value.byteLength;\n          break;\n        }\n      }\n      streamState._rowState = rowState;\n      streamState._rowID = _ref;\n      streamState._rowTag = rowTag;\n      streamState._rowLength = rowLength;\n      return reader.read().then(progress).catch(error);\n    }\n  }\n  function error(e) {\n    reportGlobalError(response, e);\n  }\n  var streamState = {\n      _rowState: 0,\n      _rowID: 0,\n      _rowTag: 0,\n      _rowLength: 0,\n      _buffer: []\n    },\n    reader = stream.getReader();\n  reader.read().then(progress).catch(error);\n}\nexports.createFromFetch = function (promiseForResponse, options) {\n  var response = createResponseFromOptions(options);\n  promiseForResponse.then(\n    function (r) {\n      startReadingFromStream(response, r.body);\n    },\n    function (e) {\n      reportGlobalError(response, e);\n    }\n  );\n  return getChunk(response, 0);\n};\nexports.createFromReadableStream = function (stream, options) {\n  options = createResponseFromOptions(options);\n  startReadingFromStream(options, stream);\n  return getChunk(options, 0);\n};\nexports.createServerReference = function (id) {\n  return createServerReference$1(id, noServerCall);\n};\nexports.createTemporaryReferenceSet = function () {\n  return new Map();\n};\nexports.encodeReply = function (value, options) {\n  return new Promise(function (resolve, reject) {\n    var abort = processReply(\n      value,\n      \"\",\n      options && options.temporaryReferences\n        ? options.temporaryReferences\n        : void 0,\n      resolve,\n      reject\n    );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(signal.reason);\n      else {\n        var listener = function () {\n          abort(signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n  });\n};\nexports.registerServerReference = function (reference, id, encodeFormAction) {\n  registerBoundServerReference(reference, id, null, encodeFormAction);\n  return reference;\n};\n","/**\n * Entry point to the Segment Cache implementation.\n *\n * All code related to the Segment Cache lives `segment-cache-impl` directory.\n * Callers access it through this indirection.\n *\n * This is to ensure the code is dead code eliminated from the bundle if the\n * flag is disabled.\n *\n * TODO: This is super tedious. Since experimental flags are an essential part\n * of our workflow, we should establish a better pattern for dead code\n * elimination. Ideally it would be done at the bundler level, like how React's\n * build process works. In the React repo, you don't even need to add any extra\n * configuration per experiment — if the code is not reachable, it gets stripped\n * from the build automatically by Rollup. Or, shorter term, we could stub out\n * experimental modules at build time by updating the build config, i.e. a more\n * automated version of what I'm doing manually in this file.\n */\n\nexport type { NavigationResult } from './segment-cache-impl/navigation'\nexport type { PrefetchTask } from './segment-cache-impl/scheduler'\nexport type { NormalizedSearch } from './segment-cache-impl/cache-key'\n\nconst notEnabled: any = () => {\n  throw new Error(\n    'Segment Cache experiment is not enabled. This is a bug in Next.js.'\n  )\n}\n\nexport const prefetch: typeof import('./segment-cache-impl/prefetch').prefetch =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/prefetch') as typeof import('./segment-cache-impl/prefetch')\n        ).prefetch(...args)\n      }\n    : notEnabled\n\nexport const navigate: typeof import('./segment-cache-impl/navigation').navigate =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/navigation') as typeof import('./segment-cache-impl/navigation')\n        ).navigate(...args)\n      }\n    : notEnabled\n\nexport const revalidateEntireCache: typeof import('./segment-cache-impl/cache').revalidateEntireCache =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache') as typeof import('./segment-cache-impl/cache')\n        ).revalidateEntireCache(...args)\n      }\n    : notEnabled\n\nexport const getCurrentCacheVersion: typeof import('./segment-cache-impl/cache').getCurrentCacheVersion =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache') as typeof import('./segment-cache-impl/cache')\n        ).getCurrentCacheVersion(...args)\n      }\n    : notEnabled\n\nexport const schedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').schedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).schedulePrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const cancelPrefetchTask: typeof import('./segment-cache-impl/scheduler').cancelPrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).cancelPrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const reschedulePrefetchTask: typeof import('./segment-cache-impl/scheduler').reschedulePrefetchTask =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).reschedulePrefetchTask(...args)\n      }\n    : notEnabled\n\nexport const isPrefetchTaskDirty: typeof import('./segment-cache-impl/scheduler').isPrefetchTaskDirty =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/scheduler') as typeof import('./segment-cache-impl/scheduler')\n        ).isPrefetchTaskDirty(...args)\n      }\n    : notEnabled\n\nexport const createCacheKey: typeof import('./segment-cache-impl/cache-key').createCacheKey =\n  process.env.__NEXT_CLIENT_SEGMENT_CACHE\n    ? function (...args) {\n        return (\n          require('./segment-cache-impl/cache-key') as typeof import('./segment-cache-impl/cache-key')\n        ).createCacheKey(...args)\n      }\n    : notEnabled\n\n/**\n * Below are public constants. They're small enough that we don't need to\n * DCE them.\n */\n\nexport const enum NavigationResultTag {\n  MPA,\n  Success,\n  NoOp,\n  Async,\n}\n\n/**\n * The priority of the prefetch task. Higher numbers are higher priority.\n */\nexport const enum PrefetchPriority {\n  /**\n   * Assigned to the most recently hovered/touched link. Special network\n   * bandwidth is reserved for this task only. There's only ever one Intent-\n   * priority task at a time; when a new Intent task is scheduled, the previous\n   * one is bumped down to Default.\n   */\n  Intent = 2,\n  /**\n   * The default priority for prefetch tasks.\n   */\n  Default = 1,\n  /**\n   * Assigned to tasks when they spawn non-blocking background work, like\n   * revalidating a partially cached entry to see if more data is available.\n   */\n  Background = 0,\n}\n\nexport const enum FetchStrategy {\n  // Deliberately ordered so we can easily compare two segments\n  // and determine if one segment is \"more specific\" than another\n  // (i.e. if it's likely that it contains more data)\n  LoadingBoundary = 0,\n  PPR = 1,\n  PPRRuntime = 2,\n  Full = 3,\n}\n\n/**\n * A subset of fetch strategies used for prefetch tasks.\n * A prefetch task can't know if it should use `PPR` or `LoadingBoundary`\n * until we complete the initial tree prefetch request, so we use `PPR` to signal both cases\n * and adjust it based on the route when actually fetching.\n * */\nexport type PrefetchTaskFetchStrategy =\n  | FetchStrategy.PPR\n  | FetchStrategy.PPRRuntime\n  | FetchStrategy.Full\n","'use client'\n\n/**\n * HTTPAccessFallbackBoundary is a boundary that catches errors and renders a\n * fallback component for HTTP errors.\n *\n * It receives the status code, and determine if it should render fallbacks for few HTTP 4xx errors.\n *\n * e.g. 404\n * 404 represents not found, and the fallback component pair contains the component and its styles.\n *\n */\n\nimport React, { useContext } from 'react'\nimport { useUntrackedPathname } from '../navigation-untracked'\nimport {\n  HTTPAccessErrorStatus,\n  getAccessFallbackHTTPStatus,\n  getAccessFallbackErrorTypeByStatus,\n  isHTTPAccessFallbackError,\n} from './http-access-fallback'\nimport { warnOnce } from '../../../shared/lib/utils/warn-once'\nimport { MissingSlotContext } from '../../../shared/lib/app-router-context.shared-runtime'\n\ninterface HTTPAccessFallbackBoundaryProps {\n  notFound?: React.ReactNode\n  forbidden?: React.ReactNode\n  unauthorized?: React.ReactNode\n  children: React.ReactNode\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessFallbackErrorBoundaryProps\n  extends HTTPAccessFallbackBoundaryProps {\n  pathname: string | null\n  missingSlots?: Set<string>\n}\n\ninterface HTTPAccessBoundaryState {\n  triggeredStatus: number | undefined\n  previousPathname: string | null\n}\n\nclass HTTPAccessFallbackErrorBoundary extends React.Component<\n  HTTPAccessFallbackErrorBoundaryProps,\n  HTTPAccessBoundaryState\n> {\n  constructor(props: HTTPAccessFallbackErrorBoundaryProps) {\n    super(props)\n    this.state = {\n      triggeredStatus: undefined,\n      previousPathname: props.pathname,\n    }\n  }\n\n  componentDidCatch(): void {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      this.props.missingSlots &&\n      this.props.missingSlots.size > 0 &&\n      // A missing children slot is the typical not-found case, so no need to warn\n      !this.props.missingSlots.has('children')\n    ) {\n      let warningMessage =\n        'No default component was found for a parallel route rendered on this page. Falling back to nearest NotFound boundary.\\n' +\n        'Learn more: https://nextjs.org/docs/app/building-your-application/routing/parallel-routes#defaultjs\\n\\n'\n\n      const formattedSlots = Array.from(this.props.missingSlots)\n        .sort((a, b) => a.localeCompare(b))\n        .map((slot) => `@${slot}`)\n        .join(', ')\n\n      warningMessage += 'Missing slots: ' + formattedSlots\n\n      warnOnce(warningMessage)\n    }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isHTTPAccessFallbackError(error)) {\n      const httpStatus = getAccessFallbackHTTPStatus(error)\n      return {\n        triggeredStatus: httpStatus,\n      }\n    }\n    // Re-throw if error is not for 404\n    throw error\n  }\n\n  static getDerivedStateFromProps(\n    props: HTTPAccessFallbackErrorBoundaryProps,\n    state: HTTPAccessBoundaryState\n  ): HTTPAccessBoundaryState | null {\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.triggeredStatus) {\n      return {\n        triggeredStatus: undefined,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      triggeredStatus: state.triggeredStatus,\n      previousPathname: props.pathname,\n    }\n  }\n\n  render() {\n    const { notFound, forbidden, unauthorized, children } = this.props\n    const { triggeredStatus } = this.state\n    const errorComponents = {\n      [HTTPAccessErrorStatus.NOT_FOUND]: notFound,\n      [HTTPAccessErrorStatus.FORBIDDEN]: forbidden,\n      [HTTPAccessErrorStatus.UNAUTHORIZED]: unauthorized,\n    }\n\n    if (triggeredStatus) {\n      const isNotFound =\n        triggeredStatus === HTTPAccessErrorStatus.NOT_FOUND && notFound\n      const isForbidden =\n        triggeredStatus === HTTPAccessErrorStatus.FORBIDDEN && forbidden\n      const isUnauthorized =\n        triggeredStatus === HTTPAccessErrorStatus.UNAUTHORIZED && unauthorized\n\n      // If there's no matched boundary in this layer, keep throwing the error by rendering the children\n      if (!(isNotFound || isForbidden || isUnauthorized)) {\n        return children\n      }\n\n      return (\n        <>\n          <meta name=\"robots\" content=\"noindex\" />\n          {process.env.NODE_ENV === 'development' && (\n            <meta\n              name=\"boundary-next-error\"\n              content={getAccessFallbackErrorTypeByStatus(triggeredStatus)}\n            />\n          )}\n          {errorComponents[triggeredStatus]}\n        </>\n      )\n    }\n\n    return children\n  }\n}\n\nexport function HTTPAccessFallbackBoundary({\n  notFound,\n  forbidden,\n  unauthorized,\n  children,\n}: HTTPAccessFallbackBoundaryProps) {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these error can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  const missingSlots = useContext(MissingSlotContext)\n  const hasErrorFallback = !!(notFound || forbidden || unauthorized)\n\n  if (hasErrorFallback) {\n    return (\n      <HTTPAccessFallbackErrorBoundary\n        pathname={pathname}\n        notFound={notFound}\n        forbidden={forbidden}\n        unauthorized={unauthorized}\n        missingSlots={missingSlots}\n      >\n        {children}\n      </HTTPAccessFallbackErrorBoundary>\n    )\n  }\n\n  return <>{children}</>\n}\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  navigatedAt,\n  previousTree,\n  serverResponse,\n}: {\n  navigatedAt: number\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  navigatedAt: number\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\nexport const ROOT_LAYOUT_BOUNDARY_NAME = '__next_root_layout_boundary__';\n\n//# sourceMappingURL=boundary-constants.js.map","'use client'\n\nimport React, { useContext, type JSX } from 'react'\nimport { TemplateContext } from '../../shared/lib/app-router-context.shared-runtime'\n\nexport default function RenderFromTemplateContext(): JSX.Element {\n  const children = useContext(TemplateContext)\n  return <>{children}</>\n}\n","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Cache Components is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_CACHE_COMPONENTS ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const IconMark = registerClientReference(\nfunction() { throw new Error(\"Attempted to call IconMark() from the server but IconMark is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js\",\n\"IconMark\",\n);","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","import type { Dispatch } from 'react'\nimport React, { use } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from './app-router-instance'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\n// The app router state lives outside of React, so we can import the dispatch\n// method directly wherever we need it, rather than passing it around via props\n// or context.\nlet dispatch: Dispatch<ReducerActions> | null = null\n\nexport function dispatchAppRouterAction(action: ReducerActions) {\n  if (dispatch === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  dispatch(action)\n}\n\nexport function useActionQueue(\n  actionQueue: AppRouterActionQueue\n): AppRouterState {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  // Because of a known issue that requires to decode Flight streams inside the\n  // render phase, we have to be a bit clever and assign the dispatch method to\n  // a module-level variable upon initialization. The useState hook in this\n  // module only exists to synchronize state that lives outside of React.\n  // Ideally, what we'd do instead is pass the state as a prop to root.render;\n  // this is conceptually how we're modeling the app router state, despite the\n  // weird implementation details.\n  if (process.env.NODE_ENV !== 'production') {\n    const { useAppDevRenderingIndicator } =\n      require('../../next-devtools/userspace/use-app-dev-rendering-indicator') as typeof import('../../next-devtools/userspace/use-app-dev-rendering-indicator')\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const appDevRenderingIndicator = useAppDevRenderingIndicator()\n\n    dispatch = (action: ReducerActions) => {\n      appDevRenderingIndicator(() => {\n        actionQueue.dispatch(action, setState)\n      })\n    }\n  } else {\n    dispatch = (action: ReducerActions) =>\n      actionQueue.dispatch(action, setState)\n  }\n\n  return isThenable(state) ? use(state) : state\n}\n","export class UnrecognizedActionError extends Error {\n  constructor(...args: ConstructorParameters<typeof Error>) {\n    super(...args)\n    this.name = 'UnrecognizedActionError'\n  }\n}\n\n/**\n * Check whether a server action call failed because the server action was not recognized by the server.\n * This can happen if the client and the server are not from the same deployment.\n *\n * Example usage:\n * ```ts\n * try {\n *   await myServerAction();\n * } catch (err) {\n *   if (unstable_isUnrecognizedActionError(err)) {\n *     // The client is from a different deployment than the server.\n *     // Reloading the page will fix this mismatch.\n *     window.alert(\"Please refresh the page and try again\");\n *     return;\n *   }\n * }\n * ```\n * */\nexport function unstable_isUnrecognizedActionError(\n  error: unknown\n): error is UnrecognizedActionError {\n  return !!(\n    error &&\n    typeof error === 'object' &&\n    error instanceof UnrecognizedActionError\n  )\n}\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nexports.renderToReadableStream = s.renderToReadableStream;\nexports.decodeReply = s.decodeReply;\nexports.decodeReplyFromAsyncIterable = s.decodeReplyFromAsyncIterable;\nexports.decodeAction = s.decodeAction;\nexports.decodeFormState = s.decodeFormState;\nexports.registerServerReference = s.registerServerReference;\nexports.registerClientReference = s.registerClientReference;\nexports.createClientModuleProxy = s.createClientModuleProxy;\nexports.createTemporaryReferenceSet = s.createTemporaryReferenceSet;\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const setCacheBustingSearchParam = registerClientReference(\nfunction() { throw new Error(\"Attempted to call setCacheBustingSearchParam() from the server but setCacheBustingSearchParam is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js\",\n\"setCacheBustingSearchParam\",\n);export const setCacheBustingSearchParamWithHash = registerClientReference(\nfunction() { throw new Error(\"Attempted to call setCacheBustingSearchParamWithHash() from the server but setCacheBustingSearchParamWithHash is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js\",\n\"setCacheBustingSearchParamWithHash\",\n);","/**\n * @license React\n * react.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals = { H: null, A: null };\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nvar isArrayImpl = Array.isArray;\nfunction noop() {}\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty,\n  assign = Object.assign;\nfunction ReactElement(type, key, props) {\n  var refProp = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== refProp ? refProp : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(oldElement.type, newKey, oldElement.props);\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      formatProdErrorMessage(\n        31,\n        \"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array\n      )\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nfunction createCacheRoot() {\n  return new WeakMap();\n}\nfunction createCacheNode() {\n  return { s: 0, v: void 0, o: null, p: null };\n}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children)) throw Error(formatProdErrorMessage(143));\n    return children;\n  }\n};\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.cache = function (fn) {\n  return function () {\n    var dispatcher = ReactSharedInternals.A;\n    if (!dispatcher) return fn.apply(null, arguments);\n    var fnMap = dispatcher.getCacheForType(createCacheRoot);\n    dispatcher = fnMap.get(fn);\n    void 0 === dispatcher &&\n      ((dispatcher = createCacheNode()), fnMap.set(fn, dispatcher));\n    fnMap = 0;\n    for (var l = arguments.length; fnMap < l; fnMap++) {\n      var arg = arguments[fnMap];\n      if (\n        \"function\" === typeof arg ||\n        (\"object\" === typeof arg && null !== arg)\n      ) {\n        var objectCache = dispatcher.o;\n        null === objectCache && (dispatcher.o = objectCache = new WeakMap());\n        dispatcher = objectCache.get(arg);\n        void 0 === dispatcher &&\n          ((dispatcher = createCacheNode()), objectCache.set(arg, dispatcher));\n      } else\n        (objectCache = dispatcher.p),\n          null === objectCache && (dispatcher.p = objectCache = new Map()),\n          (dispatcher = objectCache.get(arg)),\n          void 0 === dispatcher &&\n            ((dispatcher = createCacheNode()),\n            objectCache.set(arg, dispatcher));\n    }\n    if (1 === dispatcher.s) return dispatcher.v;\n    if (2 === dispatcher.s) throw dispatcher.v;\n    try {\n      var result = fn.apply(null, arguments);\n      fnMap = dispatcher;\n      fnMap.s = 1;\n      return (fnMap.v = result);\n    } catch (error) {\n      throw ((result = dispatcher), (result.s = 2), (result.v = error), error);\n    }\n  };\n};\nexports.cacheSignal = function () {\n  var dispatcher = ReactSharedInternals.A;\n  return dispatcher ? dispatcher.cacheSignal() : null;\n};\nexports.captureOwnerStack = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(formatProdErrorMessage(267, element));\n  var props = assign({}, element.props),\n    key = element.key;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, props);\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useDebugValue = function () {};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(route, expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`), this.route = route, this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, route, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(route, expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(route, expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\nexport function makeDevtoolsIOAwarePromise(underlying) {\n    // in React DevTools if we resolve in a setTimeout we will observe\n    // the promise resolution as something that can suspend a boundary or root.\n    return new Promise((resolve)=>{\n        // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n        setTimeout(()=>{\n            resolve(underlying);\n        }, 0);\n    });\n}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","(()=>{\"use strict\";var e={993:e=>{var t=Object.prototype.hasOwnProperty,n=\"~\";function Events(){}if(Object.create){Events.prototype=Object.create(null);if(!(new Events).__proto__)n=false}function EE(e,t,n){this.fn=e;this.context=t;this.once=n||false}function addListener(e,t,r,i,s){if(typeof r!==\"function\"){throw new TypeError(\"The listener must be a function\")}var o=new EE(r,i||e,s),u=n?n+t:t;if(!e._events[u])e._events[u]=o,e._eventsCount++;else if(!e._events[u].fn)e._events[u].push(o);else e._events[u]=[e._events[u],o];return e}function clearEvent(e,t){if(--e._eventsCount===0)e._events=new Events;else delete e._events[t]}function EventEmitter(){this._events=new Events;this._eventsCount=0}EventEmitter.prototype.eventNames=function eventNames(){var e=[],r,i;if(this._eventsCount===0)return e;for(i in r=this._events){if(t.call(r,i))e.push(n?i.slice(1):i)}if(Object.getOwnPropertySymbols){return e.concat(Object.getOwnPropertySymbols(r))}return e};EventEmitter.prototype.listeners=function listeners(e){var t=n?n+e:e,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var i=0,s=r.length,o=new Array(s);i<s;i++){o[i]=r[i].fn}return o};EventEmitter.prototype.listenerCount=function listenerCount(e){var t=n?n+e:e,r=this._events[t];if(!r)return 0;if(r.fn)return 1;return r.length};EventEmitter.prototype.emit=function emit(e,t,r,i,s,o){var u=n?n+e:e;if(!this._events[u])return false;var a=this._events[u],l=arguments.length,c,h;if(a.fn){if(a.once)this.removeListener(e,a.fn,undefined,true);switch(l){case 1:return a.fn.call(a.context),true;case 2:return a.fn.call(a.context,t),true;case 3:return a.fn.call(a.context,t,r),true;case 4:return a.fn.call(a.context,t,r,i),true;case 5:return a.fn.call(a.context,t,r,i,s),true;case 6:return a.fn.call(a.context,t,r,i,s,o),true}for(h=1,c=new Array(l-1);h<l;h++){c[h-1]=arguments[h]}a.fn.apply(a.context,c)}else{var _=a.length,f;for(h=0;h<_;h++){if(a[h].once)this.removeListener(e,a[h].fn,undefined,true);switch(l){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,t);break;case 3:a[h].fn.call(a[h].context,t,r);break;case 4:a[h].fn.call(a[h].context,t,r,i);break;default:if(!c)for(f=1,c=new Array(l-1);f<l;f++){c[f-1]=arguments[f]}a[h].fn.apply(a[h].context,c)}}}return true};EventEmitter.prototype.on=function on(e,t,n){return addListener(this,e,t,n,false)};EventEmitter.prototype.once=function once(e,t,n){return addListener(this,e,t,n,true)};EventEmitter.prototype.removeListener=function removeListener(e,t,r,i){var s=n?n+e:e;if(!this._events[s])return this;if(!t){clearEvent(this,s);return this}var o=this._events[s];if(o.fn){if(o.fn===t&&(!i||o.once)&&(!r||o.context===r)){clearEvent(this,s)}}else{for(var u=0,a=[],l=o.length;u<l;u++){if(o[u].fn!==t||i&&!o[u].once||r&&o[u].context!==r){a.push(o[u])}}if(a.length)this._events[s]=a.length===1?a[0]:a;else clearEvent(this,s)}return this};EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t;if(e){t=n?n+e:e;if(this._events[t])clearEvent(this,t)}else{this._events=new Events;this._eventsCount=0}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prefixed=n;EventEmitter.EventEmitter=EventEmitter;if(true){e.exports=EventEmitter}},213:e=>{e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},574:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});function lowerBound(e,t,n){let r=0;let i=e.length;while(i>0){const s=i/2|0;let o=r+s;if(n(e[o],t)<=0){r=++o;i-=s+1}else{i=s}}return r}t[\"default\"]=lowerBound},821:(e,t,n)=>{Object.defineProperty(t,\"__esModule\",{value:true});const r=n(574);class PriorityQueue{constructor(){this._queue=[]}enqueue(e,t){t=Object.assign({priority:0},t);const n={priority:t.priority,run:e};if(this.size&&this._queue[this.size-1].priority>=t.priority){this._queue.push(n);return}const i=r.default(this._queue,n,((e,t)=>t.priority-e.priority));this._queue.splice(i,0,n)}dequeue(){const e=this._queue.shift();return e===null||e===void 0?void 0:e.run}filter(e){return this._queue.filter((t=>t.priority===e.priority)).map((e=>e.run))}get size(){return this._queue.length}}t[\"default\"]=PriorityQueue},816:(e,t,n)=>{const r=n(213);class TimeoutError extends Error{constructor(e){super(e);this.name=\"TimeoutError\"}}const pTimeout=(e,t,n)=>new Promise(((i,s)=>{if(typeof t!==\"number\"||t<0){throw new TypeError(\"Expected `milliseconds` to be a positive number\")}if(t===Infinity){i(e);return}const o=setTimeout((()=>{if(typeof n===\"function\"){try{i(n())}catch(e){s(e)}return}const r=typeof n===\"string\"?n:`Promise timed out after ${t} milliseconds`;const o=n instanceof Error?n:new TimeoutError(r);if(typeof e.cancel===\"function\"){e.cancel()}s(o)}),t);r(e.then(i,s),(()=>{clearTimeout(o)}))}));e.exports=pTimeout;e.exports[\"default\"]=pTimeout;e.exports.TimeoutError=TimeoutError}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};(()=>{var e=n;Object.defineProperty(e,\"__esModule\",{value:true});const t=__nccwpck_require__(993);const r=__nccwpck_require__(816);const i=__nccwpck_require__(821);const empty=()=>{};const s=new r.TimeoutError;class PQueue extends t{constructor(e){var t,n,r,s;super();this._intervalCount=0;this._intervalEnd=0;this._pendingCount=0;this._resolveEmpty=empty;this._resolveIdle=empty;e=Object.assign({carryoverConcurrencyCount:false,intervalCap:Infinity,interval:0,concurrency:Infinity,autoStart:true,queueClass:i.default},e);if(!(typeof e.intervalCap===\"number\"&&e.intervalCap>=1)){throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:\"\"}\\` (${typeof e.intervalCap})`)}if(e.interval===undefined||!(Number.isFinite(e.interval)&&e.interval>=0)){throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(s=(r=e.interval)===null||r===void 0?void 0:r.toString())!==null&&s!==void 0?s:\"\"}\\` (${typeof e.interval})`)}this._carryoverConcurrencyCount=e.carryoverConcurrencyCount;this._isIntervalIgnored=e.intervalCap===Infinity||e.interval===0;this._intervalCap=e.intervalCap;this._interval=e.interval;this._queue=new e.queueClass;this._queueClass=e.queueClass;this.concurrency=e.concurrency;this._timeout=e.timeout;this._throwOnTimeout=e.throwOnTimeout===true;this._isPaused=e.autoStart===false}get _doesIntervalAllowAnother(){return this._isIntervalIgnored||this._intervalCount<this._intervalCap}get _doesConcurrentAllowAnother(){return this._pendingCount<this._concurrency}_next(){this._pendingCount--;this._tryToStartAnother();this.emit(\"next\")}_resolvePromises(){this._resolveEmpty();this._resolveEmpty=empty;if(this._pendingCount===0){this._resolveIdle();this._resolveIdle=empty;this.emit(\"idle\")}}_onResumeInterval(){this._onInterval();this._initializeIntervalIfNeeded();this._timeoutId=undefined}_isIntervalPaused(){const e=Date.now();if(this._intervalId===undefined){const t=this._intervalEnd-e;if(t<0){this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0}else{if(this._timeoutId===undefined){this._timeoutId=setTimeout((()=>{this._onResumeInterval()}),t)}return true}}return false}_tryToStartAnother(){if(this._queue.size===0){if(this._intervalId){clearInterval(this._intervalId)}this._intervalId=undefined;this._resolvePromises();return false}if(!this._isPaused){const e=!this._isIntervalPaused();if(this._doesIntervalAllowAnother&&this._doesConcurrentAllowAnother){const t=this._queue.dequeue();if(!t){return false}this.emit(\"active\");t();if(e){this._initializeIntervalIfNeeded()}return true}}return false}_initializeIntervalIfNeeded(){if(this._isIntervalIgnored||this._intervalId!==undefined){return}this._intervalId=setInterval((()=>{this._onInterval()}),this._interval);this._intervalEnd=Date.now()+this._interval}_onInterval(){if(this._intervalCount===0&&this._pendingCount===0&&this._intervalId){clearInterval(this._intervalId);this._intervalId=undefined}this._intervalCount=this._carryoverConcurrencyCount?this._pendingCount:0;this._processQueue()}_processQueue(){while(this._tryToStartAnother()){}}get concurrency(){return this._concurrency}set concurrency(e){if(!(typeof e===\"number\"&&e>=1)){throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${e}\\` (${typeof e})`)}this._concurrency=e;this._processQueue()}async add(e,t={}){return new Promise(((n,i)=>{const run=async()=>{this._pendingCount++;this._intervalCount++;try{const o=this._timeout===undefined&&t.timeout===undefined?e():r.default(Promise.resolve(e()),t.timeout===undefined?this._timeout:t.timeout,(()=>{if(t.throwOnTimeout===undefined?this._throwOnTimeout:t.throwOnTimeout){i(s)}return undefined}));n(await o)}catch(e){i(e)}this._next()};this._queue.enqueue(run,t);this._tryToStartAnother();this.emit(\"add\")}))}async addAll(e,t){return Promise.all(e.map((async e=>this.add(e,t))))}start(){if(!this._isPaused){return this}this._isPaused=false;this._processQueue();return this}pause(){this._isPaused=true}clear(){this._queue=new this._queueClass}async onEmpty(){if(this._queue.size===0){return}return new Promise((e=>{const t=this._resolveEmpty;this._resolveEmpty=()=>{t();e()}}))}async onIdle(){if(this._pendingCount===0&&this._queue.size===0){return}return new Promise((e=>{const t=this._resolveIdle;this._resolveIdle=()=>{t();e()}}))}get size(){return this._queue.size}sizeBy(e){return this._queue.filter(e).length}get pending(){return this._pendingCount}get isPaused(){return this._isPaused}get timeout(){return this._timeout}set timeout(e){this._timeout=e}}e[\"default\"]=PQueue})();module.exports=n})();",null,"import type { Key } from 'next/dist/compiled/path-to-regexp'\nimport { regexpToFunction } from 'next/dist/compiled/path-to-regexp'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\n\ninterface Options {\n  /**\n   * A transformer function that will be applied to the regexp generated\n   * from the provided path and path-to-regexp.\n   */\n  regexModifier?: (regex: string) => string\n  /**\n   * When true the function will remove all unnamed parameters\n   * from the matched parameters.\n   */\n  removeUnnamedParams?: boolean\n  /**\n   * When true the regexp won't allow an optional trailing delimiter\n   * to match.\n   */\n  strict?: boolean\n\n  /**\n   * When true the matcher will be case-sensitive, defaults to false\n   */\n  sensitive?: boolean\n}\n\nexport type PatchMatcher = (\n  pathname: string,\n  params?: Record<string, any>\n) => Record<string, any> | false\n\n/**\n * Generates a path matcher function for a given path and options based on\n * path-to-regexp. By default the match will be case insensitive, non strict\n * and delimited by `/`.\n */\nexport function getPathMatch(path: string, options?: Options): PatchMatcher {\n  const keys: Key[] = []\n  const regexp = pathToRegexp(path, keys, {\n    delimiter: '/',\n    sensitive:\n      typeof options?.sensitive === 'boolean' ? options.sensitive : false,\n    strict: options?.strict,\n  })\n\n  const matcher = regexpToFunction<Record<string, any>>(\n    options?.regexModifier\n      ? new RegExp(options.regexModifier(regexp.source), regexp.flags)\n      : regexp,\n    keys\n  )\n\n  /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */\n  return (pathname, params) => {\n    // If no pathname is provided it's not a match.\n    if (typeof pathname !== 'string') return false\n\n    const match = matcher(pathname)\n\n    // If the path did not match `false` will be returned.\n    if (!match) return false\n\n    /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */\n    if (options?.removeUnnamedParams) {\n      for (const key of keys) {\n        if (typeof key.name === 'number') {\n          delete match.params[key.name]\n        }\n      }\n    }\n\n    return { ...params, ...match.params }\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { searchParamsToUrlQuery } from './querystring'\nimport { parseRelativeUrl } from './parse-relative-url'\n\nexport interface ParsedUrl {\n  hash: string\n  hostname?: string | null\n  href: string\n  pathname: string\n  port?: string | null\n  protocol?: string | null\n  query: ParsedUrlQuery\n  search: string\n  slashes: boolean | undefined\n}\n\nexport function parseUrl(url: string): ParsedUrl {\n  if (url.startsWith('/')) {\n    return parseRelativeUrl(url)\n  }\n\n  const parsedURL = new URL(url)\n  return {\n    hash: parsedURL.hash,\n    hostname: parsedURL.hostname,\n    href: parsedURL.href,\n    pathname: parsedURL.pathname,\n    port: parsedURL.port,\n    protocol: parsedURL.protocol,\n    query: searchParamsToUrlQuery(parsedURL.searchParams),\n    search: parsedURL.search,\n    slashes:\n      parsedURL.href.slice(\n        parsedURL.protocol.length,\n        parsedURL.protocol.length + 2\n      ) === '//',\n  }\n}\n","import type { IncomingMessage } from 'http'\nimport type { Key } from 'next/dist/compiled/path-to-regexp'\nimport type { NextParsedUrlQuery } from '../../../../server/request-meta'\nimport type { RouteHas } from '../../../../lib/load-custom-routes'\nimport type { BaseNextRequest } from '../../../../server/base-http'\n\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { parseUrl } from './parse-url'\nimport {\n  INTERCEPTION_ROUTE_MARKERS,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\nimport { getCookieParser } from '../../../../server/api-utils/get-cookie-parser'\nimport type { Params } from '../../../../server/request/params'\nimport { safePathToRegexp, safeCompile } from './route-match-utils'\n\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */\nfunction getSafeParamName(paramName: string) {\n  let newParamName = ''\n\n  for (let i = 0; i < paramName.length; i++) {\n    const charCode = paramName.charCodeAt(i)\n\n    if (\n      (charCode > 64 && charCode < 91) || // A-Z\n      (charCode > 96 && charCode < 123) // a-z\n    ) {\n      newParamName += paramName[i]\n    }\n  }\n  return newParamName\n}\n\nfunction escapeSegment(str: string, segmentName: string) {\n  return str.replace(\n    new RegExp(`:${escapeStringRegexp(segmentName)}`, 'g'),\n    `__ESC_COLON_${segmentName}`\n  )\n}\n\nfunction unescapeSegments(str: string) {\n  return str.replace(/__ESC_COLON_/gi, ':')\n}\n\nexport function matchHas(\n  req: BaseNextRequest | IncomingMessage,\n  query: Params,\n  has: RouteHas[] = [],\n  missing: RouteHas[] = []\n): false | Params {\n  const params: Params = {}\n\n  const hasMatch = (hasItem: RouteHas) => {\n    let value\n    let key = hasItem.key\n\n    switch (hasItem.type) {\n      case 'header': {\n        key = key!.toLowerCase()\n        value = req.headers[key] as string\n        break\n      }\n      case 'cookie': {\n        if ('cookies' in req) {\n          value = req.cookies[hasItem.key]\n        } else {\n          const cookies = getCookieParser(req.headers)()\n          value = cookies[hasItem.key]\n        }\n\n        break\n      }\n      case 'query': {\n        value = query[key!]\n        break\n      }\n      case 'host': {\n        const { host } = req?.headers || {}\n        // remove port from host if present\n        const hostname = host?.split(':', 1)[0].toLowerCase()\n        value = hostname\n        break\n      }\n      default: {\n        break\n      }\n    }\n\n    if (!hasItem.value && value) {\n      params[getSafeParamName(key!)] = value\n      return true\n    } else if (value) {\n      const matcher = new RegExp(`^${hasItem.value}$`)\n      const matches = Array.isArray(value)\n        ? value.slice(-1)[0].match(matcher)\n        : value.match(matcher)\n\n      if (matches) {\n        if (Array.isArray(matches)) {\n          if (matches.groups) {\n            Object.keys(matches.groups).forEach((groupKey) => {\n              params[groupKey] = matches.groups![groupKey]\n            })\n          } else if (hasItem.type === 'host' && matches[0]) {\n            params.host = matches[0]\n          }\n        }\n        return true\n      }\n    }\n    return false\n  }\n\n  const allMatch =\n    has.every((item) => hasMatch(item)) &&\n    !missing.some((item) => hasMatch(item))\n\n  if (allMatch) {\n    return params\n  }\n  return false\n}\n\nexport function compileNonPath(value: string, params: Params): string {\n  if (!value.includes(':')) {\n    return value\n  }\n\n  for (const key of Object.keys(params)) {\n    if (value.includes(`:${key}`)) {\n      value = value\n        .replace(\n          new RegExp(`:${key}\\\\*`, 'g'),\n          `:${key}--ESCAPED_PARAM_ASTERISKS`\n        )\n        .replace(\n          new RegExp(`:${key}\\\\?`, 'g'),\n          `:${key}--ESCAPED_PARAM_QUESTION`\n        )\n        .replace(new RegExp(`:${key}\\\\+`, 'g'), `:${key}--ESCAPED_PARAM_PLUS`)\n        .replace(\n          new RegExp(`:${key}(?!\\\\w)`, 'g'),\n          `--ESCAPED_PARAM_COLON${key}`\n        )\n    }\n  }\n  value = value\n    .replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, '\\\\$1')\n    .replace(/--ESCAPED_PARAM_PLUS/g, '+')\n    .replace(/--ESCAPED_PARAM_COLON/g, ':')\n    .replace(/--ESCAPED_PARAM_QUESTION/g, '?')\n    .replace(/--ESCAPED_PARAM_ASTERISKS/g, '*')\n\n  // the value needs to start with a forward-slash to be compiled\n  // correctly\n  return safeCompile(`/${value}`, { validate: false })(params).slice(1)\n}\n\nexport function parseDestination(args: {\n  destination: string\n  params: Readonly<Params>\n  query: Readonly<NextParsedUrlQuery>\n}) {\n  let escaped = args.destination\n  for (const param of Object.keys({ ...args.params, ...args.query })) {\n    if (!param) continue\n\n    escaped = escapeSegment(escaped, param)\n  }\n\n  const parsed = parseUrl(escaped)\n\n  let pathname = parsed.pathname\n  if (pathname) {\n    pathname = unescapeSegments(pathname)\n  }\n\n  let href = parsed.href\n  if (href) {\n    href = unescapeSegments(href)\n  }\n\n  let hostname = parsed.hostname\n  if (hostname) {\n    hostname = unescapeSegments(hostname)\n  }\n\n  let hash = parsed.hash\n  if (hash) {\n    hash = unescapeSegments(hash)\n  }\n\n  let search = parsed.search\n  if (search) {\n    search = unescapeSegments(search)\n  }\n\n  return {\n    ...parsed,\n    pathname,\n    hostname,\n    href,\n    hash,\n    search,\n  }\n}\n\nexport function prepareDestination(args: {\n  appendParamsToQuery: boolean\n  destination: string\n  params: Params\n  query: NextParsedUrlQuery\n}) {\n  const parsedDestination = parseDestination(args)\n\n  const {\n    hostname: destHostname,\n    query: destQuery,\n    search: destSearch,\n  } = parsedDestination\n\n  // The following code assumes that the pathname here includes the hash if it's\n  // present.\n  let destPath = parsedDestination.pathname\n  if (parsedDestination.hash) {\n    destPath = `${destPath}${parsedDestination.hash}`\n  }\n\n  const destParams: (string | number)[] = []\n\n  const destPathParamKeys: Key[] = []\n  safePathToRegexp(destPath, destPathParamKeys)\n  for (const key of destPathParamKeys) {\n    destParams.push(key.name)\n  }\n\n  if (destHostname) {\n    const destHostnameParamKeys: Key[] = []\n    safePathToRegexp(destHostname, destHostnameParamKeys)\n    for (const key of destHostnameParamKeys) {\n      destParams.push(key.name)\n    }\n  }\n\n  const destPathCompiler = safeCompile(\n    destPath,\n    // we don't validate while compiling the destination since we should\n    // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    { validate: false }\n  )\n\n  let destHostnameCompiler\n  if (destHostname) {\n    destHostnameCompiler = safeCompile(destHostname, { validate: false })\n  }\n\n  // update any params in query values\n  for (const [key, strOrArray] of Object.entries(destQuery)) {\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    if (Array.isArray(strOrArray)) {\n      destQuery[key] = strOrArray.map((value) =>\n        compileNonPath(unescapeSegments(value), args.params)\n      )\n    } else if (typeof strOrArray === 'string') {\n      destQuery[key] = compileNonPath(unescapeSegments(strOrArray), args.params)\n    }\n  }\n\n  // add path params to query if it's not a redirect and not\n  // already defined in destination query or path\n  let paramKeys = Object.keys(args.params).filter(\n    (name) => name !== 'nextInternalLocale'\n  )\n\n  if (\n    args.appendParamsToQuery &&\n    !paramKeys.some((key) => destParams.includes(key))\n  ) {\n    for (const key of paramKeys) {\n      if (!(key in destQuery)) {\n        destQuery[key] = args.params[key]\n      }\n    }\n  }\n\n  let newUrl\n\n  // The compiler also that the interception route marker is an unnamed param, hence '0',\n  // so we need to add it to the params object.\n  if (isInterceptionRouteAppPath(destPath)) {\n    for (const segment of destPath.split('/')) {\n      const marker = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n        segment.startsWith(m)\n      )\n      if (marker) {\n        if (marker === '(..)(..)') {\n          args.params['0'] = '(..)'\n          args.params['1'] = '(..)'\n        } else {\n          args.params['0'] = marker\n        }\n        break\n      }\n    }\n  }\n\n  try {\n    newUrl = destPathCompiler(args.params)\n\n    const [pathname, hash] = newUrl.split('#', 2)\n    if (destHostnameCompiler) {\n      parsedDestination.hostname = destHostnameCompiler(args.params)\n    }\n    parsedDestination.pathname = pathname\n    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`\n    parsedDestination.search = destSearch\n      ? compileNonPath(destSearch, args.params)\n      : ''\n  } catch (err: any) {\n    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {\n      throw new Error(\n        `To use a multi-match in the destination you must add \\`*\\` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match`\n      )\n    }\n    throw err\n  }\n\n  // Query merge order lowest priority to highest\n  // 1. initial URL query values\n  // 2. path segment values\n  // 3. destination specified query values\n  parsedDestination.query = {\n    ...args.query,\n    ...parsedDestination.query,\n  }\n\n  return {\n    newUrl,\n    destQuery,\n    parsedDestination,\n  }\n}\n","/**\n * Decodes a query path parameter.\n *\n * @param value - The value to decode.\n * @returns The decoded value.\n */ export function decodeQueryPathParameter(value) {\n    // When deployed to Vercel, the value may be encoded, so this attempts to\n    // decode it and returns the original value if it fails.\n    try {\n        return decodeURIComponent(value);\n    } catch  {\n        return value;\n    }\n}\n\n//# sourceMappingURL=decode-query-path-parameter.js.map","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path';\nimport { getPathMatch } from '../shared/lib/router/utils/path-match';\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex';\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher';\nimport { matchHas, prepareDestination } from '../shared/lib/router/utils/prepare-destination';\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash';\nimport { normalizeRscURL } from '../shared/lib/router/utils/app-paths';\nimport { NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER, NEXT_CACHE_REVALIDATED_TAGS_HEADER, NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../lib/constants';\nimport { normalizeNextQueryParam } from './web/utils';\nimport { decodeQueryPathParameter } from './lib/decode-query-path-parameter';\nimport { parseReqUrl } from '../lib/url';\nimport { formatUrl } from '../shared/lib/router/utils/format-url';\nimport { parseAndValidateFlightRouterState } from './app-render/parse-and-validate-flight-router-state';\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites';\nimport { NEXT_ROUTER_STATE_TREE_HEADER } from '../client/components/app-router-headers';\nimport { getSelectedParams } from '../client/components/router-reducer/compute-changed-path';\nfunction filterInternalQuery(query, paramKeys) {\n    // this is used to pass query information in rewrites\n    // but should not be exposed in final query\n    delete query['nextInternalLocale'];\n    for(const key in query){\n        const isNextQueryPrefix = key !== NEXT_QUERY_PARAM_PREFIX && key.startsWith(NEXT_QUERY_PARAM_PREFIX);\n        const isNextInterceptionMarkerPrefix = key !== NEXT_INTERCEPTION_MARKER_PREFIX && key.startsWith(NEXT_INTERCEPTION_MARKER_PREFIX);\n        if (isNextQueryPrefix || isNextInterceptionMarkerPrefix || paramKeys.includes(key)) {\n            delete query[key];\n        }\n    }\n}\nexport function normalizeCdnUrl(req, paramKeys) {\n    // make sure to normalize req.url from CDNs to strip dynamic and rewrite\n    // params from the query which are added during routing\n    const _parsedUrl = parseReqUrl(req.url);\n    // we can't normalize if we can't parse\n    if (!_parsedUrl) {\n        return req.url;\n    }\n    delete _parsedUrl.search;\n    filterInternalQuery(_parsedUrl.query, paramKeys);\n    req.url = formatUrl(_parsedUrl);\n}\nexport function interpolateDynamicPath(pathname, params, defaultRouteRegex) {\n    if (!defaultRouteRegex) return pathname;\n    for (const param of Object.keys(defaultRouteRegex.groups)){\n        const { optional, repeat } = defaultRouteRegex.groups[param];\n        let builtParam = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            builtParam = `[${builtParam}]`;\n        }\n        let paramValue;\n        const value = params[param];\n        if (Array.isArray(value)) {\n            paramValue = value.map((v)=>v && encodeURIComponent(v)).join('/');\n        } else if (value) {\n            paramValue = encodeURIComponent(value);\n        } else {\n            paramValue = '';\n        }\n        if (paramValue || optional) {\n            pathname = pathname.replaceAll(builtParam, paramValue);\n        }\n    }\n    return pathname;\n}\nexport function normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional) {\n    let hasValidParams = true;\n    let params = {};\n    for (const key of Object.keys(defaultRouteRegex.groups)){\n        let value = query[key];\n        if (typeof value === 'string') {\n            value = normalizeRscURL(value);\n        } else if (Array.isArray(value)) {\n            value = value.map(normalizeRscURL);\n        }\n        // if the value matches the default value we can't rely\n        // on the parsed params, this is used to signal if we need\n        // to parse x-now-route-matches or not\n        const defaultValue = defaultRouteMatches[key];\n        const isOptional = defaultRouteRegex.groups[key].optional;\n        const isDefaultValue = Array.isArray(defaultValue) ? defaultValue.some((defaultVal)=>{\n            return Array.isArray(value) ? value.some((val)=>val.includes(defaultVal)) : value == null ? void 0 : value.includes(defaultVal);\n        }) : value == null ? void 0 : value.includes(defaultValue);\n        if (isDefaultValue || typeof value === 'undefined' && !(isOptional && ignoreMissingOptional)) {\n            return {\n                params: {},\n                hasValidParams: false\n            };\n        }\n        // non-provided optional values should be undefined so normalize\n        // them to undefined\n        if (isOptional && (!value || Array.isArray(value) && value.length === 1 && // fallback optional catch-all SSG pages have\n        // [[...paramName]] for the root path on Vercel\n        (value[0] === 'index' || value[0] === `[[...${key}]]`))) {\n            value = undefined;\n            delete query[key];\n        }\n        // query values from the proxy aren't already split into arrays\n        // so make sure to normalize catch-all values\n        if (value && typeof value === 'string' && defaultRouteRegex.groups[key].repeat) {\n            value = value.split('/');\n        }\n        if (value) {\n            params[key] = value;\n        }\n    }\n    return {\n        params,\n        hasValidParams\n    };\n}\nexport function getServerUtils({ page, i18n, basePath, rewrites, pageIsDynamic, trailingSlash, caseSensitive }) {\n    let defaultRouteRegex;\n    let dynamicRouteMatcher;\n    let defaultRouteMatches;\n    if (pageIsDynamic) {\n        defaultRouteRegex = getNamedRouteRegex(page, {\n            prefixRouteKeys: false\n        });\n        dynamicRouteMatcher = getRouteMatcher(defaultRouteRegex);\n        defaultRouteMatches = dynamicRouteMatcher(page);\n    }\n    function handleRewrites(req, parsedUrl) {\n        const rewriteParams = {};\n        let fsPathname = parsedUrl.pathname;\n        const matchesPage = ()=>{\n            const fsPathnameNoSlash = removeTrailingSlash(fsPathname || '');\n            return fsPathnameNoSlash === removeTrailingSlash(page) || (dynamicRouteMatcher == null ? void 0 : dynamicRouteMatcher(fsPathnameNoSlash));\n        };\n        const checkRewrite = (rewrite)=>{\n            const matcher = getPathMatch(rewrite.source + (trailingSlash ? '(/)?' : ''), {\n                removeUnnamedParams: true,\n                strict: true,\n                sensitive: !!caseSensitive\n            });\n            if (!parsedUrl.pathname) return false;\n            let params = matcher(parsedUrl.pathname);\n            if ((rewrite.has || rewrite.missing) && params) {\n                const hasParams = matchHas(req, parsedUrl.query, rewrite.has, rewrite.missing);\n                if (hasParams) {\n                    Object.assign(params, hasParams);\n                } else {\n                    params = false;\n                }\n            }\n            if (params) {\n                try {\n                    // An interception rewrite might reference a dynamic param for a route the user\n                    // is currently on, which wouldn't be extractable from the matched route params.\n                    // This attempts to extract the dynamic params from the provided router state.\n                    if (isInterceptionRouteRewrite(rewrite)) {\n                        const stateHeader = req.headers[NEXT_ROUTER_STATE_TREE_HEADER];\n                        if (stateHeader) {\n                            params = {\n                                ...getSelectedParams(parseAndValidateFlightRouterState(stateHeader)),\n                                ...params\n                            };\n                        }\n                    }\n                } catch (err) {\n                // this is a no-op -- we couldn't extract dynamic params from the provided router state,\n                // so we'll just use the params from the route matcher\n                }\n                const { parsedDestination, destQuery } = prepareDestination({\n                    appendParamsToQuery: true,\n                    destination: rewrite.destination,\n                    params: params,\n                    query: parsedUrl.query\n                });\n                // if the rewrite destination is external break rewrite chain\n                if (parsedDestination.protocol) {\n                    return true;\n                }\n                Object.assign(rewriteParams, destQuery, params);\n                Object.assign(parsedUrl.query, parsedDestination.query);\n                delete parsedDestination.query;\n                // for each property in parsedUrl.query, if the value is parametrized (eg :foo), look up the value\n                // in rewriteParams and replace the parametrized value with the actual value\n                // this is used when the rewrite destination does not contain the original source param\n                // and so the value is still parametrized and needs to be replaced with the actual rewrite param\n                Object.entries(parsedUrl.query).forEach(([key, value])=>{\n                    if (value && typeof value === 'string' && value.startsWith(':')) {\n                        const paramName = value.slice(1);\n                        const actualValue = rewriteParams[paramName];\n                        if (actualValue) {\n                            parsedUrl.query[key] = actualValue;\n                        }\n                    }\n                });\n                Object.assign(parsedUrl, parsedDestination);\n                fsPathname = parsedUrl.pathname;\n                if (!fsPathname) return false;\n                if (basePath) {\n                    fsPathname = fsPathname.replace(new RegExp(`^${basePath}`), '') || '/';\n                }\n                if (i18n) {\n                    const result = normalizeLocalePath(fsPathname, i18n.locales);\n                    fsPathname = result.pathname;\n                    parsedUrl.query.nextInternalLocale = result.detectedLocale || params.nextInternalLocale;\n                }\n                if (fsPathname === page) {\n                    return true;\n                }\n                if (pageIsDynamic && dynamicRouteMatcher) {\n                    const dynamicParams = dynamicRouteMatcher(fsPathname);\n                    if (dynamicParams) {\n                        parsedUrl.query = {\n                            ...parsedUrl.query,\n                            ...dynamicParams\n                        };\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        for (const rewrite of rewrites.beforeFiles || []){\n            checkRewrite(rewrite);\n        }\n        if (fsPathname !== page) {\n            let finished = false;\n            for (const rewrite of rewrites.afterFiles || []){\n                finished = checkRewrite(rewrite);\n                if (finished) break;\n            }\n            if (!finished && !matchesPage()) {\n                for (const rewrite of rewrites.fallback || []){\n                    finished = checkRewrite(rewrite);\n                    if (finished) break;\n                }\n            }\n        }\n        return rewriteParams;\n    }\n    function getParamsFromRouteMatches(routeMatchesHeader) {\n        // If we don't have a default route regex, we can't get params from route\n        // matches\n        if (!defaultRouteRegex) return null;\n        const { groups, routeKeys } = defaultRouteRegex;\n        const matcher = getRouteMatcher({\n            re: {\n                // Simulate a RegExp match from the \\`req.url\\` input\n                exec: (str)=>{\n                    // Normalize all the prefixed query params.\n                    const obj = Object.fromEntries(new URLSearchParams(str));\n                    for (const [key, value] of Object.entries(obj)){\n                        const normalizedKey = normalizeNextQueryParam(key);\n                        if (!normalizedKey) continue;\n                        obj[normalizedKey] = value;\n                        delete obj[key];\n                    }\n                    // Use all the named route keys.\n                    const result = {};\n                    for (const keyName of Object.keys(routeKeys)){\n                        const paramName = routeKeys[keyName];\n                        // If this param name is not a valid parameter name, then skip it.\n                        if (!paramName) continue;\n                        const group = groups[paramName];\n                        const value = obj[keyName];\n                        // When we're missing a required param, we can't match the route.\n                        if (!group.optional && !value) return null;\n                        result[group.pos] = value;\n                    }\n                    return result;\n                }\n            },\n            groups\n        });\n        const routeMatches = matcher(routeMatchesHeader);\n        if (!routeMatches) return null;\n        return routeMatches;\n    }\n    function normalizeQueryParams(query, routeParamKeys) {\n        // this is used to pass query information in rewrites\n        // but should not be exposed in final query\n        delete query['nextInternalLocale'];\n        for (const [key, value] of Object.entries(query)){\n            const normalizedKey = normalizeNextQueryParam(key);\n            if (!normalizedKey) continue;\n            // Remove the prefixed key from the query params because we want\n            // to consume it for the dynamic route matcher.\n            delete query[key];\n            routeParamKeys.add(normalizedKey);\n            if (typeof value === 'undefined') continue;\n            query[normalizedKey] = Array.isArray(value) ? value.map((v)=>decodeQueryPathParameter(v)) : decodeQueryPathParameter(value);\n        }\n    }\n    return {\n        handleRewrites,\n        defaultRouteRegex,\n        dynamicRouteMatcher,\n        defaultRouteMatches,\n        normalizeQueryParams,\n        getParamsFromRouteMatches,\n        /**\n     * Normalize dynamic route params.\n     *\n     * @param query - The query params to normalize.\n     * @param ignoreMissingOptional - Whether to ignore missing optional params.\n     * @returns The normalized params and whether they are valid.\n     */ normalizeDynamicRouteParams: (query, ignoreMissingOptional)=>{\n            if (!defaultRouteRegex || !defaultRouteMatches) {\n                return {\n                    params: {},\n                    hasValidParams: false\n                };\n            }\n            return normalizeDynamicRouteParams(query, defaultRouteRegex, defaultRouteMatches, ignoreMissingOptional);\n        },\n        normalizeCdnUrl: (req, paramKeys)=>normalizeCdnUrl(req, paramKeys),\n        interpolateDynamicPath: (pathname, params)=>interpolateDynamicPath(pathname, params, defaultRouteRegex),\n        filterInternalQuery: (query, paramKeys)=>filterInternalQuery(query, paramKeys)\n    };\n}\nexport function getPreviouslyRevalidatedTags(headers, previewModeId) {\n    return typeof headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER] === 'string' && headers[NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER] === previewModeId ? headers[NEXT_CACHE_REVALIDATED_TAGS_HEADER].split(',') : [];\n}\n\n//# sourceMappingURL=server-utils.js.map","'use client'\n\nimport React, { type JSX } from 'react'\nimport { useUntrackedPathname } from './navigation-untracked'\nimport { isNextRouterError } from './is-next-router-error'\nimport { handleHardNavError } from './nav-failure-handler'\nimport { HandleISRError } from './handle-isr-error'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\n\nconst isBotUserAgent =\n  typeof window !== 'undefined' && isBot(window.navigator.userAgent)\n\nexport type ErrorComponent = React.ComponentType<{\n  error: Error\n  // global-error, there's no `reset` function;\n  // regular error boundary, there's a `reset` function.\n  reset?: () => void\n}>\n\nexport interface ErrorBoundaryProps {\n  children?: React.ReactNode\n  errorComponent: ErrorComponent | undefined\n  errorStyles?: React.ReactNode | undefined\n  errorScripts?: React.ReactNode | undefined\n}\n\ninterface ErrorBoundaryHandlerProps extends ErrorBoundaryProps {\n  pathname: string | null\n  errorComponent: ErrorComponent\n}\n\ninterface ErrorBoundaryHandlerState {\n  error: Error | null\n  previousPathname: string | null\n}\n\nexport class ErrorBoundaryHandler extends React.Component<\n  ErrorBoundaryHandlerProps,\n  ErrorBoundaryHandlerState\n> {\n  constructor(props: ErrorBoundaryHandlerProps) {\n    super(props)\n    this.state = { error: null, previousPathname: this.props.pathname }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    if (isNextRouterError(error)) {\n      // Re-throw if an expected internal Next.js router error occurs\n      // this means it should be handled by a different boundary (such as a NotFound boundary in a parent segment)\n      throw error\n    }\n\n    return { error }\n  }\n\n  static getDerivedStateFromProps(\n    props: ErrorBoundaryHandlerProps,\n    state: ErrorBoundaryHandlerState\n  ): ErrorBoundaryHandlerState | null {\n    const { error } = state\n\n    // if we encounter an error while\n    // a navigation is pending we shouldn't render\n    // the error boundary and instead should fallback\n    // to a hard navigation to attempt recovering\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      if (error && handleHardNavError(error)) {\n        // clear error so we don't render anything\n        return {\n          error: null,\n          previousPathname: props.pathname,\n        }\n      }\n    }\n\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.error) {\n      return {\n        error: null,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      error: state.error,\n      previousPathname: props.pathname,\n    }\n  }\n\n  reset = () => {\n    this.setState({ error: null })\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    //When it's bot request, segment level error boundary will keep rendering the children,\n    // the final error will be caught by the root error boundary and determine wether need to apply graceful degrade.\n    if (this.state.error && !isBotUserAgent) {\n      return (\n        <>\n          <HandleISRError error={this.state.error} />\n          {this.props.errorStyles}\n          {this.props.errorScripts}\n          <this.props.errorComponent\n            error={this.state.error}\n            reset={this.reset}\n          />\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */\n\n/**\n * Renders error boundary with the provided \"errorComponent\" property as the fallback.\n * If no \"errorComponent\" property is provided it renders the children without an error boundary.\n */\nexport function ErrorBoundary({\n  errorComponent,\n  errorStyles,\n  errorScripts,\n  children,\n}: ErrorBoundaryProps & {\n  children: React.ReactNode\n}): JSX.Element {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these errors can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  if (errorComponent) {\n    return (\n      <ErrorBoundaryHandler\n        pathname={pathname}\n        errorComponent={errorComponent}\n        errorStyles={errorStyles}\n        errorScripts={errorScripts}\n      >\n        {children}\n      </ErrorBoundaryHandler>\n    )\n  }\n\n  return <>{children}</>\n}\n","/**\n * @license React\n * react-jsx-runtime.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxDEV = void 0;\nexports.jsxs = jsxProd;\n","import { createAsyncLocalStorage } from './async-local-storage';\nexport const workAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { workAsyncStorageInstance as workAsyncStorage };\n\n//# sourceMappingURL=work-async-storage.external.js.map","import { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { dynamicAccessAsyncStorage } from '../app-render/dynamic-access-async-storage.external';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E736\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E770\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForRoute should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E738\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForServerSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E743\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams) {\n    const workStore = workAsyncStorage.getStore();\n    if (!workStore) {\n        throw Object.defineProperty(new InvariantError('Missing workStore in createPrerenderParamsForClientSegment'), \"__NEXT_ERROR_CODE\", {\n            value: \"E773\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                const fallbackParams = workUnitStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(let key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`params`');\n                        }\n                    }\n                }\n                break;\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderParamsForClientSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E734\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'prerender-runtime':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createStaticPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingParams(underlyingParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nfunction createRuntimePrerenderParams(underlyingParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, process.env.__NEXT_CACHE_COMPONENTS ? makeUntrackedParams(underlyingParams) : makeUntrackedExoticParams(underlyingParams));\n}\nfunction createRenderParamsInProd(underlyingParams) {\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    }\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParamsInDev(underlyingParams, devFallbackParams, workStore) {\n    let hasFallbackParams = false;\n    if (devFallbackParams) {\n        for(let key in underlyingParams){\n            if (devFallbackParams.has(key)) {\n                hasFallbackParams = true;\n                break;\n            }\n        }\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n    }\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n}\nconst CachedParams = new WeakMap();\nconst fallbackParamsProxyHandler = {\n    get: function get(target, prop, receiver) {\n        if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n            const originalMethod = ReflectAdapter.get(target, prop, receiver);\n            return ({\n                [prop]: (...args)=>{\n                    const store = dynamicAccessAsyncStorage.getStore();\n                    if (store) {\n                        store.abortController.abort(Object.defineProperty(new Error(`Accessed fallback \\`params\\` during prerendering.`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E691\",\n                            enumerable: false,\n                            configurable: true\n                        }));\n                    }\n                    return new Proxy(originalMethod.apply(target, args), fallbackParamsProxyHandler);\n                }\n            })[prop];\n        }\n        return ReflectAdapter.get(target, prop, receiver);\n    }\n};\nfunction makeHangingParams(underlyingParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = new Proxy(makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`params`'), fallbackParamsProxyHandler);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\n// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just\n// logging the sync access without actually defining the params on the promise.\nfunction makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    warnForSyncAccess(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'request':\n                if (workUnitStore.prerenderPhase === true) {\n                    // When we're rendering dynamically in dev, we need to advance out of\n                    // the Prerender environment when we read Request data synchronously.\n                    trackSynchronousRequestDataAccessInDev(workUnitStore);\n                }\n                break;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const MetadataBoundary = registerClientReference(\nfunction() { throw new Error(\"Attempted to call MetadataBoundary() from the server but MetadataBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\",\n\"MetadataBoundary\",\n);export const ViewportBoundary = registerClientReference(\nfunction() { throw new Error(\"Attempted to call ViewportBoundary() from the server but ViewportBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\",\n\"ViewportBoundary\",\n);export const OutletBoundary = registerClientReference(\nfunction() { throw new Error(\"Attempted to call OutletBoundary() from the server but OutletBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\",\n\"OutletBoundary\",\n);export const RootLayoutBoundary = registerClientReference(\nfunction() { throw new Error(\"Attempted to call RootLayoutBoundary() from the server but RootLayoutBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\",\n\"RootLayoutBoundary\",\n);","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","/**\n * Create a \"Thenable\" that does not resolve. This is used to suspend indefinitely when data is not available yet.\n */\nexport const unresolvedThenable = {\n  then: () => {},\n} as PromiseLike<void>\n","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-dom.react-server.production.js');\n} else {\n  module.exports = require('./cjs/react-dom.react-server.development.js');\n}\n","export function createHrefFromUrl(\n  url: Pick<URL, 'pathname' | 'search' | 'hash'>,\n  includeHash: boolean = true\n): string {\n  return url.pathname + url.search + (includeHash ? url.hash : '')\n}\n","import { PageSignatureError } from '../error';\nconst responseSymbol = Symbol('response');\nconst passThroughSymbol = Symbol('passThrough');\nconst waitUntilSymbol = Symbol('waitUntil');\nclass FetchEvent {\n    constructor(_request, waitUntil){\n        this[passThroughSymbol] = false;\n        this[waitUntilSymbol] = waitUntil ? {\n            kind: 'external',\n            function: waitUntil\n        } : {\n            kind: 'internal',\n            promises: []\n        };\n    }\n    // TODO: is this dead code? NextFetchEvent never lets this get called\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    // TODO: is this dead code? passThroughSymbol is unused\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        if (this[waitUntilSymbol].kind === 'external') {\n            // if we received an external waitUntil, we delegate to it\n            // TODO(after): this will make us not go through `getServerError(error, 'edge-server')` in `sandbox`\n            const waitUntil = this[waitUntilSymbol].function;\n            return waitUntil(promise);\n        } else {\n            // if we didn't receive an external waitUntil, we make it work on our own\n            // (and expect the caller to do something with the promises)\n            this[waitUntilSymbol].promises.push(promise);\n        }\n    }\n}\nexport function getWaitUntilPromiseFromEvent(event) {\n    return event[waitUntilSymbol].kind === 'internal' ? Promise.all(event[waitUntilSymbol].promises).then(()=>{}) : undefined;\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        var _params_context;\n        super(params.request, (_params_context = params.context) == null ? void 0 : _params_context.waitUntil);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","import { stringifyCookie } from '../../web/spec-extension/cookies';\nimport { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { ReflectAdapter } from './adapters/reflect';\nimport { ResponseCookies } from './cookies';\nconst INTERNALS = Symbol('internal response');\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw Object.defineProperty(new Error('request.headers must be an instance of Headers'), \"__NEXT_ERROR_CODE\", {\n                value: \"E119\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set('x-middleware-request-' + key, value);\n            keys.push(key);\n        }\n        headers.set('x-middleware-override-headers', keys.join(','));\n    }\n}\n/**\n * This class extends the [Web `Response` API](https://developer.mozilla.org/docs/Web/API/Response) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextResponse`](https://nextjs.org/docs/app/api-reference/functions/next-response)\n */ export class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        const headers = this.headers;\n        const cookies = new ResponseCookies(headers);\n        const cookiesProxy = new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'delete':\n                    case 'set':\n                        {\n                            return (...args)=>{\n                                const result = Reflect.apply(target[prop], target, args);\n                                const newHeaders = new Headers(headers);\n                                if (result instanceof ResponseCookies) {\n                                    headers.set('x-middleware-set-cookie', result.getAll().map((cookie)=>stringifyCookie(cookie)).join(','));\n                                }\n                                handleMiddlewareField(init, newHeaders);\n                                return result;\n                            };\n                        }\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        this[INTERNALS] = {\n            cookies: cookiesProxy,\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeOutgoingHttpHeaders(headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === 'number' ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw Object.defineProperty(new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code'), \"__NEXT_ERROR_CODE\", {\n                value: \"E529\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        const initObj = typeof init === 'object' ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set('Location', validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-rewrite', validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set('x-middleware-next', '1');\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * The result of parsing a URL relative to a base URL.\n */\nexport type RelativeURL = {\n  /**\n   * The relative URL. Either a URL including the origin or a relative URL.\n   */\n  url: string\n\n  /**\n   * Whether the URL is relative to the base URL.\n   */\n  isRelative: boolean\n}\n\nexport function parseRelativeURL(\n  url: string | URL,\n  base: string | URL\n): RelativeURL {\n  const baseURL = typeof base === 'string' ? new URL(base) : base\n  const relative = new URL(url, base)\n\n  // The URL is relative if the origin is the same as the base URL.\n  const isRelative = relative.origin === baseURL.origin\n\n  return {\n    url: isRelative\n      ? relative.toString().slice(baseURL.origin.length)\n      : relative.toString(),\n    isRelative,\n  }\n}\n\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\nexport function getRelativeURL(url: string | URL, base: string | URL): string {\n  const relative = parseRelativeURL(url, base)\n  return relative.url\n}\n","/** Monitor when the consumer finishes reading the response body.\nthat's as close as we can get to `res.on('close')` using web APIs.\n*/ export function trackBodyConsumed(body, onEnd) {\n    if (typeof body === 'string') {\n        const generator = async function* generate() {\n            const encoder = new TextEncoder();\n            yield encoder.encode(body);\n            onEnd();\n        };\n        // @ts-expect-error BodyInit typings doesn't seem to include AsyncIterables even though it's supported in practice\n        return generator();\n    } else {\n        return trackStreamConsumed(body, onEnd);\n    }\n}\nexport function trackStreamConsumed(stream, onEnd) {\n    // NOTE: This function must handle `stream` being aborted or cancelled,\n    // so it can't just be this:\n    //\n    //   return stream.pipeThrough(new TransformStream({ flush() { onEnd() } }))\n    //\n    // because that doesn't handle cancellations.\n    // (and cancellation handling via `Transformer.cancel` is only available in node >20)\n    const dest = new TransformStream();\n    const runOnEnd = ()=>onEnd();\n    stream.pipeTo(dest.writable).then(runOnEnd, runOnEnd);\n    return dest.readable;\n}\nexport class CloseController {\n    onClose(callback) {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot subscribe to a closed CloseController'), \"__NEXT_ERROR_CODE\", {\n                value: \"E365\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.target.addEventListener('close', callback);\n        this.listeners++;\n    }\n    dispatchClose() {\n        if (this.isClosed) {\n            throw Object.defineProperty(new Error('Cannot close a CloseController multiple times'), \"__NEXT_ERROR_CODE\", {\n                value: \"E229\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (this.listeners > 0) {\n            this.target.dispatchEvent(new Event('close'));\n        }\n        this.isClosed = true;\n    }\n    constructor(){\n        this.target = new EventTarget();\n        this.listeners = 0;\n        this.isClosed = false;\n    }\n}\n\n//# sourceMappingURL=web-on-close.js.map","import { createAsyncLocalStorage } from '../app-render/async-local-storage';\nexport function getBuiltinRequestContext() {\n    const _globalThis = globalThis;\n    const ctx = _globalThis[NEXT_REQUEST_CONTEXT_SYMBOL];\n    return ctx == null ? void 0 : ctx.get();\n}\nconst NEXT_REQUEST_CONTEXT_SYMBOL = Symbol.for('@next/request-context');\n/** \"@next/request-context\" has a different signature from AsyncLocalStorage,\n * matching [AsyncContext.Variable](https://github.com/tc39/proposal-async-context).\n * We don't need a full AsyncContext adapter here, just having `.get()` is enough\n */ export function createLocalRequestContext() {\n    const storage = createAsyncLocalStorage();\n    return {\n        get: ()=>storage.getStore(),\n        run: (value, callback)=>storage.run(value, callback)\n    };\n}\n\n//# sourceMappingURL=builtin-request-context.js.map","import { PageSignatureError } from './error';\nimport { fromNodeOutgoingHttpHeaders, normalizeNextQueryParam } from './utils';\nimport { NextFetchEvent, getWaitUntilPromiseFromEvent } from './spec-extension/fetch-event';\nimport { NextRequest } from './spec-extension/request';\nimport { NextResponse } from './spec-extension/response';\nimport { parseRelativeURL, getRelativeURL } from '../../shared/lib/router/utils/relativize-url';\nimport { NextURL } from './next-url';\nimport { stripInternalSearchParams } from '../internal-utils';\nimport { normalizeRscURL } from '../../shared/lib/router/utils/app-paths';\nimport { FLIGHT_HEADERS, NEXT_REWRITTEN_PATH_HEADER, NEXT_REWRITTEN_QUERY_HEADER, NEXT_RSC_UNION_QUERY, RSC_HEADER } from '../../client/components/app-router-headers';\nimport { ensureInstrumentationRegistered } from './globals';\nimport { createRequestStoreForAPI } from '../async-storage/request-store';\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { createWorkStore } from '../async-storage/work-store';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { NEXT_ROUTER_PREFETCH_HEADER } from '../../client/components/app-router-headers';\nimport { getTracer } from '../lib/trace/tracer';\nimport { MiddlewareSpan } from '../lib/trace/constants';\nimport { CloseController } from './web-on-close';\nimport { getEdgePreviewProps } from './get-edge-preview-props';\nimport { getBuiltinRequestContext } from '../after/builtin-request-context';\nimport { getImplicitTags } from '../lib/implicit-tags';\nexport class NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    respondWith() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    waitUntil() {\n        throw Object.defineProperty(new PageSignatureError({\n            page: this.sourcePage\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === 'true') {\n            const { interceptTestApis, wrapRequestHandler } = // eslint-disable-next-line @next/internal/typechecked-require -- experimental/testmode is not built ins next/dist/esm\n            require('next/dist/experimental/testmode/server-edge');\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nexport async function adapter(params) {\n    var _getBuiltinRequestContext;\n    ensureTestApisIntercepted();\n    await ensureInstrumentationRegistered();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof globalThis.__BUILD_MANIFEST !== 'undefined';\n    params.request.url = normalizeRscURL(params.request.url);\n    const requestURL = params.bypassNextUrl ? new URL(params.request.url) : new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestURL.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestURL.searchParams.getAll(key);\n        const normalizedKey = normalizeNextQueryParam(key);\n        if (normalizedKey) {\n            requestURL.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestURL.searchParams.append(normalizedKey, val);\n            }\n            requestURL.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    let buildId = process.env.__NEXT_BUILD_ID || '';\n    if ('buildId' in requestURL) {\n        buildId = requestURL.buildId || '';\n        requestURL.buildId = '';\n    }\n    const requestHeaders = fromNodeOutgoingHttpHeaders(params.request.headers);\n    const isNextDataRequest = requestHeaders.has('x-nextjs-data');\n    const isRSCRequest = requestHeaders.get(RSC_HEADER) === '1';\n    if (isNextDataRequest && requestURL.pathname === '/index') {\n        requestURL.pathname = '/';\n    }\n    const flightHeaders = new Map();\n    // Headers should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const header of FLIGHT_HEADERS){\n            const value = requestHeaders.get(header);\n            if (value !== null) {\n                flightHeaders.set(header, value);\n                requestHeaders.delete(header);\n            }\n        }\n    }\n    const normalizeURL = process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? new URL(params.request.url) : requestURL;\n    const rscHash = normalizeURL.searchParams.get(NEXT_RSC_UNION_QUERY);\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: stripInternalSearchParams(normalizeURL).toString(),\n        init: {\n            body: params.request.body,\n            headers: requestHeaders,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isNextDataRequest) {\n        Object.defineProperty(request, '__isData', {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (// If we are inside of the next start sandbox\n    // leverage the shared instance if not we need\n    // to create a fresh cache instance each time\n    !globalThis.__incrementalCacheShared && params.IncrementalCache) {\n        ;\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            CurCacheHandler: params.incrementalCacheHandler,\n            minimalMode: process.env.NODE_ENV !== 'development',\n            fetchCacheKeyPrefix: process.env.__NEXT_FETCH_CACHE_KEY_PREFIX,\n            dev: process.env.NODE_ENV === 'development',\n            requestHeaders: params.request.headers,\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: getEdgePreviewProps()\n                };\n            }\n        });\n    }\n    // if we're in an edge runtime sandbox, we should use the waitUntil\n    // that we receive from the enclosing NextServer\n    const outerWaitUntil = params.request.waitUntil ?? ((_getBuiltinRequestContext = getBuiltinRequestContext()) == null ? void 0 : _getBuiltinRequestContext.waitUntil);\n    const event = new NextFetchEvent({\n        request,\n        page: params.page,\n        context: outerWaitUntil ? {\n            waitUntil: outerWaitUntil\n        } : undefined\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === '/middleware' || params.page === '/src/middleware';\n        if (isMiddleware) {\n            // if we're in an edge function, we only get a subset of `nextConfig` (no `experimental`),\n            // so we have to inject it via DefinePlugin.\n            // in `next start` this will be passed normally (see `NextNodeServer.runMiddleware`).\n            const waitUntil = event.waitUntil.bind(event);\n            const closeController = new CloseController();\n            return getTracer().trace(MiddlewareSpan.execute, {\n                spanName: `middleware ${request.method} ${request.nextUrl.pathname}`,\n                attributes: {\n                    'http.target': request.nextUrl.pathname,\n                    'http.method': request.method\n                }\n            }, async ()=>{\n                try {\n                    var _params_request_nextConfig_experimental, _params_request_nextConfig, _params_request_nextConfig_experimental1, _params_request_nextConfig1;\n                    const onUpdateCookies = (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    };\n                    const previewProps = getEdgePreviewProps();\n                    const page = '/' // Fake Work\n                    ;\n                    const fallbackRouteParams = null;\n                    const implicitTags = await getImplicitTags(page, request.nextUrl, fallbackRouteParams);\n                    const requestStore = createRequestStoreForAPI(request, request.nextUrl, implicitTags, onUpdateCookies, previewProps);\n                    const workStore = createWorkStore({\n                        page,\n                        renderOpts: {\n                            cacheLifeProfiles: (_params_request_nextConfig = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental = _params_request_nextConfig.experimental) == null ? void 0 : _params_request_nextConfig_experimental.cacheLife,\n                            experimental: {\n                                isRoutePPREnabled: false,\n                                cacheComponents: false,\n                                authInterrupts: !!((_params_request_nextConfig1 = params.request.nextConfig) == null ? void 0 : (_params_request_nextConfig_experimental1 = _params_request_nextConfig1.experimental) == null ? void 0 : _params_request_nextConfig_experimental1.authInterrupts)\n                            },\n                            supportsDynamicResponse: true,\n                            waitUntil,\n                            onClose: closeController.onClose.bind(closeController),\n                            onAfterTaskError: undefined\n                        },\n                        isPrefetchRequest: request.headers.get(NEXT_ROUTER_PREFETCH_HEADER) === '1',\n                        buildId: buildId ?? '',\n                        previouslyRevalidatedTags: []\n                    });\n                    return await workAsyncStorage.run(workStore, ()=>workUnitAsyncStorage.run(requestStore, params.handler, request, event));\n                } finally{\n                    // middleware cannot stream, so we can consider the response closed\n                    // as soon as the handler returns.\n                    // we can delay running it until a bit later --\n                    // if it's needed, we'll have a `waitUntil` lock anyway.\n                    setTimeout(()=>{\n                        closeController.dispatchClose();\n                    }, 0);\n                }\n            });\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw Object.defineProperty(new TypeError('Expected an instance of Response to be returned'), \"__NEXT_ERROR_CODE\", {\n            value: \"E567\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set('set-cookie', cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get('x-middleware-rewrite');\n    if (response && rewrite && (isRSCRequest || !isEdgeRendering)) {\n        const destination = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE && !isEdgeRendering) {\n            if (destination.host === request.nextUrl.host) {\n                destination.buildId = buildId || destination.buildId;\n                response.headers.set('x-middleware-rewrite', String(destination));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const { url: relativeDestination, isRelative } = parseRelativeURL(destination.toString(), requestURL.toString());\n        if (!isEdgeRendering && isNextDataRequest && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativeDestination.match(/http(s)?:\\/\\//))) {\n            response.headers.set('x-nextjs-rewrite', relativeDestination);\n        }\n        // If this is an RSC request, and the pathname or search has changed, and\n        // this isn't an external rewrite, we need to set the rewritten pathname and\n        // query headers.\n        if (isRSCRequest && isRelative) {\n            if (requestURL.pathname !== destination.pathname) {\n                response.headers.set(NEXT_REWRITTEN_PATH_HEADER, destination.pathname);\n            }\n            if (requestURL.search !== destination.search) {\n                response.headers.set(NEXT_REWRITTEN_QUERY_HEADER, // remove the leading ? from the search string\n                destination.search.slice(1));\n            }\n        }\n    }\n    /**\n   * Always forward the `_rsc` search parameter to the rewritten URL for RSC requests,\n   * unless it's already present. This is necessary to ensure that RSC hash validation\n   * works correctly after a rewrite. For internal rewrites, the server can validate the\n   * RSC hash using the original URL, so forwarding the `_rsc` parameter is less critical.\n   * However, for external rewrites (where the request is proxied to another Next.js server),\n   * the external server does not have access to the original URL or its search parameters.\n   * In these cases, forwarding the `_rsc` parameter is essential so that the external server\n   * can perform the correct RSC hash validation.\n   */ if (response && rewrite && isRSCRequest && rscHash) {\n        const rewriteURL = new URL(rewrite);\n        if (!rewriteURL.searchParams.has(NEXT_RSC_UNION_QUERY)) {\n            rewriteURL.searchParams.set(NEXT_RSC_UNION_QUERY, rscHash);\n            response.headers.set('x-middleware-rewrite', rewriteURL.toString());\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get('Location');\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === requestURL.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set('Location', redirectURL.toString());\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isNextDataRequest) {\n            response.headers.delete('Location');\n            response.headers.set('x-nextjs-redirect', getRelativeURL(redirectURL.toString(), requestURL.toString()));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get('x-middleware-override-headers');\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set('x-middleware-override-headers', middlewareOverrideHeaders + ',' + overwrittenHeaders.join(','));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: getWaitUntilPromiseFromEvent(event) ?? Promise.resolve(),\n        fetchMetrics: request.fetchMetrics\n    };\n}\n\n//# sourceMappingURL=adapter.js.map","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","export function getRevalidateReason(params) {\n    if (params.isOnDemandRevalidate) {\n        return 'on-demand';\n    }\n    if (params.isRevalidate) {\n        return 'stale';\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=utils.js.map","/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan = /*#__PURE__*/ function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n    return BaseServerSpan;\n}(BaseServerSpan || {});\nvar LoadComponentsSpan = /*#__PURE__*/ function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n    return LoadComponentsSpan;\n}(LoadComponentsSpan || {});\nvar NextServerSpan = /*#__PURE__*/ function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n    return NextServerSpan;\n}(NextServerSpan || {});\nvar NextNodeServerSpan = /*#__PURE__*/ function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"createComponentTree\"] = \"NextNodeServer.createComponentTree\";\n    NextNodeServerSpan[\"clientComponentLoading\"] = \"NextNodeServer.clientComponentLoading\";\n    NextNodeServerSpan[\"getLayoutOrPageModule\"] = \"NextNodeServer.getLayoutOrPageModule\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"startResponse\"] = \"NextNodeServer.startResponse\";\n    // nested inner span, does not require parent scope name\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n    return NextNodeServerSpan;\n}(NextNodeServerSpan || {});\nvar StartServerSpan = /*#__PURE__*/ function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n    return StartServerSpan;\n}(StartServerSpan || {});\nvar RenderSpan = /*#__PURE__*/ function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n    return RenderSpan;\n}(RenderSpan || {});\nvar AppRenderSpan = /*#__PURE__*/ function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n    return AppRenderSpan;\n}(AppRenderSpan || {});\nvar RouterSpan = /*#__PURE__*/ function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n    return RouterSpan;\n}(RouterSpan || {});\nvar NodeSpan = /*#__PURE__*/ function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n    return NodeSpan;\n}(NodeSpan || {});\nvar AppRouteRouteHandlersSpan = /*#__PURE__*/ function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n    return AppRouteRouteHandlersSpan;\n}(AppRouteRouteHandlersSpan || {});\nvar ResolveMetadataSpan = /*#__PURE__*/ function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n    return ResolveMetadataSpan;\n}(ResolveMetadataSpan || {});\nvar MiddlewareSpan = /*#__PURE__*/ function(MiddlewareSpan) {\n    MiddlewareSpan[\"execute\"] = \"Middleware.execute\";\n    return MiddlewareSpan;\n}(MiddlewareSpan || {});\n// This list is used to filter out spans that are not relevant to the user\nexport const NextVanillaSpanAllowlist = [\n    \"Middleware.execute\",\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.getLayoutOrPageModule\",\n    \"NextNodeServer.startResponse\",\n    \"NextNodeServer.clientComponentLoading\"\n];\n// These Spans are allowed to be always logged\n// when the otel log prefix env is set\nexport const LogSpanAllowList = [\n    \"NextNodeServer.findPageComponents\",\n    \"NextNodeServer.createComponentTree\",\n    \"NextNodeServer.clientComponentLoading\"\n];\nexport { BaseServerSpan, LoadComponentsSpan, NextServerSpan, NextNodeServerSpan, StartServerSpan, RenderSpan, RouterSpan, AppRenderSpan, NodeSpan, AppRouteRouteHandlersSpan, ResolveMetadataSpan, MiddlewareSpan,  };\n\n//# sourceMappingURL=constants.js.map","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","import { LogSpanAllowList, NextVanillaSpanAllowlist } from './constants';\nimport { isThenable } from '../../../shared/lib/is-thenable';\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (process.env.NEXT_RUNTIME === 'edge') {\n    api = require('@opentelemetry/api');\n} else {\n    try {\n        api = require('@opentelemetry/api');\n    } catch (err) {\n        api = require('next/dist/compiled/@opentelemetry/api');\n    }\n}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nexport class BubbledError extends Error {\n    constructor(bubble, result){\n        super(), this.bubble = bubble, this.result = result;\n    }\n}\nexport function isBubbledError(error) {\n    if (typeof error !== 'object' || error === null) return false;\n    return error instanceof BubbledError;\n}\nconst closeSpanWithError = (span, error)=>{\n    if (isBubbledError(error) && error.bubble) {\n        span.setAttribute('next.bubble', true);\n    } else {\n        if (error) {\n            span.recordException(error);\n            span.setAttribute('error.type', error.name);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey('next.rootSpanId');\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nconst clientTraceDataSetter = {\n    set (carrier, key, value) {\n        carrier.push({\n            key,\n            value\n        });\n    }\n};\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer('next.js', '0.0.1');\n    }\n    getContext() {\n        return context;\n    }\n    getTracePropagationData() {\n        const activeContext = context.active();\n        const entries = [];\n        propagation.inject(activeContext, entries, clientTraceDataSetter);\n        return entries;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === 'function' ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        const spanName = options.spanName ?? type;\n        if (!NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== '1' || options.hideSpan) {\n            return fn();\n        }\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = (context == null ? void 0 : context.active()) ?? ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            'next.span_name': spanName,\n            'next.span_type': type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const startTime = 'performance' in globalThis && 'measure' in performance ? globalThis.performance.now() : undefined;\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                    if (startTime && process.env.NEXT_OTEL_PERFORMANCE_PREFIX && LogSpanAllowList.includes(type || '')) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-${(type.split('.').pop() || '').replace(/[A-Z]/g, (match)=>'-' + match.toLowerCase())}`, {\n                            start: startTime,\n                            end: performance.now()\n                        });\n                    }\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isThenable(result)) {\n                        // If there's error make sure it throws\n                        return result.then((res)=>{\n                            span.end();\n                            // Need to pass down the promise result,\n                            // it could be react stream response with error { error, stream }\n                            return res;\n                        }).catch((err)=>{\n                            closeSpanWithError(span, err);\n                            throw err;\n                        }).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== '1') {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === 'function' && typeof fn === 'function') {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === 'function') {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n    setRootSpanAttribute(key, value) {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        const attributes = rootSpanAttributesStore.get(spanId);\n        if (attributes) {\n            attributes.set(key, value);\n        }\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\nexport { getTracer, SpanStatusCode, SpanKind };\n\n//# sourceMappingURL=tracer.js.map","/* eslint-disable no-redeclare */ // FIXME: (wyattjoh) this is a temporary solution to allow us to pass data between bundled modules\nexport const NEXT_REQUEST_META = Symbol.for('NextInternalRequestMeta');\nexport function getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === 'string' ? meta[key] : meta;\n}\n/**\n * Sets the request metadata.\n *\n * @param req the request to set the metadata on\n * @param meta the metadata to set\n * @returns the mutated request metadata\n */ export function setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return meta;\n}\n/**\n * Adds a value to the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to set\n * @param value the value to set\n * @returns the mutated request metadata\n */ export function addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\n/**\n * Removes a key from the request metadata.\n *\n * @param request the request to mutate\n * @param key the key to remove\n * @returns the mutated request metadata\n */ export function removeRequestMeta(request, key) {\n    const meta = getRequestMeta(request);\n    delete meta[key];\n    return setRequestMeta(request, meta);\n}\n\n//# sourceMappingURL=request-meta.js.map","/**\n * Interop between \"export default\" and \"module.exports\".\n */ export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\n/**\n * Removes the flight headers from the request.\n *\n * @param req the request to strip the headers from\n */ export function stripFlightHeaders(headers) {\n    for (const header of FLIGHT_HEADERS){\n        delete headers[header];\n    }\n}\n\n//# sourceMappingURL=strip-flight-headers.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","export const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain';\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8';\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8';\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'next/dist/build/webpack/loaders/next-flight-loader/module-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS = 'private-next-rsc-track-dynamic-import';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { SYMBOL_CLEARED_COOKIES } from '../api-utils';\nimport { NEXT_REQUEST_META } from '../request-meta';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nlet prop;\nexport class NodeNextRequest extends BaseNextRequest {\n    static #_ = prop = _NEXT_REQUEST_META = NEXT_REQUEST_META;\n    constructor(_req){\n        var _this__req;\n        super(_req.method.toUpperCase(), _req.url, _req), this._req = _req, this.headers = this._req.headers, this.fetchMetrics = (_this__req = this._req) == null ? void 0 : _this__req.fetchMetrics, this[_NEXT_REQUEST_META] = this._req[NEXT_REQUEST_META] || {}, this.streaming = false;\n    }\n    get originalRequest() {\n        // Need to mimic these changes to the original req object for places where we use it:\n        // render.tsx, api/ssg requests\n        this._req[NEXT_REQUEST_META] = this[NEXT_REQUEST_META];\n        this._req.url = this.url;\n        this._req.cookies = this.cookies;\n        return this._req;\n    }\n    set originalRequest(value) {\n        this._req = value;\n    }\n    /**\n   * Returns the request body as a Web Readable Stream. The body here can only\n   * be read once as the body will start flowing as soon as the data handler\n   * is attached.\n   *\n   * @internal\n   */ stream() {\n        if (this.streaming) {\n            throw Object.defineProperty(new Error('Invariant: NodeNextRequest.stream() can only be called once'), \"__NEXT_ERROR_CODE\", {\n                value: \"E467\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this.streaming = true;\n        return new ReadableStream({\n            start: (controller)=>{\n                this._req.on('data', (chunk)=>{\n                    controller.enqueue(new Uint8Array(chunk));\n                });\n                this._req.on('end', ()=>{\n                    controller.close();\n                });\n                this._req.on('error', (err)=>{\n                    controller.error(err);\n                });\n            }\n        });\n    }\n}\nexport class NodeNextResponse extends BaseNextResponse {\n    get originalResponse() {\n        if (SYMBOL_CLEARED_COOKIES in this) {\n            this._res[SYMBOL_CLEARED_COOKIES] = this[SYMBOL_CLEARED_COOKIES];\n        }\n        return this._res;\n    }\n    constructor(_res){\n        super(_res), this._res = _res, this.textBody = undefined;\n    }\n    get sent() {\n        return this._res.finished || this._res.headersSent;\n    }\n    get statusCode() {\n        return this._res.statusCode;\n    }\n    set statusCode(value) {\n        this._res.statusCode = value;\n    }\n    get statusMessage() {\n        return this._res.statusMessage;\n    }\n    set statusMessage(value) {\n        this._res.statusMessage = value;\n    }\n    setHeader(name, value) {\n        this._res.setHeader(name, value);\n        return this;\n    }\n    removeHeader(name) {\n        this._res.removeHeader(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        const values = this._res.getHeader(name);\n        if (values === undefined) return undefined;\n        return (Array.isArray(values) ? values : [\n            values\n        ]).map((value)=>value.toString());\n    }\n    hasHeader(name) {\n        return this._res.hasHeader(name);\n    }\n    getHeader(name) {\n        const values = this.getHeaderValues(name);\n        return Array.isArray(values) ? values.join(',') : undefined;\n    }\n    getHeaders() {\n        return this._res.getHeaders();\n    }\n    appendHeader(name, value) {\n        const currentValues = this.getHeaderValues(name) ?? [];\n        if (!currentValues.includes(value)) {\n            this._res.setHeader(name, [\n                ...currentValues,\n                value\n            ]);\n        }\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this._res.end(this.textBody);\n    }\n    onClose(callback) {\n        this.originalResponse.on('close', callback);\n    }\n}\nvar _NEXT_REQUEST_META;\n\n//# sourceMappingURL=node.js.map","/**\n * If set to `incremental`, only those leaf pages that export\n * `experimental_ppr = true` will have partial prerendering enabled. If any\n * page exports this value as `false` or does not export it at all will not\n * have partial prerendering enabled. If set to a boolean, the options for\n * `experimental_ppr` will be ignored.\n */ /**\n * Returns true if partial prerendering is enabled for the application. It does\n * not tell you if a given route has PPR enabled, as that requires analysis of\n * the route's configuration.\n *\n * @see {@link checkIsRoutePPREnabled} - for checking if a specific route has PPR enabled.\n */ export function checkIsAppPPREnabled(config) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental') return true;\n    return false;\n}\n/**\n * Returns true if partial prerendering is supported for the current page with\n * the provided app configuration. If the application doesn't have partial\n * prerendering enabled, this function will always return false. If you want to\n * check if the application has partial prerendering enabled\n *\n * @see {@link checkIsAppPPREnabled} for checking if the application has PPR enabled.\n */ export function checkIsRoutePPREnabled(config, appConfig) {\n    // If the config is undefined, partial prerendering is disabled.\n    if (typeof config === 'undefined') return false;\n    // If the config is a boolean, use it directly.\n    if (typeof config === 'boolean') return config;\n    // If the config is a string, it must be 'incremental' to enable partial\n    // prerendering.\n    if (config === 'incremental' && appConfig.experimental_ppr === true) {\n        return true;\n    }\n    return false;\n}\n\n//# sourceMappingURL=ppr.js.map","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */ /**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */ const PARAM_SEPARATOR = '_NEXTSEP_';\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */ export function hasAdjacentParameterIssues(route) {\n    if (typeof route !== 'string') return false;\n    // Check for interception route markers followed immediately by parameters\n    // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n    // These patterns cause \"Must have text between two parameters\" errors\n    if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n        return true;\n    }\n    // Check for basic adjacent parameters without separators\n    // Pattern: :param1:param2 (but not :param* or other URL patterns)\n    if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */ export function normalizeAdjacentParameters(route) {\n    let normalized = route;\n    // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n    normalized = normalized.replace(/(\\([^)]*\\)):([^/\\s]+)/g, `$1${PARAM_SEPARATOR}:$2`);\n    // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n    normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`);\n    return normalized;\n}\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */ export function normalizeTokensForRegexp(tokens) {\n    return tokens.map((token)=>{\n        // Token union type: Token = string | TokenObject\n        // Literal path segments are strings, parameters/wildcards are objects\n        if (typeof token === 'object' && token !== null && // Not all token objects have 'modifier' property (e.g., simple text tokens)\n        'modifier' in token && // Only repeating modifiers (* or +) cause the validation error\n        // Other modifiers like '?' (optional) are fine\n        (token.modifier === '*' || token.modifier === '+') && // Token objects can have different shapes depending on route pattern\n        'prefix' in token && 'suffix' in token && // Both prefix and suffix must be empty strings\n        // This is what causes the validation error in path-to-regexp\n        token.prefix === '' && token.suffix === '') {\n            // Add minimal prefix to satisfy path-to-regexp validation\n            // We use '/' as it's the most common path delimiter and won't break route matching\n            // The prefix gets used in regex generation but doesn't affect parameter extraction\n            return {\n                ...token,\n                prefix: '/'\n            };\n        }\n        return token;\n    });\n}\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */ export function stripParameterSeparators(params) {\n    const cleaned = {};\n    for (const [key, value] of Object.entries(params)){\n        if (typeof value === 'string') {\n            // Remove the separator if it appears at the start of parameter values\n            cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '');\n        } else if (Array.isArray(value)) {\n            // Handle array parameters (from repeated route segments)\n            cleaned[key] = value.map((item)=>typeof item === 'string' ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '') : item);\n        } else {\n            cleaned[key] = value;\n        }\n    }\n    return cleaned;\n}\n\n//# sourceMappingURL=route-pattern-normalizer.js.map","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return compile(routeToUse, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return compile(normalizedRoute, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { DynamicParamTypesShort } from '../../../../server/app-render/types'\nimport type { FallbackRouteParams } from '../../../../server/request/fallback-params'\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  params: { [key: string]: any },\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  pagePath: string,\n  fallbackRouteParams: FallbackRouteParams | null\n): DynamicParam {\n  let value = params[segmentKey]\n\n  if (fallbackRouteParams && fallbackRouteParams.has(segmentKey)) {\n    value = fallbackRouteParams.get(segmentKey)\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  if (!value) {\n    const isCatchall = dynamicParamType === 'c'\n    const isOptionalCatchall = dynamicParamType === 'oc'\n\n    if (isCatchall || isOptionalCatchall) {\n      // handle the case where an optional catchall does not have a value,\n      // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n      if (isOptionalCatchall) {\n        return {\n          param: segmentKey,\n          value: null,\n          type: dynamicParamType,\n          treeSegment: [segmentKey, '', dynamicParamType],\n        }\n      }\n\n      // handle the case where a catchall or optional catchall does not have a value,\n      // e.g. `/foo/bar/hello` and `@slot/[...catchall]` or `@slot/[[...catchall]]` is matched\n      value = pagePath\n        .split('/')\n        // remove the first empty string\n        .slice(1)\n        // replace any dynamic params with the actual values\n        .flatMap((pathSegment) => {\n          const param = parseParameter(pathSegment)\n          // if the segment matches a param, return the param value\n          // otherwise, it's a static segment, so just return that\n          return params[param.key] ?? param.key\n        })\n\n      return {\n        param: segmentKey,\n        value,\n        type: dynamicParamType,\n        // This value always has to be a string.\n        treeSegment: [segmentKey, value.join('/'), dynamicParamType],\n      }\n    }\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value: value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher';\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex';\nfunction getParamKeys(page) {\n    const pattern = getRouteRegex(page);\n    const matcher = getRouteMatcher(pattern);\n    // Get the default list of allowed params.\n    return Object.keys(matcher(page));\n}\nexport function getFallbackRouteParams(pageOrKeys) {\n    let keys;\n    if (typeof pageOrKeys === 'string') {\n        keys = getParamKeys(pageOrKeys);\n    } else {\n        keys = pageOrKeys;\n    }\n    // If there are no keys, we can return early.\n    if (keys.length === 0) return null;\n    const params = new Map();\n    // As we're creating unique keys for each of the dynamic route params, we only\n    // need to generate a unique ID once per request because each of the keys will\n    // be also be unique.\n    const uniqueID = Math.random().toString(16).slice(2);\n    for (const key of keys){\n        params.set(key, `%%drp:${key}:${uniqueID}%%`);\n    }\n    return params;\n}\n\n//# sourceMappingURL=fallback-params.js.map","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import type { ActionManifest } from '../../build/webpack/plugins/flight-client-entry-plugin'\nimport type {\n  ClientReferenceManifest,\n  ClientReferenceManifestForRsc,\n} from '../../build/webpack/plugins/flight-manifest-plugin'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { workAsyncStorage } from './work-async-storage.external'\n\nlet __next_loaded_action_key: CryptoKey\n\nexport function arrayBufferToString(\n  buffer: ArrayBuffer | Uint8Array<ArrayBufferLike>\n) {\n  const bytes = new Uint8Array(buffer)\n  const len = bytes.byteLength\n\n  // @anonrig: V8 has a limit of 65535 arguments in a function.\n  // For len < 65535, this is faster.\n  // https://github.com/vercel/next.js/pull/56377#pullrequestreview-1656181623\n  if (len < 65535) {\n    return String.fromCharCode.apply(null, bytes as unknown as number[])\n  }\n\n  let binary = ''\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return binary\n}\n\nexport function stringToUint8Array(binary: string) {\n  const len = binary.length\n  const arr = new Uint8Array(len)\n\n  for (let i = 0; i < len; i++) {\n    arr[i] = binary.charCodeAt(i)\n  }\n\n  return arr\n}\n\nexport function encrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\nexport function decrypt(key: CryptoKey, iv: Uint8Array, data: Uint8Array) {\n  return crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data\n  )\n}\n\n// This is a global singleton that is used to encode/decode the action bound args from\n// the closure. This can't be using a AsyncLocalStorage as it might happen on the module\n// level. Since the client reference manifest won't be mutated, let's use a global singleton\n// to keep it.\nconst SERVER_ACTION_MANIFESTS_SINGLETON = Symbol.for(\n  'next.server.action-manifests'\n)\n\nexport function setReferenceManifestsSingleton({\n  page,\n  clientReferenceManifest,\n  serverActionsManifest,\n  serverModuleMap,\n}: {\n  page: string\n  clientReferenceManifest: DeepReadonly<ClientReferenceManifest>\n  serverActionsManifest: DeepReadonly<ActionManifest>\n  serverModuleMap: {\n    [id: string]: {\n      id: string\n      chunks: string[]\n      name: string\n    }\n  }\n}) {\n  // @ts-expect-error\n  const clientReferenceManifestsPerPage = globalThis[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ]?.clientReferenceManifestsPerPage as\n    | undefined\n    | DeepReadonly<Record<string, ClientReferenceManifest>>\n\n  // @ts-expect-error\n  globalThis[SERVER_ACTION_MANIFESTS_SINGLETON] = {\n    clientReferenceManifestsPerPage: {\n      ...clientReferenceManifestsPerPage,\n      [normalizeAppPath(page)]: clientReferenceManifest,\n    },\n    serverActionsManifest,\n    serverModuleMap,\n  }\n}\n\nexport function getServerModuleMap() {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverModuleMap: {\n      [id: string]: {\n        id: string\n        chunks: string[]\n        name: string\n      }\n    }\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  return serverActionsManifestSingleton.serverModuleMap\n}\n\nexport function getClientReferenceManifestForRsc(): DeepReadonly<ClientReferenceManifestForRsc> {\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    clientReferenceManifestsPerPage: DeepReadonly<\n      Record<string, ClientReferenceManifest>\n    >\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const { clientReferenceManifestsPerPage } = serverActionsManifestSingleton\n  const workStore = workAsyncStorage.getStore()\n\n  if (!workStore) {\n    // If there's no work store defined, we can assume that a client reference\n    // manifest is needed during module evaluation, e.g. to create a server\n    // action using a higher-order function. This might also use client\n    // components which need to be serialized by Flight, and therefore client\n    // references need to be resolvable. To make this work, we're returning a\n    // merged manifest across all pages. This is fine as long as the module IDs\n    // are not page specific, which they are not for Webpack. TODO: Fix this in\n    // Turbopack.\n    return mergeClientReferenceManifests(clientReferenceManifestsPerPage)\n  }\n\n  const clientReferenceManifest =\n    clientReferenceManifestsPerPage[workStore.route]\n\n  if (!clientReferenceManifest) {\n    throw new InvariantError(\n      `Missing Client Reference Manifest for ${workStore.route}.`\n    )\n  }\n\n  return clientReferenceManifest\n}\n\nexport async function getActionEncryptionKey() {\n  if (__next_loaded_action_key) {\n    return __next_loaded_action_key\n  }\n\n  const serverActionsManifestSingleton = (globalThis as any)[\n    SERVER_ACTION_MANIFESTS_SINGLETON\n  ] as {\n    serverActionsManifest: DeepReadonly<ActionManifest>\n  }\n\n  if (!serverActionsManifestSingleton) {\n    throw new InvariantError('Missing manifest for Server Actions.')\n  }\n\n  const rawKey =\n    process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY ||\n    serverActionsManifestSingleton.serverActionsManifest.encryptionKey\n\n  if (rawKey === undefined) {\n    throw new InvariantError('Missing encryption key for Server Actions')\n  }\n\n  __next_loaded_action_key = await crypto.subtle.importKey(\n    'raw',\n    stringToUint8Array(atob(rawKey)),\n    'AES-GCM',\n    true,\n    ['encrypt', 'decrypt']\n  )\n\n  return __next_loaded_action_key\n}\n\nfunction mergeClientReferenceManifests(\n  clientReferenceManifestsPerPage: DeepReadonly<\n    Record<string, ClientReferenceManifest>\n  >\n): ClientReferenceManifestForRsc {\n  const clientReferenceManifests = Object.values(\n    clientReferenceManifestsPerPage as Record<string, ClientReferenceManifest>\n  )\n\n  const mergedClientReferenceManifest: ClientReferenceManifestForRsc = {\n    clientModules: {},\n    edgeRscModuleMapping: {},\n    rscModuleMapping: {},\n  }\n\n  for (const clientReferenceManifest of clientReferenceManifests) {\n    mergedClientReferenceManifest.clientModules = {\n      ...mergedClientReferenceManifest.clientModules,\n      ...clientReferenceManifest.clientModules,\n    }\n    mergedClientReferenceManifest.edgeRscModuleMapping = {\n      ...mergedClientReferenceManifest.edgeRscModuleMapping,\n      ...clientReferenceManifest.edgeRscModuleMapping,\n    }\n    mergedClientReferenceManifest.rscModuleMapping = {\n      ...mergedClientReferenceManifest.rscModuleMapping,\n      ...clientReferenceManifest.rscModuleMapping,\n    }\n  }\n\n  return mergedClientReferenceManifest\n}\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","import { getBotType, HTML_LIMITED_BOT_UA_RE_STRING } from '../../shared/lib/router/utils/is-bot';\nexport function shouldServeStreamingMetadata(userAgent, htmlLimitedBots) {\n    const blockingMetadataUARegex = new RegExp(htmlLimitedBots || HTML_LIMITED_BOT_UA_RE_STRING, 'i');\n    // Only block metadata for HTML-limited bots\n    if (userAgent && blockingMetadataUARegex.test(userAgent)) {\n        return false;\n    }\n    return true;\n}\n// When the request UA is a html-limited bot, we should do a dynamic render.\n// In this case, postpone state is not sent.\nexport function isHtmlBotRequest(req) {\n    const ua = req.headers['user-agent'] || '';\n    const botType = getBotType(ua);\n    return botType === 'html';\n}\n\n//# sourceMappingURL=streaming-metadata.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            var _serverActionsManifest__id, _serverActionsManifest_;\n            const workers = (_serverActionsManifest_ = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node']) == null ? void 0 : (_serverActionsManifest__id = _serverActionsManifest_[id]) == null ? void 0 : _serverActionsManifest__id.workers;\n            if (!workers) {\n                return undefined;\n            }\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isPossibleServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isPossibleServerAction\n    };\n}\nexport function getIsPossibleServerAction(req) {\n    return getServerActionRequestMetadata(req).isPossibleServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    },\n    META: {\n        // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n        // <meta name=\"«nxt-icon»\"\n        // This is a special mark that will be replaced by the icon insertion script tag.\n        ICON_MARK: new Uint8Array([\n            60,\n            109,\n            101,\n            116,\n            97,\n            32,\n            110,\n            97,\n            109,\n            101,\n            61,\n            34,\n            194,\n            171,\n            110,\n            120,\n            116,\n            45,\n            105,\n            99,\n            111,\n            110,\n            194,\n            187,\n            34\n        ])\n    }\n};\n\n//# sourceMappingURL=encoded-tags.js.map","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encoded-tags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants';\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // If we have no streams, return an empty stream. This behavior is\n    // intentional as we're now providing the `RenderResult.EMPTY` value.\n    if (streams.length === 0) {\n        return new ReadableStream({\n            start (controller) {\n                controller.close();\n            }\n        });\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream, signal) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        if (signal == null ? void 0 : signal.aborted) {\n            return string;\n        }\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nfunction createPrefetchCommentStream(isBuildTimePrerendering, buildId) {\n    // Insert an extra comment at the beginning of the HTML document. This must\n    // come after the DOCTYPE, which is inserted by React.\n    //\n    // The first chunk sent by React will contain the doctype. After that, we can\n    // pass through the rest of the chunks as-is.\n    let didTransformFirstChunk = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (isBuildTimePrerendering && !didTransformFirstChunk) {\n                didTransformFirstChunk = true;\n                const decoder = new TextDecoder('utf-8', {\n                    fatal: true\n                });\n                const chunkStr = decoder.decode(chunk, {\n                    stream: true\n                });\n                const updatedChunkStr = insertBuildIdComment(chunkStr, buildId);\n                controller.enqueue(encoder.encode(updatedChunkStr));\n                return;\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createMetadataTransformStream(insert) {\n    let chunkIndex = -1;\n    let isMarkRemoved = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            let iconMarkIndex = -1;\n            let closedHeadIndex = -1;\n            chunkIndex++;\n            if (isMarkRemoved) {\n                controller.enqueue(chunk);\n                return;\n            }\n            let iconMarkLength = 0;\n            // Only search for the closed head tag once\n            if (iconMarkIndex === -1) {\n                iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK);\n                if (iconMarkIndex === -1) {\n                    controller.enqueue(chunk);\n                    return;\n                } else {\n                    // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n                    // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n                    iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length;\n                    // Check if next char is /, this is for xml mode.\n                    if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n                        iconMarkLength += 2;\n                    } else {\n                        // The last char is `>`\n                        iconMarkLength++;\n                    }\n                }\n            }\n            // Check if icon mark is inside <head> tag in the first chunk.\n            if (chunkIndex === 0) {\n                closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                if (iconMarkIndex !== -1) {\n                    // The mark icon is located in the 1st chunk before the head tag.\n                    // We do not need to insert the script tag in this case because it's in the head.\n                    // Just remove the icon mark from the chunk.\n                    if (iconMarkIndex < closedHeadIndex) {\n                        const replaced = new Uint8Array(chunk.length - iconMarkLength);\n                        // Remove the icon mark from the chunk.\n                        replaced.set(chunk.subarray(0, iconMarkIndex));\n                        replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex);\n                        chunk = replaced;\n                    } else {\n                        // The icon mark is after the head tag, replace and insert the script tag at that position.\n                        const insertion = await insert();\n                        const encodedInsertion = encoder.encode(insertion);\n                        const insertionLength = encodedInsertion.length;\n                        const replaced = new Uint8Array(chunk.length - iconMarkLength + insertionLength);\n                        replaced.set(chunk.subarray(0, iconMarkIndex));\n                        replaced.set(encodedInsertion, iconMarkIndex);\n                        replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex + insertionLength);\n                        chunk = replaced;\n                    }\n                    isMarkRemoved = true;\n                }\n            // If there's no icon mark located, it will be handled later when if present in the following chunks.\n            } else {\n                // When it's appeared in the following chunks, we'll need to\n                // remove the mark and then insert the script tag at that position.\n                const insertion = await insert();\n                const encodedInsertion = encoder.encode(insertion);\n                const insertionLength = encodedInsertion.length;\n                // Replace the icon mark with the hoist script or empty string.\n                const replaced = new Uint8Array(chunk.length - iconMarkLength + insertionLength);\n                // Set the first part of the chunk, before the icon mark.\n                replaced.set(chunk.subarray(0, iconMarkIndex));\n                // Set the insertion after the icon mark.\n                replaced.set(encodedInsertion, iconMarkIndex);\n                // Set the rest of the chunk after the icon mark.\n                replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex + insertionLength);\n                chunk = replaced;\n                isMarkRemoved = true;\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                // In fully static rendering or non PPR rendering cases:\n                // `/head>` will always be found in the chunk in first chunk rendering.\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        // Get the total count of the bytes in the chunk and the insertion\n                        // e.g.\n                        // chunk = <head><meta charset=\"utf-8\"></head>\n                        // insertion = <script>...</script>\n                        // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        // Append the first part of the chunk, before the head tag\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        // Append the server inserted content\n                        insertedHeadContent.set(encodedInsertion, index);\n                        // Append the rest of the chunk\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    inserted = true;\n                } else {\n                    // This will happens in PPR rendering during next start, when the page is partially rendered.\n                    // When the page resumes, the head tag will be found in the middle of the chunk.\n                    // Where we just need to append the insertion and chunk to the current stream.\n                    // e.g.\n                    // PPR-static: <head>...</head><body> [ resume content ] </body>\n                    // PPR-resume: [ insertion ] [ rest content ]\n                    if (insertion) {\n                        controller.enqueue(encoder.encode(insertion));\n                    }\n                    controller.enqueue(chunk);\n                    inserted = true;\n                }\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\nfunction createFlightDataInjectionTransformStream(stream, delayDataUntilFirstHtmlChunk) {\n    let htmlStreamFinished = false;\n    let pull = null;\n    let donePulling = false;\n    function startOrContinuePulling(controller) {\n        if (!pull) {\n            pull = startPulling(controller);\n        }\n        return pull;\n    }\n    async function startPulling(controller) {\n        const reader = stream.getReader();\n        if (delayDataUntilFirstHtmlChunk) {\n            // NOTE: streaming flush\n            // We are buffering here for the inlined data stream because the\n            // \"shell\" stream might be chunkenized again by the underlying stream\n            // implementation, e.g. with a specific high-water mark. To ensure it's\n            // the safe timing to pipe the data stream, this extra tick is\n            // necessary.\n            // We don't start reading until we've left the current Task to ensure\n            // that it's inserted after flushing the shell. Note that this implementation\n            // might get stale if impl details of Fizz change in the future.\n            await atLeastOneTask();\n        }\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                // We want to prioritize HTML over RSC data.\n                // The SSR render is based on the same RSC stream, so when we get a new RSC chunk,\n                // we're likely to produce an HTML chunk as well, so give it a chance to flush first.\n                if (!delayDataUntilFirstHtmlChunk && !htmlStreamFinished) {\n                    await atLeastOneTask();\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        start (controller) {\n            if (!delayDataUntilFirstHtmlChunk) {\n                startOrContinuePulling(controller);\n            }\n        },\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (delayDataUntilFirstHtmlChunk) {\n                startOrContinuePulling(controller);\n            }\n        },\n        flush (controller) {\n            htmlStreamFinished = true;\n            if (donePulling) {\n                return;\n            }\n            return startOrContinuePulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags.map((c)=>`<${c}>`).join(missingTags.length > 1 ? ' and ' : '')} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, isBuildTimePrerendering, buildId, getServerInsertedHTML, getServerInsertedMetadata, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML we need to wait for it to resolve before continuing.\n    if (isStaticGeneration) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Add build id comment to start of the HTML document (in export mode)\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n        // Transform metadata\n        createMetadataTransformStream(getServerInsertedMetadata),\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createFlightDataInjectionTransformStream(inlinedDataStream, true) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        createHeadInsertionTransformStream(getServerInsertedHTML)\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata, isBuildTimePrerendering, buildId }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Add build id comment to start of the HTML document (in export mode)\n    .pipeThrough(createPrefetchCommentStream(isBuildTimePrerendering, buildId))// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createFlightDataInjectionTransformStream(inlinedDataStream, true))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { delayDataUntilFirstHtmlChunk, inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createFlightDataInjectionTransformStream(inlinedDataStream, delayDataUntilFirstHtmlChunk))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw Object.defineProperty(new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E61\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */ export function normalizeNextQueryParam(key) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            return key.substring(prefix.length);\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=utils.js.map","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { OutgoingHttpHeaders } from 'http'\n\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */\nexport function getHostname(\n  parsed: { hostname?: string | null },\n  headers?: OutgoingHttpHeaders\n): string | undefined {\n  // Get the hostname from the headers if it exists, otherwise use the parsed\n  // hostname.\n  let hostname: string\n  if (headers?.host && !Array.isArray(headers.host)) {\n    hostname = headers.host.toString().split(':', 1)[0]\n  } else if (parsed.hostname) {\n    hostname = parsed.hostname\n  } else return\n\n  return hostname.toLowerCase()\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw Object.defineProperty(new TypeError(`The NextURL configuration includes no locale \"${locale}\"`), \"__NEXT_ERROR_CODE\", {\n                value: \"E597\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export class PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export { RequestCookies, ResponseCookies, stringifyCookie } from 'next/dist/compiled/@edge-runtime/cookies';\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        // node Request instance requires duplex option when a body\n        // is present or it errors, we don't handle this for\n        // Request being passed in since it would have already\n        // errored if this wasn't configured\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            if (init.body && init.duplex !== 'half') {\n                init.duplex = 'half';\n            }\n        }\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { getRequestMeta } from '../../../request-meta';\nimport { fromNodeOutgoingHttpHeaders } from '../../utils';\nimport { NextRequest } from '../request';\nimport { isNodeNextRequest, isWebNextRequest } from '../../../base-http/helpers';\nexport const ResponseAbortedName = 'ResponseAborted';\nexport class ResponseAborted extends Error {\n    constructor(...args){\n        super(...args), this.name = ResponseAbortedName;\n    }\n}\n/**\n * Creates an AbortController tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * If the `close` event is fired before the `finish` event, then we'll send the\n * `abort` signal.\n */ export function createAbortController(response) {\n    const controller = new AbortController();\n    // If `finish` fires first, then `res.end()` has been called and the close is\n    // just us finishing the stream on our side. If `close` fires first, then we\n    // know the client disconnected before we finished.\n    response.once('close', ()=>{\n        if (response.writableFinished) return;\n        controller.abort(new ResponseAborted());\n    });\n    return controller;\n}\n/**\n * Creates an AbortSignal tied to the closing of a ServerResponse (or other\n * appropriate Writable).\n *\n * This cannot be done with the request (IncomingMessage or Readable) because\n * the `abort` event will not fire if to data has been fully read (because that\n * will \"close\" the readable stream and nothing fires after that).\n */ export function signalFromNodeResponse(response) {\n    const { errored, destroyed } = response;\n    if (errored || destroyed) {\n        return AbortSignal.abort(errored ?? new ResponseAborted());\n    }\n    const { signal } = createAbortController(response);\n    return signal;\n}\nexport class NextRequestAdapter {\n    static fromBaseNextRequest(request, signal) {\n        if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME === 'edge' && isWebNextRequest(request)) {\n            return NextRequestAdapter.fromWebNextRequest(request);\n        } else if (// The type check here ensures that `req` is correctly typed, and the\n        // environment variable check provides dead code elimination.\n        process.env.NEXT_RUNTIME !== 'edge' && isNodeNextRequest(request)) {\n            return NextRequestAdapter.fromNodeNextRequest(request, signal);\n        } else {\n            throw Object.defineProperty(new Error('Invariant: Unsupported NextRequest type'), \"__NEXT_ERROR_CODE\", {\n                value: \"E345\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    static fromNodeNextRequest(request, signal) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD' && request.body) {\n            // @ts-expect-error - this is handled by undici, when streams/web land use it instead\n            body = request.body;\n        }\n        let url;\n        if (request.url.startsWith('http')) {\n            url = new URL(request.url);\n        } else {\n            // Grab the full URL from the request metadata.\n            const base = getRequestMeta(request, 'initURL');\n            if (!base || !base.startsWith('http')) {\n                // Because the URL construction relies on the fact that the URL provided\n                // is absolute, we need to provide a base URL. We can't use the request\n                // URL because it's relative, so we use a dummy URL instead.\n                url = new URL(request.url, 'http://n');\n            } else {\n                url = new URL(request.url, base);\n            }\n        }\n        return new NextRequest(url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n    static fromWebNextRequest(request) {\n        // HEAD and GET requests can not have a body.\n        let body = null;\n        if (request.method !== 'GET' && request.method !== 'HEAD') {\n            body = request.body;\n        }\n        return new NextRequest(request.url, {\n            method: request.method,\n            headers: fromNodeOutgoingHttpHeaders(request.headers),\n            duplex: 'half',\n            signal: request.request.signal,\n            // geo\n            // ip\n            // nextConfig\n            // body can not be passed if request was aborted\n            // or we get a Request body was disturbed error\n            ...request.request.signal.aborted ? {} : {\n                body\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=next-request.js.map","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */ export class DetachedPromise {\n    constructor(){\n        let resolve;\n        let reject;\n        // Create the promise and assign the resolvers to the object.\n        this.promise = new Promise((res, rej)=>{\n            resolve = res;\n            reject = rej;\n        });\n        // We know that resolvers is defined because the Promise constructor runs\n        // synchronously.\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n}\n\n//# sourceMappingURL=detached-promise.js.map","// Combined load times for loading client components\nlet clientComponentLoadStart = 0;\nlet clientComponentLoadTimes = 0;\nlet clientComponentLoadCount = 0;\nexport function wrapClientComponentLoader(ComponentMod) {\n    if (!('performance' in globalThis)) {\n        return ComponentMod.__next_app__;\n    }\n    return {\n        require: (...args)=>{\n            const startTime = performance.now();\n            if (clientComponentLoadStart === 0) {\n                clientComponentLoadStart = startTime;\n            }\n            try {\n                clientComponentLoadCount += 1;\n                return ComponentMod.__next_app__.require(...args);\n            } finally{\n                clientComponentLoadTimes += performance.now() - startTime;\n            }\n        },\n        loadChunk: (...args)=>{\n            const startTime = performance.now();\n            const result = ComponentMod.__next_app__.loadChunk(...args);\n            // Avoid wrapping `loadChunk`'s result in an extra promise in case something like React depends on its identity.\n            // We only need to know when it's settled.\n            result.finally(()=>{\n                clientComponentLoadTimes += performance.now() - startTime;\n            });\n            return result;\n        }\n    };\n}\nexport function getClientComponentLoaderMetrics(options = {}) {\n    const metrics = clientComponentLoadStart === 0 ? undefined : {\n        clientComponentLoadStart,\n        clientComponentLoadTimes,\n        clientComponentLoadCount\n    };\n    if (options.reset) {\n        clientComponentLoadStart = 0;\n        clientComponentLoadTimes = 0;\n        clientComponentLoadCount = 0;\n    }\n    return metrics;\n}\n\n//# sourceMappingURL=client-component-renderer-logger.js.map","import { ResponseAbortedName, createAbortController } from './web/spec-extension/adapters/next-request';\nimport { DetachedPromise } from '../lib/detached-promise';\nimport { getTracer } from './lib/trace/tracer';\nimport { NextNodeServerSpan } from './lib/trace/constants';\nimport { getClientComponentLoaderMetrics } from './client-component-renderer-logger';\nexport function isAbortError(e) {\n    return (e == null ? void 0 : e.name) === 'AbortError' || (e == null ? void 0 : e.name) === ResponseAbortedName;\n}\nfunction createWriterFromResponse(res, waitUntilForEnd) {\n    let started = false;\n    // Create a promise that will resolve once the response has drained. See\n    // https://nodejs.org/api/stream.html#stream_event_drain\n    let drained = new DetachedPromise();\n    function onDrain() {\n        drained.resolve();\n    }\n    res.on('drain', onDrain);\n    // If the finish event fires, it means we shouldn't block and wait for the\n    // drain event.\n    res.once('close', ()=>{\n        res.off('drain', onDrain);\n        drained.resolve();\n    });\n    // Create a promise that will resolve once the response has finished. See\n    // https://nodejs.org/api/http.html#event-finish_1\n    const finished = new DetachedPromise();\n    res.once('finish', ()=>{\n        finished.resolve();\n    });\n    // Create a writable stream that will write to the response.\n    return new WritableStream({\n        write: async (chunk)=>{\n            // You'd think we'd want to use `start` instead of placing this in `write`\n            // but this ensures that we don't actually flush the headers until we've\n            // started writing chunks.\n            if (!started) {\n                started = true;\n                if ('performance' in globalThis && process.env.NEXT_OTEL_PERFORMANCE_PREFIX) {\n                    const metrics = getClientComponentLoaderMetrics();\n                    if (metrics) {\n                        performance.measure(`${process.env.NEXT_OTEL_PERFORMANCE_PREFIX}:next-client-component-loading`, {\n                            start: metrics.clientComponentLoadStart,\n                            end: metrics.clientComponentLoadStart + metrics.clientComponentLoadTimes\n                        });\n                    }\n                }\n                res.flushHeaders();\n                getTracer().trace(NextNodeServerSpan.startResponse, {\n                    spanName: 'start response'\n                }, ()=>undefined);\n            }\n            try {\n                const ok = res.write(chunk);\n                // Added by the `compression` middleware, this is a function that will\n                // flush the partially-compressed response to the client.\n                if ('flush' in res && typeof res.flush === 'function') {\n                    res.flush();\n                }\n                // If the write returns false, it means there's some backpressure, so\n                // wait until it's streamed before continuing.\n                if (!ok) {\n                    await drained.promise;\n                    // Reset the drained promise so that we can wait for the next drain event.\n                    drained = new DetachedPromise();\n                }\n            } catch (err) {\n                res.end();\n                throw Object.defineProperty(new Error('failed to write chunk to response', {\n                    cause: err\n                }), \"__NEXT_ERROR_CODE\", {\n                    value: \"E321\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        },\n        abort: (err)=>{\n            if (res.writableFinished) return;\n            res.destroy(err);\n        },\n        close: async ()=>{\n            // if a waitUntil promise was passed, wait for it to resolve before\n            // ending the response.\n            if (waitUntilForEnd) {\n                await waitUntilForEnd;\n            }\n            if (res.writableFinished) return;\n            res.end();\n            return finished.promise;\n        }\n    });\n}\nexport async function pipeToNodeResponse(readable, res, waitUntilForEnd) {\n    try {\n        // If the response has already errored, then just return now.\n        const { errored, destroyed } = res;\n        if (errored || destroyed) return;\n        // Create a new AbortController so that we can abort the readable if the\n        // client disconnects.\n        const controller = createAbortController(res);\n        const writer = createWriterFromResponse(res, waitUntilForEnd);\n        await readable.pipeTo(writer, {\n            signal: controller.signal\n        });\n    } catch (err) {\n        // If this isn't related to an abort error, re-throw it.\n        if (isAbortError(err)) return;\n        throw Object.defineProperty(new Error('failed to pipe response', {\n            cause: err\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E180\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=pipe-readable.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nimport { InvariantError } from '../shared/lib/invariant-error';\nexport default class RenderResult {\n    static #_ = /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */ this.EMPTY = new RenderResult(null, {\n        metadata: {},\n        contentType: null\n    });\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */ static fromStatic(value, contentType) {\n        return new RenderResult(value, {\n            metadata: {},\n            contentType\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            // If the response is null, return an empty string. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return '';\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new InvariantError('dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E732\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns a readable stream of the response.\n   */ get readable() {\n        if (this.response === null) {\n            // If the response is null, return an empty stream. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return new ReadableStream({\n                start (controller) {\n                    controller.close();\n                }\n            });\n        }\n        if (typeof this.response === 'string') {\n            return streamFromString(this.response);\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */ coerce() {\n        if (this.response === null) {\n            // If the response is null, return an empty stream. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return [];\n        }\n        if (typeof this.response === 'string') {\n            return [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            return this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            return [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            return [\n                this.response\n            ];\n        }\n    }\n    /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */ unshift(readable) {\n        // Coerce the response to an array of streams.\n        this.response = this.coerce();\n        // Add the new stream to the start of the array.\n        this.response.unshift(readable);\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ push(readable) {\n        // Coerce the response to an array of streams.\n        this.response = this.coerce();\n        // Add the new stream to the end of the array.\n        this.response.push(readable);\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1;\n    if (!response) return null;\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        cacheControl: response.cacheControl,\n        value: ((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html, HTML_CONTENT_TYPE_HEADER),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html, HTML_CONTENT_TYPE_HEADER),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        case RouteKind.PAGES_API:\n            // Pages Router API routes are not cached in the incremental cache.\n            throw Object.defineProperty(new Error(`Unexpected route kind ${routeKind}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E64\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            return routeKind;\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimal_mode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        this.minimal_mode = minimal_mode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false, waitUntil } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, (cacheKey, resolve)=>{\n            const prom = (async ()=>{\n                var _this_previousCacheItem;\n                // We keep the previous cache entry around to leverage when the\n                // incremental cache is disabled in minimal mode.\n                if (this.minimal_mode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                    return this.previousCacheItem.entry;\n                }\n                // Coerce the kindHint into a given kind for the incremental cache.\n                const kind = routeKindToIncrementalCacheKind(context.routeKind);\n                let resolved = false;\n                let cachedResponse = null;\n                try {\n                    cachedResponse = !this.minimal_mode ? await incrementalCache.get(key, {\n                        kind,\n                        isRoutePPREnabled: context.isRoutePPREnabled,\n                        isFallback\n                    }) : null;\n                    if (cachedResponse && !isOnDemandRevalidate) {\n                        resolve(cachedResponse);\n                        resolved = true;\n                        if (!cachedResponse.isStale || context.isPrefetch) {\n                            // The cached value is still valid, so we don't need\n                            // to update it yet.\n                            return null;\n                        }\n                    }\n                    const cacheEntry = await responseGenerator({\n                        hasResolved: resolved,\n                        previousCacheEntry: cachedResponse,\n                        isRevalidating: true\n                    });\n                    // If the cache entry couldn't be generated, we don't want to cache\n                    // the result.\n                    if (!cacheEntry) {\n                        // Unset the previous cache item if it was set.\n                        if (this.minimal_mode) this.previousCacheItem = undefined;\n                        return null;\n                    }\n                    const resolveValue = await fromResponseCacheEntry({\n                        ...cacheEntry,\n                        isMiss: !cachedResponse\n                    });\n                    if (!resolveValue) {\n                        // Unset the previous cache item if it was set.\n                        if (this.minimal_mode) this.previousCacheItem = undefined;\n                        return null;\n                    }\n                    // For on-demand revalidate wait to resolve until cache is set.\n                    // Otherwise resolve now.\n                    if (!isOnDemandRevalidate && !resolved) {\n                        resolve(resolveValue);\n                        resolved = true;\n                    }\n                    // We want to persist the result only if it has a cache control value\n                    // defined.\n                    if (resolveValue.cacheControl) {\n                        if (this.minimal_mode) {\n                            this.previousCacheItem = {\n                                key: cacheKey,\n                                entry: resolveValue,\n                                expiresAt: Date.now() + 1000\n                            };\n                        } else {\n                            await incrementalCache.set(key, resolveValue.value, {\n                                cacheControl: resolveValue.cacheControl,\n                                isRoutePPREnabled,\n                                isFallback\n                            });\n                        }\n                    }\n                    return resolveValue;\n                } catch (err) {\n                    // When a path is erroring we automatically re-set the existing cache\n                    // with new revalidate and expire times to prevent non-stop retrying.\n                    if (cachedResponse == null ? void 0 : cachedResponse.cacheControl) {\n                        const newRevalidate = Math.min(Math.max(cachedResponse.cacheControl.revalidate || 3, 3), 30);\n                        const newExpire = cachedResponse.cacheControl.expire === undefined ? undefined : Math.max(newRevalidate + 3, cachedResponse.cacheControl.expire);\n                        await incrementalCache.set(key, cachedResponse.value, {\n                            cacheControl: {\n                                revalidate: newRevalidate,\n                                expire: newExpire\n                            },\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                    // While revalidating in the background we can't reject as we already\n                    // resolved the cache entry so log the error here.\n                    if (resolved) {\n                        console.error(err);\n                        return null;\n                    }\n                    // We haven't resolved yet, so let's throw to indicate an error.\n                    throw err;\n                }\n            })();\n            // we need to ensure background revalidates are\n            // passed to waitUntil\n            if (waitUntil) {\n                waitUntil(prom);\n            }\n            return prom;\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","/**\n * Describes the different fallback modes that a given page can have.\n */ export var FallbackMode = /*#__PURE__*/ function(FallbackMode) {\n    /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */ FallbackMode[\"BLOCKING_STATIC_RENDER\"] = \"BLOCKING_STATIC_RENDER\";\n    /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */ FallbackMode[\"PRERENDER\"] = \"PRERENDER\";\n    /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */ FallbackMode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    return FallbackMode;\n}({});\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */ export function parseFallbackField(fallbackField) {\n    if (typeof fallbackField === 'string') {\n        return \"PRERENDER\";\n    } else if (fallbackField === null) {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else if (fallbackField === false) {\n        return \"NOT_FOUND\";\n    } else if (fallbackField === undefined) {\n        return undefined;\n    } else {\n        throw Object.defineProperty(new Error(`Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`), \"__NEXT_ERROR_CODE\", {\n            value: \"E285\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nexport function fallbackModeToFallbackField(fallback, page) {\n    switch(fallback){\n        case \"BLOCKING_STATIC_RENDER\":\n            return null;\n        case \"NOT_FOUND\":\n            return false;\n        case \"PRERENDER\":\n            if (!page) {\n                throw Object.defineProperty(new Error(`Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E422\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return page;\n        default:\n            throw Object.defineProperty(new Error(`Invalid fallback mode: ${fallback}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E254\",\n                enumerable: false,\n                configurable: true\n            });\n    }\n}\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */ export function parseStaticPathsResult(result) {\n    if (result === true) {\n        return \"PRERENDER\";\n    } else if (result === 'blocking') {\n        return \"BLOCKING_STATIC_RENDER\";\n    } else {\n        return \"NOT_FOUND\";\n    }\n}\n\n//# sourceMappingURL=fallback.js.map","/**\n * FNV-1a Hash implementation\n * @author Travis Webb (tjwebb) <me@traviswebb.com>\n *\n * Ported from https://github.com/tjwebb/fnv-plus/blob/master/index.js\n *\n * Simplified, optimized and add modified for 52 bit, which provides a larger hash space\n * and still making use of Javascript's 53-bit integer space.\n */ export const fnv1a52 = (str)=>{\n    const len = str.length;\n    let i = 0, t0 = 0, v0 = 0x2325, t1 = 0, v1 = 0x8422, t2 = 0, v2 = 0x9ce4, t3 = 0, v3 = 0xcbf2;\n    while(i < len){\n        v0 ^= str.charCodeAt(i++);\n        t0 = v0 * 435;\n        t1 = v1 * 435;\n        t2 = v2 * 435;\n        t3 = v3 * 435;\n        t2 += v0 << 8;\n        t3 += v1 << 8;\n        t1 += t0 >>> 16;\n        v0 = t0 & 65535;\n        t2 += t1 >>> 16;\n        v1 = t1 & 65535;\n        v3 = t3 + (t2 >>> 16) & 65535;\n        v2 = t2 & 65535;\n    }\n    return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);\n};\nexport const generateETag = (payload, weak = false)=>{\n    const prefix = weak ? 'W/\"' : '\"';\n    return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"';\n};\n\n//# sourceMappingURL=etag.js.map","import { CACHE_ONE_YEAR } from '../../lib/constants';\nexport function getCacheControlHeader({ revalidate, expire }) {\n    const swrHeader = typeof revalidate === 'number' && expire !== undefined && revalidate < expire ? `, stale-while-revalidate=${expire - revalidate}` : '';\n    if (revalidate === 0) {\n        return 'private, no-cache, no-store, max-age=0, must-revalidate';\n    } else if (typeof revalidate === 'number') {\n        return `s-maxage=${revalidate}${swrHeader}`;\n    }\n    return `s-maxage=${CACHE_ONE_YEAR}${swrHeader}`;\n}\n\n//# sourceMappingURL=cache-control.js.map","import { isResSent } from '../shared/lib/utils';\nimport { generateETag } from './lib/etag';\nimport fresh from 'next/dist/compiled/fresh';\nimport { getCacheControlHeader } from './lib/cache-control';\nimport { HTML_CONTENT_TYPE_HEADER } from '../lib/constants';\nexport function sendEtagResponse(req, res, etag) {\n    if (etag) {\n        /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */ res.setHeader('ETag', etag);\n    }\n    if (fresh(req.headers, {\n        etag\n    })) {\n        res.statusCode = 304;\n        res.end();\n        return true;\n    }\n    return false;\n}\nexport async function sendRenderResult({ req, res, result, generateEtags, poweredByHeader, cacheControl }) {\n    if (isResSent(res)) {\n        return;\n    }\n    if (poweredByHeader && result.contentType === HTML_CONTENT_TYPE_HEADER) {\n        res.setHeader('X-Powered-By', 'Next.js');\n    }\n    // If cache control is already set on the response we don't\n    // override it to allow users to customize it via next.config\n    if (cacheControl && !res.getHeader('Cache-Control')) {\n        res.setHeader('Cache-Control', getCacheControlHeader(cacheControl));\n    }\n    const payload = result.isDynamic ? null : result.toUnchunkedString();\n    if (generateEtags && payload !== null) {\n        const etag = generateETag(payload);\n        if (sendEtagResponse(req, res, etag)) {\n            return;\n        }\n    }\n    if (!res.getHeader('Content-Type') && result.contentType) {\n        res.setHeader('Content-Type', result.contentType);\n    }\n    if (payload) {\n        res.setHeader('Content-Length', Buffer.byteLength(payload));\n    }\n    if (req.method === 'HEAD') {\n        res.end(null);\n        return;\n    }\n    if (payload !== null) {\n        res.end(payload);\n        return;\n    }\n    // Pipe the render result to the response after we get a writer for it.\n    await result.pipeToNodeResponse(res);\n}\n\n//# sourceMappingURL=send-payload.js.map","export class NoFallbackError extends Error {\n  constructor() {\n    super()\n    this.message = 'Internal: NoFallbackError'\n  }\n}\n","import * as React from 'react';\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof React.cache === 'function' ? React.cache : (fn)=>fn;\n// When Cache Components is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_CACHE_COMPONENTS ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\n/**\n * Creates a function that logs an error message that is deduped by the userland\n * callsite.\n * This requires no indirection between the call of this function and the userland\n * callsite i.e. there's only a single library frame above this.\n * Do not use on the Client where sourcemaps and ignore listing might be enabled.\n * Only use that for warnings need a fix independent of the callstack.\n *\n * @param getMessage\n * @returns\n */ export function createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const afterTaskAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { afterTaskAsyncStorage };\n\n//# sourceMappingURL=after-task-async-storage.external.js.map","import { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external'\nimport type { WorkStore } from '../app-render/work-async-storage.external'\n\nexport function throwWithStaticGenerationBailoutError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwForSearchParamsAccessInUseCache(\n  workStore: WorkStore,\n  constructorOpt: Function\n): never {\n  const error = new Error(\n    `Route ${workStore.route} used \"searchParams\" inside \"use cache\". Accessing dynamic request data inside a cache scope is not supported. If you need some search params inside a cached function await \"searchParams\" outside of the cached function and pass only the required search params as arguments to the cached function. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n  )\n\n  Error.captureStackTrace(error, constructorOpt)\n  workStore.invalidDynamicUsageError ??= error\n\n  throw error\n}\n\nexport function isRequestAPICallableInsideAfter() {\n  const afterTaskStore = afterTaskAsyncStorage.getStore()\n  return afterTaskStore?.rootTaskSpawnPhase === 'action'\n}\n","import type { WorkStore } from '../app-render/work-async-storage.external'\n\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\nimport {\n  throwToInterruptStaticGeneration,\n  postponeWithTracking,\n  trackDynamicDataInDynamicRender,\n  annotateDynamicAccess,\n  trackSynchronousRequestDataAccessInDev,\n  delayUntilRuntimeStage,\n} from '../app-render/dynamic-rendering'\n\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreLegacy,\n  type PrerenderStorePPR,\n  type PrerenderStoreModern,\n  type PrerenderStoreModernRuntime,\n  type StaticPrerenderStore,\n  throwInvariantForMissingStore,\n} from '../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport {\n  makeDevtoolsIOAwarePromise,\n  makeHangingPromise,\n} from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport {\n  describeStringPropertyAccess,\n  describeHasCheckingStringProperty,\n  wellKnownProperties,\n} from '../../shared/lib/utils/reflect-utils'\nimport {\n  throwWithStaticGenerationBailoutErrorWithDynamicError,\n  throwForSearchParamsAccessInUseCache,\n} from './utils'\n\nexport type SearchParams = { [key: string]: string | string[] | undefined }\n\n/**\n * In this version of Next.js the `params` prop passed to Layouts, Pages, and other Segments is a Promise.\n * However to facilitate migration to this new Promise type you can currently still access params directly on the Promise instance passed to these Segments.\n * The `UnsafeUnwrappedSearchParams` type is available if you need to temporarily access the underlying params without first awaiting or `use`ing the Promise.\n *\n * In a future version of Next.js the `params` prop will be a plain Promise and this type will be removed.\n *\n * Typically instances of `params` can be updated automatically to be treated as a Promise by a codemod published alongside this Next.js version however if you\n * have not yet run the codemod of the codemod cannot detect certain instances of `params` usage you should first try to refactor your code to await `params`.\n *\n * If refactoring is not possible but you still want to be able to access params directly without typescript errors you can cast the params Promise to this type\n *\n * ```tsx\n * type Props = { searchParams: Promise<{ foo: string }> }\n *\n * export default async function Page(props: Props) {\n *  const { searchParams } = (props.searchParams as unknown as UnsafeUnwrappedSearchParams<typeof props.searchParams>)\n *  return ...\n * }\n * ```\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedSearchParams<P> =\n  P extends Promise<infer U> ? Omit<U, 'then' | 'status' | 'value'> : never\n\nexport function createSearchParamsFromClient(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n): Promise<SearchParams> {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createStaticPrerenderSearchParams(workStore, workUnitStore)\n      case 'prerender-runtime':\n        throw new InvariantError(\n          'createSearchParamsFromClient should not be called in a runtime prerender.'\n        )\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        throw new InvariantError(\n          'createSearchParamsFromClient should not be called in cache contexts.'\n        )\n      case 'request':\n        return createRenderSearchParams(underlyingSearchParams, workStore)\n      default:\n        workUnitStore satisfies never\n    }\n  }\n  throwInvariantForMissingStore()\n}\n\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata =\n  createServerSearchParamsForServerPage\n\nexport function createServerSearchParamsForServerPage(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n): Promise<SearchParams> {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createStaticPrerenderSearchParams(workStore, workUnitStore)\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        throw new InvariantError(\n          'createServerSearchParamsForServerPage should not be called in cache contexts.'\n        )\n      case 'prerender-runtime':\n        return createRuntimePrerenderSearchParams(\n          underlyingSearchParams,\n          workUnitStore\n        )\n      case 'request':\n        return createRenderSearchParams(underlyingSearchParams, workStore)\n      default:\n        workUnitStore satisfies never\n    }\n  }\n  throwInvariantForMissingStore()\n}\n\nexport function createPrerenderSearchParamsForClientPage(\n  workStore: WorkStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n        // We're prerendering in a mode that aborts (cacheComponents) and should stall\n        // the promise to ensure the RSC side is considered dynamic\n        return makeHangingPromise(\n          workUnitStore.renderSignal,\n          workStore.route,\n          '`searchParams`'\n        )\n      case 'prerender-runtime':\n        throw new InvariantError(\n          'createPrerenderSearchParamsForClientPage should not be called in a runtime prerender.'\n        )\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        throw new InvariantError(\n          'createPrerenderSearchParamsForClientPage should not be called in cache contexts.'\n        )\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n      case 'request':\n        return Promise.resolve({})\n      default:\n        workUnitStore satisfies never\n    }\n  }\n  throwInvariantForMissingStore()\n}\n\nfunction createStaticPrerenderSearchParams(\n  workStore: WorkStore,\n  prerenderStore: StaticPrerenderStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  }\n\n  switch (prerenderStore.type) {\n    case 'prerender':\n    case 'prerender-client':\n      // We are in a cacheComponents (PPR or otherwise) prerender\n      return makeHangingSearchParams(workStore, prerenderStore)\n    case 'prerender-ppr':\n    case 'prerender-legacy':\n      // We are in a legacy static generation and need to interrupt the\n      // prerender when search params are accessed.\n      return makeErroringExoticSearchParams(workStore, prerenderStore)\n    default:\n      return prerenderStore satisfies never\n  }\n}\n\nfunction createRuntimePrerenderSearchParams(\n  underlyingSearchParams: SearchParams,\n  workUnitStore: PrerenderStoreModernRuntime\n): Promise<SearchParams> {\n  return delayUntilRuntimeStage(\n    workUnitStore,\n    process.env.__NEXT_CACHE_COMPONENTS\n      ? makeUntrackedSearchParams(underlyingSearchParams)\n      : makeUntrackedExoticSearchParams(underlyingSearchParams)\n  )\n}\n\nfunction createRenderSearchParams(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      // Semantically we only need the dev tracking when running in `next dev`\n      // but since you would never use next dev with production NODE_ENV we use this\n      // as a proxy so we can statically exclude this code from production builds.\n      if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedSearchParamsWithDevWarnings(\n          underlyingSearchParams,\n          workStore\n        )\n      }\n\n      return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(\n        underlyingSearchParams,\n        workStore\n      )\n    } else {\n      if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedSearchParams(underlyingSearchParams)\n      }\n\n      return makeUntrackedExoticSearchParams(underlyingSearchParams)\n    }\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedSearchParams = new WeakMap<CacheLifetime, Promise<SearchParams>>()\n\nconst CachedSearchParamsForUseCache = new WeakMap<\n  CacheLifetime,\n  Promise<SearchParams>\n>()\n\nfunction makeHangingSearchParams(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStoreModern\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(prerenderStore)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const promise = makeHangingPromise<SearchParams>(\n    prerenderStore.renderSignal,\n    workStore.route,\n    '`searchParams`'\n  )\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (Object.hasOwn(promise, prop)) {\n        // The promise has this property directly. we must return it.\n        // We know it isn't a dynamic access because it can only be something\n        // that was previously written to the promise and thus not an underlying searchParam value\n        return ReflectAdapter.get(target, prop, receiver)\n      }\n\n      switch (prop) {\n        case 'then': {\n          const expression =\n            '`await searchParams`, `searchParams.then`, or similar'\n          annotateDynamicAccess(expression, prerenderStore)\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n        case 'status': {\n          const expression =\n            '`use(searchParams)`, `searchParams.status`, or similar'\n          annotateDynamicAccess(expression, prerenderStore)\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        default: {\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n      }\n    },\n  })\n\n  CachedSearchParams.set(prerenderStore, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction makeErroringExoticSearchParams(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStoreLegacy | PrerenderStorePPR\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(workStore)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const underlyingSearchParams = {}\n  // For search params we don't construct a ReactPromise because we want to interrupt\n  // rendering on any property access that was not set from outside and so we only want\n  // to have properties like value and status if React sets them.\n  const promise = Promise.resolve(underlyingSearchParams)\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (Object.hasOwn(promise, prop)) {\n        // The promise has this property directly. we must return it.\n        // We know it isn't a dynamic access because it can only be something\n        // that was previously written to the promise and thus not an underlying searchParam value\n        return ReflectAdapter.get(target, prop, receiver)\n      }\n\n      switch (prop) {\n        case 'then': {\n          const expression =\n            '`await searchParams`, `searchParams.then`, or similar'\n          if (workStore.dynamicShouldError) {\n            throwWithStaticGenerationBailoutErrorWithDynamicError(\n              workStore.route,\n              expression\n            )\n          } else if (prerenderStore.type === 'prerender-ppr') {\n            // PPR Prerender (no cacheComponents)\n            postponeWithTracking(\n              workStore.route,\n              expression,\n              prerenderStore.dynamicTracking\n            )\n          } else {\n            // Legacy Prerender\n            throwToInterruptStaticGeneration(\n              expression,\n              workStore,\n              prerenderStore\n            )\n          }\n          return\n        }\n        case 'status': {\n          const expression =\n            '`use(searchParams)`, `searchParams.status`, or similar'\n          if (workStore.dynamicShouldError) {\n            throwWithStaticGenerationBailoutErrorWithDynamicError(\n              workStore.route,\n              expression\n            )\n          } else if (prerenderStore.type === 'prerender-ppr') {\n            // PPR Prerender (no cacheComponents)\n            postponeWithTracking(\n              workStore.route,\n              expression,\n              prerenderStore.dynamicTracking\n            )\n          } else {\n            // Legacy Prerender\n            throwToInterruptStaticGeneration(\n              expression,\n              workStore,\n              prerenderStore\n            )\n          }\n          return\n        }\n        default: {\n          if (typeof prop === 'string' && !wellKnownProperties.has(prop)) {\n            const expression = describeStringPropertyAccess(\n              'searchParams',\n              prop\n            )\n            if (workStore.dynamicShouldError) {\n              throwWithStaticGenerationBailoutErrorWithDynamicError(\n                workStore.route,\n                expression\n              )\n            } else if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no cacheComponents)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          }\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n      }\n    },\n    has(target, prop) {\n      // We don't expect key checking to be used except for testing the existence of\n      // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n      // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n      // you are testing whether the searchParams has a 'then' property.\n      if (typeof prop === 'string') {\n        const expression = describeHasCheckingStringProperty(\n          'searchParams',\n          prop\n        )\n        if (workStore.dynamicShouldError) {\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            workStore.route,\n            expression\n          )\n        } else if (prerenderStore.type === 'prerender-ppr') {\n          // PPR Prerender (no cacheComponents)\n          postponeWithTracking(\n            workStore.route,\n            expression,\n            prerenderStore.dynamicTracking\n          )\n        } else {\n          // Legacy Prerender\n          throwToInterruptStaticGeneration(\n            expression,\n            workStore,\n            prerenderStore\n          )\n        }\n        return false\n      }\n      return ReflectAdapter.has(target, prop)\n    },\n    ownKeys() {\n      const expression =\n        '`{...searchParams}`, `Object.keys(searchParams)`, or similar'\n      if (workStore.dynamicShouldError) {\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          workStore.route,\n          expression\n        )\n      } else if (prerenderStore.type === 'prerender-ppr') {\n        // PPR Prerender (no cacheComponents)\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          prerenderStore.dynamicTracking\n        )\n      } else {\n        // Legacy Prerender\n        throwToInterruptStaticGeneration(expression, workStore, prerenderStore)\n      }\n    },\n  })\n\n  CachedSearchParams.set(workStore, proxiedPromise)\n  return proxiedPromise\n}\n\n/**\n * This is a variation of `makeErroringExoticSearchParams` that always throws an\n * error on access, because accessing searchParams inside of `\"use cache\"` is\n * not allowed.\n */\nexport function makeErroringSearchParamsForUseCache(\n  workStore: WorkStore\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParamsForUseCache.get(workStore)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const promise = Promise.resolve({})\n\n  const proxiedPromise = new Proxy(promise, {\n    get: function get(target, prop, receiver) {\n      if (Object.hasOwn(promise, prop)) {\n        // The promise has this property directly. we must return it. We know it\n        // isn't a dynamic access because it can only be something that was\n        // previously written to the promise and thus not an underlying\n        // searchParam value\n        return ReflectAdapter.get(target, prop, receiver)\n      }\n\n      if (\n        typeof prop === 'string' &&\n        (prop === 'then' || !wellKnownProperties.has(prop))\n      ) {\n        throwForSearchParamsAccessInUseCache(workStore, get)\n      }\n\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    has: function has(target, prop) {\n      // We don't expect key checking to be used except for testing the existence of\n      // searchParams so we make all has tests throw an error. this means that `promise.then`\n      // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n      // you are testing whether the searchParams has a 'then' property.\n      if (\n        typeof prop === 'string' &&\n        (prop === 'then' || !wellKnownProperties.has(prop))\n      ) {\n        throwForSearchParamsAccessInUseCache(workStore, has)\n      }\n\n      return ReflectAdapter.has(target, prop)\n    },\n    ownKeys: function ownKeys() {\n      throwForSearchParamsAccessInUseCache(workStore, ownKeys)\n    },\n  })\n\n  CachedSearchParamsForUseCache.set(workStore, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction makeUntrackedExoticSearchParams(\n  underlyingSearchParams: SearchParams\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  // We don't use makeResolvedReactPromise here because searchParams\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(underlyingSearchParams)\n  CachedSearchParams.set(underlyingSearchParams, promise)\n\n  Object.keys(underlyingSearchParams).forEach((prop) => {\n    if (!wellKnownProperties.has(prop)) {\n      Object.defineProperty(promise, prop, {\n        get() {\n          const workUnitStore = workUnitAsyncStorage.getStore()\n          if (workUnitStore) {\n            trackDynamicDataInDynamicRender(workUnitStore)\n          }\n          return underlyingSearchParams[prop]\n        },\n        set(value) {\n          Object.defineProperty(promise, prop, {\n            value,\n            writable: true,\n            enumerable: true,\n          })\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  })\n\n  return promise\n}\n\nfunction makeUntrackedSearchParams(\n  underlyingSearchParams: SearchParams\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const promise = Promise.resolve(underlyingSearchParams)\n  CachedSearchParams.set(underlyingSearchParams, promise)\n\n  return promise\n}\n\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(\n  underlyingSearchParams: SearchParams,\n  store: WorkStore\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n  // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n  // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n  // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n  // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n  // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n  let promiseInitialized = false\n  const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string' && promiseInitialized) {\n        if (store.dynamicShouldError) {\n          const expression = describeStringPropertyAccess('searchParams', prop)\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            store.route,\n            expression\n          )\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore()\n        if (workUnitStore) {\n          trackDynamicDataInDynamicRender(workUnitStore)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    has(target, prop) {\n      if (typeof prop === 'string') {\n        if (store.dynamicShouldError) {\n          const expression = describeHasCheckingStringProperty(\n            'searchParams',\n            prop\n          )\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            store.route,\n            expression\n          )\n        }\n      }\n      return Reflect.has(target, prop)\n    },\n    ownKeys(target) {\n      if (store.dynamicShouldError) {\n        const expression =\n          '`{...searchParams}`, `Object.keys(searchParams)`, or similar'\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          store.route,\n          expression\n        )\n      }\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  // We don't use makeResolvedReactPromise here because searchParams\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = makeDevtoolsIOAwarePromise(underlyingSearchParams)\n  promise.then(() => {\n    promiseInitialized = true\n  })\n\n  Object.keys(underlyingSearchParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n      Object.defineProperty(promise, prop, {\n        get() {\n          return proxiedUnderlying[prop]\n        },\n        set(newValue) {\n          Object.defineProperty(promise, prop, {\n            value: newValue,\n            writable: true,\n            enumerable: true,\n          })\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (prop === 'then' && store.dynamicShouldError) {\n        const expression = '`searchParams.then`'\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          store.route,\n          expression\n        )\n      }\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeStringPropertyAccess('searchParams', prop)\n          syncIODev(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return Reflect.set(target, prop, value, receiver)\n    },\n    has(target, prop) {\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeHasCheckingStringProperty(\n            'searchParams',\n            prop\n          )\n          syncIODev(store.route, expression)\n        }\n      }\n      return Reflect.has(target, prop)\n    },\n    ownKeys(target) {\n      const expression = '`Object.keys(searchParams)` or similar'\n      syncIODev(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedSearchParams.set(underlyingSearchParams, proxiedPromise)\n  return proxiedPromise\n}\n\n// Similar to `makeDynamicallyTrackedExoticSearchParamsWithDevWarnings`, but\n// just logging the sync access without actually defining the search params on\n// the promise.\nfunction makeUntrackedSearchParamsWithDevWarnings(\n  underlyingSearchParams: SearchParams,\n  store: WorkStore\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n  const promise = makeDevtoolsIOAwarePromise(underlyingSearchParams)\n\n  Object.keys(underlyingSearchParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeStringPropertyAccess('searchParams', prop)\n          warnForSyncAccess(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return Reflect.set(target, prop, value, receiver)\n    },\n    has(target, prop) {\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeHasCheckingStringProperty(\n            'searchParams',\n            prop\n          )\n          warnForSyncAccess(store.route, expression)\n        }\n      }\n      return Reflect.has(target, prop)\n    },\n    ownKeys(target) {\n      const expression = '`Object.keys(searchParams)` or similar'\n      warnForIncompleteEnumeration(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedSearchParams.set(underlyingSearchParams, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction syncIODev(\n  route: string | undefined,\n  expression: string,\n  missingProperties?: Array<string>\n) {\n  // In all cases we warn normally\n  if (missingProperties && missingProperties.length > 0) {\n    warnForIncompleteEnumeration(route, expression, missingProperties)\n  } else {\n    warnForSyncAccess(route, expression)\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'request':\n        if (workUnitStore.prerenderPhase === true) {\n          // When we're rendering dynamically in dev, we need to advance out of\n          // the Prerender environment when we read Request data synchronously.\n          trackSynchronousRequestDataAccessInDev(workUnitStore)\n        }\n        break\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-runtime':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(\n  createSearchAccessError\n)\n\nconst warnForIncompleteEnumeration =\n  createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError)\n\nfunction createSearchAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`searchParams\\` should be awaited before using its properties. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction createIncompleteEnumerationError(\n  route: string | undefined,\n  expression: string,\n  missingProperties: Array<string>\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`searchParams\\` should be awaited before using its properties. ` +\n      `The following properties were not available through enumeration ` +\n      `because they conflict with builtin or well-known property names: ` +\n      `${describeListOfPropertyNames(missingProperties)}. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction describeListOfPropertyNames(properties: Array<string>) {\n  switch (properties.length) {\n    case 0:\n      throw new InvariantError(\n        'Expected describeListOfPropertyNames to be called with a non-empty list of strings.'\n      )\n    case 1:\n      return `\\`${properties[0]}\\``\n    case 2:\n      return `\\`${properties[0]}\\` and \\`${properties[1]}\\``\n    default: {\n      let description = ''\n      for (let i = 0; i < properties.length - 1; i++) {\n        description += `\\`${properties[i]}\\`, `\n      }\n      description += `, and \\`${properties[properties.length - 1]}\\``\n      return description\n    }\n  }\n}\n","import { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect';\nimport { throwToInterruptStaticGeneration, postponeWithTracking, trackSynchronousRequestDataAccessInDev, delayUntilRuntimeStage } from '../app-render/dynamic-rendering';\nimport { workUnitAsyncStorage, throwInvariantForMissingStore } from '../app-render/work-unit-async-storage.external';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nimport { describeStringPropertyAccess, wellKnownProperties } from '../../shared/lib/utils/reflect-utils';\nimport { makeDevtoolsIOAwarePromise, makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger';\nimport { dynamicAccessAsyncStorage } from '../app-render/dynamic-access-async-storage.external';\nexport function createParamsFromClient(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E736\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                throw Object.defineProperty(new InvariantError('createParamsFromClient should not be called in a runtime prerender.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E770\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport const createServerParamsForMetadata = createServerParamsForServerSegment;\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForRoute should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E738\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createServerParamsForServerSegment(underlyingParams, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                return createStaticPrerenderParams(underlyingParams, workStore, workUnitStore);\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerParamsForServerSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E743\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return createRuntimePrerenderParams(underlyingParams, workUnitStore);\n            case 'request':\n                if (process.env.NODE_ENV === 'development') {\n                    // Semantically we only need the dev tracking when running in `next dev`\n                    // but since you would never use next dev with production NODE_ENV we use this\n                    // as a proxy so we can statically exclude this code from production builds.\n                    const devFallbackParams = workUnitStore.devFallbackParams;\n                    return createRenderParamsInDev(underlyingParams, devFallbackParams, workStore);\n                } else {\n                    return createRenderParamsInProd(underlyingParams);\n                }\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nexport function createPrerenderParamsForClientSegment(underlyingParams) {\n    const workStore = workAsyncStorage.getStore();\n    if (!workStore) {\n        throw Object.defineProperty(new InvariantError('Missing workStore in createPrerenderParamsForClientSegment'), \"__NEXT_ERROR_CODE\", {\n            value: \"E773\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n                const fallbackParams = workUnitStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(let key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingPromise(workUnitStore.renderSignal, workStore.route, '`params`');\n                        }\n                    }\n                }\n                break;\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createPrerenderParamsForClientSegment should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E734\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'prerender-runtime':\n            case 'request':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // We're prerendering in a mode that does not abort. We resolve the promise without\n    // any tracking because we're just transporting a value from server to client where the tracking\n    // will be applied.\n    return Promise.resolve(underlyingParams);\n}\nfunction createStaticPrerenderParams(underlyingParams, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender':\n        case 'prerender-client':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            // This params object has one or more fallback params, so we need\n                            // to consider the awaiting of this params object \"dynamic\". Since\n                            // we are in cacheComponents mode we encode this as a promise that never\n                            // resolves.\n                            return makeHangingParams(underlyingParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams) {\n                    for(const key in underlyingParams){\n                        if (fallbackParams.has(key)) {\n                            return makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore);\n                        }\n                    }\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    } else {\n        return makeUntrackedExoticParams(underlyingParams);\n    }\n}\nfunction createRuntimePrerenderParams(underlyingParams, workUnitStore) {\n    return delayUntilRuntimeStage(workUnitStore, process.env.__NEXT_CACHE_COMPONENTS ? makeUntrackedParams(underlyingParams) : makeUntrackedExoticParams(underlyingParams));\n}\nfunction createRenderParamsInProd(underlyingParams) {\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeUntrackedParams(underlyingParams);\n    }\n    return makeUntrackedExoticParams(underlyingParams);\n}\nfunction createRenderParamsInDev(underlyingParams, devFallbackParams, workStore) {\n    let hasFallbackParams = false;\n    if (devFallbackParams) {\n        for(let key in underlyingParams){\n            if (devFallbackParams.has(key)) {\n                hasFallbackParams = true;\n                break;\n            }\n        }\n    }\n    if (process.env.__NEXT_CACHE_COMPONENTS) {\n        return makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n    }\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, workStore);\n}\nconst CachedParams = new WeakMap();\nconst fallbackParamsProxyHandler = {\n    get: function get(target, prop, receiver) {\n        if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n            const originalMethod = ReflectAdapter.get(target, prop, receiver);\n            return ({\n                [prop]: (...args)=>{\n                    const store = dynamicAccessAsyncStorage.getStore();\n                    if (store) {\n                        store.abortController.abort(Object.defineProperty(new Error(`Accessed fallback \\`params\\` during prerendering.`), \"__NEXT_ERROR_CODE\", {\n                            value: \"E691\",\n                            enumerable: false,\n                            configurable: true\n                        }));\n                    }\n                    return new Proxy(originalMethod.apply(target, args), fallbackParamsProxyHandler);\n                }\n            })[prop];\n        }\n        return ReflectAdapter.get(target, prop, receiver);\n    }\n};\nfunction makeHangingParams(underlyingParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = new Proxy(makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`params`'), fallbackParamsProxyHandler);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeErroringExoticParams(underlyingParams, fallbackParams, workStore, prerenderStore) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const augmentedUnderlying = {\n        ...underlyingParams\n    };\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(augmentedUnderlying);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            if (fallbackParams.has(prop)) {\n                Object.defineProperty(augmentedUnderlying, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    enumerable: true\n                });\n                Object.defineProperty(promise, prop, {\n                    get () {\n                        const expression = describeStringPropertyAccess('params', prop);\n                        // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n                        // for params is only dynamic when we're generating a fallback shell\n                        // and even when `dynamic = \"error\"` we still support generating dynamic\n                        // fallback shells\n                        // TODO remove this comment when cacheComponents is the default since there\n                        // will be no `dynamic = \"error\"`\n                        if (prerenderStore.type === 'prerender-ppr') {\n                            // PPR Prerender (no cacheComponents)\n                            postponeWithTracking(workStore.route, expression, prerenderStore.dynamicTracking);\n                        } else {\n                            // Legacy Prerender\n                            throwToInterruptStaticGeneration(expression, workStore, prerenderStore);\n                        }\n                    },\n                    set (newValue) {\n                        Object.defineProperty(promise, prop, {\n                            value: newValue,\n                            writable: true,\n                            enumerable: true\n                        });\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            } else {\n                ;\n                promise[prop] = underlyingParams[prop];\n            }\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        } else {\n            ;\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedParams(underlyingParams) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    const promise = Promise.resolve(underlyingParams);\n    CachedParams.set(underlyingParams, promise);\n    return promise;\n}\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n            promise[prop] = underlyingParams[prop];\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    syncIODev(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            syncIODev(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\n// Similar to `makeDynamicallyTrackedExoticParamsWithDevWarnings`, but just\n// logging the sync access without actually defining the params on the promise.\nfunction makeDynamicallyTrackedParamsWithDevWarnings(underlyingParams, hasFallbackParams, store) {\n    const cachedParams = CachedParams.get(underlyingParams);\n    if (cachedParams) {\n        return cachedParams;\n    }\n    // We don't use makeResolvedReactPromise here because params\n    // supports copying with spread and we don't want to unnecessarily\n    // instrument the promise with spreadable properties of ReactPromise.\n    const promise = hasFallbackParams ? makeDevtoolsIOAwarePromise(underlyingParams) : Promise.resolve(underlyingParams);\n    const proxiedProperties = new Set();\n    const unproxiedProperties = [];\n    Object.keys(underlyingParams).forEach((prop)=>{\n        if (wellKnownProperties.has(prop)) {\n            // These properties cannot be shadowed because they need to be the\n            // true underlying value for Promises to work correctly at runtime\n            unproxiedProperties.push(prop);\n        } else {\n            proxiedProperties.add(prop);\n        }\n    });\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            if (typeof prop === 'string') {\n                if (// We are accessing a property that was proxied to the promise instance\n                proxiedProperties.has(prop)) {\n                    const expression = describeStringPropertyAccess('params', prop);\n                    warnForSyncAccess(store.route, expression);\n                }\n            }\n            return ReflectAdapter.get(target, prop, receiver);\n        },\n        set (target, prop, value, receiver) {\n            if (typeof prop === 'string') {\n                proxiedProperties.delete(prop);\n            }\n            return ReflectAdapter.set(target, prop, value, receiver);\n        },\n        ownKeys (target) {\n            const expression = '`...params` or similar expression';\n            warnForIncompleteEnumeration(store.route, expression, unproxiedProperties);\n            return Reflect.ownKeys(target);\n        }\n    });\n    CachedParams.set(underlyingParams, proxiedPromise);\n    return proxiedPromise;\n}\nfunction syncIODev(route, expression, missingProperties) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'request':\n                if (workUnitStore.prerenderPhase === true) {\n                    // When we're rendering dynamically in dev, we need to advance out of\n                    // the Prerender environment when we read Request data synchronously.\n                    trackSynchronousRequestDataAccessInDev(workUnitStore);\n                }\n                break;\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-runtime':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                break;\n            default:\n                workUnitStore;\n        }\n    }\n    // In all cases we warn normally\n    if (missingProperties && missingProperties.length > 0) {\n        warnForIncompleteEnumeration(route, expression, missingProperties);\n    } else {\n        warnForSyncAccess(route, expression);\n    }\n}\nconst warnForSyncAccess = createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError);\nconst warnForIncompleteEnumeration = createDedupedByCallsiteServerErrorLoggerDev(createIncompleteEnumerationError);\nfunction createParamsAccessError(route, expression) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E307\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction createIncompleteEnumerationError(route, expression, missingProperties) {\n    const prefix = route ? `Route \"${route}\" ` : 'This route ';\n    return Object.defineProperty(new Error(`${prefix}used ${expression}. ` + `\\`params\\` should be awaited before using its properties. ` + `The following properties were not available through enumeration ` + `because they conflict with builtin property names: ` + `${describeListOfPropertyNames(missingProperties)}. ` + `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`), \"__NEXT_ERROR_CODE\", {\n        value: \"E482\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction describeListOfPropertyNames(properties) {\n    switch(properties.length){\n        case 0:\n            throw Object.defineProperty(new InvariantError('Expected describeListOfPropertyNames to be called with a non-empty list of strings.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E531\",\n                enumerable: false,\n                configurable: true\n            });\n        case 1:\n            return `\\`${properties[0]}\\``;\n        case 2:\n            return `\\`${properties[0]}\\` and \\`${properties[1]}\\``;\n        default:\n            {\n                let description = '';\n                for(let i = 0; i < properties.length - 1; i++){\n                    description += `\\`${properties[i]}\\`, `;\n                }\n                description += `, and \\`${properties[properties.length - 1]}\\``;\n                return description;\n            }\n    }\n}\n\n//# sourceMappingURL=params.js.map","export function nonNullable(value) {\n    return value !== null && value !== undefined;\n}\n\n//# sourceMappingURL=non-nullable.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { nonNullable } from '../../non-nullable';\nexport function Meta({ name, property, content, media }) {\n    if (typeof content !== 'undefined' && content !== null && content !== '') {\n        return /*#__PURE__*/ _jsx(\"meta\", {\n            ...name ? {\n                name\n            } : {\n                property\n            },\n            ...media ? {\n                media\n            } : undefined,\n            content: typeof content === 'string' ? content : content.toString()\n        });\n    }\n    return null;\n}\nexport function MetaFilter(items) {\n    const acc = [];\n    for (const item of items){\n        if (Array.isArray(item)) {\n            acc.push(...item.filter(nonNullable));\n        } else if (nonNullable(item)) {\n            acc.push(item);\n        }\n    }\n    return acc;\n}\nfunction camelToSnake(camelCaseStr) {\n    return camelCaseStr.replace(/([A-Z])/g, function(match) {\n        return '_' + match.toLowerCase();\n    });\n}\nconst aliasPropPrefixes = new Set([\n    'og:image',\n    'twitter:image',\n    'og:video',\n    'og:audio'\n]);\nfunction getMetaKey(prefix, key) {\n    // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n    // to be more compatible as it's a more common format.\n    // `og:video` & `og:audio` do not have a `:url` suffix alias\n    if (aliasPropPrefixes.has(prefix) && key === 'url') {\n        return prefix;\n    }\n    if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n        key = camelToSnake(key);\n    }\n    return prefix + ':' + key;\n}\nfunction ExtendMeta({ content, namePrefix, propertyPrefix }) {\n    if (!content) return null;\n    return MetaFilter(Object.entries(content).map(([k, v])=>{\n        return typeof v === 'undefined' ? null : Meta({\n            ...propertyPrefix && {\n                property: getMetaKey(propertyPrefix, k)\n            },\n            ...namePrefix && {\n                name: getMetaKey(namePrefix, k)\n            },\n            content: typeof v === 'string' ? v : v == null ? void 0 : v.toString()\n        });\n    }));\n}\nexport function MultiMeta({ propertyPrefix, namePrefix, contents }) {\n    if (typeof contents === 'undefined' || contents === null) {\n        return null;\n    }\n    return MetaFilter(contents.map((content)=>{\n        if (typeof content === 'string' || typeof content === 'number' || content instanceof URL) {\n            return Meta({\n                ...propertyPrefix ? {\n                    property: propertyPrefix\n                } : {\n                    name: namePrefix\n                },\n                content\n            });\n        } else {\n            return ExtendMeta({\n                namePrefix,\n                propertyPrefix,\n                content\n            });\n        }\n    }));\n}\n\n//# sourceMappingURL=meta.js.map","export const ViewportMetaKeys = {\n    width: 'width',\n    height: 'height',\n    initialScale: 'initial-scale',\n    minimumScale: 'minimum-scale',\n    maximumScale: 'maximum-scale',\n    viewportFit: 'viewport-fit',\n    userScalable: 'user-scalable',\n    interactiveWidget: 'interactive-widget'\n};\nexport const IconKeys = [\n    'icon',\n    'shortcut',\n    'apple',\n    'other'\n];\n\n//# sourceMappingURL=constants.js.map","function resolveArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    return [\n        value\n    ];\n}\nfunction resolveAsArrayOrUndefined(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return undefined;\n    }\n    return resolveArray(value);\n}\nfunction getOrigin(url) {\n    let origin = undefined;\n    if (typeof url === 'string') {\n        try {\n            url = new URL(url);\n            origin = url.origin;\n        } catch  {}\n    }\n    return origin;\n}\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin };\n\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Meta, MetaFilter, MultiMeta } from './meta';\nimport { ViewportMetaKeys } from '../constants';\nimport { getOrigin } from './utils';\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport) {\n    let resolved = null;\n    if (viewport && typeof viewport === 'object') {\n        resolved = '';\n        for(const viewportKey_ in ViewportMetaKeys){\n            const viewportKey = viewportKey_;\n            if (viewportKey in viewport) {\n                let value = viewport[viewportKey];\n                if (typeof value === 'boolean') {\n                    value = value ? 'yes' : 'no';\n                } else if (!value && viewportKey === 'initialScale') {\n                    value = undefined;\n                }\n                if (value) {\n                    if (resolved) resolved += ', ';\n                    resolved += `${ViewportMetaKeys[viewportKey]}=${value}`;\n                }\n            }\n        }\n    }\n    return resolved;\n}\nexport function ViewportMeta({ viewport }) {\n    return MetaFilter([\n        /*#__PURE__*/ _jsx(\"meta\", {\n            charSet: \"utf-8\"\n        }),\n        Meta({\n            name: 'viewport',\n            content: resolveViewportLayout(viewport)\n        }),\n        ...viewport.themeColor ? viewport.themeColor.map((themeColor)=>Meta({\n                name: 'theme-color',\n                content: themeColor.color,\n                media: themeColor.media\n            })) : [],\n        Meta({\n            name: 'color-scheme',\n            content: viewport.colorScheme\n        })\n    ]);\n}\nexport function BasicMeta({ metadata }) {\n    var _metadata_keywords, _metadata_robots, _metadata_robots1;\n    const manifestOrigin = metadata.manifest ? getOrigin(metadata.manifest) : undefined;\n    return MetaFilter([\n        metadata.title !== null && metadata.title.absolute ? /*#__PURE__*/ _jsx(\"title\", {\n            children: metadata.title.absolute\n        }) : null,\n        Meta({\n            name: 'description',\n            content: metadata.description\n        }),\n        Meta({\n            name: 'application-name',\n            content: metadata.applicationName\n        }),\n        ...metadata.authors ? metadata.authors.map((author)=>[\n                author.url ? /*#__PURE__*/ _jsx(\"link\", {\n                    rel: \"author\",\n                    href: author.url.toString()\n                }) : null,\n                Meta({\n                    name: 'author',\n                    content: author.name\n                })\n            ]) : [],\n        metadata.manifest ? /*#__PURE__*/ _jsx(\"link\", {\n            rel: \"manifest\",\n            href: metadata.manifest.toString(),\n            // If it's same origin, and it's a preview deployment,\n            // including credentials for manifest request.\n            crossOrigin: !manifestOrigin && process.env.VERCEL_ENV === 'preview' ? 'use-credentials' : undefined\n        }) : null,\n        Meta({\n            name: 'generator',\n            content: metadata.generator\n        }),\n        Meta({\n            name: 'keywords',\n            content: (_metadata_keywords = metadata.keywords) == null ? void 0 : _metadata_keywords.join(',')\n        }),\n        Meta({\n            name: 'referrer',\n            content: metadata.referrer\n        }),\n        Meta({\n            name: 'creator',\n            content: metadata.creator\n        }),\n        Meta({\n            name: 'publisher',\n            content: metadata.publisher\n        }),\n        Meta({\n            name: 'robots',\n            content: (_metadata_robots = metadata.robots) == null ? void 0 : _metadata_robots.basic\n        }),\n        Meta({\n            name: 'googlebot',\n            content: (_metadata_robots1 = metadata.robots) == null ? void 0 : _metadata_robots1.googleBot\n        }),\n        Meta({\n            name: 'abstract',\n            content: metadata.abstract\n        }),\n        ...metadata.archives ? metadata.archives.map((archive)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"archives\",\n                href: archive\n            })) : [],\n        ...metadata.assets ? metadata.assets.map((asset)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"assets\",\n                href: asset\n            })) : [],\n        ...metadata.bookmarks ? metadata.bookmarks.map((bookmark)=>/*#__PURE__*/ _jsx(\"link\", {\n                rel: \"bookmarks\",\n                href: bookmark\n            })) : [],\n        ...metadata.pagination ? [\n            metadata.pagination.previous ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"prev\",\n                href: metadata.pagination.previous\n            }) : null,\n            metadata.pagination.next ? /*#__PURE__*/ _jsx(\"link\", {\n                rel: \"next\",\n                href: metadata.pagination.next\n            }) : null\n        ] : [],\n        Meta({\n            name: 'category',\n            content: metadata.category\n        }),\n        Meta({\n            name: 'classification',\n            content: metadata.classification\n        }),\n        ...metadata.other ? Object.entries(metadata.other).map(([name, content])=>{\n            if (Array.isArray(content)) {\n                return content.map((contentItem)=>Meta({\n                        name,\n                        content: contentItem\n                    }));\n            } else {\n                return Meta({\n                    name,\n                    content\n                });\n            }\n        }) : []\n    ]);\n}\nexport function ItunesMeta({ itunes }) {\n    if (!itunes) return null;\n    const { appId, appArgument } = itunes;\n    let content = `app-id=${appId}`;\n    if (appArgument) {\n        content += `, app-argument=${appArgument}`;\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"apple-itunes-app\",\n        content: content\n    });\n}\nexport function FacebookMeta({ facebook }) {\n    if (!facebook) return null;\n    const { appId, admins } = facebook;\n    return MetaFilter([\n        appId ? /*#__PURE__*/ _jsx(\"meta\", {\n            property: \"fb:app_id\",\n            content: appId\n        }) : null,\n        ...admins ? admins.map((admin)=>/*#__PURE__*/ _jsx(\"meta\", {\n                property: \"fb:admins\",\n                content: admin\n            })) : []\n    ]);\n}\nexport function PinterestMeta({ pinterest }) {\n    if (!pinterest || !pinterest.richPin) return null;\n    const { richPin } = pinterest;\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        property: \"pinterest-rich-pin\",\n        content: richPin.toString()\n    });\n}\nconst formatDetectionKeys = [\n    'telephone',\n    'date',\n    'address',\n    'email',\n    'url'\n];\nexport function FormatDetectionMeta({ formatDetection }) {\n    if (!formatDetection) return null;\n    let content = '';\n    for (const key of formatDetectionKeys){\n        if (key in formatDetection) {\n            if (content) content += ', ';\n            content += `${key}=no`;\n        }\n    }\n    return /*#__PURE__*/ _jsx(\"meta\", {\n        name: \"format-detection\",\n        content: content\n    });\n}\nexport function AppleWebAppMeta({ appleWebApp }) {\n    if (!appleWebApp) return null;\n    const { capable, title, startupImage, statusBarStyle } = appleWebApp;\n    return MetaFilter([\n        capable ? Meta({\n            name: 'mobile-web-app-capable',\n            content: 'yes'\n        }) : null,\n        Meta({\n            name: 'apple-mobile-web-app-title',\n            content: title\n        }),\n        startupImage ? startupImage.map((image)=>/*#__PURE__*/ _jsx(\"link\", {\n                href: image.url,\n                media: image.media,\n                rel: \"apple-touch-startup-image\"\n            })) : null,\n        statusBarStyle ? Meta({\n            name: 'apple-mobile-web-app-status-bar-style',\n            content: statusBarStyle\n        }) : null\n    ]);\n}\nexport function VerificationMeta({ verification }) {\n    if (!verification) return null;\n    return MetaFilter([\n        MultiMeta({\n            namePrefix: 'google-site-verification',\n            contents: verification.google\n        }),\n        MultiMeta({\n            namePrefix: 'y_key',\n            contents: verification.yahoo\n        }),\n        MultiMeta({\n            namePrefix: 'yandex-verification',\n            contents: verification.yandex\n        }),\n        MultiMeta({\n            namePrefix: 'me',\n            contents: verification.me\n        }),\n        ...verification.other ? Object.entries(verification.other).map(([key, value])=>MultiMeta({\n                namePrefix: key,\n                contents: value\n            })) : []\n    ]);\n}\n\n//# sourceMappingURL=basic.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { MetaFilter } from './meta';\nfunction AlternateLink({ descriptor, ...props }) {\n    if (!descriptor.url) return null;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        ...props,\n        ...descriptor.title && {\n            title: descriptor.title\n        },\n        href: descriptor.url.toString()\n    });\n}\nexport function AlternatesMetadata({ alternates }) {\n    if (!alternates) return null;\n    const { canonical, languages, media, types } = alternates;\n    return MetaFilter([\n        canonical ? AlternateLink({\n            rel: 'canonical',\n            descriptor: canonical\n        }) : null,\n        languages ? Object.entries(languages).flatMap(([locale, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    hrefLang: locale,\n                    descriptor\n                }))) : null,\n        media ? Object.entries(media).flatMap(([mediaName, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    media: mediaName,\n                    descriptor\n                }))) : null,\n        types ? Object.entries(types).flatMap(([type, descriptors])=>descriptors == null ? void 0 : descriptors.map((descriptor)=>AlternateLink({\n                    rel: 'alternate',\n                    type,\n                    descriptor\n                }))) : null\n    ]);\n}\n\n//# sourceMappingURL=alternate.js.map","import { Meta, MetaFilter, MultiMeta } from './meta';\nexport function OpenGraphMetadata({ openGraph }) {\n    var _openGraph_title, _openGraph_url, _openGraph_ttl;\n    if (!openGraph) {\n        return null;\n    }\n    let typedOpenGraph;\n    if ('type' in openGraph) {\n        const openGraphType = openGraph.type;\n        switch(openGraphType){\n            case 'website':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'website'\n                    })\n                ];\n                break;\n            case 'article':\n                var _openGraph_publishedTime, _openGraph_modifiedTime, _openGraph_expirationTime;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'article'\n                    }),\n                    Meta({\n                        property: 'article:published_time',\n                        content: (_openGraph_publishedTime = openGraph.publishedTime) == null ? void 0 : _openGraph_publishedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:modified_time',\n                        content: (_openGraph_modifiedTime = openGraph.modifiedTime) == null ? void 0 : _openGraph_modifiedTime.toString()\n                    }),\n                    Meta({\n                        property: 'article:expiration_time',\n                        content: (_openGraph_expirationTime = openGraph.expirationTime) == null ? void 0 : _openGraph_expirationTime.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:author',\n                        contents: openGraph.authors\n                    }),\n                    Meta({\n                        property: 'article:section',\n                        content: openGraph.section\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'article:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'book':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'book'\n                    }),\n                    Meta({\n                        property: 'book:isbn',\n                        content: openGraph.isbn\n                    }),\n                    Meta({\n                        property: 'book:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:author',\n                        contents: openGraph.authors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'book:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'profile':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'profile'\n                    }),\n                    Meta({\n                        property: 'profile:first_name',\n                        content: openGraph.firstName\n                    }),\n                    Meta({\n                        property: 'profile:last_name',\n                        content: openGraph.lastName\n                    }),\n                    Meta({\n                        property: 'profile:username',\n                        content: openGraph.username\n                    }),\n                    Meta({\n                        property: 'profile:gender',\n                        content: openGraph.gender\n                    })\n                ];\n                break;\n            case 'music.song':\n                var _openGraph_duration;\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.song'\n                    }),\n                    Meta({\n                        property: 'music:duration',\n                        content: (_openGraph_duration = openGraph.duration) == null ? void 0 : _openGraph_duration.toString()\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:album',\n                        contents: openGraph.albums\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    })\n                ];\n                break;\n            case 'music.album':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.album'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:musician',\n                        contents: openGraph.musicians\n                    }),\n                    Meta({\n                        property: 'music:release_date',\n                        content: openGraph.releaseDate\n                    })\n                ];\n                break;\n            case 'music.playlist':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.playlist'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:song',\n                        contents: openGraph.songs\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'music.radio_station':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'music.radio_station'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'music:creator',\n                        contents: openGraph.creators\n                    })\n                ];\n                break;\n            case 'video.movie':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.movie'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    })\n                ];\n                break;\n            case 'video.episode':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.episode'\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:actor',\n                        contents: openGraph.actors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:director',\n                        contents: openGraph.directors\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:writer',\n                        contents: openGraph.writers\n                    }),\n                    Meta({\n                        property: 'video:duration',\n                        content: openGraph.duration\n                    }),\n                    Meta({\n                        property: 'video:release_date',\n                        content: openGraph.releaseDate\n                    }),\n                    MultiMeta({\n                        propertyPrefix: 'video:tag',\n                        contents: openGraph.tags\n                    }),\n                    Meta({\n                        property: 'video:series',\n                        content: openGraph.series\n                    })\n                ];\n                break;\n            case 'video.tv_show':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.tv_show'\n                    })\n                ];\n                break;\n            case 'video.other':\n                typedOpenGraph = [\n                    Meta({\n                        property: 'og:type',\n                        content: 'video.other'\n                    })\n                ];\n                break;\n            default:\n                const _exhaustiveCheck = openGraphType;\n                throw Object.defineProperty(new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E237\",\n                    enumerable: false,\n                    configurable: true\n                });\n        }\n    }\n    return MetaFilter([\n        Meta({\n            property: 'og:determiner',\n            content: openGraph.determiner\n        }),\n        Meta({\n            property: 'og:title',\n            content: (_openGraph_title = openGraph.title) == null ? void 0 : _openGraph_title.absolute\n        }),\n        Meta({\n            property: 'og:description',\n            content: openGraph.description\n        }),\n        Meta({\n            property: 'og:url',\n            content: (_openGraph_url = openGraph.url) == null ? void 0 : _openGraph_url.toString()\n        }),\n        Meta({\n            property: 'og:site_name',\n            content: openGraph.siteName\n        }),\n        Meta({\n            property: 'og:locale',\n            content: openGraph.locale\n        }),\n        Meta({\n            property: 'og:country_name',\n            content: openGraph.countryName\n        }),\n        Meta({\n            property: 'og:ttl',\n            content: (_openGraph_ttl = openGraph.ttl) == null ? void 0 : _openGraph_ttl.toString()\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:image',\n            contents: openGraph.images\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:video',\n            contents: openGraph.videos\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:audio',\n            contents: openGraph.audio\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:email',\n            contents: openGraph.emails\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:phone_number',\n            contents: openGraph.phoneNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:fax_number',\n            contents: openGraph.faxNumbers\n        }),\n        MultiMeta({\n            propertyPrefix: 'og:locale:alternate',\n            contents: openGraph.alternateLocale\n        }),\n        ...typedOpenGraph ? typedOpenGraph : []\n    ]);\n}\nfunction TwitterAppItem({ app, type }) {\n    var _app_url_type, _app_url;\n    return [\n        Meta({\n            name: `twitter:app:name:${type}`,\n            content: app.name\n        }),\n        Meta({\n            name: `twitter:app:id:${type}`,\n            content: app.id[type]\n        }),\n        Meta({\n            name: `twitter:app:url:${type}`,\n            content: (_app_url = app.url) == null ? void 0 : (_app_url_type = _app_url[type]) == null ? void 0 : _app_url_type.toString()\n        })\n    ];\n}\nexport function TwitterMetadata({ twitter }) {\n    var _twitter_title;\n    if (!twitter) return null;\n    const { card } = twitter;\n    return MetaFilter([\n        Meta({\n            name: 'twitter:card',\n            content: card\n        }),\n        Meta({\n            name: 'twitter:site',\n            content: twitter.site\n        }),\n        Meta({\n            name: 'twitter:site:id',\n            content: twitter.siteId\n        }),\n        Meta({\n            name: 'twitter:creator',\n            content: twitter.creator\n        }),\n        Meta({\n            name: 'twitter:creator:id',\n            content: twitter.creatorId\n        }),\n        Meta({\n            name: 'twitter:title',\n            content: (_twitter_title = twitter.title) == null ? void 0 : _twitter_title.absolute\n        }),\n        Meta({\n            name: 'twitter:description',\n            content: twitter.description\n        }),\n        MultiMeta({\n            namePrefix: 'twitter:image',\n            contents: twitter.images\n        }),\n        ...card === 'player' ? twitter.players.flatMap((player)=>[\n                Meta({\n                    name: 'twitter:player',\n                    content: player.playerUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:stream',\n                    content: player.streamUrl.toString()\n                }),\n                Meta({\n                    name: 'twitter:player:width',\n                    content: player.width\n                }),\n                Meta({\n                    name: 'twitter:player:height',\n                    content: player.height\n                })\n            ]) : [],\n        ...card === 'app' ? [\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'iphone'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'ipad'\n            }),\n            TwitterAppItem({\n                app: twitter.app,\n                type: 'googleplay'\n            })\n        ] : []\n    ]);\n}\nexport function AppLinksMeta({ appLinks }) {\n    if (!appLinks) return null;\n    return MetaFilter([\n        MultiMeta({\n            propertyPrefix: 'al:ios',\n            contents: appLinks.ios\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:iphone',\n            contents: appLinks.iphone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:ipad',\n            contents: appLinks.ipad\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:android',\n            contents: appLinks.android\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_phone',\n            contents: appLinks.windows_phone\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows',\n            contents: appLinks.windows\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:windows_universal',\n            contents: appLinks.windows_universal\n        }),\n        MultiMeta({\n            propertyPrefix: 'al:web',\n            contents: appLinks.web\n        })\n    ]);\n}\n\n//# sourceMappingURL=opengraph.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { IconMark } from './icon-mark';\nimport { MetaFilter } from './meta';\nfunction IconDescriptorLink({ icon }) {\n    const { url, rel = 'icon', ...props } = icon;\n    return /*#__PURE__*/ _jsx(\"link\", {\n        rel: rel,\n        href: url.toString(),\n        ...props\n    });\n}\nfunction IconLink({ rel, icon }) {\n    if (typeof icon === 'object' && !(icon instanceof URL)) {\n        if (!icon.rel && rel) icon.rel = rel;\n        return IconDescriptorLink({\n            icon\n        });\n    } else {\n        const href = icon.toString();\n        return /*#__PURE__*/ _jsx(\"link\", {\n            rel: rel,\n            href: href\n        });\n    }\n}\nexport function IconsMetadata({ icons }) {\n    if (!icons) return null;\n    const shortcutList = icons.shortcut;\n    const iconList = icons.icon;\n    const appleList = icons.apple;\n    const otherList = icons.other;\n    const hasIcon = Boolean((shortcutList == null ? void 0 : shortcutList.length) || (iconList == null ? void 0 : iconList.length) || (appleList == null ? void 0 : appleList.length) || (otherList == null ? void 0 : otherList.length));\n    if (!hasIcon) return null;\n    return MetaFilter([\n        shortcutList ? shortcutList.map((icon)=>IconLink({\n                rel: 'shortcut icon',\n                icon\n            })) : null,\n        iconList ? iconList.map((icon)=>IconLink({\n                rel: 'icon',\n                icon\n            })) : null,\n        appleList ? appleList.map((icon)=>IconLink({\n                rel: 'apple-touch-icon',\n                icon\n            })) : null,\n        otherList ? otherList.map((icon)=>IconDescriptorLink({\n                icon\n            })) : null,\n        hasIcon ? /*#__PURE__*/ _jsx(IconMark, {}) : null\n    ]);\n}\n\n//# sourceMappingURL=icons.js.map","export function createDefaultViewport() {\n    return {\n        // name=viewport\n        width: 'device-width',\n        initialScale: 1,\n        // visual metadata\n        themeColor: null,\n        colorScheme: null\n    };\n}\nexport function createDefaultMetadata() {\n    return {\n        // Deprecated ones\n        viewport: null,\n        themeColor: null,\n        colorScheme: null,\n        metadataBase: null,\n        // Other values are all null\n        title: null,\n        description: null,\n        applicationName: null,\n        authors: null,\n        generator: null,\n        keywords: null,\n        referrer: null,\n        creator: null,\n        publisher: null,\n        robots: null,\n        manifest: null,\n        alternates: {\n            canonical: null,\n            languages: null,\n            media: null,\n            types: null\n        },\n        icons: null,\n        openGraph: null,\n        twitter: null,\n        verification: {},\n        appleWebApp: null,\n        formatDetection: null,\n        itunes: null,\n        facebook: null,\n        pinterest: null,\n        abstract: null,\n        appLinks: null,\n        archives: null,\n        assets: null,\n        bookmarks: null,\n        category: null,\n        classification: null,\n        pagination: {\n            previous: null,\n            next: null\n        },\n        other: {}\n    };\n}\n\n//# sourceMappingURL=default-metadata.js.map","import path from '../../../shared/lib/isomorphic/path';\nfunction isStringOrURL(icon) {\n    return typeof icon === 'string' || icon instanceof URL;\n}\nfunction createLocalMetadataBase() {\n    // Check if experimental HTTPS is enabled\n    const isExperimentalHttps = Boolean(process.env.__NEXT_EXPERIMENTAL_HTTPS);\n    const protocol = isExperimentalHttps ? 'https' : 'http';\n    return new URL(`${protocol}://localhost:${process.env.PORT || 3000}`);\n}\nfunction getPreviewDeploymentUrl() {\n    const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\nfunction getProductionDeploymentUrl() {\n    const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL;\n    return origin ? new URL(`https://${origin}`) : undefined;\n}\n/**\n * Given an optional user-provided metadataBase, this determines what the metadataBase should\n * fallback to. Specifically:\n * - In dev, it should always be localhost\n * - In Vercel preview builds, it should be the preview build ID\n * - In start, it should be the user-provided metadataBase value. Otherwise,\n * it'll fall back to the Vercel production deployment, and localhost as a last resort.\n */ export function getSocialImageMetadataBaseFallback(metadataBase) {\n    const defaultMetadataBase = createLocalMetadataBase();\n    const previewDeploymentUrl = getPreviewDeploymentUrl();\n    const productionDeploymentUrl = getProductionDeploymentUrl();\n    let fallbackMetadataBase;\n    if (process.env.NODE_ENV === 'development') {\n        fallbackMetadataBase = defaultMetadataBase;\n    } else {\n        fallbackMetadataBase = process.env.NODE_ENV === 'production' && previewDeploymentUrl && process.env.VERCEL_ENV === 'preview' ? previewDeploymentUrl : metadataBase || productionDeploymentUrl || defaultMetadataBase;\n    }\n    return fallbackMetadataBase;\n}\nfunction resolveUrl(url, metadataBase) {\n    if (url instanceof URL) return url;\n    if (!url) return null;\n    try {\n        // If we can construct a URL instance from url, ignore metadataBase\n        const parsedUrl = new URL(url);\n        return parsedUrl;\n    } catch  {}\n    if (!metadataBase) {\n        metadataBase = createLocalMetadataBase();\n    }\n    // Handle relative or absolute paths\n    const pathname = metadataBase.pathname || '';\n    const joinedPath = path.posix.join(pathname, url);\n    return new URL(joinedPath, metadataBase);\n}\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url, pathname) {\n    if (typeof url === 'string' && url.startsWith('./')) {\n        return path.posix.resolve(pathname, url);\n    }\n    return url;\n}\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX = /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i;\nfunction isFilePattern(pathname) {\n    return FILE_REGEX.test(pathname);\n}\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(url, metadataBase, pathname, { trailingSlash }) {\n    // Resolve url with pathname that always starts with `/`\n    url = resolveRelativeUrl(url, pathname);\n    // Convert string url or URL instance to absolute url string,\n    // if there's case needs to be resolved with metadataBase\n    let resolvedUrl = '';\n    const result = metadataBase ? resolveUrl(url, metadataBase) : url;\n    if (typeof result === 'string') {\n        resolvedUrl = result;\n    } else {\n        resolvedUrl = result.pathname === '/' ? result.origin : result.href;\n    }\n    // Add trailing slash if it's enabled for urls matches the condition\n    // - Not external, same origin with metadataBase\n    // - Doesn't have query\n    if (trailingSlash && !resolvedUrl.endsWith('/')) {\n        let isRelative = resolvedUrl.startsWith('/');\n        let hasQuery = resolvedUrl.includes('?');\n        let isExternal = false;\n        let isFileUrl = false;\n        if (!isRelative) {\n            try {\n                const parsedUrl = new URL(resolvedUrl);\n                isExternal = metadataBase != null && parsedUrl.origin !== metadataBase.origin;\n                isFileUrl = isFilePattern(parsedUrl.pathname);\n            } catch  {\n                // If it's not a valid URL, treat it as external\n                isExternal = true;\n            }\n            if (// Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n            !isFileUrl && !isExternal && !hasQuery) return `${resolvedUrl}/`;\n        }\n    }\n    return resolvedUrl;\n}\nexport { isStringOrURL, resolveUrl, resolveRelativeUrl, resolveAbsoluteUrlWithPathname,  };\n\n//# sourceMappingURL=resolve-url.js.map","function resolveTitleTemplate(template, title) {\n    return template ? template.replace(/%s/g, title) : title;\n}\nexport function resolveTitle(title, stashedTemplate) {\n    let resolved;\n    const template = typeof title !== 'string' && title && 'template' in title ? title.template : null;\n    if (typeof title === 'string') {\n        resolved = resolveTitleTemplate(stashedTemplate, title);\n    } else if (title) {\n        if ('default' in title) {\n            resolved = resolveTitleTemplate(stashedTemplate, title.default);\n        }\n        if ('absolute' in title && title.absolute) {\n            resolved = title.absolute;\n        }\n    }\n    if (title && typeof title !== 'string') {\n        return {\n            template,\n            absolute: resolved || ''\n        };\n    } else {\n        return {\n            absolute: resolved || title || '',\n            template\n        };\n    }\n}\n\n//# sourceMappingURL=resolve-title.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function parseReqUrl(url) {\n    const parsedUrl = parseUrl(url);\n    if (!parsedUrl) {\n        return;\n    }\n    const query = {};\n    for (const key of parsedUrl.searchParams.keys()){\n        const values = parsedUrl.searchParams.getAll(key);\n        query[key] = values.length > 1 ? values : values[0];\n    }\n    const legacyUrl = {\n        query,\n        hash: parsedUrl.hash,\n        search: parsedUrl.search,\n        path: parsedUrl.pathname,\n        pathname: parsedUrl.pathname,\n        href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n        host: '',\n        hostname: '',\n        auth: '',\n        protocol: '',\n        slashes: null,\n        port: ''\n    };\n    return legacyUrl;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","// ISC License\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\nvar _globalThis;\nconst { env, stdout } = ((_globalThis = globalThis) == null ? void 0 : _globalThis.process) ?? {};\nconst enabled = env && !env.NO_COLOR && (env.FORCE_COLOR || (stdout == null ? void 0 : stdout.isTTY) && !env.CI && env.TERM !== 'dumb');\nconst replaceClose = (str, close, replace, index)=>{\n    const start = str.substring(0, index) + replace;\n    const end = str.substring(index + close.length);\n    const nextIndex = end.indexOf(close);\n    return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;\n};\nconst formatter = (open, close, replace = open)=>{\n    if (!enabled) return String;\n    return (input)=>{\n        const string = '' + input;\n        const index = string.indexOf(close, open.length);\n        return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;\n    };\n};\nexport const reset = enabled ? (s)=>`\\x1b[0m${s}\\x1b[0m` : String;\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m');\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m');\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m');\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m');\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m');\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m');\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m');\nexport const black = formatter('\\x1b[30m', '\\x1b[39m');\nexport const red = formatter('\\x1b[31m', '\\x1b[39m');\nexport const green = formatter('\\x1b[32m', '\\x1b[39m');\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m');\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m');\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m');\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m');\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m');\nexport const white = formatter('\\x1b[37m', '\\x1b[39m');\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m');\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m');\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m');\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m');\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m');\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m');\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m');\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m');\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m');\n\n//# sourceMappingURL=picocolors.js.map","/**\n * Node in the doubly-linked list used for LRU tracking.\n * Each node represents a cache entry with bidirectional pointers.\n */ class LRUNode {\n    constructor(key, data, size){\n        this.prev = null;\n        this.next = null;\n        this.key = key;\n        this.data = data;\n        this.size = size;\n    }\n}\n/**\n * Sentinel node used for head/tail boundaries.\n * These nodes don't contain actual cache data but simplify list operations.\n */ class SentinelNode {\n    constructor(){\n        this.prev = null;\n        this.next = null;\n    }\n}\n/**\n * LRU (Least Recently Used) Cache implementation using a doubly-linked list\n * and hash map for O(1) operations.\n *\n * Algorithm:\n * - Uses a doubly-linked list to maintain access order (most recent at head)\n * - Hash map provides O(1) key-to-node lookup\n * - Sentinel head/tail nodes simplify edge case handling\n * - Size-based eviction supports custom size calculation functions\n *\n * Data Structure Layout:\n * HEAD <-> [most recent] <-> ... <-> [least recent] <-> TAIL\n *\n * Operations:\n * - get(): Move accessed node to head (mark as most recent)\n * - set(): Add new node at head, evict from tail if over capacity\n * - Eviction: Remove least recent node (tail.prev) when size exceeds limit\n */ export class LRUCache {\n    constructor(maxSize, calculateSize){\n        this.cache = new Map();\n        this.totalSize = 0;\n        this.maxSize = maxSize;\n        this.calculateSize = calculateSize;\n        // Create sentinel nodes to simplify doubly-linked list operations\n        // HEAD <-> TAIL (empty list)\n        this.head = new SentinelNode();\n        this.tail = new SentinelNode();\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    }\n    /**\n   * Adds a node immediately after the head (marks as most recently used).\n   * Used when inserting new items or when an item is accessed.\n   * PRECONDITION: node must be disconnected (prev/next should be null)\n   */ addToHead(node) {\n        node.prev = this.head;\n        node.next = this.head.next;\n        // head.next is always non-null (points to tail or another node)\n        this.head.next.prev = node;\n        this.head.next = node;\n    }\n    /**\n   * Removes a node from its current position in the doubly-linked list.\n   * Updates the prev/next pointers of adjacent nodes to maintain list integrity.\n   * PRECONDITION: node must be connected (prev/next are non-null)\n   */ removeNode(node) {\n        // Connected nodes always have non-null prev/next\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n    }\n    /**\n   * Moves an existing node to the head position (marks as most recently used).\n   * This is the core LRU operation - accessed items become most recent.\n   */ moveToHead(node) {\n        this.removeNode(node);\n        this.addToHead(node);\n    }\n    /**\n   * Removes and returns the least recently used node (the one before tail).\n   * This is called during eviction when the cache exceeds capacity.\n   * PRECONDITION: cache is not empty (ensured by caller)\n   */ removeTail() {\n        const lastNode = this.tail.prev;\n        // tail.prev is always non-null and always LRUNode when cache is not empty\n        this.removeNode(lastNode);\n        return lastNode;\n    }\n    /**\n   * Sets a key-value pair in the cache.\n   * If the key exists, updates the value and moves to head.\n   * If new, adds at head and evicts from tail if necessary.\n   *\n   * Time Complexity:\n   * - O(1) for uniform item sizes\n   * - O(k) where k is the number of items evicted (can be O(N) for variable sizes)\n   */ set(key, value) {\n        const size = (this.calculateSize == null ? void 0 : this.calculateSize.call(this, value)) ?? 1;\n        if (size > this.maxSize) {\n            console.warn('Single item size exceeds maxSize');\n            return;\n        }\n        const existing = this.cache.get(key);\n        if (existing) {\n            // Update existing node: adjust size and move to head (most recent)\n            existing.data = value;\n            this.totalSize = this.totalSize - existing.size + size;\n            existing.size = size;\n            this.moveToHead(existing);\n        } else {\n            // Add new node at head (most recent position)\n            const newNode = new LRUNode(key, value, size);\n            this.cache.set(key, newNode);\n            this.addToHead(newNode);\n            this.totalSize += size;\n        }\n        // Evict least recently used items until under capacity\n        while(this.totalSize > this.maxSize && this.cache.size > 0){\n            const tail = this.removeTail();\n            this.cache.delete(tail.key);\n            this.totalSize -= tail.size;\n        }\n    }\n    /**\n   * Checks if a key exists in the cache.\n   * This is a pure query operation - does NOT update LRU order.\n   *\n   * Time Complexity: O(1)\n   */ has(key) {\n        return this.cache.has(key);\n    }\n    /**\n   * Retrieves a value by key and marks it as most recently used.\n   * Moving to head maintains the LRU property for future evictions.\n   *\n   * Time Complexity: O(1)\n   */ get(key) {\n        const node = this.cache.get(key);\n        if (!node) return undefined;\n        // Mark as most recently used by moving to head\n        this.moveToHead(node);\n        return node.data;\n    }\n    /**\n   * Returns an iterator over the cache entries. The order is outputted in the\n   * order of most recently used to least recently used.\n   */ *[Symbol.iterator]() {\n        let current = this.head.next;\n        while(current && current !== this.tail){\n            // Between head and tail, current is always LRUNode\n            const node = current;\n            yield [\n                node.key,\n                node.data\n            ];\n            current = current.next;\n        }\n    }\n    /**\n   * Removes a specific key from the cache.\n   * Updates both the hash map and doubly-linked list.\n   *\n   * Time Complexity: O(1)\n   */ remove(key) {\n        const node = this.cache.get(key);\n        if (!node) return;\n        this.removeNode(node);\n        this.cache.delete(key);\n        this.totalSize -= node.size;\n    }\n    /**\n   * Returns the number of items in the cache.\n   */ get size() {\n        return this.cache.size;\n    }\n    /**\n   * Returns the current total size of all cached items.\n   * This uses the custom size calculation if provided.\n   */ get currentSize() {\n        return this.totalSize;\n    }\n}\n\n//# sourceMappingURL=lru-cache.js.map","import { bold, green, magenta, red, yellow, white } from '../../lib/picocolors';\nimport { LRUCache } from '../../server/lib/lru-cache';\nexport const prefixes = {\n    wait: white(bold('○')),\n    error: red(bold('⨯')),\n    warn: yellow(bold('⚠')),\n    ready: '▲',\n    info: white(bold(' ')),\n    event: green(bold('✓')),\n    trace: magenta(bold('»'))\n};\nconst LOGGING_METHOD = {\n    log: 'log',\n    warn: 'warn',\n    error: 'error'\n};\nfunction prefixedLog(prefixType, ...message) {\n    if ((message[0] === '' || message[0] === undefined) && message.length === 1) {\n        message.shift();\n    }\n    const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : 'log';\n    const prefix = prefixes[prefixType];\n    // If there's no message, don't print the prefix but a new line\n    if (message.length === 0) {\n        console[consoleMethod]('');\n    } else {\n        // Ensure if there's ANSI escape codes it's concatenated into one string.\n        // Chrome DevTool can only handle color if it's in one string.\n        if (message.length === 1 && typeof message[0] === 'string') {\n            console[consoleMethod](' ' + prefix + ' ' + message[0]);\n        } else {\n            console[consoleMethod](' ' + prefix, ...message);\n        }\n    }\n}\nexport function bootstrap(...message) {\n    // logging format: ' <prefix> <message>'\n    // e.g. ' ✓ Compiled successfully'\n    // Add spaces to align with the indent of other logs\n    console.log('   ' + message.join(' '));\n}\nexport function wait(...message) {\n    prefixedLog('wait', ...message);\n}\nexport function error(...message) {\n    prefixedLog('error', ...message);\n}\nexport function warn(...message) {\n    prefixedLog('warn', ...message);\n}\nexport function ready(...message) {\n    prefixedLog('ready', ...message);\n}\nexport function info(...message) {\n    prefixedLog('info', ...message);\n}\nexport function event(...message) {\n    prefixedLog('event', ...message);\n}\nexport function trace(...message) {\n    prefixedLog('trace', ...message);\n}\nconst warnOnceCache = new LRUCache(10000, (value)=>value.length);\nexport function warnOnce(...message) {\n    const key = message.join(' ');\n    if (!warnOnceCache.has(key)) {\n        warnOnceCache.set(key, key);\n        warn(...message);\n    }\n}\n\n//# sourceMappingURL=log.js.map","import { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils';\nimport { getSocialImageMetadataBaseFallback, isStringOrURL, resolveUrl, resolveAbsoluteUrlWithPathname } from './resolve-url';\nimport { resolveTitle } from './resolve-title';\nimport { isFullStringUrl } from '../../url';\nimport { warnOnce } from '../../../build/output/log';\nconst OgTypeFields = {\n    article: [\n        'authors',\n        'tags'\n    ],\n    song: [\n        'albums',\n        'musicians'\n    ],\n    playlist: [\n        'albums',\n        'musicians'\n    ],\n    radio: [\n        'creators'\n    ],\n    video: [\n        'actors',\n        'directors',\n        'writers',\n        'tags'\n    ],\n    basic: [\n        'emails',\n        'phoneNumbers',\n        'faxNumbers',\n        'alternateLocale',\n        'audio',\n        'videos'\n    ]\n};\nfunction resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile) {\n    if (!item) return undefined;\n    const isItemUrl = isStringOrURL(item);\n    const inputUrl = isItemUrl ? item : item.url;\n    if (!inputUrl) return undefined;\n    // process.env.VERCEL is set to \"1\" when System Environment Variables are\n    // exposed. When exposed, validation is not necessary since we are falling back to\n    // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n    // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n    // when System Environment Variables are not exposed. When not exposed, we cannot\n    // detect in the build environment if the deployment is a Vercel deployment or not.\n    //\n    // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n    const isUsingVercelSystemEnvironmentVariables = Boolean(process.env.VERCEL);\n    const isRelativeUrl = typeof inputUrl === 'string' && !isFullStringUrl(inputUrl);\n    // When no explicit metadataBase is specified by the user, we'll override it with the fallback metadata\n    // under the following conditions:\n    // - The provided URL is relative (ie ./og-image).\n    // - The image is statically generated by Next.js (such as the special `opengraph-image` route)\n    // In both cases, we want to ensure that across all environments, the ogImage is a fully qualified URL.\n    // In the `opengraph-image` case, since the user isn't explicitly passing a relative path, this ensures\n    // the ogImage will be properly discovered across different environments without the user needing to\n    // have a bunch of `process.env` checks when defining their `metadataBase`.\n    if (isRelativeUrl && (!metadataBase || isStaticMetadataRouteFile)) {\n        const fallbackMetadataBase = getSocialImageMetadataBaseFallback(metadataBase);\n        // When not using Vercel environment variables for URL injection, we aren't able to determine\n        // a fallback value for `metadataBase`. For self-hosted setups, we want to warn\n        // about this since the only fallback we'll be able to generate is `localhost`.\n        // In development, we'll only warn for relative metadata that isn't part of the static\n        // metadata conventions (eg `opengraph-image`), as otherwise it's currently very noisy\n        // for common cases. Eventually we should remove this warning all together in favor of\n        // devtools.\n        const shouldWarn = !isUsingVercelSystemEnvironmentVariables && !metadataBase && (process.env.NODE_ENV === 'production' || !isStaticMetadataRouteFile);\n        if (shouldWarn) {\n            warnOnce(`metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`);\n        }\n        metadataBase = fallbackMetadataBase;\n    }\n    return isItemUrl ? {\n        url: resolveUrl(inputUrl, metadataBase)\n    } : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase)\n    };\n}\nexport function resolveImages(images, metadataBase, isStaticMetadataRouteFile) {\n    const resolvedImages = resolveAsArrayOrUndefined(images);\n    if (!resolvedImages) return resolvedImages;\n    const nonNullableImages = [];\n    for (const item of resolvedImages){\n        const resolvedItem = resolveAndValidateImage(item, metadataBase, isStaticMetadataRouteFile);\n        if (!resolvedItem) continue;\n        nonNullableImages.push(resolvedItem);\n    }\n    return nonNullableImages;\n}\nconst ogTypeToFields = {\n    article: OgTypeFields.article,\n    book: OgTypeFields.article,\n    'music.song': OgTypeFields.song,\n    'music.album': OgTypeFields.song,\n    'music.playlist': OgTypeFields.playlist,\n    'music.radio_station': OgTypeFields.radio,\n    'video.movie': OgTypeFields.video,\n    'video.episode': OgTypeFields.video\n};\nfunction getFieldsByOgType(ogType) {\n    if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic;\n    return ogTypeToFields[ogType].concat(OgTypeFields.basic);\n}\nexport const resolveOpenGraph = async (openGraph, metadataBase, pathname, metadataContext, titleTemplate)=>{\n    if (!openGraph) return null;\n    function resolveProps(target, og) {\n        const ogType = og && 'type' in og ? og.type : undefined;\n        const keys = getFieldsByOgType(ogType);\n        for (const k of keys){\n            const key = k;\n            if (key in og && key !== 'url') {\n                const value = og[key];\n                target[key] = value ? resolveArray(value) : null;\n            }\n        }\n        target.images = resolveImages(og.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    }\n    const resolved = {\n        ...openGraph,\n        title: resolveTitle(openGraph.title, titleTemplate)\n    };\n    resolveProps(resolved, openGraph);\n    resolved.url = openGraph.url ? resolveAbsoluteUrlWithPathname(openGraph.url, metadataBase, await pathname, metadataContext) : null;\n    return resolved;\n};\nconst TwitterBasicInfoKeys = [\n    'site',\n    'siteId',\n    'creator',\n    'creatorId',\n    'description'\n];\nexport const resolveTwitter = (twitter, metadataBase, metadataContext, titleTemplate)=>{\n    var _resolved_images;\n    if (!twitter) return null;\n    let card = 'card' in twitter ? twitter.card : undefined;\n    const resolved = {\n        ...twitter,\n        title: resolveTitle(twitter.title, titleTemplate)\n    };\n    for (const infoKey of TwitterBasicInfoKeys){\n        resolved[infoKey] = twitter[infoKey] || null;\n    }\n    resolved.images = resolveImages(twitter.images, metadataBase, metadataContext.isStaticMetadataRouteFile);\n    card = card || (((_resolved_images = resolved.images) == null ? void 0 : _resolved_images.length) ? 'summary_large_image' : 'summary');\n    resolved.card = card;\n    if ('card' in resolved) {\n        switch(resolved.card){\n            case 'player':\n                {\n                    resolved.players = resolveAsArrayOrUndefined(resolved.players) || [];\n                    break;\n                }\n            case 'app':\n                {\n                    resolved.app = resolved.app || {};\n                    break;\n                }\n            case 'summary':\n            case 'summary_large_image':\n                break;\n            default:\n                resolved;\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-opengraph.js.map","import { DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment';\nexport async function getLayoutOrPageModule(loaderTree) {\n    const { layout, page, defaultPage } = loaderTree[2];\n    const isLayout = typeof layout !== 'undefined';\n    const isPage = typeof page !== 'undefined';\n    const isDefaultPage = typeof defaultPage !== 'undefined' && loaderTree[0] === DEFAULT_SEGMENT_KEY;\n    let mod = undefined;\n    let modType = undefined;\n    let filePath = undefined;\n    if (isLayout) {\n        mod = await layout[0]();\n        modType = 'layout';\n        filePath = layout[1];\n    } else if (isPage) {\n        mod = await page[0]();\n        modType = 'page';\n        filePath = page[1];\n    } else if (isDefaultPage) {\n        mod = await defaultPage[0]();\n        modType = 'page';\n        filePath = defaultPage[1];\n    }\n    return {\n        mod,\n        modType,\n        filePath\n    };\n}\nexport async function getComponentTypeModule(loaderTree, moduleType) {\n    const { [moduleType]: module } = loaderTree[2];\n    if (typeof module !== 'undefined') {\n        return await module[0]();\n    }\n    return undefined;\n}\n\n//# sourceMappingURL=app-dir-module.js.map","export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url';\nfunction resolveAlternateUrl(url, metadataBase, pathname, metadataContext) {\n    // If alter native url is an URL instance,\n    // we treat it as a URL base and resolve with current pathname\n    if (url instanceof URL) {\n        const newUrl = new URL(pathname, url);\n        url.searchParams.forEach((value, key)=>newUrl.searchParams.set(key, value));\n        url = newUrl;\n    }\n    return resolveAbsoluteUrlWithPathname(url, metadataBase, pathname, metadataContext);\n}\nexport const resolveThemeColor = (themeColor)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!themeColor) return null;\n    const themeColorDescriptors = [];\n    (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(themeColor)) == null ? void 0 : _resolveAsArrayOrUndefined.forEach((descriptor)=>{\n        if (typeof descriptor === 'string') themeColorDescriptors.push({\n            color: descriptor\n        });\n        else if (typeof descriptor === 'object') themeColorDescriptors.push({\n            color: descriptor.color,\n            media: descriptor.media\n        });\n    });\n    return themeColorDescriptors;\n};\nasync function resolveUrlValuesOfObject(obj, metadataBase, pathname, metadataContext) {\n    if (!obj) return null;\n    const result = {};\n    for (const [key, value] of Object.entries(obj)){\n        if (typeof value === 'string' || value instanceof URL) {\n            const pathnameForUrl = await pathname;\n            result[key] = [\n                {\n                    url: resolveAlternateUrl(value, metadataBase, pathnameForUrl, metadataContext)\n                }\n            ];\n        } else if (value && value.length) {\n            result[key] = [];\n            const pathnameForUrl = await pathname;\n            value.forEach((item, index)=>{\n                const url = resolveAlternateUrl(item.url, metadataBase, pathnameForUrl, metadataContext);\n                result[key][index] = {\n                    url,\n                    title: item.title\n                };\n            });\n        }\n    }\n    return result;\n}\nasync function resolveCanonicalUrl(urlOrDescriptor, metadataBase, pathname, metadataContext) {\n    if (!urlOrDescriptor) return null;\n    const url = typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL ? urlOrDescriptor : urlOrDescriptor.url;\n    const pathnameForUrl = await pathname;\n    // Return string url because structureClone can't handle URL instance\n    return {\n        url: resolveAlternateUrl(url, metadataBase, pathnameForUrl, metadataContext)\n    };\n}\nexport const resolveAlternates = async (alternates, metadataBase, pathname, context)=>{\n    if (!alternates) return null;\n    const canonical = await resolveCanonicalUrl(alternates.canonical, metadataBase, pathname, context);\n    const languages = await resolveUrlValuesOfObject(alternates.languages, metadataBase, pathname, context);\n    const media = await resolveUrlValuesOfObject(alternates.media, metadataBase, pathname, context);\n    const types = await resolveUrlValuesOfObject(alternates.types, metadataBase, pathname, context);\n    const result = {\n        canonical,\n        languages,\n        media,\n        types\n    };\n    return result;\n};\nconst robotsKeys = [\n    'noarchive',\n    'nosnippet',\n    'noimageindex',\n    'nocache',\n    'notranslate',\n    'indexifembedded',\n    'nositelinkssearchbox',\n    'unavailable_after',\n    'max-video-preview',\n    'max-image-preview',\n    'max-snippet'\n];\nconst resolveRobotsValue = (robots)=>{\n    if (!robots) return null;\n    if (typeof robots === 'string') return robots;\n    const values = [];\n    if (robots.index) values.push('index');\n    else if (typeof robots.index === 'boolean') values.push('noindex');\n    if (robots.follow) values.push('follow');\n    else if (typeof robots.follow === 'boolean') values.push('nofollow');\n    for (const key of robotsKeys){\n        const value = robots[key];\n        if (typeof value !== 'undefined' && value !== false) {\n            values.push(typeof value === 'boolean' ? key : `${key}:${value}`);\n        }\n    }\n    return values.join(', ');\n};\nexport const resolveRobots = (robots)=>{\n    if (!robots) return null;\n    return {\n        basic: resolveRobotsValue(robots),\n        googleBot: typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null\n    };\n};\nconst VerificationKeys = [\n    'google',\n    'yahoo',\n    'yandex',\n    'me',\n    'other'\n];\nexport const resolveVerification = (verification)=>{\n    if (!verification) return null;\n    const res = {};\n    for (const key of VerificationKeys){\n        const value = verification[key];\n        if (value) {\n            if (key === 'other') {\n                res.other = {};\n                for(const otherKey in verification.other){\n                    const otherValue = resolveAsArrayOrUndefined(verification.other[otherKey]);\n                    if (otherValue) res.other[otherKey] = otherValue;\n                }\n            } else res[key] = resolveAsArrayOrUndefined(value);\n        }\n    }\n    return res;\n};\nexport const resolveAppleWebApp = (appWebApp)=>{\n    var _resolveAsArrayOrUndefined;\n    if (!appWebApp) return null;\n    if (appWebApp === true) {\n        return {\n            capable: true\n        };\n    }\n    const startupImages = appWebApp.startupImage ? (_resolveAsArrayOrUndefined = resolveAsArrayOrUndefined(appWebApp.startupImage)) == null ? void 0 : _resolveAsArrayOrUndefined.map((item)=>typeof item === 'string' ? {\n            url: item\n        } : item) : null;\n    return {\n        capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n        title: appWebApp.title || null,\n        startupImage: startupImages,\n        statusBarStyle: appWebApp.statusBarStyle || 'default'\n    };\n};\nexport const resolveAppLinks = (appLinks)=>{\n    if (!appLinks) return null;\n    for(const key in appLinks){\n        // @ts-ignore // TODO: type infer\n        appLinks[key] = resolveAsArrayOrUndefined(appLinks[key]);\n    }\n    return appLinks;\n};\nexport const resolveItunes = async (itunes, metadataBase, pathname, context)=>{\n    if (!itunes) return null;\n    return {\n        appId: itunes.appId,\n        appArgument: itunes.appArgument ? resolveAlternateUrl(itunes.appArgument, metadataBase, await pathname, context) : undefined\n    };\n};\nexport const resolveFacebook = (facebook)=>{\n    if (!facebook) return null;\n    return {\n        appId: facebook.appId,\n        admins: resolveAsArrayOrUndefined(facebook.admins)\n    };\n};\nexport const resolvePagination = async (pagination, metadataBase, pathname, context)=>{\n    return {\n        previous: (pagination == null ? void 0 : pagination.previous) ? resolveAlternateUrl(pagination.previous, metadataBase, await pathname, context) : null,\n        next: (pagination == null ? void 0 : pagination.next) ? resolveAlternateUrl(pagination.next, metadataBase, await pathname, context) : null\n    };\n};\n\n//# sourceMappingURL=resolve-basics.js.map","import { resolveAsArrayOrUndefined } from '../generate/utils';\nimport { isStringOrURL } from './resolve-url';\nimport { IconKeys } from '../constants';\nexport function resolveIcon(icon) {\n    if (isStringOrURL(icon)) return {\n        url: icon\n    };\n    else if (Array.isArray(icon)) return icon;\n    return icon;\n}\nexport const resolveIcons = (icons)=>{\n    if (!icons) {\n        return null;\n    }\n    const resolved = {\n        icon: [],\n        apple: []\n    };\n    if (Array.isArray(icons)) {\n        resolved.icon = icons.map(resolveIcon).filter(Boolean);\n    } else if (isStringOrURL(icons)) {\n        resolved.icon = [\n            resolveIcon(icons)\n        ];\n    } else {\n        for (const key of IconKeys){\n            const values = resolveAsArrayOrUndefined(icons[key]);\n            if (values) resolved[key] = values.map(resolveIcon);\n        }\n    }\n    return resolved;\n};\n\n//# sourceMappingURL=resolve-icons.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only';\nimport { cache } from 'react';\nimport { createDefaultMetadata, createDefaultViewport } from './default-metadata';\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph';\nimport { resolveTitle } from './resolvers/resolve-title';\nimport { resolveAsArrayOrUndefined } from './generate/utils';\nimport { getComponentTypeModule, getLayoutOrPageModule } from '../../server/lib/app-dir-module';\nimport { interopDefault } from '../interop-default';\nimport { resolveAlternates, resolveAppleWebApp, resolveAppLinks, resolveRobots, resolveThemeColor, resolveVerification, resolveItunes, resolveFacebook, resolvePagination } from './resolvers/resolve-basics';\nimport { resolveIcons } from './resolvers/resolve-icons';\nimport { getTracer } from '../../server/lib/trace/tracer';\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants';\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment';\nimport * as Log from '../../build/output/log';\nimport { createServerParamsForMetadata } from '../../server/request/params';\nfunction isFavicon(icon) {\n    if (!icon) {\n        return false;\n    }\n    // turbopack appends a hash to all images\n    return (icon.url === '/favicon.ico' || icon.url.toString().startsWith('/favicon.ico?')) && icon.type === 'image/x-icon';\n}\nasync function mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons, pathname) {\n    var _source_twitter, _source_openGraph;\n    if (!staticFilesMetadata) return target;\n    const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata;\n    // Keep updating the static icons in the most leaf node\n    if (icon) {\n        leafSegmentStaticIcons.icon = icon;\n    }\n    if (apple) {\n        leafSegmentStaticIcons.apple = apple;\n    }\n    // file based metadata is specified and current level metadata twitter.images is not specified\n    if (twitter && !(source == null ? void 0 : (_source_twitter = source.twitter) == null ? void 0 : _source_twitter.hasOwnProperty('images'))) {\n        const resolvedTwitter = resolveTwitter({\n            ...target.twitter,\n            images: twitter\n        }, target.metadataBase, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.twitter);\n        target.twitter = resolvedTwitter;\n    }\n    // file based metadata is specified and current level metadata openGraph.images is not specified\n    if (openGraph && !(source == null ? void 0 : (_source_openGraph = source.openGraph) == null ? void 0 : _source_openGraph.hasOwnProperty('images'))) {\n        const resolvedOpenGraph = await resolveOpenGraph({\n            ...target.openGraph,\n            images: openGraph\n        }, target.metadataBase, pathname, {\n            ...metadataContext,\n            isStaticMetadataRouteFile: true\n        }, titleTemplates.openGraph);\n        target.openGraph = resolvedOpenGraph;\n    }\n    if (manifest) {\n        target.manifest = manifest;\n    }\n    return target;\n}\n// Merge the source metadata into the resolved target metadata.\nasync function mergeMetadata(route, pathname, { source, target, staticFilesMetadata, titleTemplates, metadataContext, buildState, leafSegmentStaticIcons }) {\n    // If there's override metadata, prefer it otherwise fallback to the default metadata.\n    const metadataBase = typeof (source == null ? void 0 : source.metadataBase) !== 'undefined' ? source.metadataBase : target.metadataBase;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'title':\n                {\n                    target.title = resolveTitle(source.title, titleTemplates.title);\n                    break;\n                }\n            case 'alternates':\n                {\n                    target.alternates = await resolveAlternates(source.alternates, metadataBase, pathname, metadataContext);\n                    break;\n                }\n            case 'openGraph':\n                {\n                    target.openGraph = await resolveOpenGraph(source.openGraph, metadataBase, pathname, metadataContext, titleTemplates.openGraph);\n                    break;\n                }\n            case 'twitter':\n                {\n                    target.twitter = resolveTwitter(source.twitter, metadataBase, metadataContext, titleTemplates.twitter);\n                    break;\n                }\n            case 'facebook':\n                target.facebook = resolveFacebook(source.facebook);\n                break;\n            case 'verification':\n                target.verification = resolveVerification(source.verification);\n                break;\n            case 'icons':\n                {\n                    target.icons = resolveIcons(source.icons);\n                    break;\n                }\n            case 'appleWebApp':\n                target.appleWebApp = resolveAppleWebApp(source.appleWebApp);\n                break;\n            case 'appLinks':\n                target.appLinks = resolveAppLinks(source.appLinks);\n                break;\n            case 'robots':\n                {\n                    target.robots = resolveRobots(source.robots);\n                    break;\n                }\n            case 'archives':\n            case 'assets':\n            case 'bookmarks':\n            case 'keywords':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source[key]);\n                    break;\n                }\n            case 'authors':\n                {\n                    target[key] = resolveAsArrayOrUndefined(source.authors);\n                    break;\n                }\n            case 'itunes':\n                {\n                    target[key] = await resolveItunes(source.itunes, metadataBase, pathname, metadataContext);\n                    break;\n                }\n            case 'pagination':\n                {\n                    target.pagination = await resolvePagination(source.pagination, metadataBase, pathname, metadataContext);\n                    break;\n                }\n            // directly assign fields that fallback to null\n            case 'abstract':\n            case 'applicationName':\n            case 'description':\n            case 'generator':\n            case 'creator':\n            case 'publisher':\n            case 'category':\n            case 'classification':\n            case 'referrer':\n            case 'formatDetection':\n            case 'manifest':\n            case 'pinterest':\n                // @ts-ignore TODO: support inferring\n                target[key] = source[key] || null;\n                break;\n            case 'other':\n                target.other = Object.assign({}, target.other, source.other);\n                break;\n            case 'metadataBase':\n                target.metadataBase = metadataBase;\n                break;\n            case 'apple-touch-fullscreen':\n                {\n                    buildState.warnings.add(`Use appleWebApp instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`);\n                    break;\n                }\n            case 'apple-touch-icon-precomposed':\n                {\n                    buildState.warnings.add(`Use icons.apple instead\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-metadata`);\n                    break;\n                }\n            case 'themeColor':\n            case 'colorScheme':\n            case 'viewport':\n                if (source[key] != null) {\n                    buildState.warnings.add(`Unsupported metadata ${key} is configured in metadata export in ${route}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`);\n                }\n                break;\n            default:\n                {\n                    key;\n                }\n        }\n    }\n    return mergeStaticMetadata(source, target, staticFilesMetadata, metadataContext, titleTemplates, leafSegmentStaticIcons, pathname);\n}\nfunction mergeViewport({ target, source }) {\n    if (!source) return;\n    for(const key_ in source){\n        const key = key_;\n        switch(key){\n            case 'themeColor':\n                {\n                    target.themeColor = resolveThemeColor(source.themeColor);\n                    break;\n                }\n            case 'colorScheme':\n                target.colorScheme = source.colorScheme || null;\n                break;\n            case 'width':\n            case 'height':\n            case 'initialScale':\n            case 'minimumScale':\n            case 'maximumScale':\n            case 'userScalable':\n            case 'viewportFit':\n            case 'interactiveWidget':\n                // always override the target with the source\n                // @ts-ignore viewport properties\n                target[key] = source[key];\n                break;\n            default:\n                key;\n        }\n    }\n}\nfunction getDefinedViewport(mod, props, tracingProps) {\n    if (typeof mod.generateViewport === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateViewport, {\n                spanName: `generateViewport ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateViewport(props, parent));\n    }\n    return mod.viewport || null;\n}\nfunction getDefinedMetadata(mod, props, tracingProps) {\n    if (typeof mod.generateMetadata === 'function') {\n        const { route } = tracingProps;\n        return (parent)=>getTracer().trace(ResolveMetadataSpan.generateMetadata, {\n                spanName: `generateMetadata ${route}`,\n                attributes: {\n                    'next.page': route\n                }\n            }, ()=>mod.generateMetadata(props, parent));\n    }\n    return mod.metadata || null;\n}\nasync function collectStaticImagesFiles(metadata, props, type) {\n    var _this;\n    if (!(metadata == null ? void 0 : metadata[type])) return undefined;\n    const iconPromises = metadata[type].map(async (imageModule)=>interopDefault(await imageModule(props)));\n    return (iconPromises == null ? void 0 : iconPromises.length) > 0 ? (_this = await Promise.all(iconPromises)) == null ? void 0 : _this.flat() : undefined;\n}\nasync function resolveStaticMetadata(modules, props) {\n    const { metadata } = modules;\n    if (!metadata) return null;\n    const [icon, apple, openGraph, twitter] = await Promise.all([\n        collectStaticImagesFiles(metadata, props, 'icon'),\n        collectStaticImagesFiles(metadata, props, 'apple'),\n        collectStaticImagesFiles(metadata, props, 'openGraph'),\n        collectStaticImagesFiles(metadata, props, 'twitter')\n    ]);\n    const staticMetadata = {\n        icon,\n        apple,\n        openGraph,\n        twitter,\n        manifest: metadata.manifest\n    };\n    return staticMetadata;\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({ tree, metadataItems, errorMetadataItem, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const staticFilesMetadata = await resolveStaticMetadata(tree[2], props);\n    const metadataExport = mod ? getDefinedMetadata(mod, props, {\n        route\n    }) : null;\n    metadataItems.push([\n        metadataExport,\n        staticFilesMetadata\n    ]);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorMetadataExport = errorMod ? getDefinedMetadata(errorMod, props, {\n            route\n        }) : null;\n        errorMetadataItem[0] = errorMetadataExport;\n        errorMetadataItem[1] = staticFilesMetadata;\n    }\n}\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectViewport({ tree, viewportItems, errorViewportItemRef, props, route, errorConvention }) {\n    let mod;\n    let modType;\n    const hasErrorConventionComponent = Boolean(errorConvention && tree[2][errorConvention]);\n    if (errorConvention) {\n        mod = await getComponentTypeModule(tree, 'layout');\n        modType = errorConvention;\n    } else {\n        const { mod: layoutOrPageMod, modType: layoutOrPageModType } = await getLayoutOrPageModule(tree);\n        mod = layoutOrPageMod;\n        modType = layoutOrPageModType;\n    }\n    if (modType) {\n        route += `/${modType}`;\n    }\n    const viewportExport = mod ? getDefinedViewport(mod, props, {\n        route\n    }) : null;\n    viewportItems.push(viewportExport);\n    if (hasErrorConventionComponent && errorConvention) {\n        const errorMod = await getComponentTypeModule(tree, errorConvention);\n        const errorViewportExport = errorMod ? getDefinedViewport(errorMod, props, {\n            route\n        }) : null;\n        errorViewportItemRef.current = errorViewportExport;\n    }\n}\nconst resolveMetadataItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const metadataItems = [];\n    const errorMetadataItem = [\n        null,\n        null\n    ];\n    const treePrefix = undefined;\n    return resolveMetadataItemsImpl(metadataItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n});\nasync function resolveMetadataItemsImpl(metadataItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectMetadata({\n        tree,\n        metadataItems,\n        errorMetadataItem,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveMetadataItemsImpl(metadataItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorMetadataItem, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        metadataItems.push(errorMetadataItem);\n    }\n    return metadataItems;\n}\nconst resolveViewportItems = cache(async function(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const parentParams = {};\n    const viewportItems = [];\n    const errorViewportItemRef = {\n        current: null\n    };\n    const treePrefix = undefined;\n    return resolveViewportItemsImpl(viewportItems, tree, treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n});\nasync function resolveViewportItemsImpl(viewportItems, tree, /** Provided tree can be nested subtree, this argument says what is the path of such subtree */ treePrefix, parentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore) {\n    const [segment, parallelRoutes, { page }] = tree;\n    const currentTreePrefix = treePrefix && treePrefix.length ? [\n        ...treePrefix,\n        segment\n    ] : [\n        segment\n    ];\n    const isPage = typeof page !== 'undefined';\n    // Handle dynamic segment params.\n    const segmentParam = getDynamicParamFromSegment(segment);\n    /**\n   * Create object holding the parent params and current params\n   */ let currentParams = parentParams;\n    if (segmentParam && segmentParam.value !== null) {\n        currentParams = {\n            ...parentParams,\n            [segmentParam.param]: segmentParam.value\n        };\n    }\n    const params = createServerParamsForMetadata(currentParams, workStore);\n    let layerProps;\n    if (isPage) {\n        layerProps = {\n            params,\n            searchParams\n        };\n    } else {\n        layerProps = {\n            params\n        };\n    }\n    await collectViewport({\n        tree,\n        viewportItems,\n        errorViewportItemRef,\n        errorConvention,\n        props: layerProps,\n        route: currentTreePrefix// __PAGE__ shouldn't be shown in a route\n        .filter((s)=>s !== PAGE_SEGMENT_KEY).join('/')\n    });\n    for(const key in parallelRoutes){\n        const childTree = parallelRoutes[key];\n        await resolveViewportItemsImpl(viewportItems, childTree, currentTreePrefix, currentParams, searchParams, errorConvention, errorViewportItemRef, getDynamicParamFromSegment, workStore);\n    }\n    if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n        // If there are no parallel routes, place error metadata as the last item.\n        // e.g. layout -> layout -> not-found\n        viewportItems.push(errorViewportItemRef.current);\n    }\n    return viewportItems;\n}\nconst isTitleTruthy = (title)=>!!(title == null ? void 0 : title.absolute);\nconst hasTitle = (metadata)=>isTitleTruthy(metadata == null ? void 0 : metadata.title);\nfunction inheritFromMetadata(target, metadata) {\n    if (target) {\n        if (!hasTitle(target) && hasTitle(metadata)) {\n            target.title = metadata.title;\n        }\n        if (!target.description && metadata.description) {\n            target.description = metadata.description;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = [\n    'title',\n    'description',\n    'images'\n];\nfunction postProcessMetadata(metadata, favicon, titleTemplates, metadataContext) {\n    const { openGraph, twitter } = metadata;\n    if (openGraph) {\n        // If there's openGraph information but not configured in twitter,\n        // inherit them from openGraph metadata.\n        let autoFillProps = {};\n        const hasTwTitle = hasTitle(twitter);\n        const hasTwDescription = twitter == null ? void 0 : twitter.description;\n        const hasTwImages = Boolean((twitter == null ? void 0 : twitter.hasOwnProperty('images')) && twitter.images);\n        if (!hasTwTitle) {\n            if (isTitleTruthy(openGraph.title)) {\n                autoFillProps.title = openGraph.title;\n            } else if (metadata.title && isTitleTruthy(metadata.title)) {\n                autoFillProps.title = metadata.title;\n            }\n        }\n        if (!hasTwDescription) autoFillProps.description = openGraph.description || metadata.description || undefined;\n        if (!hasTwImages) autoFillProps.images = openGraph.images;\n        if (Object.keys(autoFillProps).length > 0) {\n            const partialTwitter = resolveTwitter(autoFillProps, metadata.metadataBase, metadataContext, titleTemplates.twitter);\n            if (metadata.twitter) {\n                metadata.twitter = Object.assign({}, metadata.twitter, {\n                    ...!hasTwTitle && {\n                        title: partialTwitter == null ? void 0 : partialTwitter.title\n                    },\n                    ...!hasTwDescription && {\n                        description: partialTwitter == null ? void 0 : partialTwitter.description\n                    },\n                    ...!hasTwImages && {\n                        images: partialTwitter == null ? void 0 : partialTwitter.images\n                    }\n                });\n            } else {\n                metadata.twitter = partialTwitter;\n            }\n        }\n    }\n    // If there's no title and description configured in openGraph or twitter,\n    // use the title and description from metadata.\n    inheritFromMetadata(openGraph, metadata);\n    inheritFromMetadata(twitter, metadata);\n    if (favicon) {\n        if (!metadata.icons) {\n            metadata.icons = {\n                icon: [],\n                apple: []\n            };\n        }\n        metadata.icons.icon.unshift(favicon);\n    }\n    return metadata;\n}\nfunction prerenderMetadata(metadataItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < metadataItems.length; i++){\n        const metadataExport = metadataItems[i][0];\n        getResult(resolversAndResults, metadataExport);\n    }\n    return resolversAndResults;\n}\nfunction prerenderViewport(viewportItems) {\n    // If the index is a function then it is a resolver and the next slot\n    // is the corresponding result. If the index is not a function it is the result\n    // itself.\n    const resolversAndResults = [];\n    for(let i = 0; i < viewportItems.length; i++){\n        const viewportExport = viewportItems[i];\n        getResult(resolversAndResults, viewportExport);\n    }\n    return resolversAndResults;\n}\nfunction getResult(resolversAndResults, exportForResult) {\n    if (typeof exportForResult === 'function') {\n        const result = exportForResult(new Promise((resolve)=>resolversAndResults.push(resolve)));\n        resolversAndResults.push(result);\n        if (result instanceof Promise) {\n            // since we eager execute generateMetadata and\n            // they can reject at anytime we need to ensure\n            // we attach the catch handler right away to\n            // prevent unhandled rejections crashing the process\n            result.catch((err)=>{\n                return {\n                    __nextError: err\n                };\n            });\n        }\n    } else if (typeof exportForResult === 'object') {\n        resolversAndResults.push(exportForResult);\n    } else {\n        resolversAndResults.push(null);\n    }\n}\nfunction resolvePendingResult(parentResult, resolveParentResult) {\n    // In dev we clone and freeze to prevent relying on mutating resolvedMetadata directly.\n    // In prod we just pass resolvedMetadata through without any copying.\n    if (process.env.NODE_ENV === 'development') {\n        // @ts-expect-error -- DeepReadonly<T> is by definition not assignable to T\n        // Instead, we should only accept DeepReadonly<ResolvedType>\n        parentResult = require('../../shared/lib/deep-freeze').deepFreeze(require('./clone-metadata').cloneMetadata(parentResult));\n    }\n    resolveParentResult(parentResult);\n}\nexport async function accumulateMetadata(route, metadataItems, pathname, metadataContext) {\n    let resolvedMetadata = createDefaultMetadata();\n    let titleTemplates = {\n        title: null,\n        twitter: null,\n        openGraph: null\n    };\n    const buildState = {\n        warnings: new Set()\n    };\n    let favicon;\n    // Collect the static icons in the most leaf node,\n    // since we don't collect all the static metadata icons in the parent segments.\n    const leafSegmentStaticIcons = {\n        icon: [],\n        apple: []\n    };\n    const resolversAndResults = prerenderMetadata(metadataItems);\n    let resultIndex = 0;\n    for(let i = 0; i < metadataItems.length; i++){\n        var _staticFilesMetadata_icon;\n        const staticFilesMetadata = metadataItems[i][1];\n        // Treat favicon as special case, it should be the first icon in the list\n        // i <= 1 represents root layout, and if current page is also at root\n        if (i <= 1 && isFavicon(staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon[0])) {\n            var _staticFilesMetadata_icon1;\n            const iconMod = staticFilesMetadata == null ? void 0 : (_staticFilesMetadata_icon1 = staticFilesMetadata.icon) == null ? void 0 : _staticFilesMetadata_icon1.shift();\n            if (i === 0) favicon = iconMod;\n        }\n        let pendingMetadata = resolversAndResults[resultIndex++];\n        if (typeof pendingMetadata === 'function') {\n            // This metadata item had a `generateMetadata` and\n            // we need to provide the currently resolved metadata\n            // to it before we continue;\n            const resolveParentMetadata = pendingMetadata;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingMetadata = resolversAndResults[resultIndex++];\n            resolvePendingResult(resolvedMetadata, resolveParentMetadata);\n        }\n        // Otherwise the item was either null or a static export\n        let metadata;\n        if (isPromiseLike(pendingMetadata)) {\n            metadata = await pendingMetadata;\n        } else {\n            metadata = pendingMetadata;\n        }\n        resolvedMetadata = await mergeMetadata(route, pathname, {\n            target: resolvedMetadata,\n            source: metadata,\n            metadataContext,\n            staticFilesMetadata,\n            titleTemplates,\n            buildState,\n            leafSegmentStaticIcons\n        });\n        // If the layout is the same layer with page, skip the leaf layout and leaf page\n        // The leaf layout and page are the last two items\n        if (i < metadataItems.length - 2) {\n            var _resolvedMetadata_title, _resolvedMetadata_openGraph, _resolvedMetadata_twitter;\n            titleTemplates = {\n                title: ((_resolvedMetadata_title = resolvedMetadata.title) == null ? void 0 : _resolvedMetadata_title.template) || null,\n                openGraph: ((_resolvedMetadata_openGraph = resolvedMetadata.openGraph) == null ? void 0 : _resolvedMetadata_openGraph.title.template) || null,\n                twitter: ((_resolvedMetadata_twitter = resolvedMetadata.twitter) == null ? void 0 : _resolvedMetadata_twitter.title.template) || null\n            };\n        }\n    }\n    if (leafSegmentStaticIcons.icon.length > 0 || leafSegmentStaticIcons.apple.length > 0) {\n        if (!resolvedMetadata.icons) {\n            resolvedMetadata.icons = {\n                icon: [],\n                apple: []\n            };\n            if (leafSegmentStaticIcons.icon.length > 0) {\n                resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon);\n            }\n            if (leafSegmentStaticIcons.apple.length > 0) {\n                resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple);\n            }\n        }\n    }\n    // Only log warnings if there are any, and only once after the metadata resolving process is finished\n    if (buildState.warnings.size > 0) {\n        for (const warning of buildState.warnings){\n            Log.warn(warning);\n        }\n    }\n    return postProcessMetadata(resolvedMetadata, favicon, titleTemplates, metadataContext);\n}\nexport async function accumulateViewport(viewportItems) {\n    const resolvedViewport = createDefaultViewport();\n    const resolversAndResults = prerenderViewport(viewportItems);\n    let i = 0;\n    while(i < resolversAndResults.length){\n        let pendingViewport = resolversAndResults[i++];\n        if (typeof pendingViewport === 'function') {\n            // this viewport item had a `generateViewport` and\n            // we need to provide the currently resolved viewport\n            // to it before we continue;\n            const resolveParentViewport = pendingViewport;\n            // we know that the next item is a result if this item\n            // was a resolver\n            pendingViewport = resolversAndResults[i++];\n            resolvePendingResult(resolvedViewport, resolveParentViewport);\n        }\n        // Otherwise the item was either null or a static export\n        let viewport;\n        if (isPromiseLike(pendingViewport)) {\n            viewport = await pendingViewport;\n        } else {\n            viewport = pendingViewport;\n        }\n        mergeViewport({\n            target: resolvedViewport,\n            source: viewport\n        });\n    }\n    return resolvedViewport;\n}\n// Exposed API for metadata component, that directly resolve the loader tree and related context as resolved metadata.\nexport async function resolveMetadata(tree, pathname, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext) {\n    const metadataItems = await resolveMetadataItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateMetadata(workStore.route, metadataItems, pathname, metadataContext);\n}\n// Exposed API for viewport component, that directly resolve the loader tree and related context as resolved viewport.\nexport async function resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore) {\n    const viewportItems = await resolveViewportItems(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    return accumulateViewport(viewportItems);\n}\nfunction isPromiseLike(value) {\n    return typeof value === 'object' && value !== null && typeof value.then === 'function';\n}\n\n//# sourceMappingURL=resolve-metadata.js.map","import { delayUntilRuntimeStage, postponeWithTracking } from '../app-render/dynamic-rendering';\nimport { throwInvariantForMissingStore, workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport function createServerPathnameForMetadata(underlyingPathname, workStore) {\n    const workUnitStore = workUnitAsyncStorage.getStore();\n    if (workUnitStore) {\n        switch(workUnitStore.type){\n            case 'prerender':\n            case 'prerender-client':\n            case 'prerender-ppr':\n            case 'prerender-legacy':\n                {\n                    return createPrerenderPathname(underlyingPathname, workStore, workUnitStore);\n                }\n            case 'cache':\n            case 'private-cache':\n            case 'unstable-cache':\n                throw Object.defineProperty(new InvariantError('createServerPathnameForMetadata should not be called in cache contexts.'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E740\",\n                    enumerable: false,\n                    configurable: true\n                });\n            case 'prerender-runtime':\n                return delayUntilRuntimeStage(workUnitStore, createRenderPathname(underlyingPathname));\n            case 'request':\n                return createRenderPathname(underlyingPathname);\n            default:\n                workUnitStore;\n        }\n    }\n    throwInvariantForMissingStore();\n}\nfunction createPrerenderPathname(underlyingPathname, workStore, prerenderStore) {\n    switch(prerenderStore.type){\n        case 'prerender-client':\n            throw Object.defineProperty(new InvariantError('createPrerenderPathname was called inside a client component scope.'), \"__NEXT_ERROR_CODE\", {\n                value: \"E694\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'prerender':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams && fallbackParams.size > 0) {\n                    return makeHangingPromise(prerenderStore.renderSignal, workStore.route, '`pathname`');\n                }\n                break;\n            }\n        case 'prerender-ppr':\n            {\n                const fallbackParams = prerenderStore.fallbackRouteParams;\n                if (fallbackParams && fallbackParams.size > 0) {\n                    return makeErroringPathname(workStore, prerenderStore.dynamicTracking);\n                }\n                break;\n            }\n        case 'prerender-legacy':\n            break;\n        default:\n            prerenderStore;\n    }\n    // We don't have any fallback params so we have an entirely static safe params object\n    return Promise.resolve(underlyingPathname);\n}\nfunction makeErroringPathname(workStore, dynamicTracking) {\n    let reject = null;\n    const promise = new Promise((_, re)=>{\n        reject = re;\n    });\n    const originalThen = promise.then.bind(promise);\n    // We instrument .then so that we can generate a tracking event only if you actually\n    // await this promise, not just that it is created.\n    promise.then = (onfulfilled, onrejected)=>{\n        if (reject) {\n            try {\n                postponeWithTracking(workStore.route, 'metadata relative url resolving', dynamicTracking);\n            } catch (error) {\n                reject(error);\n                reject = null;\n            }\n        }\n        return originalThen(onfulfilled, onrejected);\n    };\n    // We wrap in a noop proxy to trick the runtime into thinking it\n    // isn't a native promise (it's not really). This is so that awaiting\n    // the promise will call the `then` property triggering the lazy postpone\n    return new Proxy(promise, {});\n}\nfunction createRenderPathname(underlyingPathname) {\n    return Promise.resolve(underlyingPathname);\n}\n\n//# sourceMappingURL=pathname.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { Suspense, cache, cloneElement } from 'react';\nimport { AppleWebAppMeta, FormatDetectionMeta, ItunesMeta, BasicMeta, ViewportMeta, VerificationMeta, FacebookMeta, PinterestMeta } from './generate/basic';\nimport { AlternatesMetadata } from './generate/alternate';\nimport { OpenGraphMetadata, TwitterMetadata, AppLinksMeta } from './generate/opengraph';\nimport { IconsMetadata } from './generate/icons';\nimport { resolveMetadata, resolveViewport } from './resolve-metadata';\nimport { MetaFilter } from './generate/meta';\nimport { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback';\nimport { METADATA_BOUNDARY_NAME, VIEWPORT_BOUNDARY_NAME } from '../framework/boundary-constants';\nimport { AsyncMetadataOutlet } from '../../client/components/metadata/async-metadata';\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone';\nimport { createServerSearchParamsForMetadata } from '../../server/request/search-params';\nimport { createServerPathnameForMetadata } from '../../server/request/pathname';\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({ tree, pathname, parsedQuery, metadataContext, getDynamicParamFromSegment, appUsingSizeAdjustment, errorType, workStore, MetadataBoundary, ViewportBoundary, serveStreamingMetadata }) {\n    const searchParams = createServerSearchParamsForMetadata(parsedQuery, workStore);\n    const pathnameForMetadata = createServerPathnameForMetadata(pathname, workStore);\n    function ViewportTree() {\n        return /*#__PURE__*/ _jsxs(_Fragment, {\n            children: [\n                /*#__PURE__*/ _jsx(ViewportBoundary, {\n                    children: /*#__PURE__*/ _jsx(Viewport, {})\n                }),\n                appUsingSizeAdjustment ? /*#__PURE__*/ _jsx(\"meta\", {\n                    name: \"next-size-adjust\",\n                    content: \"\"\n                }) : null\n            ]\n        });\n    }\n    function MetadataTree() {\n        return /*#__PURE__*/ _jsx(MetadataBoundary, {\n            children: /*#__PURE__*/ _jsx(Metadata, {})\n        });\n    }\n    function viewport() {\n        return getResolvedViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorType);\n    }\n    async function Viewport() {\n        try {\n            return await viewport();\n        } catch (error) {\n            if (!errorType && isHTTPAccessFallbackError(error)) {\n                try {\n                    return await getNotFoundViewport(tree, searchParams, getDynamicParamFromSegment, workStore);\n                } catch  {}\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return null;\n        }\n    }\n    Viewport.displayName = VIEWPORT_BOUNDARY_NAME;\n    function metadata() {\n        return getResolvedMetadata(tree, pathnameForMetadata, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType);\n    }\n    async function resolveFinalMetadata() {\n        let result;\n        let error = null;\n        try {\n            result = await metadata();\n            return {\n                metadata: result,\n                error: null,\n                digest: undefined\n            };\n        } catch (metadataErr) {\n            error = metadataErr;\n            if (!errorType && isHTTPAccessFallbackError(metadataErr)) {\n                try {\n                    result = await getNotFoundMetadata(tree, pathnameForMetadata, searchParams, getDynamicParamFromSegment, metadataContext, workStore);\n                    return {\n                        metadata: result,\n                        error,\n                        digest: error == null ? void 0 : error.digest\n                    };\n                } catch (notFoundMetadataErr) {\n                    error = notFoundMetadataErr;\n                    // In PPR rendering we still need to throw the postpone error.\n                    // If metadata is postponed, React needs to be aware of the location of error.\n                    if (serveStreamingMetadata && isPostpone(notFoundMetadataErr)) {\n                        throw notFoundMetadataErr;\n                    }\n                }\n            }\n            // In PPR rendering we still need to throw the postpone error.\n            // If metadata is postponed, React needs to be aware of the location of error.\n            if (serveStreamingMetadata && isPostpone(metadataErr)) {\n                throw metadataErr;\n            }\n            // We don't actually want to error in this component. We will\n            // also error in the MetadataOutlet which causes the error to\n            // bubble from the right position in the page to be caught by the\n            // appropriate boundaries\n            return {\n                metadata: result,\n                error,\n                digest: error == null ? void 0 : error.digest\n            };\n        }\n    }\n    function Metadata() {\n        if (!serveStreamingMetadata) {\n            return /*#__PURE__*/ _jsx(MetadataResolver, {});\n        }\n        return /*#__PURE__*/ _jsx(\"div\", {\n            hidden: true,\n            children: /*#__PURE__*/ _jsx(Suspense, {\n                fallback: null,\n                children: /*#__PURE__*/ _jsx(MetadataResolver, {})\n            })\n        });\n    }\n    async function MetadataResolver() {\n        const metadataState = await resolveFinalMetadata();\n        return metadataState.metadata;\n    }\n    Metadata.displayName = METADATA_BOUNDARY_NAME;\n    async function getMetadataReady() {\n        // Only warm up metadata() call when it's blocking metadata,\n        // otherwise it will be fully managed by AsyncMetadata component.\n        if (!serveStreamingMetadata) {\n            await metadata();\n        }\n        return undefined;\n    }\n    async function getViewportReady() {\n        await viewport();\n        return undefined;\n    }\n    function StreamingMetadataOutletImpl() {\n        return /*#__PURE__*/ _jsx(AsyncMetadataOutlet, {\n            promise: resolveFinalMetadata()\n        });\n    }\n    const StreamingMetadataOutlet = serveStreamingMetadata ? StreamingMetadataOutletImpl : null;\n    return {\n        ViewportTree,\n        MetadataTree,\n        getViewportReady,\n        getMetadataReady,\n        StreamingMetadataOutlet\n    };\n}\nconst getResolvedMetadata = cache(getResolvedMetadataImpl);\nasync function getResolvedMetadataImpl(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention);\n}\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl);\nasync function getNotFoundMetadataImpl(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, notFoundErrorConvention);\n}\nconst getResolvedViewport = cache(getResolvedViewportImpl);\nasync function getResolvedViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore, errorType) {\n    const errorConvention = errorType === 'redirect' ? undefined : errorType;\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention);\n}\nconst getNotFoundViewport = cache(getNotFoundViewportImpl);\nasync function getNotFoundViewportImpl(tree, searchParams, getDynamicParamFromSegment, workStore) {\n    const notFoundErrorConvention = 'not-found';\n    return renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, notFoundErrorConvention);\n}\nasync function renderMetadata(tree, pathname, searchParams, getDynamicParamFromSegment, metadataContext, workStore, errorConvention) {\n    const resolvedMetadata = await resolveMetadata(tree, pathname, searchParams, errorConvention, getDynamicParamFromSegment, workStore, metadataContext);\n    const elements = createMetadataElements(resolvedMetadata);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nasync function renderViewport(tree, searchParams, getDynamicParamFromSegment, workStore, errorConvention) {\n    const resolvedViewport = await resolveViewport(tree, searchParams, errorConvention, getDynamicParamFromSegment, workStore);\n    const elements = createViewportElements(resolvedViewport);\n    return /*#__PURE__*/ _jsx(_Fragment, {\n        children: elements.map((el, index)=>{\n            return /*#__PURE__*/ cloneElement(el, {\n                key: index\n            });\n        })\n    });\n}\nfunction createMetadataElements(metadata) {\n    return MetaFilter([\n        BasicMeta({\n            metadata\n        }),\n        AlternatesMetadata({\n            alternates: metadata.alternates\n        }),\n        ItunesMeta({\n            itunes: metadata.itunes\n        }),\n        FacebookMeta({\n            facebook: metadata.facebook\n        }),\n        PinterestMeta({\n            pinterest: metadata.pinterest\n        }),\n        FormatDetectionMeta({\n            formatDetection: metadata.formatDetection\n        }),\n        VerificationMeta({\n            verification: metadata.verification\n        }),\n        AppleWebAppMeta({\n            appleWebApp: metadata.appleWebApp\n        }),\n        OpenGraphMetadata({\n            openGraph: metadata.openGraph\n        }),\n        TwitterMetadata({\n            twitter: metadata.twitter\n        }),\n        AppLinksMeta({\n            appLinks: metadata.appLinks\n        }),\n        IconsMetadata({\n            icons: metadata.icons\n        })\n    ]);\n}\nfunction createViewportElements(viewport) {\n    return MetaFilter([\n        ViewportMeta({\n            viewport: viewport\n        })\n    ]);\n}\n\n//# sourceMappingURL=metadata.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import ReactDOM from 'react-dom';\nexport function preloadStyle(href, crossOrigin, nonce) {\n    const opts = {\n        as: 'style'\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preloadFont(href, type, crossOrigin, nonce) {\n    const opts = {\n        as: 'font',\n        type\n    };\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ReactDOM.preload(href, opts);\n}\nexport function preconnect(href, crossOrigin, nonce) {\n    const opts = {};\n    if (typeof crossOrigin === 'string') {\n        opts.crossOrigin = crossOrigin;\n    }\n    if (typeof nonce === 'string') {\n        opts.nonce = nonce;\n    }\n    ;\n    ReactDOM.preconnect(href, opts);\n}\n\n//# sourceMappingURL=preloads.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ // When postpone is available in canary React we can switch to importing it directly\nexport { Postpone } from '../dynamic-rendering';\n\n//# sourceMappingURL=postpone.js.map","/*\n\nFiles in the rsc directory are meant to be packaged as part of the RSC graph using next-app-loader.\n\n*/ import * as React from 'react';\nfunction notImplemented() {\n    throw Object.defineProperty(new Error('Taint can only be used with the taint flag.'), \"__NEXT_ERROR_CODE\", {\n        value: \"E354\",\n        enumerable: false,\n        configurable: true\n    });\n}\nexport const taintObjectReference = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintObjectReference : notImplemented;\nexport const taintUniqueValue = process.env.__NEXT_EXPERIMENTAL_REACT ? React.experimental_taintUniqueValue : notImplemented;\n\n//# sourceMappingURL=taint.js.map","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import { PAGE_SEGMENT_KEY } from '../segment'\nimport type { Segment as FlightRouterStateSegment } from '../../../server/app-render/types'\n\n// TypeScript trick to simulate opaque types, like in Flow.\ntype Opaque<K, T> = T & { __brand: K }\n\nexport type SegmentRequestKeyPart = Opaque<'SegmentRequestKeyPart', string>\nexport type SegmentRequestKey = Opaque<'SegmentRequestKey', string>\nexport type SegmentCacheKeyPart = Opaque<'SegmentCacheKeyPart', string>\nexport type SegmentCacheKey = Opaque<'SegmentCacheKey', string>\n\nexport const ROOT_SEGMENT_REQUEST_KEY = '' as SegmentRequestKey\nexport const ROOT_SEGMENT_CACHE_KEY = '' as SegmentCacheKey\n\nexport function createSegmentRequestKeyPart(\n  segment: FlightRouterStateSegment\n): SegmentRequestKeyPart {\n  if (typeof segment === 'string') {\n    if (segment.startsWith(PAGE_SEGMENT_KEY)) {\n      // The Flight Router State type sometimes includes the search params in\n      // the page segment. However, the Segment Cache tracks this as a separate\n      // key. So, we strip the search params here, and then add them back when\n      // the cache entry is turned back into a FlightRouterState. This is an\n      // unfortunate consequence of the FlightRouteState being used both as a\n      // transport type and as a cache key; we'll address this once more of the\n      // Segment Cache implementation has settled.\n      // TODO: We should hoist the search params out of the FlightRouterState\n      // type entirely, This is our plan for dynamic route params, too.\n      return PAGE_SEGMENT_KEY as SegmentRequestKeyPart\n    }\n    const safeName =\n      // TODO: FlightRouterState encodes Not Found routes as \"/_not-found\".\n      // But params typically don't include the leading slash. We should use\n      // a different encoding to avoid this special case.\n      segment === '/_not-found'\n        ? '_not-found'\n        : encodeToFilesystemAndURLSafeString(segment)\n    // Since this is not a dynamic segment, it's fully encoded. It does not\n    // need to be \"hydrated\" with a param value.\n    return safeName as SegmentRequestKeyPart\n  }\n\n  const name = segment[0]\n  const paramType = segment[2]\n  const safeName = encodeToFilesystemAndURLSafeString(name)\n\n  const encodedName = '$' + paramType + '$' + safeName\n  return encodedName as SegmentRequestKeyPart\n}\n\nexport function appendSegmentRequestKeyPart(\n  parentRequestKey: SegmentRequestKey,\n  parallelRouteKey: string,\n  childRequestKeyPart: SegmentRequestKeyPart\n): SegmentRequestKey {\n  // Aside from being filesystem safe, segment keys are also designed so that\n  // each segment and parallel route creates its own subdirectory. Roughly in\n  // the same shape as the source app directory. This is mostly just for easier\n  // debugging (you can open up the build folder and navigate the output); if\n  // we wanted to do we could just use a flat structure.\n\n  // Omit the parallel route key for children, since this is the most\n  // common case. Saves some bytes (and it's what the app directory does).\n  const slotKey =\n    parallelRouteKey === 'children'\n      ? childRequestKeyPart\n      : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childRequestKeyPart}`\n  return (parentRequestKey + '/' + slotKey) as SegmentRequestKey\n}\n\nexport function createSegmentCacheKeyPart(\n  requestKeyPart: SegmentRequestKeyPart,\n  segment: FlightRouterStateSegment\n): SegmentCacheKeyPart {\n  if (typeof segment === 'string') {\n    return requestKeyPart as any as SegmentCacheKeyPart\n  }\n  const paramValue = segment[1]\n  const safeValue = encodeToFilesystemAndURLSafeString(paramValue)\n  return (requestKeyPart + '$' + safeValue) as SegmentCacheKeyPart\n}\n\nexport function appendSegmentCacheKeyPart(\n  parentSegmentKey: SegmentCacheKey,\n  parallelRouteKey: string,\n  childCacheKeyPart: SegmentCacheKeyPart\n): SegmentCacheKey {\n  const slotKey =\n    parallelRouteKey === 'children'\n      ? childCacheKeyPart\n      : `@${encodeToFilesystemAndURLSafeString(parallelRouteKey)}/${childCacheKeyPart}`\n  return (parentSegmentKey + '/' + slotKey) as SegmentCacheKey\n}\n\n// Define a regex pattern to match the most common characters found in a route\n// param. It excludes anything that might not be cross-platform filesystem\n// compatible, like |. It does not need to be precise because the fallback is to\n// just base64url-encode the whole parameter, which is fine; we just don't do it\n// by default for compactness, and for easier debugging.\nconst simpleParamValueRegex = /^[a-zA-Z0-9\\-_@]+$/\n\nfunction encodeToFilesystemAndURLSafeString(value: string) {\n  if (simpleParamValueRegex.test(value)) {\n    return value\n  }\n  // If there are any unsafe characters, base64url-encode the entire value.\n  // We also add a ! prefix so it doesn't collide with the simple case.\n  const base64url = btoa(value)\n    .replace(/\\+/g, '-') // Replace '+' with '-'\n    .replace(/\\//g, '_') // Replace '/' with '_'\n    .replace(/=+$/, '') // Remove trailing '='\n  return '!' + base64url\n}\n\nexport function convertSegmentPathToStaticExportFilename(\n  segmentPath: string\n): string {\n  return `__next${segmentPath.replace(/\\//g, '.')}.txt`\n}\n","import stringHash from 'next/dist/compiled/string-hash';\nimport { formatServerError } from '../../lib/format-server-error';\nimport { SpanStatusCode, getTracer } from '../lib/trace/tracer';\nimport { isAbortError } from '../pipe-readable';\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr';\nimport { isDynamicServerError } from '../../client/components/hooks-server-context';\nimport { isNextRouterError } from '../../client/components/is-next-router-error';\nimport { isPrerenderInterruptedError } from './dynamic-rendering';\nimport { getProperError } from '../../lib/is-error';\nimport { createDigestWithErrorCode } from '../../lib/error-telemetry-utils';\nimport { isReactLargeShellError } from './react-large-shell-error';\n/**\n * Returns a digest for well-known Next.js errors, otherwise `undefined`. If a\n * digest is returned this also means that the error does not need to be\n * reported.\n */ export function getDigestForWellKnownError(error) {\n    // If we're bailing out to CSR, we don't need to log the error.\n    if (isBailoutToCSRError(error)) return error.digest;\n    // If this is a navigation error, we don't need to log the error.\n    if (isNextRouterError(error)) return error.digest;\n    // If this error occurs, we know that we should be stopping the static\n    // render. This is only thrown in static generation when PPR is not enabled,\n    // which causes the whole page to be marked as dynamic. We don't need to\n    // tell the user about this error, as it's not actionable.\n    if (isDynamicServerError(error)) return error.digest;\n    // If this is a prerender interrupted error, we don't need to log the error.\n    if (isPrerenderInterruptedError(error)) return error.digest;\n    return undefined;\n}\nexport function createFlightReactServerErrorHandler(shouldFormatError, onReactServerRenderError) {\n    return (thrownValue)=>{\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + err.stack || '').toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Record exception in an active span, if available.\n        const span = getTracer().getActiveScopeSpan();\n        if (span) {\n            span.recordException(err);\n            span.setAttribute('error.type', err.name);\n            span.setStatus({\n                code: SpanStatusCode.ERROR,\n                message: err.message\n            });\n        }\n        onReactServerRenderError(err);\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLReactServerErrorHandler(shouldFormatError, isNextExport, reactServerErrors, silenceLogger, onReactServerRenderError) {\n    return (thrownValue)=>{\n        var _err_message;\n        if (typeof thrownValue === 'string') {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            return stringHash(thrownValue).toString();\n        }\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (!err.digest) {\n            // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n            err.digest = stringHash(err.message + (err.stack || '')).toString();\n        }\n        // @TODO by putting this here and not at the top it is possible that\n        // we don't error the build in places we actually expect to\n        if (!reactServerErrors.has(err.digest)) {\n            reactServerErrors.set(err.digest, err);\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger) {\n                onReactServerRenderError == null ? void 0 : onReactServerRenderError(err);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function createHTMLErrorHandler(shouldFormatError, isNextExport, reactServerErrors, allCapturedErrors, silenceLogger, onHTMLRenderSSRError) {\n    return (thrownValue, errorInfo)=>{\n        var _err_message;\n        if (isReactLargeShellError(thrownValue)) {\n            // TODO: Aggregate\n            console.error(thrownValue);\n            return undefined;\n        }\n        let isSSRError = true;\n        allCapturedErrors.push(thrownValue);\n        // If the response was closed, we don't need to log the error.\n        if (isAbortError(thrownValue)) return;\n        const digest = getDigestForWellKnownError(thrownValue);\n        if (digest) {\n            return digest;\n        }\n        const err = getProperError(thrownValue);\n        // If the error already has a digest, respect the original digest,\n        // so it won't get re-generated into another new error.\n        if (err.digest) {\n            if (reactServerErrors.has(err.digest)) {\n                // This error is likely an obfuscated error from react-server.\n                // We recover the original error here.\n                thrownValue = reactServerErrors.get(err.digest);\n                isSSRError = false;\n            } else {\n            // The error is not from react-server but has a digest\n            // from other means so we don't need to produce a new one\n            }\n        } else {\n            err.digest = stringHash(err.message + ((errorInfo == null ? void 0 : errorInfo.componentStack) || err.stack || '')).toString();\n        }\n        // Format server errors in development to add more helpful error messages\n        if (shouldFormatError) {\n            formatServerError(err);\n        }\n        // Don't log the suppressed error during export\n        if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes('The specific message is omitted in production builds to avoid leaking sensitive details.')))) {\n            // Record exception in an active span, if available.\n            const span = getTracer().getActiveScopeSpan();\n            if (span) {\n                span.recordException(err);\n                span.setAttribute('error.type', err.name);\n                span.setStatus({\n                    code: SpanStatusCode.ERROR,\n                    message: err.message\n                });\n            }\n            if (!silenceLogger && // HTML errors contain RSC errors as well, filter them out before reporting\n            isSSRError) {\n                onHTMLRenderSSRError(err, errorInfo);\n            }\n        }\n        return createDigestWithErrorCode(thrownValue, err.digest);\n    };\n}\nexport function isUserLandError(err) {\n    return !isAbortError(err) && !isBailoutToCSRError(err) && !isNextRouterError(err);\n}\n\n//# sourceMappingURL=create-error-handler.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream } from 'react-server-dom-webpack/client';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { unstable_prerender as prerender } from 'react-server-dom-webpack/static';\nimport { streamFromBuffer, streamToBuffer } from '../stream-utils/node-web-streams-helper';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { createSegmentRequestKeyPart, appendSegmentRequestKeyPart, ROOT_SEGMENT_REQUEST_KEY } from '../../shared/lib/segment-cache/segment-value-encoding';\nimport { getDigestForWellKnownError } from './create-error-handler';\nconst filterStackFrame = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').filterStackFrameDEV : undefined;\nconst findSourceMapURL = process.env.NODE_ENV !== 'production' ? require('../lib/source-maps').findSourceMapURLDEV : undefined;\nfunction onSegmentPrerenderError(error) {\n    const digest = getDigestForWellKnownError(error);\n    if (digest) {\n        return digest;\n    }\n// We don't need to log the errors because we would have already done that\n// when generating the original Flight stream for the whole page.\n}\nexport async function collectSegmentData(isClientParamParsingEnabled, fullPageDataBuffer, staleTime, clientModules, serverConsumerManifest) {\n    // Traverse the router tree and generate a prefetch response for each segment.\n    // A mutable map to collect the results as we traverse the route tree.\n    const resultMap = new Map();\n    // Before we start, warm up the module cache by decoding the page data once.\n    // Then we can assume that any remaining async tasks that occur the next time\n    // are due to hanging promises caused by dynamic data access. Note we only\n    // have to do this once per page, not per individual segment.\n    //\n    try {\n        await createFromReadableStream(streamFromBuffer(fullPageDataBuffer), {\n            findSourceMapURL,\n            serverConsumerManifest\n        });\n        await waitAtLeastOneReactRenderTask();\n    } catch  {}\n    // Create an abort controller that we'll use to stop the stream.\n    const abortController = new AbortController();\n    const onCompletedProcessingRouteTree = async ()=>{\n        // Since all we're doing is decoding and re-encoding a cached prerender, if\n        // serializing the stream takes longer than a microtask, it must because of\n        // hanging promises caused by dynamic data.\n        await waitAtLeastOneReactRenderTask();\n        abortController.abort();\n    };\n    // Generate a stream for the route tree prefetch. While we're walking the\n    // tree, we'll also spawn additional tasks to generate the segment prefetches.\n    // The promises for these tasks are pushed to a mutable array that we will\n    // await once the route tree is fully rendered.\n    const segmentTasks = [];\n    const { prelude: treeStream } = await prerender(// RootTreePrefetch is not a valid return type for a React component, but\n    // we need to use a component so that when we decode the original stream\n    // inside of it, the side effects are transferred to the new stream.\n    // @ts-expect-error\n    /*#__PURE__*/ _jsx(PrefetchTreeData, {\n        isClientParamParsingEnabled: isClientParamParsingEnabled,\n        fullPageDataBuffer: fullPageDataBuffer,\n        serverConsumerManifest: serverConsumerManifest,\n        clientModules: clientModules,\n        staleTime: staleTime,\n        segmentTasks: segmentTasks,\n        onCompletedProcessingRouteTree: onCompletedProcessingRouteTree\n    }), clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    // Write the route tree to a special `/_tree` segment.\n    const treeBuffer = await streamToBuffer(treeStream);\n    resultMap.set('/_tree', treeBuffer);\n    // Now that we've finished rendering the route tree, all the segment tasks\n    // should have been spawned. Await them in parallel and write the segment\n    // prefetches to the result map.\n    for (const [segmentPath, buffer] of (await Promise.all(segmentTasks))){\n        resultMap.set(segmentPath, buffer);\n    }\n    return resultMap;\n}\nasync function PrefetchTreeData({ isClientParamParsingEnabled, fullPageDataBuffer, serverConsumerManifest, clientModules, staleTime, segmentTasks, onCompletedProcessingRouteTree }) {\n    // We're currently rendering a Flight response for the route tree prefetch.\n    // Inside this component, decode the Flight stream for the whole page. This is\n    // a hack to transfer the side effects from the original Flight stream (e.g.\n    // Float preloads) onto the Flight stream for the tree prefetch.\n    // TODO: React needs a better way to do this. Needed for Server Actions, too.\n    const initialRSCPayload = await createFromReadableStream(createUnclosingPrefetchStream(streamFromBuffer(fullPageDataBuffer)), {\n        findSourceMapURL,\n        serverConsumerManifest\n    });\n    const buildId = initialRSCPayload.b;\n    // FlightDataPath is an unsound type, hence the additional checks.\n    const flightDataPaths = initialRSCPayload.f;\n    if (flightDataPaths.length !== 1 && flightDataPaths[0].length !== 3) {\n        console.error('Internal Next.js error: InitialRSCPayload does not match the expected ' + 'shape for a prerendered page during segment prefetch generation.');\n        return null;\n    }\n    const flightRouterState = flightDataPaths[0][0];\n    const seedData = flightDataPaths[0][1];\n    const head = flightDataPaths[0][2];\n    // Compute the route metadata tree by traversing the FlightRouterState. As we\n    // walk the tree, we will also spawn a task to produce a prefetch response for\n    // each segment.\n    const tree = collectSegmentDataImpl(isClientParamParsingEnabled, flightRouterState, buildId, seedData, clientModules, ROOT_SEGMENT_REQUEST_KEY, segmentTasks);\n    const isHeadPartial = await isPartialRSCData(head, clientModules);\n    // Notify the abort controller that we're done processing the route tree.\n    // Anything async that happens after this point must be due to hanging\n    // promises in the original stream.\n    onCompletedProcessingRouteTree();\n    // Render the route tree to a special `/_tree` segment.\n    const treePrefetch = {\n        buildId,\n        tree,\n        head,\n        isHeadPartial,\n        staleTime\n    };\n    return treePrefetch;\n}\nfunction collectSegmentDataImpl(isClientParamParsingEnabled, route, buildId, seedData, clientModules, requestKey, segmentTasks) {\n    // Metadata about the segment. Sent as part of the tree prefetch. Null if\n    // there are no children.\n    let slotMetadata = null;\n    const children = route[1];\n    const seedDataChildren = seedData !== null ? seedData[2] : null;\n    for(const parallelRouteKey in children){\n        const childRoute = children[parallelRouteKey];\n        const childSegment = childRoute[0];\n        const childSeedData = seedDataChildren !== null ? seedDataChildren[parallelRouteKey] : null;\n        const childRequestKey = appendSegmentRequestKeyPart(requestKey, parallelRouteKey, createSegmentRequestKeyPart(childSegment));\n        const childTree = collectSegmentDataImpl(isClientParamParsingEnabled, childRoute, buildId, childSeedData, clientModules, childRequestKey, segmentTasks);\n        if (slotMetadata === null) {\n            slotMetadata = {};\n        }\n        slotMetadata[parallelRouteKey] = childTree;\n    }\n    if (seedData !== null) {\n        // Spawn a task to write the segment data to a new Flight stream.\n        segmentTasks.push(// Since we're already in the middle of a render, wait until after the\n        // current task to escape the current rendering context.\n        waitAtLeastOneReactRenderTask().then(()=>renderSegmentPrefetch(buildId, seedData, requestKey, clientModules)));\n    } else {\n    // This segment does not have any seed data. Skip generating a prefetch\n    // response for it. We'll still include it in the route tree, though.\n    // TODO: We should encode in the route tree whether a segment is missing\n    // so we don't attempt to fetch it for no reason. As of now this shouldn't\n    // ever happen in practice, though.\n    }\n    const segment = route[0];\n    let name;\n    let paramType = null;\n    let paramKey = null;\n    if (typeof segment === 'string') {\n        name = segment;\n        paramKey = segment;\n        paramType = null;\n    } else {\n        name = segment[0];\n        paramKey = segment[1];\n        paramType = segment[2];\n    }\n    // Metadata about the segment. Sent to the client as part of the\n    // tree prefetch.\n    return {\n        name,\n        paramType,\n        // This value is ommitted from the prefetch response when clientParamParsing\n        // is enabled. The flag only exists while we're testing the feature, in\n        // case there's a bug and we need to revert.\n        // TODO: Remove once clientParamParsing is enabled everywhere.\n        paramKey: isClientParamParsingEnabled ? null : paramKey,\n        slots: slotMetadata,\n        isRootLayout: route[4] === true\n    };\n}\nasync function renderSegmentPrefetch(buildId, seedData, requestKey, clientModules) {\n    // Render the segment data to a stream.\n    // In the future, this is where we can include additional metadata, like the\n    // stale time and cache tags.\n    const rsc = seedData[1];\n    const loading = seedData[3];\n    const segmentPrefetch = {\n        buildId,\n        rsc,\n        loading,\n        isPartial: await isPartialRSCData(rsc, clientModules)\n    };\n    // Since all we're doing is decoding and re-encoding a cached prerender, if\n    // it takes longer than a microtask, it must because of hanging promises\n    // caused by dynamic data. Abort the stream at the end of the current task.\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>abortController.abort());\n    const { prelude: segmentStream } = await prerender(segmentPrefetch, clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError: onSegmentPrerenderError\n    });\n    const segmentBuffer = await streamToBuffer(segmentStream);\n    if (requestKey === ROOT_SEGMENT_REQUEST_KEY) {\n        return [\n            '/_index',\n            segmentBuffer\n        ];\n    } else {\n        return [\n            requestKey,\n            segmentBuffer\n        ];\n    }\n}\nasync function isPartialRSCData(rsc, clientModules) {\n    // We can determine if a segment contains only partial data if it takes longer\n    // than a task to encode, because dynamic data is encoded as an infinite\n    // promise. We must do this in a separate Flight prerender from the one that\n    // actually generates the prefetch stream because we need to include\n    // `isPartial` in the stream itself.\n    let isPartial = false;\n    const abortController = new AbortController();\n    waitAtLeastOneReactRenderTask().then(()=>{\n        // If we haven't yet finished the outer task, then it must be because we\n        // accessed dynamic data.\n        isPartial = true;\n        abortController.abort();\n    });\n    await prerender(rsc, clientModules, {\n        filterStackFrame,\n        signal: abortController.signal,\n        onError () {},\n        onPostpone () {\n            // If something postponed, i.e. when Cache Components is not enabled, we can\n            // infer that the RSC data is partial.\n            isPartial = true;\n        }\n    });\n    return isPartial;\n}\nfunction createUnclosingPrefetchStream(originalFlightStream) {\n    // When PPR is enabled, prefetch streams may contain references that never\n    // resolve, because that's how we encode dynamic data access. In the decoded\n    // object returned by the Flight client, these are reified into hanging\n    // promises that suspend during render, which is effectively what we want.\n    // The UI resolves when it switches to the dynamic data stream\n    // (via useDeferredValue(dynamic, static)).\n    //\n    // However, the Flight implementation currently errors if the server closes\n    // the response before all the references are resolved. As a cheat to work\n    // around this, we wrap the original stream in a new stream that never closes,\n    // and therefore doesn't error.\n    const reader = originalFlightStream.getReader();\n    return new ReadableStream({\n        async pull (controller) {\n            while(true){\n                const { done, value } = await reader.read();\n                if (!done) {\n                    // Pass to the target stream and keep consuming the Flight response\n                    // from the server.\n                    controller.enqueue(value);\n                    continue;\n                }\n                // The server stream has closed. Exit, but intentionally do not close\n                // the target stream.\n                return;\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=collect-segment-data.js.map","const noop = ()=>{};\nlet registry;\nif (globalThis.FinalizationRegistry) {\n    registry = new FinalizationRegistry((weakRef)=>{\n        const stream = weakRef.deref();\n        if (stream && !stream.locked) {\n            stream.cancel('Response object has been garbage collected').then(noop);\n        }\n    });\n}\n/**\n * Clones a response by teeing the body so we can return two independent\n * ReadableStreams from it. This avoids the bug in the undici library around\n * response cloning.\n *\n * After cloning, the original response's body will be consumed and closed.\n *\n * @see https://github.com/vercel/next.js/pull/73274\n *\n * @param original - The original response to clone.\n * @returns A tuple containing two independent clones of the original response.\n */ export function cloneResponse(original) {\n    // If the response has no body, then we can just return the original response\n    // twice because it's immutable.\n    if (!original.body) {\n        return [\n            original,\n            original\n        ];\n    }\n    const [body1, body2] = original.body.tee();\n    const cloned1 = new Response(body1, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned1, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    // The Fetch Standard allows users to skip consuming the response body by\n    // relying on garbage collection to release connection resources.\n    // https://github.com/nodejs/undici?tab=readme-ov-file#garbage-collection\n    //\n    // To cancel the stream you then need to cancel both resulting branches.\n    // Teeing a stream will generally lock it for the duration, preventing other\n    // readers from locking it.\n    // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee\n    // cloned2 is stored in a react cache and cloned for subsequent requests.\n    // It is the original request, and is is garbage collected by a\n    // FinalizationRegistry in Undici, but since we're tee-ing the stream\n    // ourselves, we need to cancel clone1's stream (the response returned from\n    // our dedupe fetch) when clone1 is reclaimed, otherwise we leak memory.\n    if (registry && cloned1.body) {\n        registry.register(cloned1, new WeakRef(cloned1.body));\n    }\n    const cloned2 = new Response(body2, {\n        status: original.status,\n        statusText: original.statusText,\n        headers: original.headers\n    });\n    Object.defineProperty(cloned2, 'url', {\n        value: original.url,\n        // How the original response.url behaves\n        configurable: true,\n        enumerable: true,\n        writable: false\n    });\n    return [\n        cloned1,\n        cloned2\n    ];\n}\n\n//# sourceMappingURL=clone-response.js.map","/**\n * Based on https://github.com/facebook/react/blob/d4e78c42a94be027b4dc7ed2659a5fddfbf9bd4e/packages/react/src/ReactFetch.js\n */ import * as React from 'react';\nimport { cloneResponse } from './clone-response';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nconst simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]' // generateCacheKey(new Request('https://blank'));\n;\nfunction generateCacheKey(request) {\n    // We pick the fields that goes into the key used to dedupe requests.\n    // We don't include the `cache` field, because we end up using whatever\n    // caching resulted from the first request.\n    // Notably we currently don't consider non-standard (or future) options.\n    // This might not be safe. TODO: warn for non-standard extensions differing.\n    // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n    return JSON.stringify([\n        request.method,\n        Array.from(request.headers.entries()),\n        request.mode,\n        request.redirect,\n        request.credentials,\n        request.referrer,\n        request.referrerPolicy,\n        request.integrity\n    ]);\n}\nexport function createDedupeFetch(originalFetch) {\n    const getCacheEntries = React.cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- url is the cache key\n    (url)=>[]);\n    return function dedupeFetch(resource, options) {\n        if (options && options.signal) {\n            // If we're passed a signal, then we assume that\n            // someone else controls the lifetime of this object and opts out of\n            // caching. It's effectively the opt-out mechanism.\n            // Ideally we should be able to check this on the Request but\n            // it always gets initialized with its own signal so we don't\n            // know if it's supposed to override - unless we also override the\n            // Request constructor.\n            return originalFetch(resource, options);\n        }\n        // Normalize the Request\n        let url;\n        let cacheKey;\n        if (typeof resource === 'string' && !options) {\n            // Fast path.\n            cacheKey = simpleCacheKey;\n            url = resource;\n        } else {\n            // Normalize the request.\n            // if resource is not a string or a URL (its an instance of Request)\n            // then do not instantiate a new Request but instead\n            // reuse the request as to not disturb the body in the event it's a ReadableStream.\n            const request = typeof resource === 'string' || resource instanceof URL ? new Request(resource, options) : resource;\n            if (request.method !== 'GET' && request.method !== 'HEAD' || request.keepalive) {\n                // We currently don't dedupe requests that might have side-effects. Those\n                // have to be explicitly cached. We assume that the request doesn't have a\n                // body if it's GET or HEAD.\n                // keepalive gets treated the same as if you passed a custom cache signal.\n                return originalFetch(resource, options);\n            }\n            cacheKey = generateCacheKey(request);\n            url = request.url;\n        }\n        const cacheEntries = getCacheEntries(url);\n        for(let i = 0, j = cacheEntries.length; i < j; i += 1){\n            const [key, promise] = cacheEntries[i];\n            if (key === cacheKey) {\n                return promise.then(()=>{\n                    const response = cacheEntries[i][2];\n                    if (!response) throw Object.defineProperty(new InvariantError('No cached response'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E579\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    // We're cloning the response using this utility because there exists\n                    // a bug in the undici library around response cloning. See the\n                    // following pull request for more details:\n                    // https://github.com/vercel/next.js/pull/73274\n                    const [cloned1, cloned2] = cloneResponse(response);\n                    cacheEntries[i][2] = cloned2;\n                    return cloned1;\n                });\n            }\n        }\n        // We pass the original arguments here in case normalizing the Request\n        // doesn't include all the options in this environment.\n        const promise = originalFetch(resource, options);\n        const entry = [\n            cacheKey,\n            promise,\n            null\n        ];\n        cacheEntries.push(entry);\n        return promise.then((response)=>{\n            // We're cloning the response using this utility because there exists\n            // a bug in the undici library around response cloning. See the\n            // following pull request for more details:\n            // https://github.com/vercel/next.js/pull/73274\n            const [cloned1, cloned2] = cloneResponse(response);\n            entry[2] = cloned2;\n            return cloned1;\n        });\n    };\n}\n\n//# sourceMappingURL=dedupe-fetch.js.map","import { AppRenderSpan, NextNodeServerSpan } from './trace/constants';\nimport { getTracer, SpanKind } from './trace/tracer';\nimport { CACHE_ONE_YEAR, INFINITE_CACHE, NEXT_CACHE_TAG_MAX_ITEMS, NEXT_CACHE_TAG_MAX_LENGTH } from '../../lib/constants';\nimport { markCurrentScopeAsDynamic } from '../app-render/dynamic-rendering';\nimport { makeHangingPromise } from '../dynamic-rendering-utils';\nimport { createDedupeFetch } from './dedupe-fetch';\nimport { getCacheSignal } from '../app-render/work-unit-async-storage.external';\nimport { CachedRouteKind, IncrementalCacheKind } from '../response-cache';\nimport { waitAtLeastOneReactRenderTask } from '../../lib/scheduler';\nimport { cloneResponse } from './clone-response';\nconst isEdgeRuntime = process.env.NEXT_RUNTIME === 'edge';\nexport const NEXT_PATCH_SYMBOL = Symbol.for('next-patch');\nfunction isFetchPatched() {\n    return globalThis[NEXT_PATCH_SYMBOL] === true;\n}\nexport function validateRevalidate(revalidateVal, route) {\n    try {\n        let normalizedRevalidate = undefined;\n        if (revalidateVal === false) {\n            normalizedRevalidate = INFINITE_CACHE;\n        } else if (typeof revalidateVal === 'number' && !isNaN(revalidateVal) && revalidateVal > -1) {\n            normalizedRevalidate = revalidateVal;\n        } else if (typeof revalidateVal !== 'undefined') {\n            throw Object.defineProperty(new Error(`Invalid revalidate value \"${revalidateVal}\" on \"${route}\", must be a non-negative number or false`), \"__NEXT_ERROR_CODE\", {\n                value: \"E179\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return normalizedRevalidate;\n    } catch (err) {\n        // handle client component error from attempting to check revalidate value\n        if (err instanceof Error && err.message.includes('Invalid revalidate')) {\n            throw err;\n        }\n        return undefined;\n    }\n}\nexport function validateTags(tags, description) {\n    const validTags = [];\n    const invalidTags = [];\n    for(let i = 0; i < tags.length; i++){\n        const tag = tags[i];\n        if (typeof tag !== 'string') {\n            invalidTags.push({\n                tag,\n                reason: 'invalid type, must be a string'\n            });\n        } else if (tag.length > NEXT_CACHE_TAG_MAX_LENGTH) {\n            invalidTags.push({\n                tag,\n                reason: `exceeded max length of ${NEXT_CACHE_TAG_MAX_LENGTH}`\n            });\n        } else {\n            validTags.push(tag);\n        }\n        if (validTags.length > NEXT_CACHE_TAG_MAX_ITEMS) {\n            console.warn(`Warning: exceeded max tag count for ${description}, dropped tags:`, tags.slice(i).join(', '));\n            break;\n        }\n    }\n    if (invalidTags.length > 0) {\n        console.warn(`Warning: invalid tags passed to ${description}: `);\n        for (const { tag, reason } of invalidTags){\n            console.log(`tag: \"${tag}\" ${reason}`);\n        }\n    }\n    return validTags;\n}\nfunction trackFetchMetric(workStore, ctx) {\n    if (!workStore.shouldTrackFetchMetrics) {\n        return;\n    }\n    workStore.fetchMetrics ??= [];\n    workStore.fetchMetrics.push({\n        ...ctx,\n        end: performance.timeOrigin + performance.now(),\n        idx: workStore.nextFetchId || 0\n    });\n}\nasync function createCachedPrerenderResponse(res, cacheKey, incrementalCacheContext, incrementalCache, revalidate, handleUnlock) {\n    // We are prerendering at build time or revalidate time with cacheComponents so we\n    // need to buffer the response so we can guarantee it can be read in a\n    // microtask.\n    const bodyBuffer = await res.arrayBuffer();\n    const fetchedData = {\n        headers: Object.fromEntries(res.headers.entries()),\n        body: Buffer.from(bodyBuffer).toString('base64'),\n        status: res.status,\n        url: res.url\n    };\n    // We can skip setting the serverComponentsHmrCache because we aren't in dev\n    // mode.\n    if (incrementalCacheContext) {\n        await incrementalCache.set(cacheKey, {\n            kind: CachedRouteKind.FETCH,\n            data: fetchedData,\n            revalidate\n        }, incrementalCacheContext);\n    }\n    await handleUnlock();\n    // We return a new Response to the caller.\n    return new Response(bodyBuffer, {\n        headers: res.headers,\n        status: res.status,\n        statusText: res.statusText\n    });\n}\nasync function createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheContext, incrementalCache, serverComponentsHmrCache, revalidate, input, handleUnlock) {\n    // We're cloning the response using this utility because there exists a bug in\n    // the undici library around response cloning. See the following pull request\n    // for more details: https://github.com/vercel/next.js/pull/73274\n    const [cloned1, cloned2] = cloneResponse(res);\n    // We are dynamically rendering including dev mode. We want to return the\n    // response to the caller as soon as possible because it might stream over a\n    // very long time.\n    const cacheSetPromise = cloned1.arrayBuffer().then(async (arrayBuffer)=>{\n        const bodyBuffer = Buffer.from(arrayBuffer);\n        const fetchedData = {\n            headers: Object.fromEntries(cloned1.headers.entries()),\n            body: bodyBuffer.toString('base64'),\n            status: cloned1.status,\n            url: cloned1.url\n        };\n        serverComponentsHmrCache == null ? void 0 : serverComponentsHmrCache.set(cacheKey, fetchedData);\n        if (incrementalCacheContext) {\n            await incrementalCache.set(cacheKey, {\n                kind: CachedRouteKind.FETCH,\n                data: fetchedData,\n                revalidate\n            }, incrementalCacheContext);\n        }\n    }).catch((error)=>console.warn(`Failed to set fetch cache`, input, error)).finally(handleUnlock);\n    const pendingRevalidateKey = `cache-set-${cacheKey}`;\n    workStore.pendingRevalidates ??= {};\n    if (pendingRevalidateKey in workStore.pendingRevalidates) {\n        // there is already a pending revalidate entry that we need to await to\n        // avoid race conditions\n        await workStore.pendingRevalidates[pendingRevalidateKey];\n    }\n    workStore.pendingRevalidates[pendingRevalidateKey] = cacheSetPromise.finally(()=>{\n        var _workStore_pendingRevalidates;\n        // If the pending revalidate is not present in the store, then we have\n        // nothing to delete.\n        if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n            return;\n        }\n        delete workStore.pendingRevalidates[pendingRevalidateKey];\n    });\n    return cloned2;\n}\nexport function createPatchedFetcher(originFetch, { workAsyncStorage, workUnitAsyncStorage }) {\n    // Create the patched fetch function.\n    const patched = async function fetch(input, init) {\n        var _init_method, _init_next;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = '';\n            url.password = '';\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? '';\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || 'GET';\n        // Do create a new span trace for internal fetches in the\n        // non-verbose mode.\n        const isInternal = (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) === true;\n        const hideSpan = process.env.NEXT_OTEL_FETCH_DISABLED === '1';\n        // We don't track fetch metrics for internal fetches\n        // so it's not critical that we have a start time, as it won't be recorded.\n        // This is to workaround a flaky issue where performance APIs might\n        // not be available and will require follow-up investigation.\n        const fetchStart = isInternal ? undefined : performance.timeOrigin + performance.now();\n        const workStore = workAsyncStorage.getStore();\n        const workUnitStore = workUnitAsyncStorage.getStore();\n        // During static generation we track cache reads so we can reason about when they fill\n        let cacheSignal = workUnitStore ? getCacheSignal(workUnitStore) : null;\n        if (cacheSignal) {\n            cacheSignal.beginRead();\n        }\n        const result = getTracer().trace(isInternal ? NextNodeServerSpan.internalFetch : AppRenderSpan.fetch, {\n            hideSpan,\n            kind: SpanKind.CLIENT,\n            spanName: [\n                'fetch',\n                method,\n                fetchUrl\n            ].filter(Boolean).join(' '),\n            attributes: {\n                'http.url': fetchUrl,\n                'http.method': method,\n                'net.peer.name': url == null ? void 0 : url.hostname,\n                'net.peer.port': (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _getRequestMeta;\n            // If this is an internal fetch, we should not do any special treatment.\n            if (isInternal) {\n                return originFetch(input, init);\n            }\n            // If the workStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!workStore) {\n                return originFetch(input, init);\n            }\n            // We should also fallback to the original fetch implementation if we\n            // are in draft mode, it does not constitute a static generation.\n            if (workStore.isDraftMode) {\n                return originFetch(input, init);\n            }\n            const isRequestInput = input && typeof input === 'object' && typeof input.method === 'string';\n            const getRequestMeta = (field)=>{\n                // If request input is present but init is not, retrieve from input first.\n                const value = init == null ? void 0 : init[field];\n                return value || (isRequestInput ? input[field] : null);\n            };\n            let finalRevalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== 'undefined' ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            const originalFetchRevalidate = getNextField('revalidate');\n            let currentFetchRevalidate = originalFetchRevalidate;\n            const tags = validateTags(getNextField('tags') || [], `fetch ${input.toString()}`);\n            let revalidateStore;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // TODO: Stop accumulating tags in client prerender. (fallthrough)\n                    case 'prerender-client':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'cache':\n                    case 'private-cache':\n                        revalidateStore = workUnitStore;\n                        break;\n                    case 'request':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (revalidateStore) {\n                if (Array.isArray(tags)) {\n                    // Collect tags onto parent caches or parent prerenders.\n                    const collectedTags = revalidateStore.tags ?? (revalidateStore.tags = []);\n                    for (const tag of tags){\n                        if (!collectedTags.includes(tag)) {\n                            collectedTags.push(tag);\n                        }\n                    }\n                }\n            }\n            const implicitTags = workUnitStore == null ? void 0 : workUnitStore.implicitTags;\n            let pageFetchCacheMode = workStore.fetchCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'unstable-cache':\n                        // Inside unstable-cache we treat it the same as force-no-store on\n                        // the page.\n                        pageFetchCacheMode = 'force-no-store';\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            const isUsingNoStore = !!workStore.isUnstableNoStore;\n            let currentFetchCacheConfig = getRequestMeta('cache');\n            let cacheReason = '';\n            let cacheWarning;\n            if (typeof currentFetchCacheConfig === 'string' && typeof currentFetchRevalidate !== 'undefined') {\n                // If the revalidate value conflicts with the cache value, we should warn the user and unset the conflicting values.\n                const isConflictingRevalidate = // revalidate: 0 and cache: force-cache\n                currentFetchCacheConfig === 'force-cache' && currentFetchRevalidate === 0 || // revalidate: >0 or revalidate: false and cache: no-store\n                currentFetchCacheConfig === 'no-store' && (currentFetchRevalidate > 0 || currentFetchRevalidate === false);\n                if (isConflictingRevalidate) {\n                    cacheWarning = `Specified \"cache: ${currentFetchCacheConfig}\" and \"revalidate: ${currentFetchRevalidate}\", only one should be specified.`;\n                    currentFetchCacheConfig = undefined;\n                    currentFetchRevalidate = undefined;\n                }\n            }\n            const hasExplicitFetchCacheOptOut = // fetch config itself signals not to cache\n            currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store' || // the fetch isn't explicitly caching and the segment level cache config signals not to cache\n            // note: `pageFetchCacheMode` is also set by being in an unstable_cache context.\n            pageFetchCacheMode === 'force-no-store' || pageFetchCacheMode === 'only-no-store';\n            // If no explicit fetch cache mode is set, but dynamic = `force-dynamic` is set,\n            // we shouldn't consider caching the fetch. This is because the `dynamic` cache\n            // is considered a \"top-level\" cache mode, whereas something like `fetchCache` is more\n            // fine-grained. Top-level modes are responsible for setting reasonable defaults for the\n            // other configurations.\n            const noFetchConfigAndForceDynamic = !pageFetchCacheMode && !currentFetchCacheConfig && !currentFetchRevalidate && workStore.forceDynamic;\n            if (// force-cache was specified without a revalidate value. We set the revalidate value to false\n            // which will signal the cache to not revalidate\n            currentFetchCacheConfig === 'force-cache' && typeof currentFetchRevalidate === 'undefined') {\n                currentFetchRevalidate = false;\n            } else if (hasExplicitFetchCacheOptOut || noFetchConfigAndForceDynamic) {\n                currentFetchRevalidate = 0;\n            }\n            if (currentFetchCacheConfig === 'no-cache' || currentFetchCacheConfig === 'no-store') {\n                cacheReason = `cache: ${currentFetchCacheConfig}`;\n            }\n            finalRevalidate = validateRevalidate(currentFetchRevalidate, workStore.route);\n            const _headers = getRequestMeta('headers');\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === 'function' ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get('authorization') || initHeaders.get('cookie');\n            const isUnCacheableMethod = ![\n                'get',\n                'head'\n            ].includes(((_getRequestMeta = getRequestMeta('method')) == null ? void 0 : _getRequestMeta.toLowerCase()) || 'get');\n            /**\n         * We automatically disable fetch caching under the following conditions:\n         * - Fetch cache configs are not set. Specifically:\n         *    - A page fetch cache mode is not set (export const fetchCache=...)\n         *    - A fetch cache mode is not set in the fetch call (fetch(url, { cache: ... }))\n         *      or the fetch cache mode is set to 'default'\n         *    - A fetch revalidate value is not set in the fetch call (fetch(url, { revalidate: ... }))\n         * - OR the fetch comes after a configuration that triggered dynamic rendering (e.g., reading cookies())\n         *   and the fetch was considered uncacheable (e.g., POST method or has authorization headers)\n         */ const hasNoExplicitCacheConfig = // eslint-disable-next-line eqeqeq\n            pageFetchCacheMode == undefined && // eslint-disable-next-line eqeqeq\n            (currentFetchCacheConfig == undefined || // when considering whether to opt into the default \"no-cache\" fetch semantics,\n            // a \"default\" cache config should be treated the same as no cache config\n            currentFetchCacheConfig === 'default') && // eslint-disable-next-line eqeqeq\n            currentFetchRevalidate == undefined;\n            let autoNoCache = Boolean((hasUnCacheableHeader || isUnCacheableMethod) && (revalidateStore == null ? void 0 : revalidateStore.revalidate) === 0);\n            let isImplicitBuildTimeCache = false;\n            if (!autoNoCache && hasNoExplicitCacheConfig) {\n                // We don't enable automatic no-cache behavior during build-time\n                // prerendering so that we can still leverage the fetch cache between\n                // export workers.\n                if (workStore.isBuildTimePrerendering) {\n                    isImplicitBuildTimeCache = true;\n                } else {\n                    autoNoCache = true;\n                }\n            }\n            // If we have no cache config, and we're in Dynamic I/O prerendering,\n            // it'll be a dynamic call. We don't have to issue that dynamic call.\n            if (hasNoExplicitCacheConfig && workUnitStore !== undefined) {\n                switch(workUnitStore.type){\n                    case 'prerender':\n                    case 'prerender-runtime':\n                    // While we don't want to do caching in the client scope we know the\n                    // fetch will be dynamic for cacheComponents so we may as well avoid the\n                    // call here. (fallthrough)\n                    case 'prerender-client':\n                        if (cacheSignal) {\n                            cacheSignal.endRead();\n                            cacheSignal = null;\n                        }\n                        return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            switch(pageFetchCacheMode){\n                case 'force-no-store':\n                    {\n                        cacheReason = 'fetchCache = force-no-store';\n                        break;\n                    }\n                case 'only-no-store':\n                    {\n                        if (currentFetchCacheConfig === 'force-cache' || typeof finalRevalidate !== 'undefined' && finalRevalidate > 0) {\n                            throw Object.defineProperty(new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E448\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheReason = 'fetchCache = only-no-store';\n                        break;\n                    }\n                case 'only-cache':\n                    {\n                        if (currentFetchCacheConfig === 'no-store') {\n                            throw Object.defineProperty(new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E521\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        break;\n                    }\n                case 'force-cache':\n                    {\n                        if (typeof currentFetchRevalidate === 'undefined' || currentFetchRevalidate === 0) {\n                            cacheReason = 'fetchCache = force-cache';\n                            finalRevalidate = INFINITE_CACHE;\n                        }\n                        break;\n                    }\n                case 'default-cache':\n                case 'default-no-store':\n                case 'auto':\n                case undefined:\n                    break;\n                default:\n                    pageFetchCacheMode;\n            }\n            if (typeof finalRevalidate === 'undefined') {\n                if (pageFetchCacheMode === 'default-cache' && !isUsingNoStore) {\n                    finalRevalidate = INFINITE_CACHE;\n                    cacheReason = 'fetchCache = default-cache';\n                } else if (pageFetchCacheMode === 'default-no-store') {\n                    finalRevalidate = 0;\n                    cacheReason = 'fetchCache = default-no-store';\n                } else if (isUsingNoStore) {\n                    finalRevalidate = 0;\n                    cacheReason = 'noStore call';\n                } else if (autoNoCache) {\n                    finalRevalidate = 0;\n                    cacheReason = 'auto no cache';\n                } else {\n                    // TODO: should we consider this case an invariant?\n                    cacheReason = 'auto cache';\n                    finalRevalidate = revalidateStore ? revalidateStore.revalidate : INFINITE_CACHE;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${finalRevalidate}`;\n            }\n            if (// when force static is configured we don't bail from\n            // `revalidate: 0` values\n            !(workStore.forceStatic && finalRevalidate === 0) && // we don't consider autoNoCache to switch to dynamic for ISR\n            !autoNoCache && // If the revalidate value isn't currently set or the value is less\n            // than the current revalidate value, we should update the revalidate\n            // value.\n            revalidateStore && finalRevalidate < revalidateStore.revalidate) {\n                // If we were setting the revalidate value to 0, we should try to\n                // postpone instead first.\n                if (finalRevalidate === 0) {\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                }\n                // We only want to set the revalidate store's revalidate time if it\n                // was explicitly set for the fetch call, i.e.\n                // originalFetchRevalidate.\n                if (revalidateStore && originalFetchRevalidate === finalRevalidate) {\n                    revalidateStore.revalidate = finalRevalidate;\n                }\n            }\n            const isCacheableRevalidate = typeof finalRevalidate === 'number' && finalRevalidate > 0;\n            let cacheKey;\n            const { incrementalCache } = workStore;\n            let isHmrRefresh = false;\n            let serverComponentsHmrCache;\n            if (workUnitStore) {\n                switch(workUnitStore.type){\n                    case 'request':\n                    case 'cache':\n                    case 'private-cache':\n                        isHmrRefresh = workUnitStore.isHmrRefresh ?? false;\n                        serverComponentsHmrCache = workUnitStore.serverComponentsHmrCache;\n                        break;\n                    case 'prerender':\n                    case 'prerender-client':\n                    case 'prerender-runtime':\n                    case 'prerender-ppr':\n                    case 'prerender-legacy':\n                    case 'unstable-cache':\n                        break;\n                    default:\n                        workUnitStore;\n                }\n            }\n            if (incrementalCache && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                try {\n                    cacheKey = await incrementalCache.generateCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const fetchIdx = workStore.nextFetchId ?? 1;\n            workStore.nextFetchId = fetchIdx + 1;\n            let handleUnlock = ()=>{};\n            const doOriginalFetch = async (isStale, cacheReasonOverride)=>{\n                const requestInputFields = [\n                    'cache',\n                    'credentials',\n                    'headers',\n                    'integrity',\n                    'keepalive',\n                    'method',\n                    'mode',\n                    'redirect',\n                    'referrer',\n                    'referrerPolicy',\n                    'window',\n                    'duplex',\n                    // don't pass through signal when revalidating\n                    ...isStale ? [] : [\n                        'signal'\n                    ]\n                ];\n                if (isRequestInput) {\n                    const reqInput = input;\n                    const reqOptions = {\n                        body: reqInput._ogBody || reqInput.body\n                    };\n                    for (const field of requestInputFields){\n                        // @ts-expect-error custom fields\n                        reqOptions[field] = reqInput[field];\n                    }\n                    input = new Request(reqInput.url, reqOptions);\n                } else if (init) {\n                    const { _ogBody, body, signal, ...otherInput } = init;\n                    init = {\n                        ...otherInput,\n                        body: _ogBody || body,\n                        signal: isStale ? undefined : signal\n                    };\n                }\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: 'origin',\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale && fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason: cacheReasonOverride || cacheReason,\n                            cacheStatus: finalRevalidate === 0 || cacheReasonOverride ? 'skip' : 'miss',\n                            cacheWarning,\n                            status: res.status,\n                            method: clonedInit.method || 'GET'\n                        });\n                    }\n                    if (res.status === 200 && incrementalCache && cacheKey && (isCacheableRevalidate || serverComponentsHmrCache)) {\n                        const normalizedRevalidate = finalRevalidate >= INFINITE_CACHE ? CACHE_ONE_YEAR : finalRevalidate;\n                        const incrementalCacheConfig = isCacheableRevalidate ? {\n                            fetchCache: true,\n                            fetchUrl,\n                            fetchIdx,\n                            tags,\n                            isImplicitBuildTimeCache\n                        } : undefined;\n                        switch(workUnitStore == null ? void 0 : workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                return createCachedPrerenderResponse(res, cacheKey, incrementalCacheConfig, incrementalCache, normalizedRevalidate, handleUnlock);\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                            case undefined:\n                                return createCachedDynamicResponse(workStore, res, cacheKey, incrementalCacheConfig, incrementalCache, serverComponentsHmrCache, normalizedRevalidate, input, handleUnlock);\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    // we had response that we determined shouldn't be cached so we return it\n                    // and don't cache it. This also needs to unlock the cache lock we acquired.\n                    await handleUnlock();\n                    return res;\n                }).catch((error)=>{\n                    handleUnlock();\n                    throw error;\n                });\n            };\n            let cacheReasonOverride;\n            let isForegroundRevalidate = false;\n            let isHmrRefreshCache = false;\n            if (cacheKey && incrementalCache) {\n                let cachedFetchData;\n                if (isHmrRefresh && serverComponentsHmrCache) {\n                    cachedFetchData = serverComponentsHmrCache.get(cacheKey);\n                    isHmrRefreshCache = true;\n                }\n                if (isCacheableRevalidate && !cachedFetchData) {\n                    handleUnlock = await incrementalCache.lock(cacheKey);\n                    const entry = workStore.isOnDemandRevalidate ? null : await incrementalCache.get(cacheKey, {\n                        kind: IncrementalCacheKind.FETCH,\n                        revalidate: finalRevalidate,\n                        fetchUrl,\n                        fetchIdx,\n                        tags,\n                        softTags: implicitTags == null ? void 0 : implicitTags.tags\n                    });\n                    if (hasNoExplicitCacheConfig && workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                // We sometimes use the cache to dedupe fetches that do not\n                                // specify a cache configuration. In these cases we want to\n                                // make sure we still exclude them from prerenders if\n                                // cacheComponents is on so we introduce an artificial task boundary\n                                // here.\n                                await waitAtLeastOneReactRenderTask();\n                                break;\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    if (entry) {\n                        await handleUnlock();\n                    } else {\n                        // in dev, incremental cache response will be null in case the browser adds `cache-control: no-cache` in the request headers\n                        cacheReasonOverride = 'cache-control: no-cache (hard refresh)';\n                    }\n                    if ((entry == null ? void 0 : entry.value) && entry.value.kind === CachedRouteKind.FETCH) {\n                        // when stale and is revalidating we wait for fresh data\n                        // so the revalidated entry has the updated data\n                        if (workStore.isRevalidate && entry.isStale) {\n                            isForegroundRevalidate = true;\n                        } else {\n                            if (entry.isStale) {\n                                workStore.pendingRevalidates ??= {};\n                                if (!workStore.pendingRevalidates[cacheKey]) {\n                                    const pendingRevalidate = doOriginalFetch(true).then(async (response)=>({\n                                            body: await response.arrayBuffer(),\n                                            headers: response.headers,\n                                            status: response.status,\n                                            statusText: response.statusText\n                                        })).finally(()=>{\n                                        workStore.pendingRevalidates ??= {};\n                                        delete workStore.pendingRevalidates[cacheKey || ''];\n                                    });\n                                    // Attach the empty catch here so we don't get a \"unhandled\n                                    // promise rejection\" warning.\n                                    pendingRevalidate.catch(console.error);\n                                    workStore.pendingRevalidates[cacheKey] = pendingRevalidate;\n                                }\n                            }\n                            cachedFetchData = entry.value.data;\n                        }\n                    }\n                }\n                if (cachedFetchData) {\n                    if (fetchStart) {\n                        trackFetchMetric(workStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: isHmrRefreshCache ? 'hmr' : 'hit',\n                            cacheWarning,\n                            status: cachedFetchData.status || 200,\n                            method: (init == null ? void 0 : init.method) || 'GET'\n                        });\n                    }\n                    const response = new Response(Buffer.from(cachedFetchData.body, 'base64'), {\n                        headers: cachedFetchData.headers,\n                        status: cachedFetchData.status\n                    });\n                    Object.defineProperty(response, 'url', {\n                        value: cachedFetchData.url\n                    });\n                    return response;\n                }\n            }\n            if (workStore.isStaticGeneration && init && typeof init === 'object') {\n                const { cache } = init;\n                // Delete `cache` property as Cloudflare Workers will throw an error\n                if (isEdgeRuntime) delete init.cache;\n                if (cache === 'no-store') {\n                    // If enabled, we should bail out of static generation.\n                    if (workUnitStore) {\n                        switch(workUnitStore.type){\n                            case 'prerender':\n                            case 'prerender-client':\n                            case 'prerender-runtime':\n                                if (cacheSignal) {\n                                    cacheSignal.endRead();\n                                    cacheSignal = null;\n                                }\n                                return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                            case 'prerender-ppr':\n                            case 'prerender-legacy':\n                            case 'request':\n                            case 'cache':\n                            case 'private-cache':\n                            case 'unstable-cache':\n                                break;\n                            default:\n                                workUnitStore;\n                        }\n                    }\n                    markCurrentScopeAsDynamic(workStore, workUnitStore, `no-store fetch ${input} ${workStore.route}`);\n                }\n                const hasNextConfig = 'next' in init;\n                const { next = {} } = init;\n                if (typeof next.revalidate === 'number' && revalidateStore && next.revalidate < revalidateStore.revalidate) {\n                    if (next.revalidate === 0) {\n                        // If enabled, we should bail out of static generation.\n                        if (workUnitStore) {\n                            switch(workUnitStore.type){\n                                case 'prerender':\n                                case 'prerender-client':\n                                case 'prerender-runtime':\n                                    return makeHangingPromise(workUnitStore.renderSignal, workStore.route, 'fetch()');\n                                case 'request':\n                                case 'cache':\n                                case 'private-cache':\n                                case 'unstable-cache':\n                                case 'prerender-legacy':\n                                case 'prerender-ppr':\n                                    break;\n                                default:\n                                    workUnitStore;\n                            }\n                        }\n                        markCurrentScopeAsDynamic(workStore, workUnitStore, `revalidate: 0 fetch ${input} ${workStore.route}`);\n                    }\n                    if (!workStore.forceStatic || next.revalidate !== 0) {\n                        revalidateStore.revalidate = next.revalidate;\n                    }\n                }\n                if (hasNextConfig) delete init.next;\n            }\n            // if we are revalidating the whole page via time or on-demand and\n            // the fetch cache entry is stale we should still de-dupe the\n            // origin hit if it's a cache-able entry\n            if (cacheKey && isForegroundRevalidate) {\n                const pendingRevalidateKey = cacheKey;\n                workStore.pendingRevalidates ??= {};\n                let pendingRevalidate = workStore.pendingRevalidates[pendingRevalidateKey];\n                if (pendingRevalidate) {\n                    const revalidatedResult = await pendingRevalidate;\n                    return new Response(revalidatedResult.body, {\n                        headers: revalidatedResult.headers,\n                        status: revalidatedResult.status,\n                        statusText: revalidatedResult.statusText\n                    });\n                }\n                // We used to just resolve the Response and clone it however for\n                // static generation with cacheComponents we need the response to be able to\n                // be resolved in a microtask and cloning the response will never have\n                // a body that can resolve in a microtask in node (as observed through\n                // experimentation) So instead we await the body and then when it is\n                // available we construct manually cloned Response objects with the\n                // body as an ArrayBuffer. This will be resolvable in a microtask\n                // making it compatible with cacheComponents.\n                const pendingResponse = doOriginalFetch(true, cacheReasonOverride)// We're cloning the response using this utility because there\n                // exists a bug in the undici library around response cloning.\n                // See the following pull request for more details:\n                // https://github.com/vercel/next.js/pull/73274\n                .then(cloneResponse);\n                pendingRevalidate = pendingResponse.then(async (responses)=>{\n                    const response = responses[0];\n                    return {\n                        body: await response.arrayBuffer(),\n                        headers: response.headers,\n                        status: response.status,\n                        statusText: response.statusText\n                    };\n                }).finally(()=>{\n                    var _workStore_pendingRevalidates;\n                    // If the pending revalidate is not present in the store, then\n                    // we have nothing to delete.\n                    if (!((_workStore_pendingRevalidates = workStore.pendingRevalidates) == null ? void 0 : _workStore_pendingRevalidates[pendingRevalidateKey])) {\n                        return;\n                    }\n                    delete workStore.pendingRevalidates[pendingRevalidateKey];\n                });\n                // Attach the empty catch here so we don't get a \"unhandled promise\n                // rejection\" warning\n                pendingRevalidate.catch(()=>{});\n                workStore.pendingRevalidates[pendingRevalidateKey] = pendingRevalidate;\n                return pendingResponse.then((responses)=>responses[1]);\n            } else {\n                return doOriginalFetch(false, cacheReasonOverride);\n            }\n        });\n        if (cacheSignal) {\n            try {\n                return await result;\n            } finally{\n                if (cacheSignal) {\n                    cacheSignal.endRead();\n                }\n            }\n        }\n        return result;\n    };\n    // Attach the necessary properties to the patched fetch function.\n    // We don't use this to determine if the fetch function has been patched,\n    // but for external consumers to determine if the fetch function has been\n    // patched.\n    patched.__nextPatched = true;\n    patched.__nextGetStaticStore = ()=>workAsyncStorage;\n    patched._nextOriginalFetch = originFetch;\n    globalThis[NEXT_PATCH_SYMBOL] = true;\n    // Assign the function name also as a name property, so that it's preserved\n    // even when mangling is enabled.\n    Object.defineProperty(patched, 'name', {\n        value: 'fetch',\n        writable: false\n    });\n    return patched;\n}\n// we patch fetch to collect cache information used for\n// determining if a page is static or not\nexport function patchFetch(options) {\n    // If we've already patched fetch, we should not patch it again.\n    if (isFetchPatched()) return;\n    // Grab the original fetch function. We'll attach this so we can use it in\n    // the patched fetch function.\n    const original = createDedupeFetch(globalThis.fetch);\n    // Set the global fetch to the patched fetch.\n    globalThis.fetch = createPatchedFetcher(original, options);\n}\n\n//# sourceMappingURL=patch-fetch.js.map","// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createTemporaryReferenceSet, renderToReadableStream, decodeReply, decodeAction, decodeFormState } from 'react-server-dom-webpack/server';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { unstable_prerender as prerender } from 'react-server-dom-webpack/static';\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { captureOwnerStack } from 'react';\nexport { default as LayoutRouter } from '../../client/components/layout-router';\nexport { default as RenderFromTemplateContext } from '../../client/components/render-from-template-context';\nexport { workAsyncStorage } from '../app-render/work-async-storage.external';\nexport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nexport { actionAsyncStorage } from '../app-render/action-async-storage.external';\nexport { ClientPageRoot } from '../../client/components/client-page';\nexport { ClientSegmentRoot } from '../../client/components/client-segment';\nexport { createServerSearchParamsForServerPage, createPrerenderSearchParamsForClientPage } from '../request/search-params';\nexport { createServerParamsForServerSegment, createPrerenderParamsForClientSegment } from '../request/params';\nexport * as serverHooks from '../../client/components/hooks-server-context';\nexport { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary';\nexport { createMetadataComponents } from '../../lib/metadata/metadata';\nexport { MetadataBoundary, ViewportBoundary, OutletBoundary, RootLayoutBoundary } from '../../lib/framework/boundary-components';\nexport { preloadStyle, preloadFont, preconnect } from './rsc/preloads';\nexport { Postpone } from './rsc/postpone';\nexport { taintObjectReference } from './rsc/taint';\nexport { collectSegmentData } from './collect-segment-data';\nimport { workAsyncStorage } from '../app-render/work-async-storage.external';\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external';\nimport { patchFetch as _patchFetch } from '../lib/patch-fetch';\nlet SegmentViewNode = ()=>null;\nlet SegmentViewStateNode = ()=>null;\nif (process.env.NODE_ENV === 'development') {\n    const mod = require('../../next-devtools/userspace/app/segment-explorer-node');\n    SegmentViewNode = mod.SegmentViewNode;\n    SegmentViewStateNode = mod.SegmentViewStateNode;\n}\n// hot-reloader modules are not bundled so we need to inject `__next__clear_chunk_cache__`\n// into globalThis from this file which is bundled.\nif (process.env.TURBOPACK) {\n    globalThis.__next__clear_chunk_cache__ = __turbopack_clear_chunk_cache__;\n} else {\n    // Webpack does not have chunks on the server\n    globalThis.__next__clear_chunk_cache__ = null;\n}\n// patchFetch makes use of APIs such as `React.unstable_postpone` which are only available\n// in the experimental channel of React, so export it from here so that it comes from the bundled runtime\nexport function patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n// Development only\nexport { SegmentViewNode, SegmentViewStateNode };\n\n//# sourceMappingURL=entry-base.js.map","const module0 = () => import(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/app/layout.tsx\");\nconst module1 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/builtin/global-error.js\");\nconst module2 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/builtin/not-found.js\");\nconst module3 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/builtin/forbidden.js\");\nconst module4 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/builtin/unauthorized.js\");\nconst page5 = () => import(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/app/page.tsx\");\nimport { AppPageRouteModule } from \"next/dist/server/route-modules/app-page/module.compiled\" with {\n    'turbopack-transition': 'next-ssr'\n};\nimport { RouteKind } from \"next/dist/server/route-kind\" with {\n    'turbopack-transition': 'next-server-utility'\n};\nimport { getRevalidateReason } from \"next/dist/server/instrumentation/utils\";\nimport { getTracer, SpanKind } from \"next/dist/server/lib/trace/tracer\";\nimport { getRequestMeta } from \"next/dist/server/request-meta\";\nimport { BaseServerSpan } from \"next/dist/server/lib/trace/constants\";\nimport { interopDefault } from \"next/dist/server/app-render/interop-default\";\nimport { stripFlightHeaders } from \"next/dist/server/app-render/strip-flight-headers\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/server/base-http/node\";\nimport { checkIsAppPPREnabled } from \"next/dist/server/lib/experimental/ppr\";\nimport { getFallbackRouteParams } from \"next/dist/server/request/fallback-params\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { isHtmlBotRequest, shouldServeStreamingMetadata } from \"next/dist/server/lib/streaming-metadata\";\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { normalizeAppPath } from \"next/dist/shared/lib/router/utils/app-paths\";\nimport { getIsPossibleServerAction } from \"next/dist/server/lib/server-action-request-meta\";\nimport { RSC_HEADER, NEXT_ROUTER_PREFETCH_HEADER, NEXT_IS_PRERENDER_HEADER, NEXT_DID_POSTPONE_HEADER, RSC_CONTENT_TYPE_HEADER } from \"next/dist/client/components/app-router-headers\";\nimport { getBotType, isBot } from \"next/dist/shared/lib/router/utils/is-bot\";\nimport { CachedRouteKind } from \"next/dist/server/response-cache\";\nimport { FallbackMode, parseFallbackField } from \"next/dist/lib/fallback\";\nimport RenderResult from \"next/dist/server/render-result\";\nimport { CACHE_ONE_YEAR, HTML_CONTENT_TYPE_HEADER, NEXT_CACHE_TAGS_HEADER } from \"next/dist/lib/constants\";\nimport { ENCODED_TAGS } from \"next/dist/server/stream-utils/encoded-tags\";\nimport { sendRenderResult } from \"next/dist/server/send-payload\";\nimport { NoFallbackError } from \"next/dist/shared/lib/no-fallback-error.external\";\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/app/page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/app/layout.tsx\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/app/page.tsx\"];\nexport { tree, pages };\nimport GlobalError from \"next/dist/client/components/builtin/global-error.js\" with {\n    'turbopack-transition': 'next-server-utility'\n};\nexport { GlobalError };\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nimport * as entryBase from \"next/dist/server/app-render/entry-base\" with {\n    'turbopack-transition': 'next-server-utility'\n};\nimport { RedirectStatusCode } from \"next/dist/client/components/redirect-status-code\";\nexport * from \"next/dist/server/app-render/entry-base\" with {\n    'turbopack-transition': 'next-server-utility'\n};\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n});\nexport async function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const initialPostponed = getRequestMeta(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = getRequestMeta(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig, interceptionRoutePatterns } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = routeModule.match(pathname, prerenderManifest);\n    const isPrerendered = !!prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = getBotType(userAgent);\n    const isHtmlBot = isHtmlBotRequest(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = getRequestMeta(req, 'isPrefetchRSCRequest') ?? req.headers[NEXT_ROUTER_PREFETCH_HEADER] === '1' // exclude runtime prefetches, which use '2'\n    ;\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = getRequestMeta(req, 'isRSCRequest') ?? Boolean(req.headers[RSC_HEADER]);\n    const isPossibleServerAction = getIsPossibleServerAction(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = checkIsAppPPREnabled(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery = process.env.__NEXT_EXPERIMENTAL_STATIC_SHELL_DEBUGGING === '1' && typeof query.__nextppronly !== 'undefined' && couldSupportPPR;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = getRequestMeta(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : shouldServeStreamingMetadata(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    // If this is a request for an app path that should be statically generated\n    // and we aren't in the edge runtime, strip the flight headers so it will\n    // generate the static response.\n    if (!routeModule.isDev && !isDraftMode && isSSG && isRSCRequest && !isDynamicRSCRequest) {\n        stripFlightHeaders(req.headers);\n    }\n    const ComponentMod = {\n        ...entryBase,\n        tree,\n        pages,\n        GlobalError,\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        setReferenceManifestsSingleton({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: createServerModuleMap({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const varyHeader = routeModule.getVaryHeader(resolvedPathname, interceptionRoutePatterns);\n        res.setHeader('Vary', varyHeader);\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new NodeNextRequest(req);\n            const nextRes = new NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (process.env.NODE_ENV === 'development') {\n                if (nextConfig.experimental.cacheComponents && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: getRequestMeta(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: interopDefault(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: process.env.NEXT_RUNTIME === 'nodejs' ? require('path').join(/* turbopackIgnore: true */ process.cwd(), routeModule.relativeProjectDir) : `${process.cwd()}/${routeModule.relativeProjectDir}`,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: getRequestMeta(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        clientParamParsing: Boolean(nextConfig.experimental.clientParamParsing),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: getRequestMeta(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = parseFallbackField(prerenderInfo.fallback);\n            }\n            // When serving a HTML bot request, we want to serve a blocking render and\n            // not the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === FallbackMode.PRERENDER && isBot(userAgent)) {\n                if (!isRoutePPREnabled || isHtmlBot) {\n                    fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n                }\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === FallbackMode.NOT_FOUND) {\n                    throw new NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    const cacheKey = typeof (prerenderInfo == null ? void 0 : prerenderInfo.fallback) === 'string' ? prerenderInfo.fallback : isProduction ? normalizedSrcPage : null;\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey,\n                        req,\n                        nextConfig,\n                        routeKind: RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? getFallbackRouteParams(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: CachedRouteKind.PAGES,\n                        html: RenderResult.EMPTY,\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && (getRequestMeta(req, 'renderFallbackShell') || isDebugFallbackShell) ? getFallbackRouteParams(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return sendRenderResult({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: RenderResult.fromStatic(matchedSegment, RSC_CONTENT_TYPE_HEADER),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return sendRenderResult({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: RenderResult.EMPTY,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = getRequestMeta(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: getRequestMeta(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return sendRenderResult({\n                        req,\n                        res,\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return sendRenderResult({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: RenderResult.fromStatic(cachedData.rscData, RSC_CONTENT_TYPE_HEADER),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode || isRSCRequest) {\n                // If we're in test mode, we should add a sentinel chunk to the response\n                // that's between the static and dynamic parts so we can compare the\n                // chunks and add assertions.\n                if (process.env.__NEXT_TEST_MODE && minimalMode && isRoutePPREnabled && body.contentType === HTML_CONTENT_TYPE_HEADER) {\n                    // As we're in minimal mode, the static part would have already been\n                    // streamed first. The only part that this streams is the dynamic part\n                    // so we should FIRST stream the sentinel and THEN the dynamic part.\n                    body.unshift(createPPRBoundarySentinel());\n                }\n                return sendRenderResult({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.push(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return sendRenderResult({\n                    req,\n                    res,\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // If we're in test mode, we should add a sentinel chunk to the response\n            // that's between the static and dynamic parts so we can compare the\n            // chunks and add assertions.\n            if (process.env.__NEXT_TEST_MODE) {\n                body.push(createPPRBoundarySentinel());\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.push(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return sendRenderResult({\n                req,\n                res,\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n// TODO: omit this from production builds, only test builds should include it\n/**\n * Creates a readable stream that emits a PPR boundary sentinel.\n *\n * @returns A readable stream that emits a PPR boundary sentinel.\n */ function createPPRBoundarySentinel() {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(new TextEncoder().encode('<!-- PPR_BOUNDARY_SENTINEL -->'));\n            controller.close();\n        }\n    });\n}\n\n//# sourceMappingURL=app-page.js.map\n","import { RedirectStatusCode } from '../../client/components/redirect-status-code';\nimport { getCookieParser } from '../api-utils/get-cookie-parser';\nexport class BaseNextRequest {\n    constructor(method, url, body){\n        this.method = method;\n        this.url = url;\n        this.body = body;\n    }\n    // Utils implemented using the abstract methods above\n    get cookies() {\n        if (this._cookies) return this._cookies;\n        return this._cookies = getCookieParser(this.headers)();\n    }\n}\nexport class BaseNextResponse {\n    constructor(destination){\n        this.destination = destination;\n    }\n    // Utils implemented using the abstract methods above\n    redirect(destination, statusCode) {\n        this.setHeader('Location', destination);\n        this.statusCode = statusCode;\n        // Since IE11 doesn't support the 308 header add backwards\n        // compatibility using refresh header\n        if (statusCode === RedirectStatusCode.PermanentRedirect) {\n            this.setHeader('Refresh', `0;url=${destination}`);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { toNodeOutgoingHttpHeaders } from '../web/utils';\nimport { BaseNextRequest, BaseNextResponse } from './index';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { CloseController, trackBodyConsumed } from '../web/web-on-close';\nimport { InvariantError } from '../../shared/lib/invariant-error';\nexport class WebNextRequest extends BaseNextRequest {\n    constructor(request){\n        const url = new URL(request.url);\n        super(request.method, url.href.slice(url.origin.length), request.clone().body);\n        this.request = request;\n        this.fetchMetrics = request.fetchMetrics;\n        this.headers = {};\n        for (const [name, value] of request.headers.entries()){\n            this.headers[name] = value;\n        }\n    }\n    async parseBody(_limit) {\n        throw Object.defineProperty(new Error('parseBody is not implemented in the web runtime'), \"__NEXT_ERROR_CODE\", {\n            value: \"E213\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nexport class WebNextResponse extends BaseNextResponse {\n    constructor(transformStream = new TransformStream()){\n        super(transformStream.writable), this.transformStream = transformStream, this.headers = new Headers(), this.textBody = undefined, this.closeController = new CloseController(), this.sendPromise = new DetachedPromise(), this._sent = false;\n    }\n    setHeader(name, value) {\n        this.headers.delete(name);\n        for (const val of Array.isArray(value) ? value : [\n            value\n        ]){\n            this.headers.append(name, val);\n        }\n        return this;\n    }\n    removeHeader(name) {\n        this.headers.delete(name);\n        return this;\n    }\n    getHeaderValues(name) {\n        var _this_getHeader;\n        // https://developer.mozilla.org/docs/Web/API/Headers/get#example\n        return (_this_getHeader = this.getHeader(name)) == null ? void 0 : _this_getHeader.split(',').map((v)=>v.trimStart());\n    }\n    getHeader(name) {\n        return this.headers.get(name) ?? undefined;\n    }\n    getHeaders() {\n        return toNodeOutgoingHttpHeaders(this.headers);\n    }\n    hasHeader(name) {\n        return this.headers.has(name);\n    }\n    appendHeader(name, value) {\n        this.headers.append(name, value);\n        return this;\n    }\n    body(value) {\n        this.textBody = value;\n        return this;\n    }\n    send() {\n        this.sendPromise.resolve();\n        this._sent = true;\n    }\n    get sent() {\n        return this._sent;\n    }\n    async toResponse() {\n        // If we haven't called `send` yet, wait for it to be called.\n        if (!this.sent) await this.sendPromise.promise;\n        const body = this.textBody ?? this.transformStream.readable;\n        let bodyInit = body;\n        // if the response is streaming, onClose() can still be called after this point.\n        const canAddListenersLater = typeof bodyInit !== 'string';\n        const shouldTrackBody = canAddListenersLater ? true : this.closeController.listeners > 0;\n        if (shouldTrackBody) {\n            bodyInit = trackBodyConsumed(body, ()=>{\n                this.closeController.dispatchClose();\n            });\n        }\n        return new Response(bodyInit, {\n            headers: this.headers,\n            status: this.statusCode,\n            statusText: this.statusMessage\n        });\n    }\n    onClose(callback) {\n        if (this.closeController.isClosed) {\n            throw Object.defineProperty(new InvariantError('Cannot call onClose on a WebNextResponse that is already closed'), \"__NEXT_ERROR_CODE\", {\n                value: \"E599\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        return this.closeController.onClose(callback);\n    }\n}\n\n//# sourceMappingURL=web.js.map","export function interopDefault(mod) {\n    return mod.default || mod;\n}\n\n//# sourceMappingURL=interop-default.js.map","var _self___RSC_MANIFEST;\nimport \"next/dist/server/web/globals\";\nimport { adapter } from \"next/dist/server/web/adapter\";\nimport { IncrementalCache } from \"next/dist/server/lib/incremental-cache\";\nimport * as pageMod from \"next-app-loader?name=app%2Fpage&page=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2FKoichiOkawa%2FDesktop%2Fstem-separator-v2%2Fapps%2Fweb%2Fapp&appPaths=%2Fpage&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!private-next-app-dir/page.tsx?__next_edge_ssr_entry__\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { initializeCacheHandlers } from \"next/dist/server/use-cache/handlers\";\nimport { BaseServerSpan } from \"next/dist/server/lib/trace/constants\";\nimport { getTracer, SpanKind } from \"next/dist/server/lib/trace/tracer\";\nimport { WebNextRequest, WebNextResponse } from \"next/dist/server/base-http/web\";\nimport { getIsPossibleServerAction } from \"next/dist/server/lib/server-action-request-meta\";\nimport { getBotType } from \"next/dist/shared/lib/router/utils/is-bot\";\nimport { interopDefault } from \"next/dist/lib/interop-default\";\nimport { normalizeAppPath } from \"next/dist/shared/lib/router/utils/app-paths\";\nimport { checkIsOnDemandRevalidate } from \"next/dist/server/api-utils\";\nimport { CloseController } from \"next/dist/server/web/web-on-close\";\nconst incrementalCacheHandler = null\n// Initialize the cache handlers interface.\ninitializeCacheHandlers();\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":false},\"typescript\":{\"ignoreBuildErrors\":false,\"tsconfigPath\":\"tsconfig.json\"},\"typedRoutes\":true,\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.js\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"position\":\"bottom-left\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":true,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"compiler\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/KoichiOkawa\",\"experimental\":{\"useSkewCookie\":false,\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":30,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"clientParamParsing\":false,\"dynamicOnHover\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":11,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"imgOptSkipMetadata\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":true,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"viewTransition\":false,\"routerBFCache\":false,\"removeUncaughtErrorAndRejectionListeners\":false,\"validateRSCRequestHeaders\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"cacheComponents\":false,\"inlineCss\":false,\"useCache\":false,\"globalNotFound\":false,\"devtoolSegmentExplorer\":true,\"browserDebugInfoInTerminal\":false,\"optimizeRouterScrolling\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-sqlite-node\",\"@effect/sql-sqlite-bun\",\"@effect/sql-sqlite-wasm\",\"@effect/sql-sqlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"htmlLimitedBots\":\"[\\\\w-]+-Google|Google-[\\\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight\",\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/KoichiOkawa/Desktop/stem-separator-v2/apps/web/next.config.js\",\"configFileName\":\"next.config.js\",\"turbopack\":{\"root\":\"/Users/KoichiOkawa\"}}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/page\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/page\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = pageMod;\nasync function requestHandler(req, event) {\n    let srcPage = \"/page\";\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    const relativeUrl = `${req.nextUrl.pathname}${req.nextUrl.search}`;\n    const baseReq = new WebNextRequest(req);\n    const baseRes = new WebNextResponse(undefined);\n    const pageRouteModule = pageMod.routeModule;\n    const prepareResult = await pageRouteModule.prepare(baseReq, null, {\n        srcPage,\n        multiZoneDraftMode: false\n    });\n    if (!prepareResult) {\n        return new Response('Bad Request', {\n            status: 400\n        });\n    }\n    const { query, params, buildId, buildManifest, prerenderManifest, reactLoadableManifest, clientReferenceManifest, subresourceIntegrityManifest, dynamicCssManifest, nextFontManifest, resolvedPathname, serverActionsManifest, interceptionRoutePatterns, routerServerContext } = prepareResult;\n    const isPossibleServerAction = getIsPossibleServerAction(req);\n    const botType = getBotType(req.headers.get('User-Agent') || '');\n    const { isOnDemandRevalidate } = checkIsOnDemandRevalidate(req, prerenderManifest.preview);\n    const closeController = new CloseController();\n    const renderContext = {\n        page: normalizedSrcPage,\n        query,\n        params,\n        sharedContext: {\n            buildId\n        },\n        fallbackRouteParams: null,\n        renderOpts: {\n            App: ()=>null,\n            Document: ()=>null,\n            pageConfig: {},\n            ComponentMod,\n            Component: interopDefault(ComponentMod),\n            routeModule: pageRouteModule,\n            params,\n            page: srcPage,\n            postponed: undefined,\n            shouldWaitOnAllReady: false,\n            serveStreamingMetadata: true,\n            supportsDynamicResponse: true,\n            buildManifest,\n            nextFontManifest,\n            reactLoadableManifest,\n            subresourceIntegrityManifest,\n            dynamicCssManifest,\n            serverActionsManifest,\n            clientReferenceManifest,\n            setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n            dir: pageRouteModule.relativeProjectDir,\n            botType,\n            isDraftMode: false,\n            isRevalidate: false,\n            isOnDemandRevalidate,\n            isPossibleServerAction,\n            assetPrefix: nextConfig.assetPrefix,\n            nextConfigOutput: nextConfig.output,\n            crossOrigin: nextConfig.crossOrigin,\n            trailingSlash: nextConfig.trailingSlash,\n            previewProps: prerenderManifest.preview,\n            deploymentId: nextConfig.deploymentId,\n            enableTainting: nextConfig.experimental.taint,\n            htmlLimitedBots: nextConfig.htmlLimitedBots,\n            devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n            reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n            multiZoneDraftMode: false,\n            cacheLifeProfiles: nextConfig.experimental.cacheLife,\n            basePath: nextConfig.basePath,\n            serverActions: nextConfig.experimental.serverActions,\n            experimental: {\n                isRoutePPREnabled: false,\n                expireTime: nextConfig.expireTime,\n                staleTimes: nextConfig.experimental.staleTimes,\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                clientParamParsing: Boolean(nextConfig.experimental.clientParamParsing),\n                dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n            },\n            incrementalCache: await pageRouteModule.getIncrementalCache(baseReq, nextConfig, prerenderManifest),\n            waitUntil: event.waitUntil.bind(event),\n            onClose: (cb)=>{\n                closeController.onClose(cb);\n            },\n            onAfterTaskError: ()=>{},\n            onInstrumentationRequestError: (error, _request, errorContext)=>pageRouteModule.onRequestError(baseReq, error, errorContext, routerServerContext),\n            dev: pageRouteModule.isDev\n        }\n    };\n    let finalStatus = 200;\n    const renderResultToResponse = (result)=>{\n        const varyHeader = pageRouteModule.getVaryHeader(resolvedPathname, interceptionRoutePatterns);\n        // Handle null responses\n        if (result.isNull) {\n            finalStatus = 500;\n            closeController.dispatchClose();\n            return new Response(null, {\n                status: 500\n            });\n        }\n        // Extract metadata\n        const { metadata } = result;\n        const headers = new Headers();\n        finalStatus = metadata.statusCode || baseRes.statusCode || 200;\n        req.fetchMetrics = metadata.fetchMetrics;\n        // Set content type\n        const contentType = result.contentType || 'text/html; charset=utf-8';\n        headers.set('Content-Type', contentType);\n        headers.set('x-edge-runtime', '1');\n        if (varyHeader) {\n            headers.set('Vary', varyHeader);\n        }\n        // Add existing headers\n        for (const [key, value] of Object.entries({\n            ...baseRes.getHeaders(),\n            ...metadata.headers\n        })){\n            if (value !== undefined) {\n                if (Array.isArray(value)) {\n                    // Handle multiple header values\n                    for (const v of value){\n                        headers.append(key, String(v));\n                    }\n                } else {\n                    headers.set(key, String(value));\n                }\n            }\n        }\n        // Handle static response\n        if (!result.isDynamic) {\n            const body = result.toUnchunkedString();\n            headers.set('Content-Length', String(new TextEncoder().encode(body).length));\n            closeController.dispatchClose();\n            return new Response(body, {\n                status: finalStatus,\n                headers\n            });\n        }\n        // Handle dynamic/streaming response\n        // For edge runtime, we need to create a readable stream that pipes from the result\n        const { readable, writable } = new TransformStream();\n        // Start piping the result to the writable stream\n        // This is done asynchronously to avoid blocking the response creation\n        result.pipeTo(writable).catch((err)=>{\n            console.error('Error piping RenderResult to response:', err);\n        }).finally(()=>closeController.dispatchClose());\n        return new Response(readable, {\n            status: finalStatus,\n            headers\n        });\n    };\n    const invokeRender = async (span)=>{\n        try {\n            const result = await pageRouteModule.render(baseReq, baseRes, renderContext).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': finalStatus,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = normalizedSrcPage;\n                if (route) {\n                    const name = `${req.method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${req.method} ${relativeUrl}`);\n                }\n            });\n            return renderResultToResponse(result);\n        } catch (err) {\n            await pageRouteModule.onRequestError(baseReq, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'render',\n                revalidateReason: undefined\n            });\n            // rethrow so that we can handle serving error page\n            throw err;\n        }\n    };\n    const tracer = getTracer();\n    return tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n            spanName: `${req.method} ${relativeUrl}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n                'http.method': req.method,\n                'http.target': relativeUrl,\n                'http.route': normalizedSrcPage\n            }\n        }, invokeRender));\n}\nexport default function nHandler(opts) {\n    return adapter({\n        ...opts,\n        IncrementalCache,\n        handler: requestHandler,\n        incrementalCacheHandler\n    });\n}\n\n//# sourceMappingURL=edge-ssr-app.js.map\n","export const ENCODED_TAGS = {\n    // opening tags do not have the closing `>` since they can contain other attributes such as `<body className=''>`\n    OPENING: {\n        // <html\n        HTML: new Uint8Array([\n            60,\n            104,\n            116,\n            109,\n            108\n        ]),\n        // <body\n        BODY: new Uint8Array([\n            60,\n            98,\n            111,\n            100,\n            121\n        ])\n    },\n    CLOSED: {\n        // </head>\n        HEAD: new Uint8Array([\n            60,\n            47,\n            104,\n            101,\n            97,\n            100,\n            62\n        ]),\n        // </body>\n        BODY: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62\n        ]),\n        // </html>\n        HTML: new Uint8Array([\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ]),\n        // </body></html>\n        BODY_AND_HTML: new Uint8Array([\n            60,\n            47,\n            98,\n            111,\n            100,\n            121,\n            62,\n            60,\n            47,\n            104,\n            116,\n            109,\n            108,\n            62\n        ])\n    },\n    META: {\n        // Only the match the prefix cause the suffix can be different wether it's xml compatible or not \">\" or \"/>\"\n        // <meta name=\"«nxt-icon»\"\n        // This is a special mark that will be replaced by the icon insertion script tag.\n        ICON_MARK: new Uint8Array([\n            60,\n            109,\n            101,\n            116,\n            97,\n            32,\n            110,\n            97,\n            109,\n            101,\n            61,\n            34,\n            194,\n            171,\n            110,\n            120,\n            116,\n            45,\n            105,\n            99,\n            111,\n            110,\n            194,\n            187,\n            34\n        ])\n    }\n};\n\n//# sourceMappingURL=encoded-tags.js.map","/**\n * Find the starting index of Uint8Array `b` within Uint8Array `a`.\n */ export function indexOfUint8Array(a, b) {\n    if (b.length === 0) return 0;\n    if (a.length === 0 || b.length > a.length) return -1;\n    // start iterating through `a`\n    for(let i = 0; i <= a.length - b.length; i++){\n        let completeMatch = true;\n        // from index `i`, iterate through `b` and check for mismatch\n        for(let j = 0; j < b.length; j++){\n            // if the values do not match, then this isn't a complete match, exit `b` iteration early and iterate to next index of `a`.\n            if (a[i + j] !== b[j]) {\n                completeMatch = false;\n                break;\n            }\n        }\n        if (completeMatch) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Check if two Uint8Arrays are strictly equivalent.\n */ export function isEquivalentUint8Arrays(a, b) {\n    if (a.length !== b.length) return false;\n    for(let i = 0; i < a.length; i++){\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n/**\n * Remove Uint8Array `b` from Uint8Array `a`.\n *\n * If `b` is not in `a`, `a` is returned unchanged.\n *\n * Otherwise, the function returns a new Uint8Array instance with size `a.length - b.length`\n */ export function removeFromUint8Array(a, b) {\n    const tagIndex = indexOfUint8Array(a, b);\n    if (tagIndex === 0) return a.subarray(b.length);\n    if (tagIndex > -1) {\n        const removed = new Uint8Array(a.length - b.length);\n        removed.set(a.slice(0, tagIndex));\n        removed.set(a.slice(tagIndex + b.length), tagIndex);\n        return removed;\n    } else {\n        return a;\n    }\n}\n\n//# sourceMappingURL=uint8array-helpers.js.map","export const MISSING_ROOT_TAGS_ERROR = 'NEXT_MISSING_ROOT_TAGS'\n","// In output: export mode, the build id is added to the start of the HTML\n// document, directly after the doctype declaration. During a prefetch, the\n// client performs a range request to get the build id, so it can check whether\n// the target page belongs to the same build.\n//\n// The first 64 bytes of the document are requested. The exact number isn't\n// too important; it must be larger than the build id + doctype + closing and\n// ending comment markers, but it doesn't need to match the end of the\n// comment exactly.\n//\n// Build ids are 21 bytes long in the default implementation, though this\n// can be overridden in the Next.js config. For the purposes of this check,\n// it's OK to only match the start of the id, so we'll truncate it if exceeds\n// a certain length.\n\nconst DOCTYPE_PREFIX = '<!DOCTYPE html>' // 15 bytes\nconst MAX_BUILD_ID_LENGTH = 24\n\n// Request the first 64 bytes. The Range header is inclusive of the end value.\nexport const DOC_PREFETCH_RANGE_HEADER_VALUE = 'bytes=0-63'\n\nfunction escapeBuildId(buildId: string) {\n  // If the build id is longer than the given limit, it's OK for our purposes\n  // to only match the beginning.\n  const truncated = buildId.slice(0, MAX_BUILD_ID_LENGTH)\n  // Replace hyphens with underscores so it doesn't break the HTML comment.\n  // (Unlikely, but if this did happen it would break the whole document.)\n  return truncated.replace(/-/g, '_')\n}\n\nexport function insertBuildIdComment(originalHtml: string, buildId: string) {\n  if (\n    // Skip if the build id contains a closing comment marker.\n    buildId.includes('-->') ||\n    // React always inserts a doctype at the start of the document. Skip if it\n    // isn't present. Shouldn't happen; suggests an issue elsewhere.\n    !originalHtml.startsWith(DOCTYPE_PREFIX)\n  ) {\n    // Return the original HTML unchanged. This means the document will not\n    // be prefetched.\n    // TODO: The build id comment is currently only used during prefetches, but\n    // if we eventually use this mechanism for regular navigations, we may need\n    // to error during build if we fail to insert it for some reason.\n    return originalHtml\n  }\n  // The comment must be inserted after the doctype.\n  return originalHtml.replace(\n    DOCTYPE_PREFIX,\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n\nexport function doesExportedHtmlMatchBuildId(\n  partialHtmlDocument: string,\n  buildId: string\n) {\n  // Check whether the document starts with the expected buildId.\n  return partialHtmlDocument.startsWith(\n    DOCTYPE_PREFIX + '<!--' + escapeBuildId(buildId) + '-->'\n  )\n}\n","import { getTracer } from '../lib/trace/tracer';\nimport { AppRenderSpan } from '../lib/trace/constants';\nimport { DetachedPromise } from '../../lib/detached-promise';\nimport { scheduleImmediate, atLeastOneTask } from '../../lib/scheduler';\nimport { ENCODED_TAGS } from './encoded-tags';\nimport { indexOfUint8Array, isEquivalentUint8Arrays, removeFromUint8Array } from './uint8array-helpers';\nimport { MISSING_ROOT_TAGS_ERROR } from '../../shared/lib/errors/constants';\nimport { insertBuildIdComment } from '../../shared/lib/segment-cache/output-export-prefetch-encoding';\nfunction voidCatch() {\n// this catcher is designed to be used with pipeTo where we expect the underlying\n// pipe implementation to forward errors but we don't want the pipeTo promise to reject\n// and be unhandled\n}\n// We can share the same encoder instance everywhere\n// Notably we cannot do the same for TextDecoder because it is stateful\n// when handling streaming data\nconst encoder = new TextEncoder();\nexport function chainStreams(...streams) {\n    // If we have no streams, return an empty stream. This behavior is\n    // intentional as we're now providing the `RenderResult.EMPTY` value.\n    if (streams.length === 0) {\n        return new ReadableStream({\n            start (controller) {\n                controller.close();\n            }\n        });\n    }\n    // If we only have 1 stream we fast path it by returning just this stream\n    if (streams.length === 1) {\n        return streams[0];\n    }\n    const { readable, writable } = new TransformStream();\n    // We always initiate pipeTo immediately. We know we have at least 2 streams\n    // so we need to avoid closing the writable when this one finishes.\n    let promise = streams[0].pipeTo(writable, {\n        preventClose: true\n    });\n    let i = 1;\n    for(; i < streams.length - 1; i++){\n        const nextStream = streams[i];\n        promise = promise.then(()=>nextStream.pipeTo(writable, {\n                preventClose: true\n            }));\n    }\n    // We can omit the length check because we halted before the last stream and there\n    // is at least two streams so the lastStream here will always be defined\n    const lastStream = streams[i];\n    promise = promise.then(()=>lastStream.pipeTo(writable));\n    // Catch any errors from the streams and ignore them, they will be handled\n    // by whatever is consuming the readable stream.\n    promise.catch(voidCatch);\n    return readable;\n}\nexport function streamFromString(str) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(encoder.encode(str));\n            controller.close();\n        }\n    });\n}\nexport function streamFromBuffer(chunk) {\n    return new ReadableStream({\n        start (controller) {\n            controller.enqueue(chunk);\n            controller.close();\n        }\n    });\n}\nexport async function streamToBuffer(stream) {\n    const reader = stream.getReader();\n    const chunks = [];\n    while(true){\n        const { done, value } = await reader.read();\n        if (done) {\n            break;\n        }\n        chunks.push(value);\n    }\n    return Buffer.concat(chunks);\n}\nexport async function streamToString(stream, signal) {\n    const decoder = new TextDecoder('utf-8', {\n        fatal: true\n    });\n    let string = '';\n    for await (const chunk of stream){\n        if (signal == null ? void 0 : signal.aborted) {\n            return string;\n        }\n        string += decoder.decode(chunk, {\n            stream: true\n        });\n    }\n    string += decoder.decode();\n    return string;\n}\nexport function createBufferedTransformStream() {\n    let bufferedChunks = [];\n    let bufferByteLength = 0;\n    let pending;\n    const flush = (controller)=>{\n        // If we already have a pending flush, then return early.\n        if (pending) return;\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                const chunk = new Uint8Array(bufferByteLength);\n                let copiedBytes = 0;\n                for(let i = 0; i < bufferedChunks.length; i++){\n                    const bufferedChunk = bufferedChunks[i];\n                    chunk.set(bufferedChunk, copiedBytes);\n                    copiedBytes += bufferedChunk.byteLength;\n                }\n                // We just wrote all the buffered chunks so we need to reset the bufferedChunks array\n                // and our bufferByteLength to prepare for the next round of buffered chunks\n                bufferedChunks.length = 0;\n                bufferByteLength = 0;\n                controller.enqueue(chunk);\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            // Combine the previous buffer with the new chunk.\n            bufferedChunks.push(chunk);\n            bufferByteLength += chunk.byteLength;\n            // Flush the buffer to the controller.\n            flush(controller);\n        },\n        flush () {\n            if (!pending) return;\n            return pending.promise;\n        }\n    });\n}\nfunction createPrefetchCommentStream(isBuildTimePrerendering, buildId) {\n    // Insert an extra comment at the beginning of the HTML document. This must\n    // come after the DOCTYPE, which is inserted by React.\n    //\n    // The first chunk sent by React will contain the doctype. After that, we can\n    // pass through the rest of the chunks as-is.\n    let didTransformFirstChunk = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (isBuildTimePrerendering && !didTransformFirstChunk) {\n                didTransformFirstChunk = true;\n                const decoder = new TextDecoder('utf-8', {\n                    fatal: true\n                });\n                const chunkStr = decoder.decode(chunk, {\n                    stream: true\n                });\n                const updatedChunkStr = insertBuildIdComment(chunkStr, buildId);\n                controller.enqueue(encoder.encode(updatedChunkStr));\n                return;\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nexport function renderToInitialFizzStream({ ReactDOMServer, element, streamOptions }) {\n    return getTracer().trace(AppRenderSpan.renderToReadableStream, async ()=>ReactDOMServer.renderToReadableStream(element, streamOptions));\n}\nfunction createMetadataTransformStream(insert) {\n    let chunkIndex = -1;\n    let isMarkRemoved = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            let iconMarkIndex = -1;\n            let closedHeadIndex = -1;\n            chunkIndex++;\n            if (isMarkRemoved) {\n                controller.enqueue(chunk);\n                return;\n            }\n            let iconMarkLength = 0;\n            // Only search for the closed head tag once\n            if (iconMarkIndex === -1) {\n                iconMarkIndex = indexOfUint8Array(chunk, ENCODED_TAGS.META.ICON_MARK);\n                if (iconMarkIndex === -1) {\n                    controller.enqueue(chunk);\n                    return;\n                } else {\n                    // When we found the `<meta name=\"«nxt-icon»\"` tag prefix, we will remove it from the chunk.\n                    // Its close tag could either be `/>` or `>`, checking the next char to ensure we cover both cases.\n                    iconMarkLength = ENCODED_TAGS.META.ICON_MARK.length;\n                    // Check if next char is /, this is for xml mode.\n                    if (chunk[iconMarkIndex + iconMarkLength] === 47) {\n                        iconMarkLength += 2;\n                    } else {\n                        // The last char is `>`\n                        iconMarkLength++;\n                    }\n                }\n            }\n            // Check if icon mark is inside <head> tag in the first chunk.\n            if (chunkIndex === 0) {\n                closedHeadIndex = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                if (iconMarkIndex !== -1) {\n                    // The mark icon is located in the 1st chunk before the head tag.\n                    // We do not need to insert the script tag in this case because it's in the head.\n                    // Just remove the icon mark from the chunk.\n                    if (iconMarkIndex < closedHeadIndex) {\n                        const replaced = new Uint8Array(chunk.length - iconMarkLength);\n                        // Remove the icon mark from the chunk.\n                        replaced.set(chunk.subarray(0, iconMarkIndex));\n                        replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex);\n                        chunk = replaced;\n                    } else {\n                        // The icon mark is after the head tag, replace and insert the script tag at that position.\n                        const insertion = await insert();\n                        const encodedInsertion = encoder.encode(insertion);\n                        const insertionLength = encodedInsertion.length;\n                        const replaced = new Uint8Array(chunk.length - iconMarkLength + insertionLength);\n                        replaced.set(chunk.subarray(0, iconMarkIndex));\n                        replaced.set(encodedInsertion, iconMarkIndex);\n                        replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex + insertionLength);\n                        chunk = replaced;\n                    }\n                    isMarkRemoved = true;\n                }\n            // If there's no icon mark located, it will be handled later when if present in the following chunks.\n            } else {\n                // When it's appeared in the following chunks, we'll need to\n                // remove the mark and then insert the script tag at that position.\n                const insertion = await insert();\n                const encodedInsertion = encoder.encode(insertion);\n                const insertionLength = encodedInsertion.length;\n                // Replace the icon mark with the hoist script or empty string.\n                const replaced = new Uint8Array(chunk.length - iconMarkLength + insertionLength);\n                // Set the first part of the chunk, before the icon mark.\n                replaced.set(chunk.subarray(0, iconMarkIndex));\n                // Set the insertion after the icon mark.\n                replaced.set(encodedInsertion, iconMarkIndex);\n                // Set the rest of the chunk after the icon mark.\n                replaced.set(chunk.subarray(iconMarkIndex + iconMarkLength), iconMarkIndex + insertionLength);\n                chunk = replaced;\n                isMarkRemoved = true;\n            }\n            controller.enqueue(chunk);\n        }\n    });\n}\nfunction createHeadInsertionTransformStream(insert) {\n    let inserted = false;\n    // We need to track if this transform saw any bytes because if it didn't\n    // we won't want to insert any server HTML at all\n    let hasBytes = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            hasBytes = true;\n            const insertion = await insert();\n            if (inserted) {\n                if (insertion) {\n                    const encodedInsertion = encoder.encode(insertion);\n                    controller.enqueue(encodedInsertion);\n                }\n                controller.enqueue(chunk);\n            } else {\n                // TODO (@Ethan-Arrowood): Replace the generic `indexOfUint8Array` method with something finely tuned for the subset of things actually being checked for.\n                const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.HEAD);\n                // In fully static rendering or non PPR rendering cases:\n                // `/head>` will always be found in the chunk in first chunk rendering.\n                if (index !== -1) {\n                    if (insertion) {\n                        const encodedInsertion = encoder.encode(insertion);\n                        // Get the total count of the bytes in the chunk and the insertion\n                        // e.g.\n                        // chunk = <head><meta charset=\"utf-8\"></head>\n                        // insertion = <script>...</script>\n                        // output = <head><meta charset=\"utf-8\"> [ <script>...</script> ] </head>\n                        const insertedHeadContent = new Uint8Array(chunk.length + encodedInsertion.length);\n                        // Append the first part of the chunk, before the head tag\n                        insertedHeadContent.set(chunk.slice(0, index));\n                        // Append the server inserted content\n                        insertedHeadContent.set(encodedInsertion, index);\n                        // Append the rest of the chunk\n                        insertedHeadContent.set(chunk.slice(index), index + encodedInsertion.length);\n                        controller.enqueue(insertedHeadContent);\n                    } else {\n                        controller.enqueue(chunk);\n                    }\n                    inserted = true;\n                } else {\n                    // This will happens in PPR rendering during next start, when the page is partially rendered.\n                    // When the page resumes, the head tag will be found in the middle of the chunk.\n                    // Where we just need to append the insertion and chunk to the current stream.\n                    // e.g.\n                    // PPR-static: <head>...</head><body> [ resume content ] </body>\n                    // PPR-resume: [ insertion ] [ rest content ]\n                    if (insertion) {\n                        controller.enqueue(encoder.encode(insertion));\n                    }\n                    controller.enqueue(chunk);\n                    inserted = true;\n                }\n            }\n        },\n        async flush (controller) {\n            // Check before closing if there's anything remaining to insert.\n            if (hasBytes) {\n                const insertion = await insert();\n                if (insertion) {\n                    controller.enqueue(encoder.encode(insertion));\n                }\n            }\n        }\n    });\n}\n// Suffix after main body content - scripts before </body>,\n// but wait for the major chunks to be enqueued.\nfunction createDeferredSuffixStream(suffix) {\n    let flushed = false;\n    let pending;\n    const flush = (controller)=>{\n        const detached = new DetachedPromise();\n        pending = detached;\n        scheduleImmediate(()=>{\n            try {\n                controller.enqueue(encoder.encode(suffix));\n            } catch  {\n            // If an error occurs while enqueuing it can't be due to this\n            // transformers fault. It's likely due to the controller being\n            // errored due to the stream being cancelled.\n            } finally{\n                pending = undefined;\n                detached.resolve();\n            }\n        });\n    };\n    return new TransformStream({\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // If we've already flushed, we're done.\n            if (flushed) return;\n            // Schedule the flush to happen.\n            flushed = true;\n            flush(controller);\n        },\n        flush (controller) {\n            if (pending) return pending.promise;\n            if (flushed) return;\n            // Flush now.\n            controller.enqueue(encoder.encode(suffix));\n        }\n    });\n}\nfunction createFlightDataInjectionTransformStream(stream, delayDataUntilFirstHtmlChunk) {\n    let htmlStreamFinished = false;\n    let pull = null;\n    let donePulling = false;\n    function startOrContinuePulling(controller) {\n        if (!pull) {\n            pull = startPulling(controller);\n        }\n        return pull;\n    }\n    async function startPulling(controller) {\n        const reader = stream.getReader();\n        if (delayDataUntilFirstHtmlChunk) {\n            // NOTE: streaming flush\n            // We are buffering here for the inlined data stream because the\n            // \"shell\" stream might be chunkenized again by the underlying stream\n            // implementation, e.g. with a specific high-water mark. To ensure it's\n            // the safe timing to pipe the data stream, this extra tick is\n            // necessary.\n            // We don't start reading until we've left the current Task to ensure\n            // that it's inserted after flushing the shell. Note that this implementation\n            // might get stale if impl details of Fizz change in the future.\n            await atLeastOneTask();\n        }\n        try {\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    donePulling = true;\n                    return;\n                }\n                // We want to prioritize HTML over RSC data.\n                // The SSR render is based on the same RSC stream, so when we get a new RSC chunk,\n                // we're likely to produce an HTML chunk as well, so give it a chance to flush first.\n                if (!delayDataUntilFirstHtmlChunk && !htmlStreamFinished) {\n                    await atLeastOneTask();\n                }\n                controller.enqueue(value);\n            }\n        } catch (err) {\n            controller.error(err);\n        }\n    }\n    return new TransformStream({\n        start (controller) {\n            if (!delayDataUntilFirstHtmlChunk) {\n                startOrContinuePulling(controller);\n            }\n        },\n        transform (chunk, controller) {\n            controller.enqueue(chunk);\n            // Start the streaming if it hasn't already been started yet.\n            if (delayDataUntilFirstHtmlChunk) {\n                startOrContinuePulling(controller);\n            }\n        },\n        flush (controller) {\n            htmlStreamFinished = true;\n            if (donePulling) {\n                return;\n            }\n            return startOrContinuePulling(controller);\n        }\n    });\n}\nconst CLOSE_TAG = '</body></html>';\n/**\n * This transform stream moves the suffix to the end of the stream, so results\n * like `</body></html><script>...</script>` will be transformed to\n * `<script>...</script></body></html>`.\n */ function createMoveSuffixStream() {\n    let foundSuffix = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            if (foundSuffix) {\n                return controller.enqueue(chunk);\n            }\n            const index = indexOfUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n            if (index > -1) {\n                foundSuffix = true;\n                // If the whole chunk is the suffix, then don't write anything, it will\n                // be written in the flush.\n                if (chunk.length === ENCODED_TAGS.CLOSED.BODY_AND_HTML.length) {\n                    return;\n                }\n                // Write out the part before the suffix.\n                const before = chunk.slice(0, index);\n                controller.enqueue(before);\n                // In the case where the suffix is in the middle of the chunk, we need\n                // to split the chunk into two parts.\n                if (chunk.length > ENCODED_TAGS.CLOSED.BODY_AND_HTML.length + index) {\n                    // Write out the part after the suffix.\n                    const after = chunk.slice(index + ENCODED_TAGS.CLOSED.BODY_AND_HTML.length);\n                    controller.enqueue(after);\n                }\n            } else {\n                controller.enqueue(chunk);\n            }\n        },\n        flush (controller) {\n            // Even if we didn't find the suffix, the HTML is not valid if we don't\n            // add it, so insert it at the end.\n            controller.enqueue(ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n        }\n    });\n}\nfunction createStripDocumentClosingTagsTransform() {\n    return new TransformStream({\n        transform (chunk, controller) {\n            // We rely on the assumption that chunks will never break across a code unit.\n            // This is reasonable because we currently concat all of React's output from a single\n            // flush into one chunk before streaming it forward which means the chunk will represent\n            // a single coherent utf-8 string. This is not safe to use if we change our streaming to no\n            // longer do this large buffered chunk\n            if (isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY_AND_HTML) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.BODY) || isEquivalentUint8Arrays(chunk, ENCODED_TAGS.CLOSED.HTML)) {\n                // the entire chunk is the closing tags; return without enqueueing anything.\n                return;\n            }\n            // We assume these tags will go at together at the end of the document and that\n            // they won't appear anywhere else in the document. This is not really a safe assumption\n            // but until we revamp our streaming infra this is a performant way to string the tags\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.BODY);\n            chunk = removeFromUint8Array(chunk, ENCODED_TAGS.CLOSED.HTML);\n            controller.enqueue(chunk);\n        }\n    });\n}\n/*\n * Checks if the root layout is missing the html or body tags\n * and if so, it will inject a script tag to throw an error in the browser, showing the user\n * the error message in the error overlay.\n */ export function createRootLayoutValidatorStream() {\n    let foundHtml = false;\n    let foundBody = false;\n    return new TransformStream({\n        async transform (chunk, controller) {\n            // Peek into the streamed chunk to see if the tags are present.\n            if (!foundHtml && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.HTML) > -1) {\n                foundHtml = true;\n            }\n            if (!foundBody && indexOfUint8Array(chunk, ENCODED_TAGS.OPENING.BODY) > -1) {\n                foundBody = true;\n            }\n            controller.enqueue(chunk);\n        },\n        flush (controller) {\n            const missingTags = [];\n            if (!foundHtml) missingTags.push('html');\n            if (!foundBody) missingTags.push('body');\n            if (!missingTags.length) return;\n            controller.enqueue(encoder.encode(`<html id=\"__next_error__\">\n            <template\n              data-next-error-message=\"Missing ${missingTags.map((c)=>`<${c}>`).join(missingTags.length > 1 ? ' and ' : '')} tags in the root layout.\\nRead more at https://nextjs.org/docs/messages/missing-root-layout-tags\"\n              data-next-error-digest=\"${MISSING_ROOT_TAGS_ERROR}\"\n              data-next-error-stack=\"\"\n            ></template>\n          `));\n        }\n    });\n}\nfunction chainTransformers(readable, transformers) {\n    let stream = readable;\n    for (const transformer of transformers){\n        if (!transformer) continue;\n        stream = stream.pipeThrough(transformer);\n    }\n    return stream;\n}\nexport async function continueFizzStream(renderStream, { suffix, inlinedDataStream, isStaticGeneration, isBuildTimePrerendering, buildId, getServerInsertedHTML, getServerInsertedMetadata, validateRootLayout }) {\n    // Suffix itself might contain close tags at the end, so we need to split it.\n    const suffixUnclosed = suffix ? suffix.split(CLOSE_TAG, 1)[0] : null;\n    // If we're generating static HTML we need to wait for it to resolve before continuing.\n    if (isStaticGeneration) {\n        await renderStream.allReady;\n    }\n    return chainTransformers(renderStream, [\n        // Buffer everything to avoid flushing too frequently\n        createBufferedTransformStream(),\n        // Add build id comment to start of the HTML document (in export mode)\n        createPrefetchCommentStream(isBuildTimePrerendering, buildId),\n        // Transform metadata\n        createMetadataTransformStream(getServerInsertedMetadata),\n        // Insert suffix content\n        suffixUnclosed != null && suffixUnclosed.length > 0 ? createDeferredSuffixStream(suffixUnclosed) : null,\n        // Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n        inlinedDataStream ? createFlightDataInjectionTransformStream(inlinedDataStream, true) : null,\n        // Validate the root layout for missing html or body tags\n        validateRootLayout ? createRootLayoutValidatorStream() : null,\n        // Close tags should always be deferred to the end\n        createMoveSuffixStream(),\n        // Special head insertions\n        // TODO-APP: Insert server side html to end of head in app layout rendering, to avoid\n        // hydration errors. Remove this once it's ready to be handled by react itself.\n        createHeadInsertionTransformStream(getServerInsertedHTML)\n    ]);\n}\nexport async function continueDynamicPrerender(prerenderStream, { getServerInsertedHTML, getServerInsertedMetadata }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream()).pipeThrough(createStripDocumentClosingTagsTransform())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata));\n}\nexport async function continueStaticPrerender(prerenderStream, { inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata, isBuildTimePrerendering, buildId }) {\n    return prerenderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Add build id comment to start of the HTML document (in export mode)\n    .pipeThrough(createPrefetchCommentStream(isBuildTimePrerendering, buildId))// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createFlightDataInjectionTransformStream(inlinedDataStream, true))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport async function continueDynamicHTMLResume(renderStream, { delayDataUntilFirstHtmlChunk, inlinedDataStream, getServerInsertedHTML, getServerInsertedMetadata }) {\n    return renderStream// Buffer everything to avoid flushing too frequently\n    .pipeThrough(createBufferedTransformStream())// Insert generated tags to head\n    .pipeThrough(createHeadInsertionTransformStream(getServerInsertedHTML))// Transform metadata\n    .pipeThrough(createMetadataTransformStream(getServerInsertedMetadata))// Insert the inlined data (Flight data, form state, etc.) stream into the HTML\n    .pipeThrough(createFlightDataInjectionTransformStream(inlinedDataStream, delayDataUntilFirstHtmlChunk))// Close tags should always be deferred to the end\n    .pipeThrough(createMoveSuffixStream());\n}\nexport function createDocumentClosingStream() {\n    return streamFromString(CLOSE_TAG);\n}\n\n//# sourceMappingURL=node-web-streams-helper.js.map","import { getCacheHandlers } from './use-cache/handlers';\n/** Run a callback, and execute any *new* revalidations added during its runtime. */ export async function withExecuteRevalidates(store, callback) {\n    if (!store) {\n        return callback();\n    }\n    // If we executed any revalidates during the request, then we don't want to execute them again.\n    // save the state so we can check if anything changed after we're done running callbacks.\n    const savedRevalidationState = cloneRevalidationState(store);\n    try {\n        return await callback();\n    } finally{\n        // Check if we have any new revalidates, and if so, wait until they are all resolved.\n        const newRevalidates = diffRevalidationState(savedRevalidationState, cloneRevalidationState(store));\n        await executeRevalidates(store, newRevalidates);\n    }\n}\nfunction cloneRevalidationState(store) {\n    return {\n        pendingRevalidatedTags: store.pendingRevalidatedTags ? [\n            ...store.pendingRevalidatedTags\n        ] : [],\n        pendingRevalidates: {\n            ...store.pendingRevalidates\n        },\n        pendingRevalidateWrites: store.pendingRevalidateWrites ? [\n            ...store.pendingRevalidateWrites\n        ] : []\n    };\n}\nfunction diffRevalidationState(prev, curr) {\n    const prevTags = new Set(prev.pendingRevalidatedTags);\n    const prevRevalidateWrites = new Set(prev.pendingRevalidateWrites);\n    return {\n        pendingRevalidatedTags: curr.pendingRevalidatedTags.filter((tag)=>!prevTags.has(tag)),\n        pendingRevalidates: Object.fromEntries(Object.entries(curr.pendingRevalidates).filter(([key])=>!(key in prev.pendingRevalidates))),\n        pendingRevalidateWrites: curr.pendingRevalidateWrites.filter((promise)=>!prevRevalidateWrites.has(promise))\n    };\n}\nasync function revalidateTags(tags, incrementalCache) {\n    if (tags.length === 0) {\n        return;\n    }\n    const promises = [];\n    if (incrementalCache) {\n        promises.push(incrementalCache.revalidateTag(tags));\n    }\n    const handlers = getCacheHandlers();\n    if (handlers) {\n        for (const handler of handlers){\n            promises.push(handler.expireTags(...tags));\n        }\n    }\n    await Promise.all(promises);\n}\nexport async function executeRevalidates(workStore, state) {\n    const pendingRevalidatedTags = (state == null ? void 0 : state.pendingRevalidatedTags) ?? workStore.pendingRevalidatedTags ?? [];\n    const pendingRevalidates = (state == null ? void 0 : state.pendingRevalidates) ?? workStore.pendingRevalidates ?? {};\n    const pendingRevalidateWrites = (state == null ? void 0 : state.pendingRevalidateWrites) ?? workStore.pendingRevalidateWrites ?? [];\n    return Promise.all([\n        revalidateTags(pendingRevalidatedTags, workStore.incrementalCache),\n        ...Object.values(pendingRevalidates),\n        ...pendingRevalidateWrites\n    ]);\n}\n\n//# sourceMappingURL=revalidation-utils.js.map","'use client'\n\n// This is a client component that only renders during SSR,\n// but will be replaced during streaming with an icon insertion script tag.\n// We don't want it to be presented anywhere so it's only visible during streaming,\n// right after the icon meta tags so that browser can pick it up as soon as it's rendered.\n// Note: we don't just emit the script here because we only need the script if it's not in the head,\n// and we need it to be hoistable alongside the other metadata but sync scripts are not hoistable.\nexport const IconMark = () => {\n  if (typeof window !== 'undefined') {\n    return null\n  }\n  return <meta name=\"«nxt-icon»\" />\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleFetch: null,\n    interceptFetch: null,\n    reader: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    },\n    reader: function() {\n        return reader;\n    }\n});\nconst _context = require(\"./context\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? '').split('\\n');\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes('/next/dist/'));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace('webpack-internal:///(rsc)/', '').trim());\n    return stack.join('    ');\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: 'fetch',\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    'next-test-stack',\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString('base64') : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, 'base64') : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        // Passthrough non-test requests.\n        return originalFetch(request);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: 'POST',\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw Object.defineProperty(new Error(`Proxy request failed: ${resp.status}`), \"__NEXT_ERROR_CODE\", {\n            value: \"E146\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case 'continue':\n            return originalFetch(request);\n        case 'abort':\n        case 'unhandled':\n            throw Object.defineProperty(new Error(`Proxy request aborted [${request.method} ${request.url}]`), \"__NEXT_ERROR_CODE\", {\n                value: \"E145\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'fetch':\n            return buildResponse(proxyResponse);\n        default:\n            return api;\n    }\n}\nfunction interceptFetch(originalFetch) {\n    global.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        global.fetch = originalFetch;\n    };\n}\n\n//# sourceMappingURL=fetch.js.map","import { DetachedPromise } from './detached-promise';\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */ export class Batcher {\n    constructor(cacheKeyFn, /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */ schedulerFn = (fn)=>fn()){\n        this.cacheKeyFn = cacheKeyFn;\n        this.schedulerFn = schedulerFn;\n        this.pending = new Map();\n    }\n    static create(options) {\n        return new Batcher(options == null ? void 0 : options.cacheKeyFn, options == null ? void 0 : options.schedulerFn);\n    }\n    /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */ async batch(key, fn) {\n        const cacheKey = this.cacheKeyFn ? await this.cacheKeyFn(key) : key;\n        if (cacheKey === null) {\n            return fn(cacheKey, Promise.resolve);\n        }\n        const pending = this.pending.get(cacheKey);\n        if (pending) return pending;\n        const { promise, resolve, reject } = new DetachedPromise();\n        this.pending.set(cacheKey, promise);\n        this.schedulerFn(async ()=>{\n            try {\n                const result = await fn(cacheKey, resolve);\n                // Resolving a promise multiple times is a no-op, so we can safely\n                // resolve all pending promises with the same result.\n                resolve(result);\n            } catch (err) {\n                reject(err);\n            } finally{\n                this.pending.delete(cacheKey);\n            }\n        });\n        return promise;\n    }\n}\n\n//# sourceMappingURL=batcher.js.map","export var RouteKind = /*#__PURE__*/ function(RouteKind) {\n    /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */ RouteKind[\"PAGES\"] = \"PAGES\";\n    /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */ RouteKind[\"PAGES_API\"] = \"PAGES_API\";\n    /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */ RouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */ RouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */ RouteKind[\"IMAGE\"] = \"IMAGE\";\n    return RouteKind;\n}({});\n\n//# sourceMappingURL=route-kind.js.map","import { CachedRouteKind, IncrementalCacheKind } from './types';\nimport RenderResult from '../render-result';\nimport { RouteKind } from '../route-kind';\nimport { HTML_CONTENT_TYPE_HEADER } from '../../lib/constants';\nexport async function fromResponseCacheEntry(cacheEntry) {\n    var _cacheEntry_value, _cacheEntry_value1;\n    return {\n        ...cacheEntry,\n        value: ((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            pageData: cacheEntry.value.pageData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status\n        } : ((_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: await cacheEntry.value.html.toUnchunkedString(true),\n            postponed: cacheEntry.value.postponed,\n            rscData: cacheEntry.value.rscData,\n            headers: cacheEntry.value.headers,\n            status: cacheEntry.value.status,\n            segmentData: cacheEntry.value.segmentData\n        } : cacheEntry.value\n    };\n}\nexport async function toResponseCacheEntry(response) {\n    var _response_value, _response_value1;\n    if (!response) return null;\n    return {\n        isMiss: response.isMiss,\n        isStale: response.isStale,\n        cacheControl: response.cacheControl,\n        value: ((_response_value = response.value) == null ? void 0 : _response_value.kind) === CachedRouteKind.PAGES ? {\n            kind: CachedRouteKind.PAGES,\n            html: RenderResult.fromStatic(response.value.html, HTML_CONTENT_TYPE_HEADER),\n            pageData: response.value.pageData,\n            headers: response.value.headers,\n            status: response.value.status\n        } : ((_response_value1 = response.value) == null ? void 0 : _response_value1.kind) === CachedRouteKind.APP_PAGE ? {\n            kind: CachedRouteKind.APP_PAGE,\n            html: RenderResult.fromStatic(response.value.html, HTML_CONTENT_TYPE_HEADER),\n            rscData: response.value.rscData,\n            headers: response.value.headers,\n            status: response.value.status,\n            postponed: response.value.postponed,\n            segmentData: response.value.segmentData\n        } : response.value\n    };\n}\nexport function routeKindToIncrementalCacheKind(routeKind) {\n    switch(routeKind){\n        case RouteKind.PAGES:\n            return IncrementalCacheKind.PAGES;\n        case RouteKind.APP_PAGE:\n            return IncrementalCacheKind.APP_PAGE;\n        case RouteKind.IMAGE:\n            return IncrementalCacheKind.IMAGE;\n        case RouteKind.APP_ROUTE:\n            return IncrementalCacheKind.APP_ROUTE;\n        case RouteKind.PAGES_API:\n            // Pages Router API routes are not cached in the incremental cache.\n            throw Object.defineProperty(new Error(`Unexpected route kind ${routeKind}`), \"__NEXT_ERROR_CODE\", {\n                value: \"E64\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            return routeKind;\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { Batcher } from '../../lib/batcher';\nimport { scheduleOnNextTick } from '../../lib/scheduler';\nimport { fromResponseCacheEntry, routeKindToIncrementalCacheKind, toResponseCacheEntry } from './utils';\nexport * from './types';\nexport default class ResponseCache {\n    constructor(minimal_mode){\n        this.batcher = Batcher.create({\n            // Ensure on-demand revalidate doesn't block normal requests, it should be\n            // safe to run an on-demand revalidate for the same key as a normal request.\n            cacheKeyFn: ({ key, isOnDemandRevalidate })=>`${key}-${isOnDemandRevalidate ? '1' : '0'}`,\n            // We wait to do any async work until after we've added our promise to\n            // `pendingResponses` to ensure that any any other calls will reuse the\n            // same promise until we've fully finished our work.\n            schedulerFn: scheduleOnNextTick\n        });\n        this.minimal_mode = minimal_mode;\n    }\n    async get(key, responseGenerator, context) {\n        // If there is no key for the cache, we can't possibly look this up in the\n        // cache so just return the result of the response generator.\n        if (!key) {\n            return responseGenerator({\n                hasResolved: false,\n                previousCacheEntry: null\n            });\n        }\n        const { incrementalCache, isOnDemandRevalidate = false, isFallback = false, isRoutePPREnabled = false, waitUntil } = context;\n        const response = await this.batcher.batch({\n            key,\n            isOnDemandRevalidate\n        }, (cacheKey, resolve)=>{\n            const prom = (async ()=>{\n                var _this_previousCacheItem;\n                // We keep the previous cache entry around to leverage when the\n                // incremental cache is disabled in minimal mode.\n                if (this.minimal_mode && ((_this_previousCacheItem = this.previousCacheItem) == null ? void 0 : _this_previousCacheItem.key) === cacheKey && this.previousCacheItem.expiresAt > Date.now()) {\n                    return this.previousCacheItem.entry;\n                }\n                // Coerce the kindHint into a given kind for the incremental cache.\n                const kind = routeKindToIncrementalCacheKind(context.routeKind);\n                let resolved = false;\n                let cachedResponse = null;\n                try {\n                    cachedResponse = !this.minimal_mode ? await incrementalCache.get(key, {\n                        kind,\n                        isRoutePPREnabled: context.isRoutePPREnabled,\n                        isFallback\n                    }) : null;\n                    if (cachedResponse && !isOnDemandRevalidate) {\n                        resolve(cachedResponse);\n                        resolved = true;\n                        if (!cachedResponse.isStale || context.isPrefetch) {\n                            // The cached value is still valid, so we don't need\n                            // to update it yet.\n                            return null;\n                        }\n                    }\n                    const cacheEntry = await responseGenerator({\n                        hasResolved: resolved,\n                        previousCacheEntry: cachedResponse,\n                        isRevalidating: true\n                    });\n                    // If the cache entry couldn't be generated, we don't want to cache\n                    // the result.\n                    if (!cacheEntry) {\n                        // Unset the previous cache item if it was set.\n                        if (this.minimal_mode) this.previousCacheItem = undefined;\n                        return null;\n                    }\n                    const resolveValue = await fromResponseCacheEntry({\n                        ...cacheEntry,\n                        isMiss: !cachedResponse\n                    });\n                    if (!resolveValue) {\n                        // Unset the previous cache item if it was set.\n                        if (this.minimal_mode) this.previousCacheItem = undefined;\n                        return null;\n                    }\n                    // For on-demand revalidate wait to resolve until cache is set.\n                    // Otherwise resolve now.\n                    if (!isOnDemandRevalidate && !resolved) {\n                        resolve(resolveValue);\n                        resolved = true;\n                    }\n                    // We want to persist the result only if it has a cache control value\n                    // defined.\n                    if (resolveValue.cacheControl) {\n                        if (this.minimal_mode) {\n                            this.previousCacheItem = {\n                                key: cacheKey,\n                                entry: resolveValue,\n                                expiresAt: Date.now() + 1000\n                            };\n                        } else {\n                            await incrementalCache.set(key, resolveValue.value, {\n                                cacheControl: resolveValue.cacheControl,\n                                isRoutePPREnabled,\n                                isFallback\n                            });\n                        }\n                    }\n                    return resolveValue;\n                } catch (err) {\n                    // When a path is erroring we automatically re-set the existing cache\n                    // with new revalidate and expire times to prevent non-stop retrying.\n                    if (cachedResponse == null ? void 0 : cachedResponse.cacheControl) {\n                        const newRevalidate = Math.min(Math.max(cachedResponse.cacheControl.revalidate || 3, 3), 30);\n                        const newExpire = cachedResponse.cacheControl.expire === undefined ? undefined : Math.max(newRevalidate + 3, cachedResponse.cacheControl.expire);\n                        await incrementalCache.set(key, cachedResponse.value, {\n                            cacheControl: {\n                                revalidate: newRevalidate,\n                                expire: newExpire\n                            },\n                            isRoutePPREnabled,\n                            isFallback\n                        });\n                    }\n                    // While revalidating in the background we can't reject as we already\n                    // resolved the cache entry so log the error here.\n                    if (resolved) {\n                        console.error(err);\n                        return null;\n                    }\n                    // We haven't resolved yet, so let's throw to indicate an error.\n                    throw err;\n                }\n            })();\n            // we need to ensure background revalidates are\n            // passed to waitUntil\n            if (waitUntil) {\n                waitUntil(prom);\n            }\n            return prom;\n        });\n        return toResponseCacheEntry(response);\n    }\n}\n\n//# sourceMappingURL=index.js.map","import { chainStreams, streamFromBuffer, streamFromString, streamToString } from './stream-utils/node-web-streams-helper';\nimport { isAbortError, pipeToNodeResponse } from './pipe-readable';\nimport { InvariantError } from '../shared/lib/invariant-error';\nexport default class RenderResult {\n    static #_ = /**\n   * A render result that represents an empty response. This is used to\n   * represent a response that was not found or was already sent.\n   */ this.EMPTY = new RenderResult(null, {\n        metadata: {},\n        contentType: null\n    });\n    /**\n   * Creates a new RenderResult instance from a static response.\n   *\n   * @param value the static response value\n   * @param contentType the content type of the response\n   * @returns a new RenderResult instance\n   */ static fromStatic(value, contentType) {\n        return new RenderResult(value, {\n            metadata: {},\n            contentType\n        });\n    }\n    constructor(response, { contentType, waitUntil, metadata }){\n        this.response = response;\n        this.contentType = contentType;\n        this.metadata = metadata;\n        this.waitUntil = waitUntil;\n    }\n    assignMetadata(metadata) {\n        Object.assign(this.metadata, metadata);\n    }\n    /**\n   * Returns true if the response is null. It can be null if the response was\n   * not found or was already sent.\n   */ get isNull() {\n        return this.response === null;\n    }\n    /**\n   * Returns false if the response is a string. It can be a string if the page\n   * was prerendered. If it's not, then it was generated dynamically.\n   */ get isDynamic() {\n        return typeof this.response !== 'string';\n    }\n    toUnchunkedString(stream = false) {\n        if (this.response === null) {\n            // If the response is null, return an empty string. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return '';\n        }\n        if (typeof this.response !== 'string') {\n            if (!stream) {\n                throw Object.defineProperty(new InvariantError('dynamic responses cannot be unchunked. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E732\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            return streamToString(this.readable);\n        }\n        return this.response;\n    }\n    /**\n   * Returns a readable stream of the response.\n   */ get readable() {\n        if (this.response === null) {\n            // If the response is null, return an empty stream. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return new ReadableStream({\n                start (controller) {\n                    controller.close();\n                }\n            });\n        }\n        if (typeof this.response === 'string') {\n            return streamFromString(this.response);\n        }\n        if (Buffer.isBuffer(this.response)) {\n            return streamFromBuffer(this.response);\n        }\n        // If the response is an array of streams, then chain them together.\n        if (Array.isArray(this.response)) {\n            return chainStreams(...this.response);\n        }\n        return this.response;\n    }\n    /**\n   * Coerces the response to an array of streams. This will convert the response\n   * to an array of streams if it is not already one.\n   *\n   * @returns An array of streams\n   */ coerce() {\n        if (this.response === null) {\n            // If the response is null, return an empty stream. This behavior is\n            // intentional as we're now providing the `RenderResult.EMPTY` value.\n            return [];\n        }\n        if (typeof this.response === 'string') {\n            return [\n                streamFromString(this.response)\n            ];\n        } else if (Array.isArray(this.response)) {\n            return this.response;\n        } else if (Buffer.isBuffer(this.response)) {\n            return [\n                streamFromBuffer(this.response)\n            ];\n        } else {\n            return [\n                this.response\n            ];\n        }\n    }\n    /**\n   * Unshifts a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the start of the array. When this response is piped, all of the streams\n   * will be piped one after the other.\n   *\n   * @param readable The new stream to unshift\n   */ unshift(readable) {\n        // Coerce the response to an array of streams.\n        this.response = this.coerce();\n        // Add the new stream to the start of the array.\n        this.response.unshift(readable);\n    }\n    /**\n   * Chains a new stream to the response. This will convert the response to an\n   * array of streams if it is not already one and will add the new stream to\n   * the end. When this response is piped, all of the streams will be piped\n   * one after the other.\n   *\n   * @param readable The new stream to chain\n   */ push(readable) {\n        // Coerce the response to an array of streams.\n        this.response = this.coerce();\n        // Add the new stream to the end of the array.\n        this.response.push(readable);\n    }\n    /**\n   * Pipes the response to a writable stream. This will close/cancel the\n   * writable stream if an error is encountered. If this doesn't throw, then\n   * the writable stream will be closed or aborted.\n   *\n   * @param writable Writable stream to pipe the response to\n   */ async pipeTo(writable) {\n        try {\n            await this.readable.pipeTo(writable, {\n                // We want to close the writable stream ourselves so that we can wait\n                // for the waitUntil promise to resolve before closing it. If an error\n                // is encountered, we'll abort the writable stream if we swallowed the\n                // error.\n                preventClose: true\n            });\n            // If there is a waitUntil promise, wait for it to resolve before\n            // closing the writable stream.\n            if (this.waitUntil) await this.waitUntil;\n            // Close the writable stream.\n            await writable.close();\n        } catch (err) {\n            // If this is an abort error, we should abort the writable stream (as we\n            // took ownership of it when we started piping). We don't need to re-throw\n            // because we handled the error.\n            if (isAbortError(err)) {\n                // Abort the writable stream if an error is encountered.\n                await writable.abort(err);\n                return;\n            }\n            // We're not aborting the writer here as when this method throws it's not\n            // clear as to how so the caller should assume it's their responsibility\n            // to clean up the writer.\n            throw err;\n        }\n    }\n    /**\n   * Pipes the response to a node response. This will close/cancel the node\n   * response if an error is encountered.\n   *\n   * @param res\n   */ async pipeToNodeResponse(res) {\n        await pipeToNodeResponse(this.readable, res, this.waitUntil);\n    }\n}\n\n//# sourceMappingURL=render-result.js.map","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst INTERNAL_QUERY_NAMES = [\n    NEXT_RSC_UNION_QUERY\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(url) {\n    const isStringUrl = typeof url === 'string';\n    const instance = isStringUrl ? new URL(url) : url;\n    instance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return isStringUrl ? instance.toString() : instance;\n}\n\n//# sourceMappingURL=internal-utils.js.map","(()=>{\"use strict\";var e={491:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ContextAPI=void 0;const n=r(223);const a=r(172);const o=r(930);const i=\"context\";const c=new n.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}active(){return this._getContextManager().active()}with(e,t,r,...n){return this._getContextManager().with(e,t,r,...n)}bind(e,t){return this._getContextManager().bind(e,t)}_getContextManager(){return(0,a.getGlobal)(i)||c}disable(){this._getContextManager().disable();(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.ContextAPI=ContextAPI},930:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagAPI=void 0;const n=r(56);const a=r(912);const o=r(957);const i=r(172);const c=\"diag\";class DiagAPI{constructor(){function _logProxy(e){return function(...t){const r=(0,i.getGlobal)(\"diag\");if(!r)return;return r[e](...t)}}const e=this;const setLogger=(t,r={logLevel:o.DiagLogLevel.INFO})=>{var n,c,s;if(t===e){const t=new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");e.error((n=t.stack)!==null&&n!==void 0?n:t.message);return false}if(typeof r===\"number\"){r={logLevel:r}}const u=(0,i.getGlobal)(\"diag\");const l=(0,a.createLogLevelDiagLogger)((c=r.logLevel)!==null&&c!==void 0?c:o.DiagLogLevel.INFO,t);if(u&&!r.suppressOverrideMessage){const e=(s=(new Error).stack)!==null&&s!==void 0?s:\"<failed to generate stacktrace>\";u.warn(`Current logger will be overwritten from ${e}`);l.warn(`Current logger will overwrite one already registered from ${e}`)}return(0,i.registerGlobal)(\"diag\",l,e,true)};e.setLogger=setLogger;e.disable=()=>{(0,i.unregisterGlobal)(c,e)};e.createComponentLogger=e=>new n.DiagComponentLogger(e);e.verbose=_logProxy(\"verbose\");e.debug=_logProxy(\"debug\");e.info=_logProxy(\"info\");e.warn=_logProxy(\"warn\");e.error=_logProxy(\"error\")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}t.DiagAPI=DiagAPI},653:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.MetricsAPI=void 0;const n=r(660);const a=r(172);const o=r(930);const i=\"metrics\";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(e){return(0,a.registerGlobal)(i,e,o.DiagAPI.instance())}getMeterProvider(){return(0,a.getGlobal)(i)||n.NOOP_METER_PROVIDER}getMeter(e,t,r){return this.getMeterProvider().getMeter(e,t,r)}disable(){(0,a.unregisterGlobal)(i,o.DiagAPI.instance())}}t.MetricsAPI=MetricsAPI},181:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.PropagationAPI=void 0;const n=r(172);const a=r(874);const o=r(194);const i=r(277);const c=r(369);const s=r(930);const u=\"propagation\";const l=new a.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=c.createBaggage;this.getBaggage=i.getBaggage;this.getActiveBaggage=i.getActiveBaggage;this.setBaggage=i.setBaggage;this.deleteBaggage=i.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(e){return(0,n.registerGlobal)(u,e,s.DiagAPI.instance())}inject(e,t,r=o.defaultTextMapSetter){return this._getGlobalPropagator().inject(e,t,r)}extract(e,t,r=o.defaultTextMapGetter){return this._getGlobalPropagator().extract(e,t,r)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,n.unregisterGlobal)(u,s.DiagAPI.instance())}_getGlobalPropagator(){return(0,n.getGlobal)(u)||l}}t.PropagationAPI=PropagationAPI},997:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceAPI=void 0;const n=r(172);const a=r(846);const o=r(139);const i=r(607);const c=r(930);const s=\"trace\";class TraceAPI{constructor(){this._proxyTracerProvider=new a.ProxyTracerProvider;this.wrapSpanContext=o.wrapSpanContext;this.isSpanContextValid=o.isSpanContextValid;this.deleteSpan=i.deleteSpan;this.getSpan=i.getSpan;this.getActiveSpan=i.getActiveSpan;this.getSpanContext=i.getSpanContext;this.setSpan=i.setSpan;this.setSpanContext=i.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(e){const t=(0,n.registerGlobal)(s,this._proxyTracerProvider,c.DiagAPI.instance());if(t){this._proxyTracerProvider.setDelegate(e)}return t}getTracerProvider(){return(0,n.getGlobal)(s)||this._proxyTracerProvider}getTracer(e,t){return this.getTracerProvider().getTracer(e,t)}disable(){(0,n.unregisterGlobal)(s,c.DiagAPI.instance());this._proxyTracerProvider=new a.ProxyTracerProvider}}t.TraceAPI=TraceAPI},277:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.deleteBaggage=t.setBaggage=t.getActiveBaggage=t.getBaggage=void 0;const n=r(491);const a=r(780);const o=(0,a.createContextKey)(\"OpenTelemetry Baggage Key\");function getBaggage(e){return e.getValue(o)||undefined}t.getBaggage=getBaggage;function getActiveBaggage(){return getBaggage(n.ContextAPI.getInstance().active())}t.getActiveBaggage=getActiveBaggage;function setBaggage(e,t){return e.setValue(o,t)}t.setBaggage=setBaggage;function deleteBaggage(e){return e.deleteValue(o)}t.deleteBaggage=deleteBaggage},993:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.BaggageImpl=void 0;class BaggageImpl{constructor(e){this._entries=e?new Map(e):new Map}getEntry(e){const t=this._entries.get(e);if(!t){return undefined}return Object.assign({},t)}getAllEntries(){return Array.from(this._entries.entries()).map((([e,t])=>[e,t]))}setEntry(e,t){const r=new BaggageImpl(this._entries);r._entries.set(e,t);return r}removeEntry(e){const t=new BaggageImpl(this._entries);t._entries.delete(e);return t}removeEntries(...e){const t=new BaggageImpl(this._entries);for(const r of e){t._entries.delete(r)}return t}clear(){return new BaggageImpl}}t.BaggageImpl=BaggageImpl},830:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataSymbol=void 0;t.baggageEntryMetadataSymbol=Symbol(\"BaggageEntryMetadata\")},369:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.baggageEntryMetadataFromString=t.createBaggage=void 0;const n=r(930);const a=r(993);const o=r(830);const i=n.DiagAPI.instance();function createBaggage(e={}){return new a.BaggageImpl(new Map(Object.entries(e)))}t.createBaggage=createBaggage;function baggageEntryMetadataFromString(e){if(typeof e!==\"string\"){i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);e=\"\"}return{__TYPE__:o.baggageEntryMetadataSymbol,toString(){return e}}}t.baggageEntryMetadataFromString=baggageEntryMetadataFromString},67:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.context=void 0;const n=r(491);t.context=n.ContextAPI.getInstance()},223:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopContextManager=void 0;const n=r(780);class NoopContextManager{active(){return n.ROOT_CONTEXT}with(e,t,r,...n){return t.call(r,...n)}bind(e,t){return t}enable(){return this}disable(){return this}}t.NoopContextManager=NoopContextManager},780:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ROOT_CONTEXT=t.createContextKey=void 0;function createContextKey(e){return Symbol.for(e)}t.createContextKey=createContextKey;class BaseContext{constructor(e){const t=this;t._currentContext=e?new Map(e):new Map;t.getValue=e=>t._currentContext.get(e);t.setValue=(e,r)=>{const n=new BaseContext(t._currentContext);n._currentContext.set(e,r);return n};t.deleteValue=e=>{const r=new BaseContext(t._currentContext);r._currentContext.delete(e);return r}}}t.ROOT_CONTEXT=new BaseContext},506:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.diag=void 0;const n=r(930);t.diag=n.DiagAPI.instance()},56:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagComponentLogger=void 0;const n=r(172);class DiagComponentLogger{constructor(e){this._namespace=e.namespace||\"DiagComponentLogger\"}debug(...e){return logProxy(\"debug\",this._namespace,e)}error(...e){return logProxy(\"error\",this._namespace,e)}info(...e){return logProxy(\"info\",this._namespace,e)}warn(...e){return logProxy(\"warn\",this._namespace,e)}verbose(...e){return logProxy(\"verbose\",this._namespace,e)}}t.DiagComponentLogger=DiagComponentLogger;function logProxy(e,t,r){const a=(0,n.getGlobal)(\"diag\");if(!a){return}r.unshift(t);return a[e](...r)}},972:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagConsoleLogger=void 0;const r=[{n:\"error\",c:\"error\"},{n:\"warn\",c:\"warn\"},{n:\"info\",c:\"info\"},{n:\"debug\",c:\"debug\"},{n:\"verbose\",c:\"trace\"}];class DiagConsoleLogger{constructor(){function _consoleFunc(e){return function(...t){if(console){let r=console[e];if(typeof r!==\"function\"){r=console.log}if(typeof r===\"function\"){return r.apply(console,t)}}}}for(let e=0;e<r.length;e++){this[r[e].n]=_consoleFunc(r[e].c)}}}t.DiagConsoleLogger=DiagConsoleLogger},912:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createLogLevelDiagLogger=void 0;const n=r(957);function createLogLevelDiagLogger(e,t){if(e<n.DiagLogLevel.NONE){e=n.DiagLogLevel.NONE}else if(e>n.DiagLogLevel.ALL){e=n.DiagLogLevel.ALL}t=t||{};function _filterFunc(r,n){const a=t[r];if(typeof a===\"function\"&&e>=n){return a.bind(t)}return function(){}}return{error:_filterFunc(\"error\",n.DiagLogLevel.ERROR),warn:_filterFunc(\"warn\",n.DiagLogLevel.WARN),info:_filterFunc(\"info\",n.DiagLogLevel.INFO),debug:_filterFunc(\"debug\",n.DiagLogLevel.DEBUG),verbose:_filterFunc(\"verbose\",n.DiagLogLevel.VERBOSE)}}t.createLogLevelDiagLogger=createLogLevelDiagLogger},957:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.DiagLogLevel=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"ERROR\"]=30]=\"ERROR\";e[e[\"WARN\"]=50]=\"WARN\";e[e[\"INFO\"]=60]=\"INFO\";e[e[\"DEBUG\"]=70]=\"DEBUG\";e[e[\"VERBOSE\"]=80]=\"VERBOSE\";e[e[\"ALL\"]=9999]=\"ALL\"})(r=t.DiagLogLevel||(t.DiagLogLevel={}))},172:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.unregisterGlobal=t.getGlobal=t.registerGlobal=void 0;const n=r(200);const a=r(521);const o=r(130);const i=a.VERSION.split(\".\")[0];const c=Symbol.for(`opentelemetry.js.api.${i}`);const s=n._globalThis;function registerGlobal(e,t,r,n=false){var o;const i=s[c]=(o=s[c])!==null&&o!==void 0?o:{version:a.VERSION};if(!n&&i[e]){const t=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);r.error(t.stack||t.message);return false}if(i.version!==a.VERSION){const t=new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);r.error(t.stack||t.message);return false}i[e]=t;r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);return true}t.registerGlobal=registerGlobal;function getGlobal(e){var t,r;const n=(t=s[c])===null||t===void 0?void 0:t.version;if(!n||!(0,o.isCompatible)(n)){return}return(r=s[c])===null||r===void 0?void 0:r[e]}t.getGlobal=getGlobal;function unregisterGlobal(e,t){t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);const r=s[c];if(r){delete r[e]}}t.unregisterGlobal=unregisterGlobal},130:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.isCompatible=t._makeCompatibilityCheck=void 0;const n=r(521);const a=/^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;function _makeCompatibilityCheck(e){const t=new Set([e]);const r=new Set;const n=e.match(a);if(!n){return()=>false}const o={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(o.prerelease!=null){return function isExactmatch(t){return t===e}}function _reject(e){r.add(e);return false}function _accept(e){t.add(e);return true}return function isCompatible(e){if(t.has(e)){return true}if(r.has(e)){return false}const n=e.match(a);if(!n){return _reject(e)}const i={major:+n[1],minor:+n[2],patch:+n[3],prerelease:n[4]};if(i.prerelease!=null){return _reject(e)}if(o.major!==i.major){return _reject(e)}if(o.major===0){if(o.minor===i.minor&&o.patch<=i.patch){return _accept(e)}return _reject(e)}if(o.minor<=i.minor){return _accept(e)}return _reject(e)}}t._makeCompatibilityCheck=_makeCompatibilityCheck;t.isCompatible=_makeCompatibilityCheck(n.VERSION)},886:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.metrics=void 0;const n=r(653);t.metrics=n.MetricsAPI.getInstance()},901:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ValueType=void 0;var r;(function(e){e[e[\"INT\"]=0]=\"INT\";e[e[\"DOUBLE\"]=1]=\"DOUBLE\"})(r=t.ValueType||(t.ValueType={}))},102:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createNoopMeter=t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=t.NOOP_OBSERVABLE_GAUGE_METRIC=t.NOOP_OBSERVABLE_COUNTER_METRIC=t.NOOP_UP_DOWN_COUNTER_METRIC=t.NOOP_HISTOGRAM_METRIC=t.NOOP_COUNTER_METRIC=t.NOOP_METER=t.NoopObservableUpDownCounterMetric=t.NoopObservableGaugeMetric=t.NoopObservableCounterMetric=t.NoopObservableMetric=t.NoopHistogramMetric=t.NoopUpDownCounterMetric=t.NoopCounterMetric=t.NoopMetric=t.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(e,r){return t.NOOP_HISTOGRAM_METRIC}createCounter(e,r){return t.NOOP_COUNTER_METRIC}createUpDownCounter(e,r){return t.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(e,r){return t.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(e,r){return t.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(e,r){return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(e,t){}removeBatchObservableCallback(e){}}t.NoopMeter=NoopMeter;class NoopMetric{}t.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(e,t){}}t.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(e,t){}}t.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(e,t){}}t.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(e){}removeCallback(e){}}t.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}t.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}t.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}t.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;t.NOOP_METER=new NoopMeter;t.NOOP_COUNTER_METRIC=new NoopCounterMetric;t.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;t.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;t.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;t.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return t.NOOP_METER}t.createNoopMeter=createNoopMeter},660:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NOOP_METER_PROVIDER=t.NoopMeterProvider=void 0;const n=r(102);class NoopMeterProvider{getMeter(e,t,r){return n.NOOP_METER}}t.NoopMeterProvider=NoopMeterProvider;t.NOOP_METER_PROVIDER=new NoopMeterProvider},200:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(46),t)},651:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t._globalThis=void 0;t._globalThis=typeof globalThis===\"object\"?globalThis:global},46:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){if(n===undefined)n=r;Object.defineProperty(e,n,{enumerable:true,get:function(){return t[r]}})}:function(e,t,r,n){if(n===undefined)n=r;e[n]=t[r]});var a=this&&this.__exportStar||function(e,t){for(var r in e)if(r!==\"default\"&&!Object.prototype.hasOwnProperty.call(t,r))n(t,e,r)};Object.defineProperty(t,\"__esModule\",{value:true});a(r(651),t)},939:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.propagation=void 0;const n=r(181);t.propagation=n.PropagationAPI.getInstance()},874:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(e,t){}extract(e,t){return e}fields(){return[]}}t.NoopTextMapPropagator=NoopTextMapPropagator},194:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.defaultTextMapSetter=t.defaultTextMapGetter=void 0;t.defaultTextMapGetter={get(e,t){if(e==null){return undefined}return e[t]},keys(e){if(e==null){return[]}return Object.keys(e)}};t.defaultTextMapSetter={set(e,t,r){if(e==null){return}e[t]=r}}},845:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.trace=void 0;const n=r(997);t.trace=n.TraceAPI.getInstance()},403:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NonRecordingSpan=void 0;const n=r(476);class NonRecordingSpan{constructor(e=n.INVALID_SPAN_CONTEXT){this._spanContext=e}spanContext(){return this._spanContext}setAttribute(e,t){return this}setAttributes(e){return this}addEvent(e,t){return this}setStatus(e){return this}updateName(e){return this}end(e){}isRecording(){return false}recordException(e,t){}}t.NonRecordingSpan=NonRecordingSpan},614:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracer=void 0;const n=r(491);const a=r(607);const o=r(403);const i=r(139);const c=n.ContextAPI.getInstance();class NoopTracer{startSpan(e,t,r=c.active()){const n=Boolean(t===null||t===void 0?void 0:t.root);if(n){return new o.NonRecordingSpan}const s=r&&(0,a.getSpanContext)(r);if(isSpanContext(s)&&(0,i.isSpanContextValid)(s)){return new o.NonRecordingSpan(s)}else{return new o.NonRecordingSpan}}startActiveSpan(e,t,r,n){let o;let i;let s;if(arguments.length<2){return}else if(arguments.length===2){s=t}else if(arguments.length===3){o=t;s=r}else{o=t;i=r;s=n}const u=i!==null&&i!==void 0?i:c.active();const l=this.startSpan(e,o,u);const g=(0,a.setSpan)(u,l);return c.with(g,s,undefined,l)}}t.NoopTracer=NoopTracer;function isSpanContext(e){return typeof e===\"object\"&&typeof e[\"spanId\"]===\"string\"&&typeof e[\"traceId\"]===\"string\"&&typeof e[\"traceFlags\"]===\"number\"}},124:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.NoopTracerProvider=void 0;const n=r(614);class NoopTracerProvider{getTracer(e,t,r){return new n.NoopTracer}}t.NoopTracerProvider=NoopTracerProvider},125:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracer=void 0;const n=r(614);const a=new n.NoopTracer;class ProxyTracer{constructor(e,t,r,n){this._provider=e;this.name=t;this.version=r;this.options=n}startSpan(e,t,r){return this._getTracer().startSpan(e,t,r)}startActiveSpan(e,t,r,n){const a=this._getTracer();return Reflect.apply(a.startActiveSpan,a,arguments)}_getTracer(){if(this._delegate){return this._delegate}const e=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!e){return a}this._delegate=e;return this._delegate}}t.ProxyTracer=ProxyTracer},846:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.ProxyTracerProvider=void 0;const n=r(125);const a=r(124);const o=new a.NoopTracerProvider;class ProxyTracerProvider{getTracer(e,t,r){var a;return(a=this.getDelegateTracer(e,t,r))!==null&&a!==void 0?a:new n.ProxyTracer(this,e,t,r)}getDelegate(){var e;return(e=this._delegate)!==null&&e!==void 0?e:o}setDelegate(e){this._delegate=e}getDelegateTracer(e,t,r){var n;return(n=this._delegate)===null||n===void 0?void 0:n.getTracer(e,t,r)}}t.ProxyTracerProvider=ProxyTracerProvider},996:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SamplingDecision=void 0;var r;(function(e){e[e[\"NOT_RECORD\"]=0]=\"NOT_RECORD\";e[e[\"RECORD\"]=1]=\"RECORD\";e[e[\"RECORD_AND_SAMPLED\"]=2]=\"RECORD_AND_SAMPLED\"})(r=t.SamplingDecision||(t.SamplingDecision={}))},607:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.getSpanContext=t.setSpanContext=t.deleteSpan=t.setSpan=t.getActiveSpan=t.getSpan=void 0;const n=r(780);const a=r(403);const o=r(491);const i=(0,n.createContextKey)(\"OpenTelemetry Context Key SPAN\");function getSpan(e){return e.getValue(i)||undefined}t.getSpan=getSpan;function getActiveSpan(){return getSpan(o.ContextAPI.getInstance().active())}t.getActiveSpan=getActiveSpan;function setSpan(e,t){return e.setValue(i,t)}t.setSpan=setSpan;function deleteSpan(e){return e.deleteValue(i)}t.deleteSpan=deleteSpan;function setSpanContext(e,t){return setSpan(e,new a.NonRecordingSpan(t))}t.setSpanContext=setSpanContext;function getSpanContext(e){var t;return(t=getSpan(e))===null||t===void 0?void 0:t.spanContext()}t.getSpanContext=getSpanContext},325:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceStateImpl=void 0;const n=r(564);const a=32;const o=512;const i=\",\";const c=\"=\";class TraceStateImpl{constructor(e){this._internalState=new Map;if(e)this._parse(e)}set(e,t){const r=this._clone();if(r._internalState.has(e)){r._internalState.delete(e)}r._internalState.set(e,t);return r}unset(e){const t=this._clone();t._internalState.delete(e);return t}get(e){return this._internalState.get(e)}serialize(){return this._keys().reduce(((e,t)=>{e.push(t+c+this.get(t));return e}),[]).join(i)}_parse(e){if(e.length>o)return;this._internalState=e.split(i).reverse().reduce(((e,t)=>{const r=t.trim();const a=r.indexOf(c);if(a!==-1){const o=r.slice(0,a);const i=r.slice(a+1,t.length);if((0,n.validateKey)(o)&&(0,n.validateValue)(i)){e.set(o,i)}else{}}return e}),new Map);if(this._internalState.size>a){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,a))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const e=new TraceStateImpl;e._internalState=new Map(this._internalState);return e}}t.TraceStateImpl=TraceStateImpl},564:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.validateValue=t.validateKey=void 0;const r=\"[_0-9a-z-*/]\";const n=`[a-z]${r}{0,255}`;const a=`[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;const o=new RegExp(`^(?:${n}|${a})$`);const i=/^[ -~]{0,255}[!-~]$/;const c=/,|=/;function validateKey(e){return o.test(e)}t.validateKey=validateKey;function validateValue(e){return i.test(e)&&!c.test(e)}t.validateValue=validateValue},98:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.createTraceState=void 0;const n=r(325);function createTraceState(e){return new n.TraceStateImpl(e)}t.createTraceState=createTraceState},476:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.INVALID_SPAN_CONTEXT=t.INVALID_TRACEID=t.INVALID_SPANID=void 0;const n=r(475);t.INVALID_SPANID=\"0000000000000000\";t.INVALID_TRACEID=\"00000000000000000000000000000000\";t.INVALID_SPAN_CONTEXT={traceId:t.INVALID_TRACEID,spanId:t.INVALID_SPANID,traceFlags:n.TraceFlags.NONE}},357:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanKind=void 0;var r;(function(e){e[e[\"INTERNAL\"]=0]=\"INTERNAL\";e[e[\"SERVER\"]=1]=\"SERVER\";e[e[\"CLIENT\"]=2]=\"CLIENT\";e[e[\"PRODUCER\"]=3]=\"PRODUCER\";e[e[\"CONSUMER\"]=4]=\"CONSUMER\"})(r=t.SpanKind||(t.SpanKind={}))},139:(e,t,r)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.wrapSpanContext=t.isSpanContextValid=t.isValidSpanId=t.isValidTraceId=void 0;const n=r(476);const a=r(403);const o=/^([0-9a-f]{32})$/i;const i=/^[0-9a-f]{16}$/i;function isValidTraceId(e){return o.test(e)&&e!==n.INVALID_TRACEID}t.isValidTraceId=isValidTraceId;function isValidSpanId(e){return i.test(e)&&e!==n.INVALID_SPANID}t.isValidSpanId=isValidSpanId;function isSpanContextValid(e){return isValidTraceId(e.traceId)&&isValidSpanId(e.spanId)}t.isSpanContextValid=isSpanContextValid;function wrapSpanContext(e){return new a.NonRecordingSpan(e)}t.wrapSpanContext=wrapSpanContext},847:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.SpanStatusCode=void 0;var r;(function(e){e[e[\"UNSET\"]=0]=\"UNSET\";e[e[\"OK\"]=1]=\"OK\";e[e[\"ERROR\"]=2]=\"ERROR\"})(r=t.SpanStatusCode||(t.SpanStatusCode={}))},475:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.TraceFlags=void 0;var r;(function(e){e[e[\"NONE\"]=0]=\"NONE\";e[e[\"SAMPLED\"]=1]=\"SAMPLED\"})(r=t.TraceFlags||(t.TraceFlags={}))},521:(e,t)=>{Object.defineProperty(t,\"__esModule\",{value:true});t.VERSION=void 0;t.VERSION=\"1.6.0\"}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var a=t[r]={exports:{}};var o=true;try{e[r].call(a.exports,a,a.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};(()=>{var e=r;Object.defineProperty(e,\"__esModule\",{value:true});e.trace=e.propagation=e.metrics=e.diag=e.context=e.INVALID_SPAN_CONTEXT=e.INVALID_TRACEID=e.INVALID_SPANID=e.isValidSpanId=e.isValidTraceId=e.isSpanContextValid=e.createTraceState=e.TraceFlags=e.SpanStatusCode=e.SpanKind=e.SamplingDecision=e.ProxyTracerProvider=e.ProxyTracer=e.defaultTextMapSetter=e.defaultTextMapGetter=e.ValueType=e.createNoopMeter=e.DiagLogLevel=e.DiagConsoleLogger=e.ROOT_CONTEXT=e.createContextKey=e.baggageEntryMetadataFromString=void 0;var t=__nccwpck_require__(369);Object.defineProperty(e,\"baggageEntryMetadataFromString\",{enumerable:true,get:function(){return t.baggageEntryMetadataFromString}});var n=__nccwpck_require__(780);Object.defineProperty(e,\"createContextKey\",{enumerable:true,get:function(){return n.createContextKey}});Object.defineProperty(e,\"ROOT_CONTEXT\",{enumerable:true,get:function(){return n.ROOT_CONTEXT}});var a=__nccwpck_require__(972);Object.defineProperty(e,\"DiagConsoleLogger\",{enumerable:true,get:function(){return a.DiagConsoleLogger}});var o=__nccwpck_require__(957);Object.defineProperty(e,\"DiagLogLevel\",{enumerable:true,get:function(){return o.DiagLogLevel}});var i=__nccwpck_require__(102);Object.defineProperty(e,\"createNoopMeter\",{enumerable:true,get:function(){return i.createNoopMeter}});var c=__nccwpck_require__(901);Object.defineProperty(e,\"ValueType\",{enumerable:true,get:function(){return c.ValueType}});var s=__nccwpck_require__(194);Object.defineProperty(e,\"defaultTextMapGetter\",{enumerable:true,get:function(){return s.defaultTextMapGetter}});Object.defineProperty(e,\"defaultTextMapSetter\",{enumerable:true,get:function(){return s.defaultTextMapSetter}});var u=__nccwpck_require__(125);Object.defineProperty(e,\"ProxyTracer\",{enumerable:true,get:function(){return u.ProxyTracer}});var l=__nccwpck_require__(846);Object.defineProperty(e,\"ProxyTracerProvider\",{enumerable:true,get:function(){return l.ProxyTracerProvider}});var g=__nccwpck_require__(996);Object.defineProperty(e,\"SamplingDecision\",{enumerable:true,get:function(){return g.SamplingDecision}});var p=__nccwpck_require__(357);Object.defineProperty(e,\"SpanKind\",{enumerable:true,get:function(){return p.SpanKind}});var d=__nccwpck_require__(847);Object.defineProperty(e,\"SpanStatusCode\",{enumerable:true,get:function(){return d.SpanStatusCode}});var _=__nccwpck_require__(475);Object.defineProperty(e,\"TraceFlags\",{enumerable:true,get:function(){return _.TraceFlags}});var f=__nccwpck_require__(98);Object.defineProperty(e,\"createTraceState\",{enumerable:true,get:function(){return f.createTraceState}});var b=__nccwpck_require__(139);Object.defineProperty(e,\"isSpanContextValid\",{enumerable:true,get:function(){return b.isSpanContextValid}});Object.defineProperty(e,\"isValidTraceId\",{enumerable:true,get:function(){return b.isValidTraceId}});Object.defineProperty(e,\"isValidSpanId\",{enumerable:true,get:function(){return b.isValidSpanId}});var v=__nccwpck_require__(476);Object.defineProperty(e,\"INVALID_SPANID\",{enumerable:true,get:function(){return v.INVALID_SPANID}});Object.defineProperty(e,\"INVALID_TRACEID\",{enumerable:true,get:function(){return v.INVALID_TRACEID}});Object.defineProperty(e,\"INVALID_SPAN_CONTEXT\",{enumerable:true,get:function(){return v.INVALID_SPAN_CONTEXT}});const O=__nccwpck_require__(67);Object.defineProperty(e,\"context\",{enumerable:true,get:function(){return O.context}});const P=__nccwpck_require__(506);Object.defineProperty(e,\"diag\",{enumerable:true,get:function(){return P.diag}});const N=__nccwpck_require__(886);Object.defineProperty(e,\"metrics\",{enumerable:true,get:function(){return N.metrics}});const S=__nccwpck_require__(939);Object.defineProperty(e,\"propagation\",{enumerable:true,get:function(){return S.propagation}});const C=__nccwpck_require__(845);Object.defineProperty(e,\"trace\",{enumerable:true,get:function(){return C.trace}});e[\"default\"]={context:O.context,diag:P.diag,metrics:N.metrics,propagation:S.propagation,trace:C.trace}})();module.exports=r})();","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  CacheNodeSeedData,\n} from '../../../server/app-render/types'\nimport { createRouterCacheKey } from './create-router-cache-key'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n} from './router-reducer-types'\n\nexport function fillLazyItemsTillLeafWithHead(\n  navigatedAt: number,\n  newCache: CacheNode,\n  existingCache: CacheNode | undefined,\n  routerState: FlightRouterState,\n  cacheNodeSeedData: CacheNodeSeedData | null,\n  head: React.ReactNode,\n  prefetchEntry: PrefetchCacheEntry | undefined\n): void {\n  const isLastSegment = Object.keys(routerState[1]).length === 0\n  if (isLastSegment) {\n    newCache.head = head\n    return\n  }\n  // Remove segment that we got data for so that it is filled in during rendering of rsc.\n  for (const key in routerState[1]) {\n    const parallelRouteState = routerState[1][key]\n    const segmentForParallelRoute = parallelRouteState[0]\n    const cacheKey = createRouterCacheKey(segmentForParallelRoute)\n\n    // TODO: We should traverse the cacheNodeSeedData tree instead of the router\n    // state tree. Ideally, they would always be the same shape, but because of\n    // the loading.js pattern, cacheNodeSeedData sometimes only represents a\n    // partial tree. That's why this node is sometimes null. Once PPR lands,\n    // loading.js will no longer have special behavior and we can traverse the\n    // data tree instead.\n    //\n    // We should also consider merging the router state tree and the data tree\n    // in the response format, so that we don't have to send the keys twice.\n    // Then the client can convert them into separate representations.\n    const parallelSeedData =\n      cacheNodeSeedData !== null && cacheNodeSeedData[2][key] !== undefined\n        ? cacheNodeSeedData[2][key]\n        : null\n    if (existingCache) {\n      const existingParallelRoutesCacheNode =\n        existingCache.parallelRoutes.get(key)\n      if (existingParallelRoutesCacheNode) {\n        const hasReusablePrefetch =\n          prefetchEntry?.kind === 'auto' &&\n          prefetchEntry.status === PrefetchCacheEntryStatus.reusable\n\n        let parallelRouteCacheNode = new Map(existingParallelRoutesCacheNode)\n        const existingCacheNode = parallelRouteCacheNode.get(cacheKey)\n        let newCacheNode: CacheNode\n        if (parallelSeedData !== null) {\n          // New data was sent from the server.\n          const seedNode = parallelSeedData[1]\n          const loading = parallelSeedData[3]\n          newCacheNode = {\n            lazyData: null,\n            rsc: seedNode,\n            // This is a PPR-only field. When PPR is enabled, we shouldn't hit\n            // this path during a navigation, but until PPR is fully implemented\n            // yet it's possible the existing node does have a non-null\n            // `prefetchRsc`. As an incremental step, we'll just de-opt to the\n            // old behavior — no PPR value.\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            loading,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n            navigatedAt,\n          }\n        } else if (hasReusablePrefetch && existingCacheNode) {\n          // No new data was sent from the server, but the existing cache node\n          // was prefetched, so we should reuse that.\n          newCacheNode = {\n            lazyData: existingCacheNode.lazyData,\n            rsc: existingCacheNode.rsc,\n            // This is a PPR-only field. Unlike the previous branch, since we're\n            // just cloning the existing cache node, we might as well keep the\n            // PPR value, if it exists.\n            prefetchRsc: existingCacheNode.prefetchRsc,\n            head: existingCacheNode.head,\n            prefetchHead: existingCacheNode.prefetchHead,\n            parallelRoutes: new Map(existingCacheNode.parallelRoutes),\n            loading: existingCacheNode.loading,\n          } as CacheNode\n        } else {\n          // No data available for this node. This will trigger a lazy fetch\n          // during render.\n          newCacheNode = {\n            lazyData: null,\n            rsc: null,\n            prefetchRsc: null,\n            head: null,\n            prefetchHead: null,\n            parallelRoutes: new Map(existingCacheNode?.parallelRoutes),\n            loading: null,\n            navigatedAt,\n          }\n        }\n\n        // Overrides the cache key with the new cache node.\n        parallelRouteCacheNode.set(cacheKey, newCacheNode)\n        // Traverse deeper to apply the head / fill lazy items till the head.\n        fillLazyItemsTillLeafWithHead(\n          navigatedAt,\n          newCacheNode,\n          existingCacheNode,\n          parallelRouteState,\n          parallelSeedData ? parallelSeedData : null,\n          head,\n          prefetchEntry\n        )\n\n        newCache.parallelRoutes.set(key, parallelRouteCacheNode)\n        continue\n      }\n    }\n\n    let newCacheNode: CacheNode\n    if (parallelSeedData !== null) {\n      // New data was sent from the server.\n      const seedNode = parallelSeedData[1]\n      const loading = parallelSeedData[3]\n      newCacheNode = {\n        lazyData: null,\n        rsc: seedNode,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading,\n        navigatedAt,\n      }\n    } else {\n      // No data available for this node. This will trigger a lazy fetch\n      // during render.\n      newCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt,\n      }\n    }\n\n    const existingParallelRoutes = newCache.parallelRoutes.get(key)\n    if (existingParallelRoutes) {\n      existingParallelRoutes.set(cacheKey, newCacheNode)\n    } else {\n      newCache.parallelRoutes.set(key, new Map([[cacheKey, newCacheNode]]))\n    }\n\n    fillLazyItemsTillLeafWithHead(\n      navigatedAt,\n      newCacheNode,\n      undefined,\n      parallelRouteState,\n      parallelSeedData,\n      head,\n      prefetchEntry\n    )\n  }\n}\n","const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n","export const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain';\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8';\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8';\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP';\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI';\nexport const MATCHED_PATH_HEADER = 'x-matched-path';\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate';\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = 'x-prerender-revalidate-if-generated';\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc';\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments';\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc';\nexport const RSC_SUFFIX = '.rsc';\nexport const ACTION_SUFFIX = '.action';\nexport const NEXT_DATA_SUFFIX = '.json';\nexport const NEXT_META_SUFFIX = '.meta';\nexport const NEXT_BODY_SUFFIX = '.body';\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags';\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags';\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = 'x-next-revalidate-tag-token';\nexport const NEXT_RESUME_HEADER = 'next-resume';\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128;\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256;\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_';\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000;\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe;\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware';\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation';\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages';\nexport const DOT_NEXT_ALIAS = 'private-dot-next';\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir';\nexport const APP_DIR_ALIAS = 'private-next-app-dir';\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy';\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate';\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference';\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper';\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS = 'private-next-rsc-track-dynamic-import';\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption';\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS = 'private-next-rsc-action-client-wrapper';\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nexport const GSP_NO_RETURNED_VALUE = 'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?';\nexport const GSSP_NO_RETURNED_VALUE = 'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?';\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR = 'The `unstable_revalidate` property is available for general use.\\n' + 'Please use `revalidate` instead.';\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nexport const ESLINT_DEFAULT_DIRS = [\n    'app',\n    'pages',\n    'components',\n    'lib',\n    'src'\n];\nexport const SERVER_RUNTIME = {\n    edge: 'edge',\n    experimentalEdge: 'experimental-edge',\n    nodejs: 'nodejs'\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: 'shared',\n    /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */ reactServerComponents: 'rsc',\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: 'ssr',\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: 'action-browser',\n    /**\n   * The Node.js bundle layer for the API routes.\n   */ apiNode: 'api-node',\n    /**\n   * The Edge Lite bundle layer for the API routes.\n   */ apiEdge: 'api-edge',\n    /**\n   * The layer for the middleware code.\n   */ middleware: 'middleware',\n    /**\n   * The layer for the instrumentation hooks.\n   */ instrument: 'instrument',\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: 'edge-asset',\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: 'app-pages-browser',\n    /**\n   * The browser client bundle layer for Pages directory.\n   */ pagesDirBrowser: 'pages-dir-browser',\n    /**\n   * The Edge Lite bundle layer for Pages directory.\n   */ pagesDirEdge: 'pages-dir-edge',\n    /**\n   * The Node.js bundle layer for Pages directory.\n   */ pagesDirNode: 'pages-dir-node'\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        builtinReact: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ],\n        serverOnly: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        neutralTarget: [\n            // pages api\n            WEBPACK_LAYERS_NAMES.apiNode,\n            WEBPACK_LAYERS_NAMES.apiEdge\n        ],\n        clientOnly: [\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ],\n        bundled: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.shared,\n            WEBPACK_LAYERS_NAMES.instrument,\n            WEBPACK_LAYERS_NAMES.middleware\n        ],\n        appPages: [\n            // app router pages and layouts\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser,\n            WEBPACK_LAYERS_NAMES.actionBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: '__next_edge_ssr_entry__',\n    metadata: '__next_metadata__',\n    metadataRoute: '__next_metadata_route__',\n    metadataImageMeta: '__next_metadata_image_meta__'\n};\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES };\n\n//# sourceMappingURL=constants.js.map","import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n  getIsSsr?: () => boolean\n\n  // Used in app directory, to render script tags as server components.\n  appDir?: boolean\n  nonce?: string\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","import(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/builtin/global-error.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/metadata/async-metadata.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/render-from-template-context.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/set-cache-busting-search-param.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/framework/boundary-components.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/lib/metadata/generate/icon-mark.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n","import { ReflectAdapter } from './reflect';\n/**\n * @internal\n */ export class ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nexport class HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map","/**\n * @license React\n * react-dom-server.edge.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n\n\n JS Implementation of MurmurHash3 (r136) (as of May 20, 2011)\n\n Copyright (c) 2011 Gary Court\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n*/\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\"),\n  ReactDOM = require(\"next/dist/compiled/react-dom\"),\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_SCOPE_TYPE = Symbol.for(\"react.scope\"),\n  REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n  REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\"),\n  REACT_MEMO_CACHE_SENTINEL = Symbol.for(\"react.memo_cache_sentinel\"),\n  REACT_VIEW_TRANSITION_TYPE = Symbol.for(\"react.view_transition\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar isArrayImpl = Array.isArray;\nfunction murmurhash3_32_gc(key, seed) {\n  var remainder = key.length & 3;\n  var bytes = key.length - remainder;\n  var h1 = seed;\n  for (seed = 0; seed < bytes; ) {\n    var k1 =\n      (key.charCodeAt(seed) & 255) |\n      ((key.charCodeAt(++seed) & 255) << 8) |\n      ((key.charCodeAt(++seed) & 255) << 16) |\n      ((key.charCodeAt(++seed) & 255) << 24);\n    ++seed;\n    k1 =\n      (3432918353 * (k1 & 65535) +\n        (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 =\n      (461845907 * (k1 & 65535) + (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n      4294967295;\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    h1 = (5 * (h1 & 65535) + (((5 * (h1 >>> 16)) & 65535) << 16)) & 4294967295;\n    h1 = (h1 & 65535) + 27492 + ((((h1 >>> 16) + 58964) & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3:\n      k1 ^= (key.charCodeAt(seed + 2) & 255) << 16;\n    case 2:\n      k1 ^= (key.charCodeAt(seed + 1) & 255) << 8;\n    case 1:\n      (k1 ^= key.charCodeAt(seed) & 255),\n        (k1 =\n          (3432918353 * (k1 & 65535) +\n            (((3432918353 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295),\n        (k1 = (k1 << 15) | (k1 >>> 17)),\n        (h1 ^=\n          (461845907 * (k1 & 65535) +\n            (((461845907 * (k1 >>> 16)) & 65535) << 16)) &\n          4294967295);\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 =\n    (2246822507 * (h1 & 65535) + (((2246822507 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  h1 ^= h1 >>> 13;\n  h1 =\n    (3266489909 * (h1 & 65535) + (((3266489909 * (h1 >>> 16)) & 65535) << 16)) &\n    4294967295;\n  return (h1 ^ (h1 >>> 16)) >>> 0;\n}\nfunction handleErrorInNextTick(error) {\n  setTimeout(function () {\n    throw error;\n  });\n}\nvar LocalPromise = Promise,\n  scheduleMicrotask =\n    \"function\" === typeof queueMicrotask\n      ? queueMicrotask\n      : function (callback) {\n          LocalPromise.resolve(null)\n            .then(callback)\n            .catch(handleErrorInNextTick);\n        },\n  currentView = null,\n  writtenBytes = 0;\nfunction writeChunk(destination, chunk) {\n  if (0 !== chunk.byteLength)\n    if (2048 < chunk.byteLength)\n      0 < writtenBytes &&\n        (destination.enqueue(\n          new Uint8Array(currentView.buffer, 0, writtenBytes)\n        ),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0)),\n        destination.enqueue(chunk);\n    else {\n      var allowableBytes = currentView.length - writtenBytes;\n      allowableBytes < chunk.byteLength &&\n        (0 === allowableBytes\n          ? destination.enqueue(currentView)\n          : (currentView.set(chunk.subarray(0, allowableBytes), writtenBytes),\n            destination.enqueue(currentView),\n            (chunk = chunk.subarray(allowableBytes))),\n        (currentView = new Uint8Array(2048)),\n        (writtenBytes = 0));\n      currentView.set(chunk, writtenBytes);\n      writtenBytes += chunk.byteLength;\n    }\n}\nfunction writeChunkAndReturn(destination, chunk) {\n  writeChunk(destination, chunk);\n  return !0;\n}\nfunction completeWriting(destination) {\n  currentView &&\n    0 < writtenBytes &&\n    (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)),\n    (currentView = null),\n    (writtenBytes = 0));\n}\nvar textEncoder = new TextEncoder();\nfunction stringToChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction stringToPrecomputedChunk(content) {\n  return textEncoder.encode(content);\n}\nfunction byteLengthOfChunk(chunk) {\n  return chunk.byteLength;\n}\nfunction closeWithError(destination, error) {\n  \"function\" === typeof destination.error\n    ? destination.error(error)\n    : destination.close();\n}\nvar assign = Object.assign,\n  hasOwnProperty = Object.prototype.hasOwnProperty,\n  VALID_ATTRIBUTE_NAME_REGEX = RegExp(\n    \"^[:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD][:A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\"\n  ),\n  illegalAttributeNameCache = {},\n  validatedAttributeNameCache = {};\nfunction isAttributeNameSafe(attributeName) {\n  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))\n    return !0;\n  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return !1;\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))\n    return (validatedAttributeNameCache[attributeName] = !0);\n  illegalAttributeNameCache[attributeName] = !0;\n  return !1;\n}\nvar unitlessNumbers = new Set(\n    \"animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp\".split(\n      \" \"\n    )\n  ),\n  aliases = new Map([\n    [\"acceptCharset\", \"accept-charset\"],\n    [\"htmlFor\", \"for\"],\n    [\"httpEquiv\", \"http-equiv\"],\n    [\"crossOrigin\", \"crossorigin\"],\n    [\"accentHeight\", \"accent-height\"],\n    [\"alignmentBaseline\", \"alignment-baseline\"],\n    [\"arabicForm\", \"arabic-form\"],\n    [\"baselineShift\", \"baseline-shift\"],\n    [\"capHeight\", \"cap-height\"],\n    [\"clipPath\", \"clip-path\"],\n    [\"clipRule\", \"clip-rule\"],\n    [\"colorInterpolation\", \"color-interpolation\"],\n    [\"colorInterpolationFilters\", \"color-interpolation-filters\"],\n    [\"colorProfile\", \"color-profile\"],\n    [\"colorRendering\", \"color-rendering\"],\n    [\"dominantBaseline\", \"dominant-baseline\"],\n    [\"enableBackground\", \"enable-background\"],\n    [\"fillOpacity\", \"fill-opacity\"],\n    [\"fillRule\", \"fill-rule\"],\n    [\"floodColor\", \"flood-color\"],\n    [\"floodOpacity\", \"flood-opacity\"],\n    [\"fontFamily\", \"font-family\"],\n    [\"fontSize\", \"font-size\"],\n    [\"fontSizeAdjust\", \"font-size-adjust\"],\n    [\"fontStretch\", \"font-stretch\"],\n    [\"fontStyle\", \"font-style\"],\n    [\"fontVariant\", \"font-variant\"],\n    [\"fontWeight\", \"font-weight\"],\n    [\"glyphName\", \"glyph-name\"],\n    [\"glyphOrientationHorizontal\", \"glyph-orientation-horizontal\"],\n    [\"glyphOrientationVertical\", \"glyph-orientation-vertical\"],\n    [\"horizAdvX\", \"horiz-adv-x\"],\n    [\"horizOriginX\", \"horiz-origin-x\"],\n    [\"imageRendering\", \"image-rendering\"],\n    [\"letterSpacing\", \"letter-spacing\"],\n    [\"lightingColor\", \"lighting-color\"],\n    [\"markerEnd\", \"marker-end\"],\n    [\"markerMid\", \"marker-mid\"],\n    [\"markerStart\", \"marker-start\"],\n    [\"overlinePosition\", \"overline-position\"],\n    [\"overlineThickness\", \"overline-thickness\"],\n    [\"paintOrder\", \"paint-order\"],\n    [\"panose-1\", \"panose-1\"],\n    [\"pointerEvents\", \"pointer-events\"],\n    [\"renderingIntent\", \"rendering-intent\"],\n    [\"shapeRendering\", \"shape-rendering\"],\n    [\"stopColor\", \"stop-color\"],\n    [\"stopOpacity\", \"stop-opacity\"],\n    [\"strikethroughPosition\", \"strikethrough-position\"],\n    [\"strikethroughThickness\", \"strikethrough-thickness\"],\n    [\"strokeDasharray\", \"stroke-dasharray\"],\n    [\"strokeDashoffset\", \"stroke-dashoffset\"],\n    [\"strokeLinecap\", \"stroke-linecap\"],\n    [\"strokeLinejoin\", \"stroke-linejoin\"],\n    [\"strokeMiterlimit\", \"stroke-miterlimit\"],\n    [\"strokeOpacity\", \"stroke-opacity\"],\n    [\"strokeWidth\", \"stroke-width\"],\n    [\"textAnchor\", \"text-anchor\"],\n    [\"textDecoration\", \"text-decoration\"],\n    [\"textRendering\", \"text-rendering\"],\n    [\"transformOrigin\", \"transform-origin\"],\n    [\"underlinePosition\", \"underline-position\"],\n    [\"underlineThickness\", \"underline-thickness\"],\n    [\"unicodeBidi\", \"unicode-bidi\"],\n    [\"unicodeRange\", \"unicode-range\"],\n    [\"unitsPerEm\", \"units-per-em\"],\n    [\"vAlphabetic\", \"v-alphabetic\"],\n    [\"vHanging\", \"v-hanging\"],\n    [\"vIdeographic\", \"v-ideographic\"],\n    [\"vMathematical\", \"v-mathematical\"],\n    [\"vectorEffect\", \"vector-effect\"],\n    [\"vertAdvY\", \"vert-adv-y\"],\n    [\"vertOriginX\", \"vert-origin-x\"],\n    [\"vertOriginY\", \"vert-origin-y\"],\n    [\"wordSpacing\", \"word-spacing\"],\n    [\"writingMode\", \"writing-mode\"],\n    [\"xmlnsXlink\", \"xmlns:xlink\"],\n    [\"xHeight\", \"x-height\"]\n  ]),\n  matchHtmlRegExp = /[\"'&<>]/;\nfunction escapeTextForBrowser(text) {\n  if (\n    \"boolean\" === typeof text ||\n    \"number\" === typeof text ||\n    \"bigint\" === typeof text\n  )\n    return \"\" + text;\n  text = \"\" + text;\n  var match = matchHtmlRegExp.exec(text);\n  if (match) {\n    var html = \"\",\n      index,\n      lastIndex = 0;\n    for (index = match.index; index < text.length; index++) {\n      switch (text.charCodeAt(index)) {\n        case 34:\n          match = \"&quot;\";\n          break;\n        case 38:\n          match = \"&amp;\";\n          break;\n        case 39:\n          match = \"&#x27;\";\n          break;\n        case 60:\n          match = \"&lt;\";\n          break;\n        case 62:\n          match = \"&gt;\";\n          break;\n        default:\n          continue;\n      }\n      lastIndex !== index && (html += text.slice(lastIndex, index));\n      lastIndex = index + 1;\n      html += match;\n    }\n    text = lastIndex !== index ? html + text.slice(lastIndex, index) : html;\n  }\n  return text;\n}\nvar uppercasePattern = /([A-Z])/g,\n  msPattern = /^ms-/,\n  isJavaScriptProtocol =\n    /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\nfunction sanitizeURL(url) {\n  return isJavaScriptProtocol.test(\"\" + url)\n    ? \"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')\"\n    : url;\n}\nvar ReactSharedInternals =\n    React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  ReactDOMSharedInternals =\n    ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n  sharedNotPendingObject = {\n    pending: !1,\n    data: null,\n    method: null,\n    action: null\n  },\n  previousDispatcher = ReactDOMSharedInternals.d;\nReactDOMSharedInternals.d = {\n  f: previousDispatcher.f,\n  r: previousDispatcher.r,\n  D: prefetchDNS,\n  C: preconnect,\n  L: preload,\n  m: preloadModule,\n  X: preinitScript,\n  S: preinitStyle,\n  M: preinitModuleScript\n};\nvar PRELOAD_NO_CREDS = [],\n  currentlyFlushingRenderState = null;\nstringToPrecomputedChunk('\"></template>');\nvar startInlineScript = stringToPrecomputedChunk(\"<script\"),\n  endInlineScript = stringToPrecomputedChunk(\"\\x3c/script>\"),\n  startScriptSrc = stringToPrecomputedChunk('<script src=\"'),\n  startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"'),\n  scriptNonce = stringToPrecomputedChunk(' nonce=\"'),\n  scriptIntegirty = stringToPrecomputedChunk(' integrity=\"'),\n  scriptCrossOrigin = stringToPrecomputedChunk(' crossorigin=\"'),\n  endAsyncScript = stringToPrecomputedChunk(' async=\"\">\\x3c/script>'),\n  startInlineStyle = stringToPrecomputedChunk(\"<style\"),\n  scriptRegex = /(<\\/|<)(s)(cript)/gi;\nfunction scriptReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\u0073\" : \"\\\\u0053\") + suffix;\n}\nvar importMapScriptStart = stringToPrecomputedChunk(\n    '<script type=\"importmap\">'\n  ),\n  importMapScriptEnd = stringToPrecomputedChunk(\"\\x3c/script>\");\nfunction createRenderState(\n  resumableState,\n  nonce,\n  externalRuntimeConfig,\n  importMap,\n  onHeaders,\n  maxHeadersLength\n) {\n  externalRuntimeConfig =\n    \"string\" === typeof nonce ? nonce : nonce && nonce.script;\n  var inlineScriptWithNonce =\n      void 0 === externalRuntimeConfig\n        ? startInlineScript\n        : stringToPrecomputedChunk(\n            '<script nonce=\"' +\n              escapeTextForBrowser(externalRuntimeConfig) +\n              '\"'\n          ),\n    nonceStyle = \"string\" === typeof nonce ? void 0 : nonce && nonce.style,\n    inlineStyleWithNonce =\n      void 0 === nonceStyle\n        ? startInlineStyle\n        : stringToPrecomputedChunk(\n            '<style nonce=\"' + escapeTextForBrowser(nonceStyle) + '\"'\n          ),\n    idPrefix = resumableState.idPrefix,\n    bootstrapChunks = [],\n    bootstrapScriptContent = resumableState.bootstrapScriptContent,\n    bootstrapScripts = resumableState.bootstrapScripts,\n    bootstrapModules = resumableState.bootstrapModules;\n  void 0 !== bootstrapScriptContent &&\n    (bootstrapChunks.push(inlineScriptWithNonce),\n    pushCompletedShellIdAttribute(bootstrapChunks, resumableState),\n    bootstrapChunks.push(\n      endOfStartTag,\n      stringToChunk(\n        (\"\" + bootstrapScriptContent).replace(scriptRegex, scriptReplacer)\n      ),\n      endInlineScript\n    ));\n  bootstrapScriptContent = [];\n  void 0 !== importMap &&\n    (bootstrapScriptContent.push(importMapScriptStart),\n    bootstrapScriptContent.push(\n      stringToChunk(\n        (\"\" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)\n      )\n    ),\n    bootstrapScriptContent.push(importMapScriptEnd));\n  importMap = onHeaders\n    ? {\n        preconnects: \"\",\n        fontPreloads: \"\",\n        highImagePreloads: \"\",\n        remainingCapacity:\n          2 + (\"number\" === typeof maxHeadersLength ? maxHeadersLength : 2e3)\n      }\n    : null;\n  onHeaders = {\n    placeholderPrefix: stringToPrecomputedChunk(idPrefix + \"P:\"),\n    segmentPrefix: stringToPrecomputedChunk(idPrefix + \"S:\"),\n    boundaryPrefix: stringToPrecomputedChunk(idPrefix + \"B:\"),\n    startInlineScript: inlineScriptWithNonce,\n    startInlineStyle: inlineStyleWithNonce,\n    preamble: createPreambleState(),\n    externalRuntimeScript: null,\n    bootstrapChunks: bootstrapChunks,\n    importMapChunks: bootstrapScriptContent,\n    onHeaders: onHeaders,\n    headers: importMap,\n    resets: {\n      font: {},\n      dns: {},\n      connect: { default: {}, anonymous: {}, credentials: {} },\n      image: {},\n      style: {}\n    },\n    charsetChunks: [],\n    viewportChunks: [],\n    hoistableChunks: [],\n    preconnects: new Set(),\n    fontPreloads: new Set(),\n    highImagePreloads: new Set(),\n    styles: new Map(),\n    bootstrapScripts: new Set(),\n    scripts: new Set(),\n    bulkPreloads: new Set(),\n    preloads: {\n      images: new Map(),\n      stylesheets: new Map(),\n      scripts: new Map(),\n      moduleScripts: new Map()\n    },\n    nonce: { script: externalRuntimeConfig, style: nonceStyle },\n    hoistableState: null,\n    stylesToHoist: !1\n  };\n  if (void 0 !== bootstrapScripts)\n    for (importMap = 0; importMap < bootstrapScripts.length; importMap++)\n      (idPrefix = bootstrapScripts[importMap]),\n        (nonceStyle = inlineScriptWithNonce = void 0),\n        (inlineStyleWithNonce = {\n          rel: \"preload\",\n          as: \"script\",\n          fetchPriority: \"low\",\n          nonce: nonce\n        }),\n        \"string\" === typeof idPrefix\n          ? (inlineStyleWithNonce.href = maxHeadersLength = idPrefix)\n          : ((inlineStyleWithNonce.href = maxHeadersLength = idPrefix.src),\n            (inlineStyleWithNonce.integrity = nonceStyle =\n              \"string\" === typeof idPrefix.integrity\n                ? idPrefix.integrity\n                : void 0),\n            (inlineStyleWithNonce.crossOrigin = inlineScriptWithNonce =\n              \"string\" === typeof idPrefix || null == idPrefix.crossOrigin\n                ? void 0\n                : \"use-credentials\" === idPrefix.crossOrigin\n                  ? \"use-credentials\"\n                  : \"\")),\n        (idPrefix = resumableState),\n        (bootstrapScriptContent = maxHeadersLength),\n        (idPrefix.scriptResources[bootstrapScriptContent] = null),\n        (idPrefix.moduleScriptResources[bootstrapScriptContent] = null),\n        (idPrefix = []),\n        pushLinkImpl(idPrefix, inlineStyleWithNonce),\n        onHeaders.bootstrapScripts.add(idPrefix),\n        bootstrapChunks.push(\n          startScriptSrc,\n          stringToChunk(escapeTextForBrowser(maxHeadersLength)),\n          attributeEnd\n        ),\n        externalRuntimeConfig &&\n          bootstrapChunks.push(\n            scriptNonce,\n            stringToChunk(escapeTextForBrowser(externalRuntimeConfig)),\n            attributeEnd\n          ),\n        \"string\" === typeof nonceStyle &&\n          bootstrapChunks.push(\n            scriptIntegirty,\n            stringToChunk(escapeTextForBrowser(nonceStyle)),\n            attributeEnd\n          ),\n        \"string\" === typeof inlineScriptWithNonce &&\n          bootstrapChunks.push(\n            scriptCrossOrigin,\n            stringToChunk(escapeTextForBrowser(inlineScriptWithNonce)),\n            attributeEnd\n          ),\n        pushCompletedShellIdAttribute(bootstrapChunks, resumableState),\n        bootstrapChunks.push(endAsyncScript);\n  if (void 0 !== bootstrapModules)\n    for (nonce = 0; nonce < bootstrapModules.length; nonce++)\n      (nonceStyle = bootstrapModules[nonce]),\n        (maxHeadersLength = importMap = void 0),\n        (inlineScriptWithNonce = {\n          rel: \"modulepreload\",\n          fetchPriority: \"low\",\n          nonce: externalRuntimeConfig\n        }),\n        \"string\" === typeof nonceStyle\n          ? (inlineScriptWithNonce.href = bootstrapScripts = nonceStyle)\n          : ((inlineScriptWithNonce.href = bootstrapScripts = nonceStyle.src),\n            (inlineScriptWithNonce.integrity = maxHeadersLength =\n              \"string\" === typeof nonceStyle.integrity\n                ? nonceStyle.integrity\n                : void 0),\n            (inlineScriptWithNonce.crossOrigin = importMap =\n              \"string\" === typeof nonceStyle || null == nonceStyle.crossOrigin\n                ? void 0\n                : \"use-credentials\" === nonceStyle.crossOrigin\n                  ? \"use-credentials\"\n                  : \"\")),\n        (nonceStyle = resumableState),\n        (inlineStyleWithNonce = bootstrapScripts),\n        (nonceStyle.scriptResources[inlineStyleWithNonce] = null),\n        (nonceStyle.moduleScriptResources[inlineStyleWithNonce] = null),\n        (nonceStyle = []),\n        pushLinkImpl(nonceStyle, inlineScriptWithNonce),\n        onHeaders.bootstrapScripts.add(nonceStyle),\n        bootstrapChunks.push(\n          startModuleSrc,\n          stringToChunk(escapeTextForBrowser(bootstrapScripts)),\n          attributeEnd\n        ),\n        externalRuntimeConfig &&\n          bootstrapChunks.push(\n            scriptNonce,\n            stringToChunk(escapeTextForBrowser(externalRuntimeConfig)),\n            attributeEnd\n          ),\n        \"string\" === typeof maxHeadersLength &&\n          bootstrapChunks.push(\n            scriptIntegirty,\n            stringToChunk(escapeTextForBrowser(maxHeadersLength)),\n            attributeEnd\n          ),\n        \"string\" === typeof importMap &&\n          bootstrapChunks.push(\n            scriptCrossOrigin,\n            stringToChunk(escapeTextForBrowser(importMap)),\n            attributeEnd\n          ),\n        pushCompletedShellIdAttribute(bootstrapChunks, resumableState),\n        bootstrapChunks.push(endAsyncScript);\n  return onHeaders;\n}\nfunction createResumableState(\n  identifierPrefix,\n  externalRuntimeConfig,\n  bootstrapScriptContent,\n  bootstrapScripts,\n  bootstrapModules\n) {\n  return {\n    idPrefix: void 0 === identifierPrefix ? \"\" : identifierPrefix,\n    nextFormID: 0,\n    streamingFormat: 0,\n    bootstrapScriptContent: bootstrapScriptContent,\n    bootstrapScripts: bootstrapScripts,\n    bootstrapModules: bootstrapModules,\n    instructions: 0,\n    hasBody: !1,\n    hasHtml: !1,\n    unknownResources: {},\n    dnsResources: {},\n    connectResources: { default: {}, anonymous: {}, credentials: {} },\n    imageResources: {},\n    styleResources: {},\n    scriptResources: {},\n    moduleUnknownResources: {},\n    moduleScriptResources: {}\n  };\n}\nfunction createPreambleState() {\n  return { htmlChunks: null, headChunks: null, bodyChunks: null };\n}\nfunction createFormatContext(\n  insertionMode,\n  selectedValue,\n  tagScope,\n  viewTransition\n) {\n  return {\n    insertionMode: insertionMode,\n    selectedValue: selectedValue,\n    tagScope: tagScope,\n    viewTransition: viewTransition\n  };\n}\nfunction createRootFormatContext(namespaceURI) {\n  return createFormatContext(\n    \"http://www.w3.org/2000/svg\" === namespaceURI\n      ? 4\n      : \"http://www.w3.org/1998/Math/MathML\" === namespaceURI\n        ? 5\n        : 0,\n    null,\n    0,\n    null\n  );\n}\nfunction getChildFormatContext(parentContext, type, props) {\n  var subtreeScope = parentContext.tagScope & -25;\n  switch (type) {\n    case \"noscript\":\n      return createFormatContext(2, null, subtreeScope | 1, null);\n    case \"select\":\n      return createFormatContext(\n        2,\n        null != props.value ? props.value : props.defaultValue,\n        subtreeScope,\n        null\n      );\n    case \"svg\":\n      return createFormatContext(4, null, subtreeScope, null);\n    case \"picture\":\n      return createFormatContext(2, null, subtreeScope | 2, null);\n    case \"math\":\n      return createFormatContext(5, null, subtreeScope, null);\n    case \"foreignObject\":\n      return createFormatContext(2, null, subtreeScope, null);\n    case \"table\":\n      return createFormatContext(6, null, subtreeScope, null);\n    case \"thead\":\n    case \"tbody\":\n    case \"tfoot\":\n      return createFormatContext(7, null, subtreeScope, null);\n    case \"colgroup\":\n      return createFormatContext(9, null, subtreeScope, null);\n    case \"tr\":\n      return createFormatContext(8, null, subtreeScope, null);\n    case \"head\":\n      if (2 > parentContext.insertionMode)\n        return createFormatContext(3, null, subtreeScope, null);\n      break;\n    case \"html\":\n      if (0 === parentContext.insertionMode)\n        return createFormatContext(1, null, subtreeScope, null);\n  }\n  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode\n    ? createFormatContext(2, null, subtreeScope, null)\n    : parentContext.tagScope !== subtreeScope\n      ? createFormatContext(\n          parentContext.insertionMode,\n          parentContext.selectedValue,\n          subtreeScope,\n          null\n        )\n      : parentContext;\n}\nfunction getSuspenseViewTransition(parentViewTransition) {\n  return null === parentViewTransition\n    ? null\n    : {\n        update: parentViewTransition.update,\n        enter: \"none\",\n        exit: \"none\",\n        share: parentViewTransition.update,\n        name: parentViewTransition.autoName,\n        autoName: parentViewTransition.autoName,\n        nameIdx: 0\n      };\n}\nfunction getSuspenseFallbackFormatContext(resumableState, parentContext) {\n  parentContext.tagScope & 32 && (resumableState.instructions |= 128);\n  return createFormatContext(\n    parentContext.insertionMode,\n    parentContext.selectedValue,\n    parentContext.tagScope | 12,\n    getSuspenseViewTransition(parentContext.viewTransition)\n  );\n}\nfunction getSuspenseContentFormatContext(resumableState, parentContext) {\n  return createFormatContext(\n    parentContext.insertionMode,\n    parentContext.selectedValue,\n    parentContext.tagScope | 16,\n    getSuspenseViewTransition(parentContext.viewTransition)\n  );\n}\nvar textSeparator = stringToPrecomputedChunk(\"\\x3c!-- --\\x3e\");\nfunction pushTextInstance(target, text, renderState, textEmbedded) {\n  if (\"\" === text) return textEmbedded;\n  textEmbedded && target.push(textSeparator);\n  target.push(stringToChunk(escapeTextForBrowser(text)));\n  return !0;\n}\nvar styleNameCache = new Map(),\n  styleAttributeStart = stringToPrecomputedChunk(' style=\"'),\n  styleAssign = stringToPrecomputedChunk(\":\"),\n  styleSeparator = stringToPrecomputedChunk(\";\");\nfunction pushStyleAttribute(target, style) {\n  if (\"object\" !== typeof style)\n    throw Error(\n      \"The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.\"\n    );\n  var isFirst = !0,\n    styleName;\n  for (styleName in style)\n    if (hasOwnProperty.call(style, styleName)) {\n      var styleValue = style[styleName];\n      if (\n        null != styleValue &&\n        \"boolean\" !== typeof styleValue &&\n        \"\" !== styleValue\n      ) {\n        if (0 === styleName.indexOf(\"--\")) {\n          var nameChunk = stringToChunk(escapeTextForBrowser(styleName));\n          styleValue = stringToChunk(\n            escapeTextForBrowser((\"\" + styleValue).trim())\n          );\n        } else\n          (nameChunk = styleNameCache.get(styleName)),\n            void 0 === nameChunk &&\n              ((nameChunk = stringToPrecomputedChunk(\n                escapeTextForBrowser(\n                  styleName\n                    .replace(uppercasePattern, \"-$1\")\n                    .toLowerCase()\n                    .replace(msPattern, \"-ms-\")\n                )\n              )),\n              styleNameCache.set(styleName, nameChunk)),\n            (styleValue =\n              \"number\" === typeof styleValue\n                ? 0 === styleValue || unitlessNumbers.has(styleName)\n                  ? stringToChunk(\"\" + styleValue)\n                  : stringToChunk(styleValue + \"px\")\n                : stringToChunk(\n                    escapeTextForBrowser((\"\" + styleValue).trim())\n                  ));\n        isFirst\n          ? ((isFirst = !1),\n            target.push(\n              styleAttributeStart,\n              nameChunk,\n              styleAssign,\n              styleValue\n            ))\n          : target.push(styleSeparator, nameChunk, styleAssign, styleValue);\n      }\n    }\n  isFirst || target.push(attributeEnd);\n}\nvar attributeSeparator = stringToPrecomputedChunk(\" \"),\n  attributeAssign = stringToPrecomputedChunk('=\"'),\n  attributeEnd = stringToPrecomputedChunk('\"'),\n  attributeEmptyString = stringToPrecomputedChunk('=\"\"');\nfunction pushBooleanAttribute(target, name, value) {\n  value &&\n    \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    target.push(attributeSeparator, stringToChunk(name), attributeEmptyString);\n}\nfunction pushStringAttribute(target, name, value) {\n  \"function\" !== typeof value &&\n    \"symbol\" !== typeof value &&\n    \"boolean\" !== typeof value &&\n    target.push(\n      attributeSeparator,\n      stringToChunk(name),\n      attributeAssign,\n      stringToChunk(escapeTextForBrowser(value)),\n      attributeEnd\n    );\n}\nvar actionJavaScriptURL = stringToPrecomputedChunk(\n    escapeTextForBrowser(\n      \"javascript:throw new Error('React form unexpectedly submitted.')\"\n    )\n  ),\n  startHiddenInputChunk = stringToPrecomputedChunk('<input type=\"hidden\"');\nfunction pushAdditionalFormField(value, key) {\n  this.push(startHiddenInputChunk);\n  validateAdditionalFormField(value);\n  pushStringAttribute(this, \"name\", key);\n  pushStringAttribute(this, \"value\", value);\n  this.push(endOfStartTagSelfClosing);\n}\nfunction validateAdditionalFormField(value) {\n  if (\"string\" !== typeof value)\n    throw Error(\n      \"File/Blob fields are not yet supported in progressive forms. Will fallback to client hydration.\"\n    );\n}\nfunction getCustomFormFields(resumableState, formAction) {\n  if (\"function\" === typeof formAction.$$FORM_ACTION) {\n    var id = resumableState.nextFormID++;\n    resumableState = resumableState.idPrefix + id;\n    try {\n      var customFields = formAction.$$FORM_ACTION(resumableState);\n      if (customFields) {\n        var formData = customFields.data;\n        null != formData && formData.forEach(validateAdditionalFormField);\n      }\n      return customFields;\n    } catch (x) {\n      if (\"object\" === typeof x && null !== x && \"function\" === typeof x.then)\n        throw x;\n    }\n  }\n  return null;\n}\nfunction pushFormActionAttribute(\n  target,\n  resumableState,\n  renderState,\n  formAction,\n  formEncType,\n  formMethod,\n  formTarget,\n  name\n) {\n  var formData = null;\n  if (\"function\" === typeof formAction) {\n    var customFields = getCustomFormFields(resumableState, formAction);\n    null !== customFields\n      ? ((name = customFields.name),\n        (formAction = customFields.action || \"\"),\n        (formEncType = customFields.encType),\n        (formMethod = customFields.method),\n        (formTarget = customFields.target),\n        (formData = customFields.data))\n      : (target.push(\n          attributeSeparator,\n          stringToChunk(\"formAction\"),\n          attributeAssign,\n          actionJavaScriptURL,\n          attributeEnd\n        ),\n        (formTarget = formMethod = formEncType = formAction = name = null),\n        injectFormReplayingRuntime(resumableState, renderState));\n  }\n  null != name && pushAttribute(target, \"name\", name);\n  null != formAction && pushAttribute(target, \"formAction\", formAction);\n  null != formEncType && pushAttribute(target, \"formEncType\", formEncType);\n  null != formMethod && pushAttribute(target, \"formMethod\", formMethod);\n  null != formTarget && pushAttribute(target, \"formTarget\", formTarget);\n  return formData;\n}\nfunction pushAttribute(target, name, value) {\n  switch (name) {\n    case \"className\":\n      pushStringAttribute(target, \"class\", value);\n      break;\n    case \"tabIndex\":\n      pushStringAttribute(target, \"tabindex\", value);\n      break;\n    case \"dir\":\n    case \"role\":\n    case \"viewBox\":\n    case \"width\":\n    case \"height\":\n      pushStringAttribute(target, name, value);\n      break;\n    case \"style\":\n      pushStyleAttribute(target, value);\n      break;\n    case \"src\":\n    case \"href\":\n      if (\"\" === value) break;\n    case \"action\":\n    case \"formAction\":\n      if (\n        null == value ||\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(name),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"defaultValue\":\n    case \"defaultChecked\":\n    case \"innerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"ref\":\n      break;\n    case \"autoFocus\":\n    case \"multiple\":\n    case \"muted\":\n      pushBooleanAttribute(target, name.toLowerCase(), value);\n      break;\n    case \"xlinkHref\":\n      if (\n        \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        \"boolean\" === typeof value\n      )\n        break;\n      value = sanitizeURL(\"\" + value);\n      target.push(\n        attributeSeparator,\n        stringToChunk(\"xlink:href\"),\n        attributeAssign,\n        stringToChunk(escapeTextForBrowser(value)),\n        attributeEnd\n      );\n      break;\n    case \"contentEditable\":\n    case \"spellCheck\":\n    case \"draggable\":\n    case \"value\":\n    case \"autoReverse\":\n    case \"externalResourcesRequired\":\n    case \"focusable\":\n    case \"preserveAlpha\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"inert\":\n    case \"allowFullScreen\":\n    case \"async\":\n    case \"autoPlay\":\n    case \"controls\":\n    case \"default\":\n    case \"defer\":\n    case \"disabled\":\n    case \"disablePictureInPicture\":\n    case \"disableRemotePlayback\":\n    case \"formNoValidate\":\n    case \"hidden\":\n    case \"loop\":\n    case \"noModule\":\n    case \"noValidate\":\n    case \"open\":\n    case \"playsInline\":\n    case \"readOnly\":\n    case \"required\":\n    case \"reversed\":\n    case \"scoped\":\n    case \"seamless\":\n    case \"itemScope\":\n      value &&\n        \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeEmptyString\n        );\n      break;\n    case \"capture\":\n    case \"download\":\n      !0 === value\n        ? target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeEmptyString\n          )\n        : !1 !== value &&\n          \"function\" !== typeof value &&\n          \"symbol\" !== typeof value &&\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n      break;\n    case \"cols\":\n    case \"rows\":\n    case \"size\":\n    case \"span\":\n      \"function\" !== typeof value &&\n        \"symbol\" !== typeof value &&\n        !isNaN(value) &&\n        1 <= value &&\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"rowSpan\":\n    case \"start\":\n      \"function\" === typeof value ||\n        \"symbol\" === typeof value ||\n        isNaN(value) ||\n        target.push(\n          attributeSeparator,\n          stringToChunk(name),\n          attributeAssign,\n          stringToChunk(escapeTextForBrowser(value)),\n          attributeEnd\n        );\n      break;\n    case \"xlinkActuate\":\n      pushStringAttribute(target, \"xlink:actuate\", value);\n      break;\n    case \"xlinkArcrole\":\n      pushStringAttribute(target, \"xlink:arcrole\", value);\n      break;\n    case \"xlinkRole\":\n      pushStringAttribute(target, \"xlink:role\", value);\n      break;\n    case \"xlinkShow\":\n      pushStringAttribute(target, \"xlink:show\", value);\n      break;\n    case \"xlinkTitle\":\n      pushStringAttribute(target, \"xlink:title\", value);\n      break;\n    case \"xlinkType\":\n      pushStringAttribute(target, \"xlink:type\", value);\n      break;\n    case \"xmlBase\":\n      pushStringAttribute(target, \"xml:base\", value);\n      break;\n    case \"xmlLang\":\n      pushStringAttribute(target, \"xml:lang\", value);\n      break;\n    case \"xmlSpace\":\n      pushStringAttribute(target, \"xml:space\", value);\n      break;\n    default:\n      if (\n        !(2 < name.length) ||\n        (\"o\" !== name[0] && \"O\" !== name[0]) ||\n        (\"n\" !== name[1] && \"N\" !== name[1])\n      )\n        if (((name = aliases.get(name) || name), isAttributeNameSafe(name))) {\n          switch (typeof value) {\n            case \"function\":\n            case \"symbol\":\n              return;\n            case \"boolean\":\n              var prefix$8 = name.toLowerCase().slice(0, 5);\n              if (\"data-\" !== prefix$8 && \"aria-\" !== prefix$8) return;\n          }\n          target.push(\n            attributeSeparator,\n            stringToChunk(name),\n            attributeAssign,\n            stringToChunk(escapeTextForBrowser(value)),\n            attributeEnd\n          );\n        }\n  }\n}\nvar endOfStartTag = stringToPrecomputedChunk(\">\"),\n  endOfStartTagSelfClosing = stringToPrecomputedChunk(\"/>\");\nfunction pushInnerHTML(target, innerHTML, children) {\n  if (null != innerHTML) {\n    if (null != children)\n      throw Error(\n        \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n      );\n    if (\"object\" !== typeof innerHTML || !(\"__html\" in innerHTML))\n      throw Error(\n        \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n      );\n    innerHTML = innerHTML.__html;\n    null !== innerHTML &&\n      void 0 !== innerHTML &&\n      target.push(stringToChunk(\"\" + innerHTML));\n  }\n}\nfunction flattenOptionChildren(children) {\n  var content = \"\";\n  React.Children.forEach(children, function (child) {\n    null != child && (content += child);\n  });\n  return content;\n}\nvar selectedMarkerAttribute = stringToPrecomputedChunk(' selected=\"\"'),\n  formReplayingRuntimeScript = stringToPrecomputedChunk(\n    'addEventListener(\"submit\",function(a){if(!a.defaultPrevented){var c=a.target,d=a.submitter,e=c.action,b=d;if(d){var f=d.getAttribute(\"formAction\");null!=f&&(e=f,b=null)}\"javascript:throw new Error(\\'React form unexpectedly submitted.\\')\"===e&&(a.preventDefault(),b?(a=document.createElement(\"input\"),a.name=b.name,a.value=b.value,b.parentNode.insertBefore(a,b),b=new FormData(c),a.parentNode.removeChild(a)):b=new FormData(c),a=c.ownerDocument||c,(a.$$reactFormReplay=a.$$reactFormReplay||[]).push(c,d,b))}});'\n  );\nfunction injectFormReplayingRuntime(resumableState, renderState) {\n  if (0 === (resumableState.instructions & 16)) {\n    resumableState.instructions |= 16;\n    var preamble = renderState.preamble,\n      bootstrapChunks = renderState.bootstrapChunks;\n    (preamble.htmlChunks || preamble.headChunks) && 0 === bootstrapChunks.length\n      ? (bootstrapChunks.push(renderState.startInlineScript),\n        pushCompletedShellIdAttribute(bootstrapChunks, resumableState),\n        bootstrapChunks.push(\n          endOfStartTag,\n          formReplayingRuntimeScript,\n          endInlineScript\n        ))\n      : bootstrapChunks.unshift(\n          renderState.startInlineScript,\n          endOfStartTag,\n          formReplayingRuntimeScript,\n          endInlineScript\n        );\n  }\n}\nvar formStateMarkerIsMatching = stringToPrecomputedChunk(\"\\x3c!--F!--\\x3e\"),\n  formStateMarkerIsNotMatching = stringToPrecomputedChunk(\"\\x3c!--F--\\x3e\");\nfunction pushLinkImpl(target, props) {\n  target.push(startChunkForTag(\"link\"));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nvar styleRegex = /(<\\/|<)(s)(tyle)/gi;\nfunction styleReplacer(match, prefix, s, suffix) {\n  return \"\" + prefix + (\"s\" === s ? \"\\\\73 \" : \"\\\\53 \") + suffix;\n}\nfunction pushSelfClosing(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  for (var propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n          case \"dangerouslySetInnerHTML\":\n            throw Error(\n              tag +\n                \" is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n            );\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTagSelfClosing);\n  return null;\n}\nfunction pushTitleImpl(target, props) {\n  target.push(startChunkForTag(\"title\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  props = Array.isArray(children)\n    ? 2 > children.length\n      ? children[0]\n      : null\n    : children;\n  \"function\" !== typeof props &&\n    \"symbol\" !== typeof props &&\n    null !== props &&\n    void 0 !== props &&\n    target.push(stringToChunk(escapeTextForBrowser(\"\" + props)));\n  pushInnerHTML(target, innerHTML, children);\n  target.push(endChunkForTag(\"title\"));\n  return null;\n}\nvar headPreambleContributionChunk =\n    stringToPrecomputedChunk(\"\\x3c!--head--\\x3e\"),\n  bodyPreambleContributionChunk = stringToPrecomputedChunk(\"\\x3c!--body--\\x3e\"),\n  htmlPreambleContributionChunk = stringToPrecomputedChunk(\"\\x3c!--html--\\x3e\");\nfunction pushScriptImpl(target, props) {\n  target.push(startChunkForTag(\"script\"));\n  var children = null,\n    innerHTML = null,\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            children = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, children);\n  \"string\" === typeof children &&\n    target.push(\n      stringToChunk((\"\" + children).replace(scriptRegex, scriptReplacer))\n    );\n  target.push(endChunkForTag(\"script\"));\n  return null;\n}\nfunction pushStartSingletonElement(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  var innerHTML = (tag = null),\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            tag = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, tag);\n  return tag;\n}\nfunction pushStartGenericElement(target, props, tag) {\n  target.push(startChunkForTag(tag));\n  var innerHTML = (tag = null),\n    propKey;\n  for (propKey in props)\n    if (hasOwnProperty.call(props, propKey)) {\n      var propValue = props[propKey];\n      if (null != propValue)\n        switch (propKey) {\n          case \"children\":\n            tag = propValue;\n            break;\n          case \"dangerouslySetInnerHTML\":\n            innerHTML = propValue;\n            break;\n          default:\n            pushAttribute(target, propKey, propValue);\n        }\n    }\n  target.push(endOfStartTag);\n  pushInnerHTML(target, innerHTML, tag);\n  return \"string\" === typeof tag\n    ? (target.push(stringToChunk(escapeTextForBrowser(tag))), null)\n    : tag;\n}\nvar leadingNewline = stringToPrecomputedChunk(\"\\n\"),\n  VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/,\n  validatedTagCache = new Map();\nfunction startChunkForTag(tag) {\n  var tagStartChunk = validatedTagCache.get(tag);\n  if (void 0 === tagStartChunk) {\n    if (!VALID_TAG_REGEX.test(tag)) throw Error(\"Invalid tag: \" + tag);\n    tagStartChunk = stringToPrecomputedChunk(\"<\" + tag);\n    validatedTagCache.set(tag, tagStartChunk);\n  }\n  return tagStartChunk;\n}\nvar doctypeChunk = stringToPrecomputedChunk(\"<!DOCTYPE html>\");\nfunction pushStartInstance(\n  target$jscomp$0,\n  type,\n  props,\n  resumableState,\n  renderState,\n  preambleState,\n  hoistableState,\n  formatContext,\n  textEmbedded\n) {\n  switch (type) {\n    case \"div\":\n    case \"span\":\n    case \"svg\":\n    case \"path\":\n      break;\n    case \"a\":\n      target$jscomp$0.push(startChunkForTag(\"a\"));\n      var children = null,\n        innerHTML = null,\n        propKey;\n      for (propKey in props)\n        if (hasOwnProperty.call(props, propKey)) {\n          var propValue = props[propKey];\n          if (null != propValue)\n            switch (propKey) {\n              case \"children\":\n                children = propValue;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML = propValue;\n                break;\n              case \"href\":\n                \"\" === propValue\n                  ? pushStringAttribute(target$jscomp$0, \"href\", \"\")\n                  : pushAttribute(target$jscomp$0, propKey, propValue);\n                break;\n              default:\n                pushAttribute(target$jscomp$0, propKey, propValue);\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML, children);\n      if (\"string\" === typeof children) {\n        target$jscomp$0.push(stringToChunk(escapeTextForBrowser(children)));\n        var JSCompiler_inline_result = null;\n      } else JSCompiler_inline_result = children;\n      return JSCompiler_inline_result;\n    case \"g\":\n    case \"p\":\n    case \"li\":\n      break;\n    case \"select\":\n      target$jscomp$0.push(startChunkForTag(\"select\"));\n      var children$jscomp$0 = null,\n        innerHTML$jscomp$0 = null,\n        propKey$jscomp$0;\n      for (propKey$jscomp$0 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$0)) {\n          var propValue$jscomp$0 = props[propKey$jscomp$0];\n          if (null != propValue$jscomp$0)\n            switch (propKey$jscomp$0) {\n              case \"children\":\n                children$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$0 = propValue$jscomp$0;\n                break;\n              case \"defaultValue\":\n              case \"value\":\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$0,\n                  propValue$jscomp$0\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);\n      return children$jscomp$0;\n    case \"option\":\n      var selectedValue = formatContext.selectedValue;\n      target$jscomp$0.push(startChunkForTag(\"option\"));\n      var children$jscomp$1 = null,\n        value = null,\n        selected = null,\n        innerHTML$jscomp$1 = null,\n        propKey$jscomp$1;\n      for (propKey$jscomp$1 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$1)) {\n          var propValue$jscomp$1 = props[propKey$jscomp$1];\n          if (null != propValue$jscomp$1)\n            switch (propKey$jscomp$1) {\n              case \"children\":\n                children$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"selected\":\n                selected = propValue$jscomp$1;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$1 = propValue$jscomp$1;\n                break;\n              case \"value\":\n                value = propValue$jscomp$1;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$1,\n                  propValue$jscomp$1\n                );\n            }\n        }\n      if (null != selectedValue) {\n        var stringValue =\n          null !== value\n            ? \"\" + value\n            : flattenOptionChildren(children$jscomp$1);\n        if (isArrayImpl(selectedValue))\n          for (var i = 0; i < selectedValue.length; i++) {\n            if (\"\" + selectedValue[i] === stringValue) {\n              target$jscomp$0.push(selectedMarkerAttribute);\n              break;\n            }\n          }\n        else\n          \"\" + selectedValue === stringValue &&\n            target$jscomp$0.push(selectedMarkerAttribute);\n      } else selected && target$jscomp$0.push(selectedMarkerAttribute);\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$1, children$jscomp$1);\n      return children$jscomp$1;\n    case \"textarea\":\n      target$jscomp$0.push(startChunkForTag(\"textarea\"));\n      var value$jscomp$0 = null,\n        defaultValue = null,\n        children$jscomp$2 = null,\n        propKey$jscomp$2;\n      for (propKey$jscomp$2 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$2)) {\n          var propValue$jscomp$2 = props[propKey$jscomp$2];\n          if (null != propValue$jscomp$2)\n            switch (propKey$jscomp$2) {\n              case \"children\":\n                children$jscomp$2 = propValue$jscomp$2;\n                break;\n              case \"value\":\n                value$jscomp$0 = propValue$jscomp$2;\n                break;\n              case \"defaultValue\":\n                defaultValue = propValue$jscomp$2;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"`dangerouslySetInnerHTML` does not make sense on <textarea>.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$2,\n                  propValue$jscomp$2\n                );\n            }\n        }\n      null === value$jscomp$0 &&\n        null !== defaultValue &&\n        (value$jscomp$0 = defaultValue);\n      target$jscomp$0.push(endOfStartTag);\n      if (null != children$jscomp$2) {\n        if (null != value$jscomp$0)\n          throw Error(\n            \"If you supply `defaultValue` on a <textarea>, do not pass children.\"\n          );\n        if (isArrayImpl(children$jscomp$2)) {\n          if (1 < children$jscomp$2.length)\n            throw Error(\"<textarea> can only have at most one child.\");\n          value$jscomp$0 = \"\" + children$jscomp$2[0];\n        }\n        value$jscomp$0 = \"\" + children$jscomp$2;\n      }\n      \"string\" === typeof value$jscomp$0 &&\n        \"\\n\" === value$jscomp$0[0] &&\n        target$jscomp$0.push(leadingNewline);\n      null !== value$jscomp$0 &&\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(\"\" + value$jscomp$0))\n        );\n      return null;\n    case \"input\":\n      target$jscomp$0.push(startChunkForTag(\"input\"));\n      var name = null,\n        formAction = null,\n        formEncType = null,\n        formMethod = null,\n        formTarget = null,\n        value$jscomp$1 = null,\n        defaultValue$jscomp$0 = null,\n        checked = null,\n        defaultChecked = null,\n        propKey$jscomp$3;\n      for (propKey$jscomp$3 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$3)) {\n          var propValue$jscomp$3 = props[propKey$jscomp$3];\n          if (null != propValue$jscomp$3)\n            switch (propKey$jscomp$3) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              case \"name\":\n                name = propValue$jscomp$3;\n                break;\n              case \"formAction\":\n                formAction = propValue$jscomp$3;\n                break;\n              case \"formEncType\":\n                formEncType = propValue$jscomp$3;\n                break;\n              case \"formMethod\":\n                formMethod = propValue$jscomp$3;\n                break;\n              case \"formTarget\":\n                formTarget = propValue$jscomp$3;\n                break;\n              case \"defaultChecked\":\n                defaultChecked = propValue$jscomp$3;\n                break;\n              case \"defaultValue\":\n                defaultValue$jscomp$0 = propValue$jscomp$3;\n                break;\n              case \"checked\":\n                checked = propValue$jscomp$3;\n                break;\n              case \"value\":\n                value$jscomp$1 = propValue$jscomp$3;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$3,\n                  propValue$jscomp$3\n                );\n            }\n        }\n      var formData = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction,\n        formEncType,\n        formMethod,\n        formTarget,\n        name\n      );\n      null !== checked\n        ? pushBooleanAttribute(target$jscomp$0, \"checked\", checked)\n        : null !== defaultChecked &&\n          pushBooleanAttribute(target$jscomp$0, \"checked\", defaultChecked);\n      null !== value$jscomp$1\n        ? pushAttribute(target$jscomp$0, \"value\", value$jscomp$1)\n        : null !== defaultValue$jscomp$0 &&\n          pushAttribute(target$jscomp$0, \"value\", defaultValue$jscomp$0);\n      target$jscomp$0.push(endOfStartTagSelfClosing);\n      null != formData &&\n        formData.forEach(pushAdditionalFormField, target$jscomp$0);\n      return null;\n    case \"button\":\n      target$jscomp$0.push(startChunkForTag(\"button\"));\n      var children$jscomp$3 = null,\n        innerHTML$jscomp$2 = null,\n        name$jscomp$0 = null,\n        formAction$jscomp$0 = null,\n        formEncType$jscomp$0 = null,\n        formMethod$jscomp$0 = null,\n        formTarget$jscomp$0 = null,\n        propKey$jscomp$4;\n      for (propKey$jscomp$4 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$4)) {\n          var propValue$jscomp$4 = props[propKey$jscomp$4];\n          if (null != propValue$jscomp$4)\n            switch (propKey$jscomp$4) {\n              case \"children\":\n                children$jscomp$3 = propValue$jscomp$4;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$2 = propValue$jscomp$4;\n                break;\n              case \"name\":\n                name$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formAction\":\n                formAction$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formEncType\":\n                formEncType$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formMethod\":\n                formMethod$jscomp$0 = propValue$jscomp$4;\n                break;\n              case \"formTarget\":\n                formTarget$jscomp$0 = propValue$jscomp$4;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$4,\n                  propValue$jscomp$4\n                );\n            }\n        }\n      var formData$jscomp$0 = pushFormActionAttribute(\n        target$jscomp$0,\n        resumableState,\n        renderState,\n        formAction$jscomp$0,\n        formEncType$jscomp$0,\n        formMethod$jscomp$0,\n        formTarget$jscomp$0,\n        name$jscomp$0\n      );\n      target$jscomp$0.push(endOfStartTag);\n      null != formData$jscomp$0 &&\n        formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$2, children$jscomp$3);\n      if (\"string\" === typeof children$jscomp$3) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$3))\n        );\n        var JSCompiler_inline_result$jscomp$0 = null;\n      } else JSCompiler_inline_result$jscomp$0 = children$jscomp$3;\n      return JSCompiler_inline_result$jscomp$0;\n    case \"form\":\n      target$jscomp$0.push(startChunkForTag(\"form\"));\n      var children$jscomp$4 = null,\n        innerHTML$jscomp$3 = null,\n        formAction$jscomp$1 = null,\n        formEncType$jscomp$1 = null,\n        formMethod$jscomp$1 = null,\n        formTarget$jscomp$1 = null,\n        propKey$jscomp$5;\n      for (propKey$jscomp$5 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$5)) {\n          var propValue$jscomp$5 = props[propKey$jscomp$5];\n          if (null != propValue$jscomp$5)\n            switch (propKey$jscomp$5) {\n              case \"children\":\n                children$jscomp$4 = propValue$jscomp$5;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$3 = propValue$jscomp$5;\n                break;\n              case \"action\":\n                formAction$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"encType\":\n                formEncType$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"method\":\n                formMethod$jscomp$1 = propValue$jscomp$5;\n                break;\n              case \"target\":\n                formTarget$jscomp$1 = propValue$jscomp$5;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$5,\n                  propValue$jscomp$5\n                );\n            }\n        }\n      var formData$jscomp$1 = null,\n        formActionName = null;\n      if (\"function\" === typeof formAction$jscomp$1) {\n        var customFields = getCustomFormFields(\n          resumableState,\n          formAction$jscomp$1\n        );\n        null !== customFields\n          ? ((formAction$jscomp$1 = customFields.action || \"\"),\n            (formEncType$jscomp$1 = customFields.encType),\n            (formMethod$jscomp$1 = customFields.method),\n            (formTarget$jscomp$1 = customFields.target),\n            (formData$jscomp$1 = customFields.data),\n            (formActionName = customFields.name))\n          : (target$jscomp$0.push(\n              attributeSeparator,\n              stringToChunk(\"action\"),\n              attributeAssign,\n              actionJavaScriptURL,\n              attributeEnd\n            ),\n            (formTarget$jscomp$1 =\n              formMethod$jscomp$1 =\n              formEncType$jscomp$1 =\n              formAction$jscomp$1 =\n                null),\n            injectFormReplayingRuntime(resumableState, renderState));\n      }\n      null != formAction$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"action\", formAction$jscomp$1);\n      null != formEncType$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"encType\", formEncType$jscomp$1);\n      null != formMethod$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"method\", formMethod$jscomp$1);\n      null != formTarget$jscomp$1 &&\n        pushAttribute(target$jscomp$0, \"target\", formTarget$jscomp$1);\n      target$jscomp$0.push(endOfStartTag);\n      null !== formActionName &&\n        (target$jscomp$0.push(startHiddenInputChunk),\n        pushStringAttribute(target$jscomp$0, \"name\", formActionName),\n        target$jscomp$0.push(endOfStartTagSelfClosing),\n        null != formData$jscomp$1 &&\n          formData$jscomp$1.forEach(pushAdditionalFormField, target$jscomp$0));\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$3, children$jscomp$4);\n      if (\"string\" === typeof children$jscomp$4) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$4))\n        );\n        var JSCompiler_inline_result$jscomp$1 = null;\n      } else JSCompiler_inline_result$jscomp$1 = children$jscomp$4;\n      return JSCompiler_inline_result$jscomp$1;\n    case \"menuitem\":\n      target$jscomp$0.push(startChunkForTag(\"menuitem\"));\n      for (var propKey$jscomp$6 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$6)) {\n          var propValue$jscomp$6 = props[propKey$jscomp$6];\n          if (null != propValue$jscomp$6)\n            switch (propKey$jscomp$6) {\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"menuitems cannot have `children` nor `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$6,\n                  propValue$jscomp$6\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      return null;\n    case \"object\":\n      target$jscomp$0.push(startChunkForTag(\"object\"));\n      var children$jscomp$5 = null,\n        innerHTML$jscomp$4 = null,\n        propKey$jscomp$7;\n      for (propKey$jscomp$7 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$7)) {\n          var propValue$jscomp$7 = props[propKey$jscomp$7];\n          if (null != propValue$jscomp$7)\n            switch (propKey$jscomp$7) {\n              case \"children\":\n                children$jscomp$5 = propValue$jscomp$7;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$4 = propValue$jscomp$7;\n                break;\n              case \"data\":\n                var sanitizedValue = sanitizeURL(\"\" + propValue$jscomp$7);\n                if (\"\" === sanitizedValue) break;\n                target$jscomp$0.push(\n                  attributeSeparator,\n                  stringToChunk(\"data\"),\n                  attributeAssign,\n                  stringToChunk(escapeTextForBrowser(sanitizedValue)),\n                  attributeEnd\n                );\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$7,\n                  propValue$jscomp$7\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);\n      if (\"string\" === typeof children$jscomp$5) {\n        target$jscomp$0.push(\n          stringToChunk(escapeTextForBrowser(children$jscomp$5))\n        );\n        var JSCompiler_inline_result$jscomp$2 = null;\n      } else JSCompiler_inline_result$jscomp$2 = children$jscomp$5;\n      return JSCompiler_inline_result$jscomp$2;\n    case \"title\":\n      var noscriptTagInScope = formatContext.tagScope & 1,\n        isFallback = formatContext.tagScope & 4;\n      if (\n        4 === formatContext.insertionMode ||\n        noscriptTagInScope ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$3 = pushTitleImpl(\n          target$jscomp$0,\n          props\n        );\n      else\n        isFallback\n          ? (JSCompiler_inline_result$jscomp$3 = null)\n          : (pushTitleImpl(renderState.hoistableChunks, props),\n            (JSCompiler_inline_result$jscomp$3 = void 0));\n      return JSCompiler_inline_result$jscomp$3;\n    case \"link\":\n      var noscriptTagInScope$jscomp$0 = formatContext.tagScope & 1,\n        isFallback$jscomp$0 = formatContext.tagScope & 4,\n        rel = props.rel,\n        href = props.href,\n        precedence = props.precedence;\n      if (\n        4 === formatContext.insertionMode ||\n        noscriptTagInScope$jscomp$0 ||\n        null != props.itemProp ||\n        \"string\" !== typeof rel ||\n        \"string\" !== typeof href ||\n        \"\" === href\n      ) {\n        pushLinkImpl(target$jscomp$0, props);\n        var JSCompiler_inline_result$jscomp$4 = null;\n      } else if (\"stylesheet\" === props.rel)\n        if (\n          \"string\" !== typeof precedence ||\n          null != props.disabled ||\n          props.onLoad ||\n          props.onError\n        )\n          JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n            target$jscomp$0,\n            props\n          );\n        else {\n          var styleQueue = renderState.styles.get(precedence),\n            resourceState = resumableState.styleResources.hasOwnProperty(href)\n              ? resumableState.styleResources[href]\n              : void 0;\n          if (null !== resourceState) {\n            resumableState.styleResources[href] = null;\n            styleQueue ||\n              ((styleQueue = {\n                precedence: stringToChunk(escapeTextForBrowser(precedence)),\n                rules: [],\n                hrefs: [],\n                sheets: new Map()\n              }),\n              renderState.styles.set(precedence, styleQueue));\n            var resource = {\n              state: 0,\n              props: assign({}, props, {\n                \"data-precedence\": props.precedence,\n                precedence: null\n              })\n            };\n            if (resourceState) {\n              2 === resourceState.length &&\n                adoptPreloadCredentials(resource.props, resourceState);\n              var preloadResource = renderState.preloads.stylesheets.get(href);\n              preloadResource && 0 < preloadResource.length\n                ? (preloadResource.length = 0)\n                : (resource.state = 1);\n            }\n            styleQueue.sheets.set(href, resource);\n            hoistableState && hoistableState.stylesheets.add(resource);\n          } else if (styleQueue) {\n            var resource$9 = styleQueue.sheets.get(href);\n            resource$9 &&\n              hoistableState &&\n              hoistableState.stylesheets.add(resource$9);\n          }\n          textEmbedded && target$jscomp$0.push(textSeparator);\n          JSCompiler_inline_result$jscomp$4 = null;\n        }\n      else\n        props.onLoad || props.onError\n          ? (JSCompiler_inline_result$jscomp$4 = pushLinkImpl(\n              target$jscomp$0,\n              props\n            ))\n          : (textEmbedded && target$jscomp$0.push(textSeparator),\n            (JSCompiler_inline_result$jscomp$4 = isFallback$jscomp$0\n              ? null\n              : pushLinkImpl(renderState.hoistableChunks, props)));\n      return JSCompiler_inline_result$jscomp$4;\n    case \"script\":\n      var noscriptTagInScope$jscomp$1 = formatContext.tagScope & 1,\n        asyncProp = props.async;\n      if (\n        \"string\" !== typeof props.src ||\n        !props.src ||\n        !asyncProp ||\n        \"function\" === typeof asyncProp ||\n        \"symbol\" === typeof asyncProp ||\n        props.onLoad ||\n        props.onError ||\n        4 === formatContext.insertionMode ||\n        noscriptTagInScope$jscomp$1 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$5 = pushScriptImpl(\n          target$jscomp$0,\n          props\n        );\n      else {\n        var key = props.src;\n        if (\"module\" === props.type) {\n          var resources = resumableState.moduleScriptResources;\n          var preloads = renderState.preloads.moduleScripts;\n        } else\n          (resources = resumableState.scriptResources),\n            (preloads = renderState.preloads.scripts);\n        var resourceState$jscomp$0 = resources.hasOwnProperty(key)\n          ? resources[key]\n          : void 0;\n        if (null !== resourceState$jscomp$0) {\n          resources[key] = null;\n          var scriptProps = props;\n          if (resourceState$jscomp$0) {\n            2 === resourceState$jscomp$0.length &&\n              ((scriptProps = assign({}, props)),\n              adoptPreloadCredentials(scriptProps, resourceState$jscomp$0));\n            var preloadResource$jscomp$0 = preloads.get(key);\n            preloadResource$jscomp$0 && (preloadResource$jscomp$0.length = 0);\n          }\n          var resource$jscomp$0 = [];\n          renderState.scripts.add(resource$jscomp$0);\n          pushScriptImpl(resource$jscomp$0, scriptProps);\n        }\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$5 = null;\n      }\n      return JSCompiler_inline_result$jscomp$5;\n    case \"style\":\n      var noscriptTagInScope$jscomp$2 = formatContext.tagScope & 1,\n        precedence$jscomp$0 = props.precedence,\n        href$jscomp$0 = props.href,\n        nonce = props.nonce;\n      if (\n        4 === formatContext.insertionMode ||\n        noscriptTagInScope$jscomp$2 ||\n        null != props.itemProp ||\n        \"string\" !== typeof precedence$jscomp$0 ||\n        \"string\" !== typeof href$jscomp$0 ||\n        \"\" === href$jscomp$0\n      ) {\n        target$jscomp$0.push(startChunkForTag(\"style\"));\n        var children$jscomp$6 = null,\n          innerHTML$jscomp$5 = null,\n          propKey$jscomp$8;\n        for (propKey$jscomp$8 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$8)) {\n            var propValue$jscomp$8 = props[propKey$jscomp$8];\n            if (null != propValue$jscomp$8)\n              switch (propKey$jscomp$8) {\n                case \"children\":\n                  children$jscomp$6 = propValue$jscomp$8;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$5 = propValue$jscomp$8;\n                  break;\n                default:\n                  pushAttribute(\n                    target$jscomp$0,\n                    propKey$jscomp$8,\n                    propValue$jscomp$8\n                  );\n              }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        var child = Array.isArray(children$jscomp$6)\n          ? 2 > children$jscomp$6.length\n            ? children$jscomp$6[0]\n            : null\n          : children$jscomp$6;\n        \"function\" !== typeof child &&\n          \"symbol\" !== typeof child &&\n          null !== child &&\n          void 0 !== child &&\n          target$jscomp$0.push(\n            stringToChunk((\"\" + child).replace(styleRegex, styleReplacer))\n          );\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$5, children$jscomp$6);\n        target$jscomp$0.push(endChunkForTag(\"style\"));\n        var JSCompiler_inline_result$jscomp$6 = null;\n      } else {\n        var styleQueue$jscomp$0 = renderState.styles.get(precedence$jscomp$0);\n        if (\n          null !==\n          (resumableState.styleResources.hasOwnProperty(href$jscomp$0)\n            ? resumableState.styleResources[href$jscomp$0]\n            : void 0)\n        ) {\n          resumableState.styleResources[href$jscomp$0] = null;\n          styleQueue$jscomp$0 ||\n            ((styleQueue$jscomp$0 = {\n              precedence: stringToChunk(\n                escapeTextForBrowser(precedence$jscomp$0)\n              ),\n              rules: [],\n              hrefs: [],\n              sheets: new Map()\n            }),\n            renderState.styles.set(precedence$jscomp$0, styleQueue$jscomp$0));\n          var nonceStyle = renderState.nonce.style;\n          if (!nonceStyle || nonceStyle === nonce) {\n            styleQueue$jscomp$0.hrefs.push(\n              stringToChunk(escapeTextForBrowser(href$jscomp$0))\n            );\n            var target = styleQueue$jscomp$0.rules,\n              children$jscomp$7 = null,\n              innerHTML$jscomp$6 = null,\n              propKey$jscomp$9;\n            for (propKey$jscomp$9 in props)\n              if (hasOwnProperty.call(props, propKey$jscomp$9)) {\n                var propValue$jscomp$9 = props[propKey$jscomp$9];\n                if (null != propValue$jscomp$9)\n                  switch (propKey$jscomp$9) {\n                    case \"children\":\n                      children$jscomp$7 = propValue$jscomp$9;\n                      break;\n                    case \"dangerouslySetInnerHTML\":\n                      innerHTML$jscomp$6 = propValue$jscomp$9;\n                  }\n              }\n            var child$jscomp$0 = Array.isArray(children$jscomp$7)\n              ? 2 > children$jscomp$7.length\n                ? children$jscomp$7[0]\n                : null\n              : children$jscomp$7;\n            \"function\" !== typeof child$jscomp$0 &&\n              \"symbol\" !== typeof child$jscomp$0 &&\n              null !== child$jscomp$0 &&\n              void 0 !== child$jscomp$0 &&\n              target.push(\n                stringToChunk(\n                  (\"\" + child$jscomp$0).replace(styleRegex, styleReplacer)\n                )\n              );\n            pushInnerHTML(target, innerHTML$jscomp$6, children$jscomp$7);\n          }\n        }\n        styleQueue$jscomp$0 &&\n          hoistableState &&\n          hoistableState.styles.add(styleQueue$jscomp$0);\n        textEmbedded && target$jscomp$0.push(textSeparator);\n        JSCompiler_inline_result$jscomp$6 = void 0;\n      }\n      return JSCompiler_inline_result$jscomp$6;\n    case \"meta\":\n      var noscriptTagInScope$jscomp$3 = formatContext.tagScope & 1,\n        isFallback$jscomp$1 = formatContext.tagScope & 4;\n      if (\n        4 === formatContext.insertionMode ||\n        noscriptTagInScope$jscomp$3 ||\n        null != props.itemProp\n      )\n        var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(\n          target$jscomp$0,\n          props,\n          \"meta\"\n        );\n      else\n        textEmbedded && target$jscomp$0.push(textSeparator),\n          (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1\n            ? null\n            : \"string\" === typeof props.charSet\n              ? pushSelfClosing(renderState.charsetChunks, props, \"meta\")\n              : \"viewport\" === props.name\n                ? pushSelfClosing(renderState.viewportChunks, props, \"meta\")\n                : pushSelfClosing(renderState.hoistableChunks, props, \"meta\"));\n      return JSCompiler_inline_result$jscomp$7;\n    case \"listing\":\n    case \"pre\":\n      target$jscomp$0.push(startChunkForTag(type));\n      var children$jscomp$8 = null,\n        innerHTML$jscomp$7 = null,\n        propKey$jscomp$10;\n      for (propKey$jscomp$10 in props)\n        if (hasOwnProperty.call(props, propKey$jscomp$10)) {\n          var propValue$jscomp$10 = props[propKey$jscomp$10];\n          if (null != propValue$jscomp$10)\n            switch (propKey$jscomp$10) {\n              case \"children\":\n                children$jscomp$8 = propValue$jscomp$10;\n                break;\n              case \"dangerouslySetInnerHTML\":\n                innerHTML$jscomp$7 = propValue$jscomp$10;\n                break;\n              default:\n                pushAttribute(\n                  target$jscomp$0,\n                  propKey$jscomp$10,\n                  propValue$jscomp$10\n                );\n            }\n        }\n      target$jscomp$0.push(endOfStartTag);\n      if (null != innerHTML$jscomp$7) {\n        if (null != children$jscomp$8)\n          throw Error(\n            \"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\"\n          );\n        if (\n          \"object\" !== typeof innerHTML$jscomp$7 ||\n          !(\"__html\" in innerHTML$jscomp$7)\n        )\n          throw Error(\n            \"`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information.\"\n          );\n        var html = innerHTML$jscomp$7.__html;\n        null !== html &&\n          void 0 !== html &&\n          (\"string\" === typeof html && 0 < html.length && \"\\n\" === html[0]\n            ? target$jscomp$0.push(leadingNewline, stringToChunk(html))\n            : target$jscomp$0.push(stringToChunk(\"\" + html)));\n      }\n      \"string\" === typeof children$jscomp$8 &&\n        \"\\n\" === children$jscomp$8[0] &&\n        target$jscomp$0.push(leadingNewline);\n      return children$jscomp$8;\n    case \"img\":\n      var pictureOrNoScriptTagInScope = formatContext.tagScope & 3,\n        src = props.src,\n        srcSet = props.srcSet;\n      if (\n        !(\n          \"lazy\" === props.loading ||\n          (!src && !srcSet) ||\n          (\"string\" !== typeof src && null != src) ||\n          (\"string\" !== typeof srcSet && null != srcSet) ||\n          \"low\" === props.fetchPriority ||\n          pictureOrNoScriptTagInScope\n        ) &&\n        (\"string\" !== typeof src ||\n          \":\" !== src[4] ||\n          (\"d\" !== src[0] && \"D\" !== src[0]) ||\n          (\"a\" !== src[1] && \"A\" !== src[1]) ||\n          (\"t\" !== src[2] && \"T\" !== src[2]) ||\n          (\"a\" !== src[3] && \"A\" !== src[3])) &&\n        (\"string\" !== typeof srcSet ||\n          \":\" !== srcSet[4] ||\n          (\"d\" !== srcSet[0] && \"D\" !== srcSet[0]) ||\n          (\"a\" !== srcSet[1] && \"A\" !== srcSet[1]) ||\n          (\"t\" !== srcSet[2] && \"T\" !== srcSet[2]) ||\n          (\"a\" !== srcSet[3] && \"A\" !== srcSet[3]))\n      ) {\n        var sizes = \"string\" === typeof props.sizes ? props.sizes : void 0,\n          key$jscomp$0 = srcSet ? srcSet + \"\\n\" + (sizes || \"\") : src,\n          promotablePreloads = renderState.preloads.images,\n          resource$jscomp$1 = promotablePreloads.get(key$jscomp$0);\n        if (resource$jscomp$1) {\n          if (\n            \"high\" === props.fetchPriority ||\n            10 > renderState.highImagePreloads.size\n          )\n            promotablePreloads.delete(key$jscomp$0),\n              renderState.highImagePreloads.add(resource$jscomp$1);\n        } else if (\n          !resumableState.imageResources.hasOwnProperty(key$jscomp$0)\n        ) {\n          resumableState.imageResources[key$jscomp$0] = PRELOAD_NO_CREDS;\n          var input = props.crossOrigin;\n          var JSCompiler_inline_result$jscomp$8 =\n            \"string\" === typeof input\n              ? \"use-credentials\" === input\n                ? input\n                : \"\"\n              : void 0;\n          var headers = renderState.headers,\n            header;\n          headers &&\n          0 < headers.remainingCapacity &&\n          \"string\" !== typeof props.srcSet &&\n          (\"high\" === props.fetchPriority ||\n            500 > headers.highImagePreloads.length) &&\n          ((header = getPreloadAsHeader(src, \"image\", {\n            imageSrcSet: props.srcSet,\n            imageSizes: props.sizes,\n            crossOrigin: JSCompiler_inline_result$jscomp$8,\n            integrity: props.integrity,\n            nonce: props.nonce,\n            type: props.type,\n            fetchPriority: props.fetchPriority,\n            referrerPolicy: props.refererPolicy\n          })),\n          0 <= (headers.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key$jscomp$0] = PRELOAD_NO_CREDS),\n              headers.highImagePreloads && (headers.highImagePreloads += \", \"),\n              (headers.highImagePreloads += header))\n            : ((resource$jscomp$1 = []),\n              pushLinkImpl(resource$jscomp$1, {\n                rel: \"preload\",\n                as: \"image\",\n                href: srcSet ? void 0 : src,\n                imageSrcSet: srcSet,\n                imageSizes: sizes,\n                crossOrigin: JSCompiler_inline_result$jscomp$8,\n                integrity: props.integrity,\n                type: props.type,\n                fetchPriority: props.fetchPriority,\n                referrerPolicy: props.referrerPolicy\n              }),\n              \"high\" === props.fetchPriority ||\n              10 > renderState.highImagePreloads.size\n                ? renderState.highImagePreloads.add(resource$jscomp$1)\n                : (renderState.bulkPreloads.add(resource$jscomp$1),\n                  promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));\n        }\n      }\n      return pushSelfClosing(target$jscomp$0, props, \"img\");\n    case \"base\":\n    case \"area\":\n    case \"br\":\n    case \"col\":\n    case \"embed\":\n    case \"hr\":\n    case \"keygen\":\n    case \"param\":\n    case \"source\":\n    case \"track\":\n    case \"wbr\":\n      return pushSelfClosing(target$jscomp$0, props, type);\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      break;\n    case \"head\":\n      if (2 > formatContext.insertionMode) {\n        var preamble = preambleState || renderState.preamble;\n        if (preamble.headChunks)\n          throw Error(\"The `<head>` tag may only be rendered once.\");\n        null !== preambleState &&\n          target$jscomp$0.push(headPreambleContributionChunk);\n        preamble.headChunks = [];\n        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(\n          preamble.headChunks,\n          props,\n          \"head\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"head\"\n        );\n      return JSCompiler_inline_result$jscomp$9;\n    case \"body\":\n      if (2 > formatContext.insertionMode) {\n        var preamble$jscomp$0 = preambleState || renderState.preamble;\n        if (preamble$jscomp$0.bodyChunks)\n          throw Error(\"The `<body>` tag may only be rendered once.\");\n        null !== preambleState &&\n          target$jscomp$0.push(bodyPreambleContributionChunk);\n        preamble$jscomp$0.bodyChunks = [];\n        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(\n          preamble$jscomp$0.bodyChunks,\n          props,\n          \"body\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"body\"\n        );\n      return JSCompiler_inline_result$jscomp$10;\n    case \"html\":\n      if (0 === formatContext.insertionMode) {\n        var preamble$jscomp$1 = preambleState || renderState.preamble;\n        if (preamble$jscomp$1.htmlChunks)\n          throw Error(\"The `<html>` tag may only be rendered once.\");\n        null !== preambleState &&\n          target$jscomp$0.push(htmlPreambleContributionChunk);\n        preamble$jscomp$1.htmlChunks = [doctypeChunk];\n        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(\n          preamble$jscomp$1.htmlChunks,\n          props,\n          \"html\"\n        );\n      } else\n        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(\n          target$jscomp$0,\n          props,\n          \"html\"\n        );\n      return JSCompiler_inline_result$jscomp$11;\n    default:\n      if (-1 !== type.indexOf(\"-\")) {\n        target$jscomp$0.push(startChunkForTag(type));\n        var children$jscomp$9 = null,\n          innerHTML$jscomp$8 = null,\n          propKey$jscomp$11;\n        for (propKey$jscomp$11 in props)\n          if (hasOwnProperty.call(props, propKey$jscomp$11)) {\n            var propValue$jscomp$11 = props[propKey$jscomp$11];\n            if (null != propValue$jscomp$11) {\n              var attributeName = propKey$jscomp$11;\n              switch (propKey$jscomp$11) {\n                case \"children\":\n                  children$jscomp$9 = propValue$jscomp$11;\n                  break;\n                case \"dangerouslySetInnerHTML\":\n                  innerHTML$jscomp$8 = propValue$jscomp$11;\n                  break;\n                case \"style\":\n                  pushStyleAttribute(target$jscomp$0, propValue$jscomp$11);\n                  break;\n                case \"suppressContentEditableWarning\":\n                case \"suppressHydrationWarning\":\n                case \"ref\":\n                  break;\n                case \"className\":\n                  attributeName = \"class\";\n                default:\n                  if (\n                    isAttributeNameSafe(propKey$jscomp$11) &&\n                    \"function\" !== typeof propValue$jscomp$11 &&\n                    \"symbol\" !== typeof propValue$jscomp$11 &&\n                    !1 !== propValue$jscomp$11\n                  ) {\n                    if (!0 === propValue$jscomp$11) propValue$jscomp$11 = \"\";\n                    else if (\"object\" === typeof propValue$jscomp$11) continue;\n                    target$jscomp$0.push(\n                      attributeSeparator,\n                      stringToChunk(attributeName),\n                      attributeAssign,\n                      stringToChunk(escapeTextForBrowser(propValue$jscomp$11)),\n                      attributeEnd\n                    );\n                  }\n              }\n            }\n          }\n        target$jscomp$0.push(endOfStartTag);\n        pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);\n        return children$jscomp$9;\n      }\n  }\n  return pushStartGenericElement(target$jscomp$0, props, type);\n}\nvar endTagCache = new Map();\nfunction endChunkForTag(tag) {\n  var chunk = endTagCache.get(tag);\n  void 0 === chunk &&\n    ((chunk = stringToPrecomputedChunk(\"</\" + tag + \">\")),\n    endTagCache.set(tag, chunk));\n  return chunk;\n}\nfunction hoistPreambleState(renderState, preambleState) {\n  renderState = renderState.preamble;\n  null === renderState.htmlChunks &&\n    preambleState.htmlChunks &&\n    (renderState.htmlChunks = preambleState.htmlChunks);\n  null === renderState.headChunks &&\n    preambleState.headChunks &&\n    (renderState.headChunks = preambleState.headChunks);\n  null === renderState.bodyChunks &&\n    preambleState.bodyChunks &&\n    (renderState.bodyChunks = preambleState.bodyChunks);\n}\nfunction writeBootstrap(destination, renderState) {\n  renderState = renderState.bootstrapChunks;\n  for (var i = 0; i < renderState.length - 1; i++)\n    writeChunk(destination, renderState[i]);\n  return i < renderState.length\n    ? ((i = renderState[i]),\n      (renderState.length = 0),\n      writeChunkAndReturn(destination, i))\n    : !0;\n}\nvar shellTimeRuntimeScript = stringToPrecomputedChunk(\n    \"requestAnimationFrame(function(){$RT=performance.now()});\"\n  ),\n  placeholder1 = stringToPrecomputedChunk('<template id=\"'),\n  placeholder2 = stringToPrecomputedChunk('\"></template>'),\n  startActivityBoundary = stringToPrecomputedChunk(\"\\x3c!--&--\\x3e\"),\n  endActivityBoundary = stringToPrecomputedChunk(\"\\x3c!--/&--\\x3e\"),\n  startCompletedSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--$--\\x3e\"),\n  startPendingSuspenseBoundary1 = stringToPrecomputedChunk(\n    '\\x3c!--$?--\\x3e<template id=\"'\n  ),\n  startPendingSuspenseBoundary2 = stringToPrecomputedChunk('\"></template>'),\n  startClientRenderedSuspenseBoundary =\n    stringToPrecomputedChunk(\"\\x3c!--$!--\\x3e\"),\n  endSuspenseBoundary = stringToPrecomputedChunk(\"\\x3c!--/$--\\x3e\"),\n  clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk(\"<template\"),\n  clientRenderedSuspenseBoundaryErrorAttrInterstitial =\n    stringToPrecomputedChunk('\"'),\n  clientRenderedSuspenseBoundaryError1A =\n    stringToPrecomputedChunk(' data-dgst=\"');\nstringToPrecomputedChunk(' data-msg=\"');\nstringToPrecomputedChunk(' data-stck=\"');\nstringToPrecomputedChunk(' data-cstck=\"');\nvar clientRenderedSuspenseBoundaryError2 =\n  stringToPrecomputedChunk(\"></template>\");\nfunction writeStartPendingSuspenseBoundary(destination, renderState, id) {\n  writeChunk(destination, startPendingSuspenseBoundary1);\n  if (null === id)\n    throw Error(\n      \"An ID must have been assigned before we can complete the boundary.\"\n    );\n  writeChunk(destination, renderState.boundaryPrefix);\n  writeChunk(destination, stringToChunk(id.toString(16)));\n  return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);\n}\nvar startSegmentHTML = stringToPrecomputedChunk('<div hidden id=\"'),\n  startSegmentHTML2 = stringToPrecomputedChunk('\">'),\n  endSegmentHTML = stringToPrecomputedChunk(\"</div>\"),\n  startSegmentSVG = stringToPrecomputedChunk(\n    '<svg aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentSVG2 = stringToPrecomputedChunk('\">'),\n  endSegmentSVG = stringToPrecomputedChunk(\"</svg>\"),\n  startSegmentMathML = stringToPrecomputedChunk(\n    '<math aria-hidden=\"true\" style=\"display:none\" id=\"'\n  ),\n  startSegmentMathML2 = stringToPrecomputedChunk('\">'),\n  endSegmentMathML = stringToPrecomputedChunk(\"</math>\"),\n  startSegmentTable = stringToPrecomputedChunk('<table hidden id=\"'),\n  startSegmentTable2 = stringToPrecomputedChunk('\">'),\n  endSegmentTable = stringToPrecomputedChunk(\"</table>\"),\n  startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id=\"'),\n  startSegmentTableBody2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableBody = stringToPrecomputedChunk(\"</tbody></table>\"),\n  startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id=\"'),\n  startSegmentTableRow2 = stringToPrecomputedChunk('\">'),\n  endSegmentTableRow = stringToPrecomputedChunk(\"</tr></table>\"),\n  startSegmentColGroup = stringToPrecomputedChunk(\n    '<table hidden><colgroup id=\"'\n  ),\n  startSegmentColGroup2 = stringToPrecomputedChunk('\">'),\n  endSegmentColGroup = stringToPrecomputedChunk(\"</colgroup></table>\");\nfunction writeStartSegment(destination, renderState, formatContext, id) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 3:\n    case 2:\n      return (\n        writeChunk(destination, startSegmentHTML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentHTML2)\n      );\n    case 4:\n      return (\n        writeChunk(destination, startSegmentSVG),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentSVG2)\n      );\n    case 5:\n      return (\n        writeChunk(destination, startSegmentMathML),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentMathML2)\n      );\n    case 6:\n      return (\n        writeChunk(destination, startSegmentTable),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTable2)\n      );\n    case 7:\n      return (\n        writeChunk(destination, startSegmentTableBody),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableBody2)\n      );\n    case 8:\n      return (\n        writeChunk(destination, startSegmentTableRow),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentTableRow2)\n      );\n    case 9:\n      return (\n        writeChunk(destination, startSegmentColGroup),\n        writeChunk(destination, renderState.segmentPrefix),\n        writeChunk(destination, stringToChunk(id.toString(16))),\n        writeChunkAndReturn(destination, startSegmentColGroup2)\n      );\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nfunction writeEndSegment(destination, formatContext) {\n  switch (formatContext.insertionMode) {\n    case 0:\n    case 1:\n    case 3:\n    case 2:\n      return writeChunkAndReturn(destination, endSegmentHTML);\n    case 4:\n      return writeChunkAndReturn(destination, endSegmentSVG);\n    case 5:\n      return writeChunkAndReturn(destination, endSegmentMathML);\n    case 6:\n      return writeChunkAndReturn(destination, endSegmentTable);\n    case 7:\n      return writeChunkAndReturn(destination, endSegmentTableBody);\n    case 8:\n      return writeChunkAndReturn(destination, endSegmentTableRow);\n    case 9:\n      return writeChunkAndReturn(destination, endSegmentColGroup);\n    default:\n      throw Error(\"Unknown insertion mode. This is a bug in React.\");\n  }\n}\nvar completeSegmentScript1Full = stringToPrecomputedChunk(\n    '$RS=function(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS(\"'\n  ),\n  completeSegmentScript1Partial = stringToPrecomputedChunk('$RS(\"'),\n  completeSegmentScript2 = stringToPrecomputedChunk('\",\"'),\n  completeSegmentScriptEnd = stringToPrecomputedChunk('\")\\x3c/script>');\nstringToPrecomputedChunk('<template data-rsi=\"\" data-sid=\"');\nstringToPrecomputedChunk('\" data-pid=\"');\nvar completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(\n  '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d||\"/&\"===d)if(0===h)break;else h--;else\"$\"!==d&&\"$?\"!==d&&\"$~\"!==d&&\"$!\"!==d&&\"&\"!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=\"$\";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=\"$~\",$RB.push(a,b),2===$RB.length&&(\"number\"!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'\n);\nstringToChunk(\n  '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),\"auto\"!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(\"vt-name\"))||(a=\"_T_\"+K++ +\"_\"),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(\"[vt-share]\"),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(\"vt-name\"),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(\"/$\"===r)if(0===f)break;else f--;else\"$\"!==r&&\"$?\"!==r&&\"$~\"!==r&&\"$!\"!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(\"vt-name\"),y=m.get(D);k(d,y?\"vt-share\":\"vt-exit\");y&&(k(y,\"vt-share\"),m.set(D,null));var E=d.querySelectorAll(\"[vt-share]\");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(\"vt-name\"),\\nH=m.get(G);H&&(k(F,\"vt-share\"),k(H,\"vt-share\"),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(\"vt-name\"))&&k(t,\"vt-enter\"),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(\"vt-update\");J&&\"none\"!==J&&!l.includes(n)&&k(n,\"vt-update\");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&\"none\"!==c.getAttribute(\"vt-update\"));u.push.apply(u,I.querySelectorAll(\\'img[src]:not([loading=\"lazy\"])\\'))}}}if(B){var z=\\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(\"load\",q);w.g.addEventListener(\"error\",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];\"\"===b.getAttribute(\"style\")&&b.removeAttribute(\"style\")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'\n);\nvar completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(\"'),\n  completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(\n    '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(\"link[data-precedence],style[data-precedence]\"),v=[],k=0;b=e[k++];)\"not all\"===b.getAttribute(\"media\")?v.push(b):(\"LINK\"===b.tagName&&$RM.set(b.getAttribute(\"href\"),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(\"link\");a.href=d;a.rel=\\n\"stylesheet\";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(\"media\");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(\"data-precedence\");a.removeAttribute(\"media\")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\\n\"$~\";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,\"CSS failed to load\"))};$RR(\"'\n  ),\n  completeBoundaryWithStylesScript1Partial = stringToPrecomputedChunk('$RR(\"'),\n  completeBoundaryScript2 = stringToPrecomputedChunk('\",\"'),\n  completeBoundaryScript3a = stringToPrecomputedChunk('\",'),\n  completeBoundaryScript3b = stringToPrecomputedChunk('\"'),\n  completeBoundaryScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rci=\"\" data-bid=\"');\nstringToPrecomputedChunk('<template data-rri=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-sid=\"');\nstringToPrecomputedChunk('\" data-sty=\"');\nvar clientRenderScriptFunctionOnly = stringToPrecomputedChunk(\n    '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};'\n  ),\n  clientRenderScript1Full = stringToPrecomputedChunk(\n    '$RX=function(b,c,d,e,f){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data=\"$!\",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),f&&(a.cstck=f),b._reactRetry&&b._reactRetry())};;$RX(\"'\n  ),\n  clientRenderScript1Partial = stringToPrecomputedChunk('$RX(\"'),\n  clientRenderScript1A = stringToPrecomputedChunk('\"'),\n  clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(\",\"),\n  clientRenderScriptEnd = stringToPrecomputedChunk(\")\\x3c/script>\");\nstringToPrecomputedChunk('<template data-rxi=\"\" data-bid=\"');\nstringToPrecomputedChunk('\" data-dgst=\"');\nstringToPrecomputedChunk('\" data-msg=\"');\nstringToPrecomputedChunk('\" data-stck=\"');\nstringToPrecomputedChunk('\" data-cstck=\"');\nvar regexForJSStringsInInstructionScripts = /[<\\u2028\\u2029]/g;\nfunction escapeJSStringsForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInInstructionScripts,\n    function (match) {\n      switch (match) {\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar regexForJSStringsInScripts = /[&><\\u2028\\u2029]/g;\nfunction escapeJSObjectForInstructionScripts(input) {\n  return JSON.stringify(input).replace(\n    regexForJSStringsInScripts,\n    function (match) {\n      switch (match) {\n        case \"&\":\n          return \"\\\\u0026\";\n        case \">\":\n          return \"\\\\u003e\";\n        case \"<\":\n          return \"\\\\u003c\";\n        case \"\\u2028\":\n          return \"\\\\u2028\";\n        case \"\\u2029\":\n          return \"\\\\u2029\";\n        default:\n          throw Error(\n            \"escapeJSObjectForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n          );\n      }\n    }\n  );\n}\nvar lateStyleTagResourceOpen1 = stringToPrecomputedChunk(\n    ' media=\"not all\" data-precedence=\"'\n  ),\n  lateStyleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  lateStyleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  lateStyleTagTemplateClose = stringToPrecomputedChunk(\"</style>\"),\n  currentlyRenderingBoundaryHasStylesToHoist = !1,\n  destinationHasCapacity = !0;\nfunction flushStyleTagsLateForBoundary(styleQueue) {\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs,\n    i = 0;\n  if (hrefs.length) {\n    writeChunk(this, currentlyFlushingRenderState.startInlineStyle);\n    writeChunk(this, lateStyleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    for (writeChunk(this, lateStyleTagResourceOpen2); i < hrefs.length - 1; i++)\n      writeChunk(this, hrefs[i]), writeChunk(this, spaceSeparator);\n    writeChunk(this, hrefs[i]);\n    writeChunk(this, lateStyleTagResourceOpen3);\n    for (i = 0; i < rules.length; i++) writeChunk(this, rules[i]);\n    destinationHasCapacity = writeChunkAndReturn(\n      this,\n      lateStyleTagTemplateClose\n    );\n    currentlyRenderingBoundaryHasStylesToHoist = !0;\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction hasStylesToHoist(stylesheet) {\n  return 2 !== stylesheet.state\n    ? (currentlyRenderingBoundaryHasStylesToHoist = !0)\n    : !1;\n}\nfunction writeHoistablesForBoundary(destination, hoistableState, renderState) {\n  currentlyRenderingBoundaryHasStylesToHoist = !1;\n  destinationHasCapacity = !0;\n  currentlyFlushingRenderState = renderState;\n  hoistableState.styles.forEach(flushStyleTagsLateForBoundary, destination);\n  currentlyFlushingRenderState = null;\n  hoistableState.stylesheets.forEach(hasStylesToHoist);\n  currentlyRenderingBoundaryHasStylesToHoist &&\n    (renderState.stylesToHoist = !0);\n  return destinationHasCapacity;\n}\nfunction flushResource(resource) {\n  for (var i = 0; i < resource.length; i++) writeChunk(this, resource[i]);\n  resource.length = 0;\n}\nvar stylesheetFlushingQueue = [];\nfunction flushStyleInPreamble(stylesheet) {\n  pushLinkImpl(stylesheetFlushingQueue, stylesheet.props);\n  for (var i = 0; i < stylesheetFlushingQueue.length; i++)\n    writeChunk(this, stylesheetFlushingQueue[i]);\n  stylesheetFlushingQueue.length = 0;\n  stylesheet.state = 2;\n}\nvar styleTagResourceOpen1 = stringToPrecomputedChunk(' data-precedence=\"'),\n  styleTagResourceOpen2 = stringToPrecomputedChunk('\" data-href=\"'),\n  spaceSeparator = stringToPrecomputedChunk(\" \"),\n  styleTagResourceOpen3 = stringToPrecomputedChunk('\">'),\n  styleTagResourceClose = stringToPrecomputedChunk(\"</style>\");\nfunction flushStylesInPreamble(styleQueue) {\n  var hasStylesheets = 0 < styleQueue.sheets.size;\n  styleQueue.sheets.forEach(flushStyleInPreamble, this);\n  styleQueue.sheets.clear();\n  var rules = styleQueue.rules,\n    hrefs = styleQueue.hrefs;\n  if (!hasStylesheets || hrefs.length) {\n    writeChunk(this, currentlyFlushingRenderState.startInlineStyle);\n    writeChunk(this, styleTagResourceOpen1);\n    writeChunk(this, styleQueue.precedence);\n    styleQueue = 0;\n    if (hrefs.length) {\n      for (\n        writeChunk(this, styleTagResourceOpen2);\n        styleQueue < hrefs.length - 1;\n        styleQueue++\n      )\n        writeChunk(this, hrefs[styleQueue]), writeChunk(this, spaceSeparator);\n      writeChunk(this, hrefs[styleQueue]);\n    }\n    writeChunk(this, styleTagResourceOpen3);\n    for (styleQueue = 0; styleQueue < rules.length; styleQueue++)\n      writeChunk(this, rules[styleQueue]);\n    writeChunk(this, styleTagResourceClose);\n    rules.length = 0;\n    hrefs.length = 0;\n  }\n}\nfunction preloadLateStyle(stylesheet) {\n  if (0 === stylesheet.state) {\n    stylesheet.state = 1;\n    var props = stylesheet.props;\n    pushLinkImpl(stylesheetFlushingQueue, {\n      rel: \"preload\",\n      as: \"style\",\n      href: stylesheet.props.href,\n      crossOrigin: props.crossOrigin,\n      fetchPriority: props.fetchPriority,\n      integrity: props.integrity,\n      media: props.media,\n      hrefLang: props.hrefLang,\n      referrerPolicy: props.referrerPolicy\n    });\n    for (\n      stylesheet = 0;\n      stylesheet < stylesheetFlushingQueue.length;\n      stylesheet++\n    )\n      writeChunk(this, stylesheetFlushingQueue[stylesheet]);\n    stylesheetFlushingQueue.length = 0;\n  }\n}\nfunction preloadLateStyles(styleQueue) {\n  styleQueue.sheets.forEach(preloadLateStyle, this);\n  styleQueue.sheets.clear();\n}\nstringToPrecomputedChunk('<link rel=\"expect\" href=\"#');\nstringToPrecomputedChunk('\" blocking=\"render\"/>');\nvar completedShellIdAttributeStart = stringToPrecomputedChunk(' id=\"');\nfunction pushCompletedShellIdAttribute(target, resumableState) {\n  0 === (resumableState.instructions & 32) &&\n    ((resumableState.instructions |= 32),\n    target.push(\n      completedShellIdAttributeStart,\n      stringToChunk(escapeTextForBrowser(\"_\" + resumableState.idPrefix + \"R_\")),\n      attributeEnd\n    ));\n}\nvar arrayFirstOpenBracket = stringToPrecomputedChunk(\"[\"),\n  arraySubsequentOpenBracket = stringToPrecomputedChunk(\",[\"),\n  arrayInterstitial = stringToPrecomputedChunk(\",\"),\n  arrayCloseBracket = stringToPrecomputedChunk(\"]\");\nfunction writeStyleResourceDependenciesInJS(destination, hoistableState) {\n  writeChunk(destination, arrayFirstOpenBracket);\n  var nextArrayOpenBrackChunk = arrayFirstOpenBracket;\n  hoistableState.stylesheets.forEach(function (resource) {\n    if (2 !== resource.state)\n      if (3 === resource.state)\n        writeChunk(destination, nextArrayOpenBrackChunk),\n          writeChunk(\n            destination,\n            stringToChunk(\n              escapeJSObjectForInstructionScripts(\"\" + resource.props.href)\n            )\n          ),\n          writeChunk(destination, arrayCloseBracket),\n          (nextArrayOpenBrackChunk = arraySubsequentOpenBracket);\n      else {\n        writeChunk(destination, nextArrayOpenBrackChunk);\n        var precedence = resource.props[\"data-precedence\"],\n          props = resource.props,\n          coercedHref = sanitizeURL(\"\" + resource.props.href);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(coercedHref))\n        );\n        precedence = \"\" + precedence;\n        writeChunk(destination, arrayInterstitial);\n        writeChunk(\n          destination,\n          stringToChunk(escapeJSObjectForInstructionScripts(precedence))\n        );\n        for (var propKey in props)\n          if (\n            hasOwnProperty.call(props, propKey) &&\n            ((precedence = props[propKey]), null != precedence)\n          )\n            switch (propKey) {\n              case \"href\":\n              case \"rel\":\n              case \"precedence\":\n              case \"data-precedence\":\n                break;\n              case \"children\":\n              case \"dangerouslySetInnerHTML\":\n                throw Error(\n                  \"link is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\"\n                );\n              default:\n                writeStyleResourceAttributeInJS(\n                  destination,\n                  propKey,\n                  precedence\n                );\n            }\n        writeChunk(destination, arrayCloseBracket);\n        nextArrayOpenBrackChunk = arraySubsequentOpenBracket;\n        resource.state = 3;\n      }\n  });\n  writeChunk(destination, arrayCloseBracket);\n}\nfunction writeStyleResourceAttributeInJS(destination, name, value) {\n  var attributeName = name.toLowerCase();\n  switch (typeof value) {\n    case \"function\":\n    case \"symbol\":\n      return;\n  }\n  switch (name) {\n    case \"innerHTML\":\n    case \"dangerouslySetInnerHTML\":\n    case \"suppressContentEditableWarning\":\n    case \"suppressHydrationWarning\":\n    case \"style\":\n    case \"ref\":\n      return;\n    case \"className\":\n      attributeName = \"class\";\n      name = \"\" + value;\n      break;\n    case \"hidden\":\n      if (!1 === value) return;\n      name = \"\";\n      break;\n    case \"src\":\n    case \"href\":\n      value = sanitizeURL(value);\n      name = \"\" + value;\n      break;\n    default:\n      if (\n        (2 < name.length &&\n          (\"o\" === name[0] || \"O\" === name[0]) &&\n          (\"n\" === name[1] || \"N\" === name[1])) ||\n        !isAttributeNameSafe(name)\n      )\n        return;\n      name = \"\" + value;\n  }\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(attributeName))\n  );\n  writeChunk(destination, arrayInterstitial);\n  writeChunk(\n    destination,\n    stringToChunk(escapeJSObjectForInstructionScripts(name))\n  );\n}\nfunction createHoistableState() {\n  return { styles: new Set(), stylesheets: new Set() };\n}\nfunction prefetchDNS(href) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      if (!resumableState.dnsResources.hasOwnProperty(href)) {\n        resumableState.dnsResources[href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        )\n          JSCompiler_temp =\n            ((header =\n              \"<\" +\n              (\"\" + href).replace(\n                regexForHrefInLinkHeaderURLContext,\n                escapeHrefForLinkHeaderURLContextReplacer\n              ) +\n              \">; rel=dns-prefetch\"),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        JSCompiler_temp\n          ? ((renderState.resets.dns[href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((header = []),\n            pushLinkImpl(header, { href: href, rel: \"dns-prefetch\" }),\n            renderState.preconnects.add(header));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.D(href);\n}\nfunction preconnect(href, crossOrigin) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (\"string\" === typeof href && href) {\n      var bucket =\n        \"use-credentials\" === crossOrigin\n          ? \"credentials\"\n          : \"string\" === typeof crossOrigin\n            ? \"anonymous\"\n            : \"default\";\n      if (!resumableState.connectResources[bucket].hasOwnProperty(href)) {\n        resumableState.connectResources[bucket][href] = null;\n        resumableState = renderState.headers;\n        var header, JSCompiler_temp;\n        if (\n          (JSCompiler_temp =\n            resumableState && 0 < resumableState.remainingCapacity)\n        ) {\n          JSCompiler_temp =\n            \"<\" +\n            (\"\" + href).replace(\n              regexForHrefInLinkHeaderURLContext,\n              escapeHrefForLinkHeaderURLContextReplacer\n            ) +\n            \">; rel=preconnect\";\n          if (\"string\" === typeof crossOrigin) {\n            var escapedCrossOrigin = (\"\" + crossOrigin).replace(\n              regexForLinkHeaderQuotedParamValueContext,\n              escapeStringForLinkHeaderQuotedParamValueContextReplacer\n            );\n            JSCompiler_temp += '; crossorigin=\"' + escapedCrossOrigin + '\"';\n          }\n          JSCompiler_temp =\n            ((header = JSCompiler_temp),\n            0 <= (resumableState.remainingCapacity -= header.length + 2));\n        }\n        JSCompiler_temp\n          ? ((renderState.resets.connect[bucket][href] = null),\n            resumableState.preconnects && (resumableState.preconnects += \", \"),\n            (resumableState.preconnects += header))\n          : ((bucket = []),\n            pushLinkImpl(bucket, {\n              rel: \"preconnect\",\n              href: href,\n              crossOrigin: crossOrigin\n            }),\n            renderState.preconnects.add(bucket));\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.C(href, crossOrigin);\n}\nfunction preload(href, as, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (as && href) {\n      switch (as) {\n        case \"image\":\n          if (options) {\n            var imageSrcSet = options.imageSrcSet;\n            var imageSizes = options.imageSizes;\n            var fetchPriority = options.fetchPriority;\n          }\n          var key = imageSrcSet\n            ? imageSrcSet + \"\\n\" + (imageSizes || \"\")\n            : href;\n          if (resumableState.imageResources.hasOwnProperty(key)) return;\n          resumableState.imageResources[key] = PRELOAD_NO_CREDS;\n          resumableState = renderState.headers;\n          var header;\n          resumableState &&\n          0 < resumableState.remainingCapacity &&\n          \"string\" !== typeof imageSrcSet &&\n          \"high\" === fetchPriority &&\n          ((header = getPreloadAsHeader(href, as, options)),\n          0 <= (resumableState.remainingCapacity -= header.length + 2))\n            ? ((renderState.resets.image[key] = PRELOAD_NO_CREDS),\n              resumableState.highImagePreloads &&\n                (resumableState.highImagePreloads += \", \"),\n              (resumableState.highImagePreloads += header))\n            : ((resumableState = []),\n              pushLinkImpl(\n                resumableState,\n                assign(\n                  { rel: \"preload\", href: imageSrcSet ? void 0 : href, as: as },\n                  options\n                )\n              ),\n              \"high\" === fetchPriority\n                ? renderState.highImagePreloads.add(resumableState)\n                : (renderState.bulkPreloads.add(resumableState),\n                  renderState.preloads.images.set(key, resumableState)));\n          break;\n        case \"style\":\n          if (resumableState.styleResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.styleResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.stylesheets.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          break;\n        case \"script\":\n          if (resumableState.scriptResources.hasOwnProperty(href)) return;\n          imageSrcSet = [];\n          renderState.preloads.scripts.set(href, imageSrcSet);\n          renderState.bulkPreloads.add(imageSrcSet);\n          pushLinkImpl(\n            imageSrcSet,\n            assign({ rel: \"preload\", href: href, as: as }, options)\n          );\n          resumableState.scriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          break;\n        default:\n          if (resumableState.unknownResources.hasOwnProperty(as)) {\n            if (\n              ((imageSrcSet = resumableState.unknownResources[as]),\n              imageSrcSet.hasOwnProperty(href))\n            )\n              return;\n          } else\n            (imageSrcSet = {}),\n              (resumableState.unknownResources[as] = imageSrcSet);\n          imageSrcSet[href] = PRELOAD_NO_CREDS;\n          if (\n            (resumableState = renderState.headers) &&\n            0 < resumableState.remainingCapacity &&\n            \"font\" === as &&\n            ((key = getPreloadAsHeader(href, as, options)),\n            0 <= (resumableState.remainingCapacity -= key.length + 2))\n          )\n            (renderState.resets.font[href] = PRELOAD_NO_CREDS),\n              resumableState.fontPreloads &&\n                (resumableState.fontPreloads += \", \"),\n              (resumableState.fontPreloads += key);\n          else\n            switch (\n              ((resumableState = []),\n              (href = assign({ rel: \"preload\", href: href, as: as }, options)),\n              pushLinkImpl(resumableState, href),\n              as)\n            ) {\n              case \"font\":\n                renderState.fontPreloads.add(resumableState);\n                break;\n              default:\n                renderState.bulkPreloads.add(resumableState);\n            }\n      }\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.L(href, as, options);\n}\nfunction preloadModule(href, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      var as =\n        options && \"string\" === typeof options.as ? options.as : \"script\";\n      switch (as) {\n        case \"script\":\n          if (resumableState.moduleScriptResources.hasOwnProperty(href)) return;\n          as = [];\n          resumableState.moduleScriptResources[href] =\n            !options ||\n            (\"string\" !== typeof options.crossOrigin &&\n              \"string\" !== typeof options.integrity)\n              ? PRELOAD_NO_CREDS\n              : [options.crossOrigin, options.integrity];\n          renderState.preloads.moduleScripts.set(href, as);\n          break;\n        default:\n          if (resumableState.moduleUnknownResources.hasOwnProperty(as)) {\n            var resources = resumableState.unknownResources[as];\n            if (resources.hasOwnProperty(href)) return;\n          } else\n            (resources = {}),\n              (resumableState.moduleUnknownResources[as] = resources);\n          as = [];\n          resources[href] = PRELOAD_NO_CREDS;\n      }\n      pushLinkImpl(as, assign({ rel: \"modulepreload\", href: href }, options));\n      renderState.bulkPreloads.add(as);\n      enqueueFlush(request);\n    }\n  } else previousDispatcher.m(href, options);\n}\nfunction preinitStyle(href, precedence, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (href) {\n      precedence = precedence || \"default\";\n      var styleQueue = renderState.styles.get(precedence),\n        resourceState = resumableState.styleResources.hasOwnProperty(href)\n          ? resumableState.styleResources[href]\n          : void 0;\n      null !== resourceState &&\n        ((resumableState.styleResources[href] = null),\n        styleQueue ||\n          ((styleQueue = {\n            precedence: stringToChunk(escapeTextForBrowser(precedence)),\n            rules: [],\n            hrefs: [],\n            sheets: new Map()\n          }),\n          renderState.styles.set(precedence, styleQueue)),\n        (precedence = {\n          state: 0,\n          props: assign(\n            { rel: \"stylesheet\", href: href, \"data-precedence\": precedence },\n            options\n          )\n        }),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(precedence.props, resourceState),\n          (renderState = renderState.preloads.stylesheets.get(href)) &&\n          0 < renderState.length\n            ? (renderState.length = 0)\n            : (precedence.state = 1)),\n        styleQueue.sheets.set(href, precedence),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.S(href, precedence, options);\n}\nfunction preinitScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.scriptResources.hasOwnProperty(src)\n        ? resumableState.scriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.scriptResources[src] = null),\n        (options = assign({ src: src, async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.scripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.X(src, options);\n}\nfunction preinitModuleScript(src, options) {\n  var request = resolveRequest();\n  if (request) {\n    var resumableState = request.resumableState,\n      renderState = request.renderState;\n    if (src) {\n      var resourceState = resumableState.moduleScriptResources.hasOwnProperty(\n        src\n      )\n        ? resumableState.moduleScriptResources[src]\n        : void 0;\n      null !== resourceState &&\n        ((resumableState.moduleScriptResources[src] = null),\n        (options = assign({ src: src, type: \"module\", async: !0 }, options)),\n        resourceState &&\n          (2 === resourceState.length &&\n            adoptPreloadCredentials(options, resourceState),\n          (src = renderState.preloads.moduleScripts.get(src))) &&\n          (src.length = 0),\n        (src = []),\n        renderState.scripts.add(src),\n        pushScriptImpl(src, options),\n        enqueueFlush(request));\n    }\n  } else previousDispatcher.M(src, options);\n}\nfunction adoptPreloadCredentials(target, preloadState) {\n  null == target.crossOrigin && (target.crossOrigin = preloadState[0]);\n  null == target.integrity && (target.integrity = preloadState[1]);\n}\nfunction getPreloadAsHeader(href, as, params) {\n  href = (\"\" + href).replace(\n    regexForHrefInLinkHeaderURLContext,\n    escapeHrefForLinkHeaderURLContextReplacer\n  );\n  as = (\"\" + as).replace(\n    regexForLinkHeaderQuotedParamValueContext,\n    escapeStringForLinkHeaderQuotedParamValueContextReplacer\n  );\n  as = \"<\" + href + '>; rel=preload; as=\"' + as + '\"';\n  for (var paramName in params)\n    hasOwnProperty.call(params, paramName) &&\n      ((href = params[paramName]),\n      \"string\" === typeof href &&\n        (as +=\n          \"; \" +\n          paramName.toLowerCase() +\n          '=\"' +\n          (\"\" + href).replace(\n            regexForLinkHeaderQuotedParamValueContext,\n            escapeStringForLinkHeaderQuotedParamValueContextReplacer\n          ) +\n          '\"'));\n  return as;\n}\nvar regexForHrefInLinkHeaderURLContext = /[<>\\r\\n]/g;\nfunction escapeHrefForLinkHeaderURLContextReplacer(match) {\n  switch (match) {\n    case \"<\":\n      return \"%3C\";\n    case \">\":\n      return \"%3E\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeLinkHrefForHeaderContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nvar regexForLinkHeaderQuotedParamValueContext = /[\"';,\\r\\n]/g;\nfunction escapeStringForLinkHeaderQuotedParamValueContextReplacer(match) {\n  switch (match) {\n    case '\"':\n      return \"%22\";\n    case \"'\":\n      return \"%27\";\n    case \";\":\n      return \"%3B\";\n    case \",\":\n      return \"%2C\";\n    case \"\\n\":\n      return \"%0A\";\n    case \"\\r\":\n      return \"%0D\";\n    default:\n      throw Error(\n        \"escapeStringForLinkHeaderQuotedParamValueContextReplacer encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React\"\n      );\n  }\n}\nfunction hoistStyleQueueDependency(styleQueue) {\n  this.styles.add(styleQueue);\n}\nfunction hoistStylesheetDependency(stylesheet) {\n  this.stylesheets.add(stylesheet);\n}\nfunction hoistHoistables(parentState, childState) {\n  childState.styles.forEach(hoistStyleQueueDependency, parentState);\n  childState.stylesheets.forEach(hoistStylesheetDependency, parentState);\n}\nvar bind = Function.prototype.bind,\n  supportsRequestStorage = \"function\" === typeof AsyncLocalStorage,\n  requestStorage = supportsRequestStorage ? new AsyncLocalStorage() : null,\n  REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction getComponentNameFromType(type) {\n  if (null == type) return null;\n  if (\"function\" === typeof type)\n    return type.$$typeof === REACT_CLIENT_REFERENCE\n      ? null\n      : type.displayName || type.name || null;\n  if (\"string\" === typeof type) return type;\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return \"Fragment\";\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n    case REACT_STRICT_MODE_TYPE:\n      return \"StrictMode\";\n    case REACT_SUSPENSE_TYPE:\n      return \"Suspense\";\n    case REACT_SUSPENSE_LIST_TYPE:\n      return \"SuspenseList\";\n    case REACT_ACTIVITY_TYPE:\n      return \"Activity\";\n  }\n  if (\"object\" === typeof type)\n    switch (type.$$typeof) {\n      case REACT_PORTAL_TYPE:\n        return \"Portal\";\n      case REACT_CONTEXT_TYPE:\n        return type.displayName || \"Context\";\n      case REACT_CONSUMER_TYPE:\n        return (type._context.displayName || \"Context\") + \".Consumer\";\n      case REACT_FORWARD_REF_TYPE:\n        var innerType = type.render;\n        type = type.displayName;\n        type ||\n          ((type = innerType.displayName || innerType.name || \"\"),\n          (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n        return type;\n      case REACT_MEMO_TYPE:\n        return (\n          (innerType = type.displayName || null),\n          null !== innerType\n            ? innerType\n            : getComponentNameFromType(type.type) || \"Memo\"\n        );\n      case REACT_LAZY_TYPE:\n        innerType = type._payload;\n        type = type._init;\n        try {\n          return getComponentNameFromType(type(innerType));\n        } catch (x) {}\n    }\n  return null;\n}\nvar emptyContextObject = {},\n  currentActiveSnapshot = null;\nfunction popToNearestCommonAncestor(prev, next) {\n  if (prev !== next) {\n    prev.context._currentValue = prev.parentValue;\n    prev = prev.parent;\n    var parentNext = next.parent;\n    if (null === prev) {\n      if (null !== parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n    } else {\n      if (null === parentNext)\n        throw Error(\n          \"The stacks must reach the root at the same time. This is a bug in React.\"\n        );\n      popToNearestCommonAncestor(prev, parentNext);\n    }\n    next.context._currentValue = next.value;\n  }\n}\nfunction popAllPrevious(prev) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  null !== prev && popAllPrevious(prev);\n}\nfunction pushAllNext(next) {\n  var parentNext = next.parent;\n  null !== parentNext && pushAllNext(parentNext);\n  next.context._currentValue = next.value;\n}\nfunction popPreviousToCommonLevel(prev, next) {\n  prev.context._currentValue = prev.parentValue;\n  prev = prev.parent;\n  if (null === prev)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === next.depth\n    ? popToNearestCommonAncestor(prev, next)\n    : popPreviousToCommonLevel(prev, next);\n}\nfunction popNextToCommonLevel(prev, next) {\n  var parentNext = next.parent;\n  if (null === parentNext)\n    throw Error(\n      \"The depth must equal at least at zero before reaching the root. This is a bug in React.\"\n    );\n  prev.depth === parentNext.depth\n    ? popToNearestCommonAncestor(prev, parentNext)\n    : popNextToCommonLevel(prev, parentNext);\n  next.context._currentValue = next.value;\n}\nfunction switchContext(newSnapshot) {\n  var prev = currentActiveSnapshot;\n  prev !== newSnapshot &&\n    (null === prev\n      ? pushAllNext(newSnapshot)\n      : null === newSnapshot\n        ? popAllPrevious(prev)\n        : prev.depth === newSnapshot.depth\n          ? popToNearestCommonAncestor(prev, newSnapshot)\n          : prev.depth > newSnapshot.depth\n            ? popPreviousToCommonLevel(prev, newSnapshot)\n            : popNextToCommonLevel(prev, newSnapshot),\n    (currentActiveSnapshot = newSnapshot));\n}\nvar classComponentUpdater = {\n    enqueueSetState: function (inst, payload) {\n      inst = inst._reactInternals;\n      null !== inst.queue && inst.queue.push(payload);\n    },\n    enqueueReplaceState: function (inst, payload) {\n      inst = inst._reactInternals;\n      inst.replace = !0;\n      inst.queue = [payload];\n    },\n    enqueueForceUpdate: function () {}\n  },\n  emptyTreeContext = { id: 1, overflow: \"\" };\nfunction pushTreeContext(baseContext, totalChildren, index) {\n  var baseIdWithLeadingBit = baseContext.id;\n  baseContext = baseContext.overflow;\n  var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;\n  baseIdWithLeadingBit &= ~(1 << baseLength);\n  index += 1;\n  var length = 32 - clz32(totalChildren) + baseLength;\n  if (30 < length) {\n    var numberOfOverflowBits = baseLength - (baseLength % 5);\n    length = (\n      baseIdWithLeadingBit &\n      ((1 << numberOfOverflowBits) - 1)\n    ).toString(32);\n    baseIdWithLeadingBit >>= numberOfOverflowBits;\n    baseLength -= numberOfOverflowBits;\n    return {\n      id:\n        (1 << (32 - clz32(totalChildren) + baseLength)) |\n        (index << baseLength) |\n        baseIdWithLeadingBit,\n      overflow: length + baseContext\n    };\n  }\n  return {\n    id: (1 << length) | (index << baseLength) | baseIdWithLeadingBit,\n    overflow: baseContext\n  };\n}\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,\n  log = Math.log,\n  LN2 = Math.LN2;\nfunction clz32Fallback(x) {\n  x >>>= 0;\n  return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;\n}\nfunction noop() {}\nvar SuspenseException = Error(\n  \"Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\\n\\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`.\"\n);\nfunction trackUsedThenable(thenableState, thenable, index) {\n  index = thenableState[index];\n  void 0 === index\n    ? thenableState.push(thenable)\n    : index !== thenable && (thenable.then(noop, noop), (thenable = index));\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      \"string\" === typeof thenable.status\n        ? thenable.then(noop, noop)\n        : ((thenableState = thenable),\n          (thenableState.status = \"pending\"),\n          thenableState.then(\n            function (fulfilledValue) {\n              if (\"pending\" === thenable.status) {\n                var fulfilledThenable = thenable;\n                fulfilledThenable.status = \"fulfilled\";\n                fulfilledThenable.value = fulfilledValue;\n              }\n            },\n            function (error) {\n              if (\"pending\" === thenable.status) {\n                var rejectedThenable = thenable;\n                rejectedThenable.status = \"rejected\";\n                rejectedThenable.reason = error;\n              }\n            }\n          ));\n      switch (thenable.status) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n      suspendedThenable = thenable;\n      throw SuspenseException;\n  }\n}\nvar suspendedThenable = null;\nfunction getSuspendedThenable() {\n  if (null === suspendedThenable)\n    throw Error(\n      \"Expected a suspended thenable. This is a bug in React. Please file an issue.\"\n    );\n  var thenable = suspendedThenable;\n  suspendedThenable = null;\n  return thenable;\n}\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  currentlyRenderingComponent = null,\n  currentlyRenderingTask = null,\n  currentlyRenderingRequest = null,\n  currentlyRenderingKeyPath = null,\n  firstWorkInProgressHook = null,\n  workInProgressHook = null,\n  isReRender = !1,\n  didScheduleRenderPhaseUpdate = !1,\n  localIdCounter = 0,\n  actionStateCounter = 0,\n  actionStateMatchingIndex = -1,\n  thenableIndexCounter = 0,\n  thenableState = null,\n  renderPhaseUpdates = null,\n  numberOfReRenders = 0;\nfunction resolveCurrentlyRenderingComponent() {\n  if (null === currentlyRenderingComponent)\n    throw Error(\n      \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem.\"\n    );\n  return currentlyRenderingComponent;\n}\nfunction createHook() {\n  if (0 < numberOfReRenders)\n    throw Error(\"Rendered more hooks than during the previous render\");\n  return { memoizedState: null, queue: null, next: null };\n}\nfunction createWorkInProgressHook() {\n  null === workInProgressHook\n    ? null === firstWorkInProgressHook\n      ? ((isReRender = !1),\n        (firstWorkInProgressHook = workInProgressHook = createHook()))\n      : ((isReRender = !0), (workInProgressHook = firstWorkInProgressHook))\n    : null === workInProgressHook.next\n      ? ((isReRender = !1),\n        (workInProgressHook = workInProgressHook.next = createHook()))\n      : ((isReRender = !0), (workInProgressHook = workInProgressHook.next));\n  return workInProgressHook;\n}\nfunction getThenableStateAfterSuspending() {\n  var state = thenableState;\n  thenableState = null;\n  return state;\n}\nfunction resetHooksState() {\n  currentlyRenderingKeyPath =\n    currentlyRenderingRequest =\n    currentlyRenderingTask =\n    currentlyRenderingComponent =\n      null;\n  didScheduleRenderPhaseUpdate = !1;\n  firstWorkInProgressHook = null;\n  numberOfReRenders = 0;\n  workInProgressHook = renderPhaseUpdates = null;\n}\nfunction basicStateReducer(state, action) {\n  return \"function\" === typeof action ? action(state) : action;\n}\nfunction useReducer(reducer, initialArg, init) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  if (isReRender) {\n    var queue = workInProgressHook.queue;\n    initialArg = queue.dispatch;\n    if (\n      null !== renderPhaseUpdates &&\n      ((init = renderPhaseUpdates.get(queue)), void 0 !== init)\n    ) {\n      renderPhaseUpdates.delete(queue);\n      queue = workInProgressHook.memoizedState;\n      do (queue = reducer(queue, init.action)), (init = init.next);\n      while (null !== init);\n      workInProgressHook.memoizedState = queue;\n      return [queue, initialArg];\n    }\n    return [workInProgressHook.memoizedState, initialArg];\n  }\n  reducer =\n    reducer === basicStateReducer\n      ? \"function\" === typeof initialArg\n        ? initialArg()\n        : initialArg\n      : void 0 !== init\n        ? init(initialArg)\n        : initialArg;\n  workInProgressHook.memoizedState = reducer;\n  reducer = workInProgressHook.queue = { last: null, dispatch: null };\n  reducer = reducer.dispatch = dispatchAction.bind(\n    null,\n    currentlyRenderingComponent,\n    reducer\n  );\n  return [workInProgressHook.memoizedState, reducer];\n}\nfunction useMemo(nextCreate, deps) {\n  currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n  workInProgressHook = createWorkInProgressHook();\n  deps = void 0 === deps ? null : deps;\n  if (null !== workInProgressHook) {\n    var prevState = workInProgressHook.memoizedState;\n    if (null !== prevState && null !== deps) {\n      var prevDeps = prevState[1];\n      a: if (null === prevDeps) prevDeps = !1;\n      else {\n        for (var i = 0; i < prevDeps.length && i < deps.length; i++)\n          if (!objectIs(deps[i], prevDeps[i])) {\n            prevDeps = !1;\n            break a;\n          }\n        prevDeps = !0;\n      }\n      if (prevDeps) return prevState[0];\n    }\n  }\n  nextCreate = nextCreate();\n  workInProgressHook.memoizedState = [nextCreate, deps];\n  return nextCreate;\n}\nfunction dispatchAction(componentIdentity, queue, action) {\n  if (25 <= numberOfReRenders)\n    throw Error(\n      \"Too many re-renders. React limits the number of renders to prevent an infinite loop.\"\n    );\n  if (componentIdentity === currentlyRenderingComponent)\n    if (\n      ((didScheduleRenderPhaseUpdate = !0),\n      (componentIdentity = { action: action, next: null }),\n      null === renderPhaseUpdates && (renderPhaseUpdates = new Map()),\n      (action = renderPhaseUpdates.get(queue)),\n      void 0 === action)\n    )\n      renderPhaseUpdates.set(queue, componentIdentity);\n    else {\n      for (queue = action; null !== queue.next; ) queue = queue.next;\n      queue.next = componentIdentity;\n    }\n}\nfunction unsupportedStartTransition() {\n  throw Error(\"startTransition cannot be called during server rendering.\");\n}\nfunction unsupportedSetOptimisticState() {\n  throw Error(\"Cannot update optimistic state while rendering.\");\n}\nfunction useActionState(action, initialState, permalink) {\n  resolveCurrentlyRenderingComponent();\n  var actionStateHookIndex = actionStateCounter++,\n    request = currentlyRenderingRequest;\n  if (\"function\" === typeof action.$$FORM_ACTION) {\n    var nextPostbackStateKey = null,\n      componentKeyPath = currentlyRenderingKeyPath;\n    request = request.formState;\n    var isSignatureEqual = action.$$IS_SIGNATURE_EQUAL;\n    if (null !== request && \"function\" === typeof isSignatureEqual) {\n      var postbackKey = request[1];\n      isSignatureEqual.call(action, request[2], request[3]) &&\n        ((nextPostbackStateKey =\n          void 0 !== permalink\n            ? \"p\" + permalink\n            : \"k\" +\n              murmurhash3_32_gc(\n                JSON.stringify([componentKeyPath, null, actionStateHookIndex]),\n                0\n              )),\n        postbackKey === nextPostbackStateKey &&\n          ((actionStateMatchingIndex = actionStateHookIndex),\n          (initialState = request[0])));\n    }\n    var boundAction = action.bind(null, initialState);\n    action = function (payload) {\n      boundAction(payload);\n    };\n    \"function\" === typeof boundAction.$$FORM_ACTION &&\n      (action.$$FORM_ACTION = function (prefix) {\n        prefix = boundAction.$$FORM_ACTION(prefix);\n        void 0 !== permalink &&\n          ((permalink += \"\"), (prefix.action = permalink));\n        var formData = prefix.data;\n        formData &&\n          (null === nextPostbackStateKey &&\n            (nextPostbackStateKey =\n              void 0 !== permalink\n                ? \"p\" + permalink\n                : \"k\" +\n                  murmurhash3_32_gc(\n                    JSON.stringify([\n                      componentKeyPath,\n                      null,\n                      actionStateHookIndex\n                    ]),\n                    0\n                  )),\n          formData.append(\"$ACTION_KEY\", nextPostbackStateKey));\n        return prefix;\n      });\n    return [initialState, action, !1];\n  }\n  var boundAction$22 = action.bind(null, initialState);\n  return [\n    initialState,\n    function (payload) {\n      boundAction$22(payload);\n    },\n    !1\n  ];\n}\nfunction unwrapThenable(thenable) {\n  var index = thenableIndexCounter;\n  thenableIndexCounter += 1;\n  null === thenableState && (thenableState = []);\n  return trackUsedThenable(thenableState, thenable, index);\n}\nfunction unsupportedRefresh() {\n  throw Error(\"Cache cannot be refreshed during server rendering.\");\n}\nvar HooksDispatcher = {\n    readContext: function (context) {\n      return context._currentValue;\n    },\n    use: function (usable) {\n      if (null !== usable && \"object\" === typeof usable) {\n        if (\"function\" === typeof usable.then) return unwrapThenable(usable);\n        if (usable.$$typeof === REACT_CONTEXT_TYPE) return usable._currentValue;\n      }\n      throw Error(\"An unsupported type was passed to use(): \" + String(usable));\n    },\n    useContext: function (context) {\n      resolveCurrentlyRenderingComponent();\n      return context._currentValue;\n    },\n    useMemo: useMemo,\n    useReducer: useReducer,\n    useRef: function (initialValue) {\n      currentlyRenderingComponent = resolveCurrentlyRenderingComponent();\n      workInProgressHook = createWorkInProgressHook();\n      var previousRef = workInProgressHook.memoizedState;\n      return null === previousRef\n        ? ((initialValue = { current: initialValue }),\n          (workInProgressHook.memoizedState = initialValue))\n        : previousRef;\n    },\n    useState: function (initialState) {\n      return useReducer(basicStateReducer, initialState);\n    },\n    useInsertionEffect: noop,\n    useLayoutEffect: noop,\n    useCallback: function (callback, deps) {\n      return useMemo(function () {\n        return callback;\n      }, deps);\n    },\n    useImperativeHandle: noop,\n    useEffect: noop,\n    useDebugValue: noop,\n    useDeferredValue: function (value, initialValue) {\n      resolveCurrentlyRenderingComponent();\n      return void 0 !== initialValue ? initialValue : value;\n    },\n    useTransition: function () {\n      resolveCurrentlyRenderingComponent();\n      return [!1, unsupportedStartTransition];\n    },\n    useId: function () {\n      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;\n      var overflow = JSCompiler_inline_result.overflow;\n      JSCompiler_inline_result = JSCompiler_inline_result.id;\n      JSCompiler_inline_result =\n        (\n          JSCompiler_inline_result &\n          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))\n        ).toString(32) + overflow;\n      var resumableState = currentResumableState;\n      if (null === resumableState)\n        throw Error(\n          \"Invalid hook call. Hooks can only be called inside of the body of a function component.\"\n        );\n      overflow = localIdCounter++;\n      JSCompiler_inline_result =\n        \"_\" + resumableState.idPrefix + \"R_\" + JSCompiler_inline_result;\n      0 < overflow && (JSCompiler_inline_result += \"H\" + overflow.toString(32));\n      return JSCompiler_inline_result + \"_\";\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      if (void 0 === getServerSnapshot)\n        throw Error(\n          \"Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.\"\n        );\n      return getServerSnapshot();\n    },\n    useOptimistic: function (passthrough) {\n      resolveCurrentlyRenderingComponent();\n      return [passthrough, unsupportedSetOptimisticState];\n    },\n    useActionState: useActionState,\n    useFormState: useActionState,\n    useHostTransitionStatus: function () {\n      resolveCurrentlyRenderingComponent();\n      return sharedNotPendingObject;\n    },\n    useMemoCache: function (size) {\n      for (var data = Array(size), i = 0; i < size; i++)\n        data[i] = REACT_MEMO_CACHE_SENTINEL;\n      return data;\n    },\n    useCacheRefresh: function () {\n      return unsupportedRefresh;\n    }\n  },\n  currentResumableState = null,\n  DefaultAsyncDispatcher = {\n    getCacheForType: function () {\n      throw Error(\"Not implemented.\");\n    },\n    cacheSignal: function () {\n      throw Error(\"Not implemented.\");\n    }\n  };\nfunction prepareStackTrace(error, structuredStackTrace) {\n  error = (error.name || \"Error\") + \": \" + (error.message || \"\");\n  for (var i = 0; i < structuredStackTrace.length; i++)\n    error += \"\\n    at \" + structuredStackTrace[i].toString();\n  return error;\n}\nvar prefix, suffix;\nfunction describeBuiltInComponentFrame(name) {\n  if (void 0 === prefix)\n    try {\n      throw Error();\n    } catch (x) {\n      var match = x.stack.trim().match(/\\n( *(at )?)/);\n      prefix = (match && match[1]) || \"\";\n      suffix =\n        -1 < x.stack.indexOf(\"\\n    at\")\n          ? \" (<anonymous>)\"\n          : -1 < x.stack.indexOf(\"@\")\n            ? \"@unknown:0:0\"\n            : \"\";\n    }\n  return \"\\n\" + prefix + name + suffix;\n}\nvar reentry = !1;\nfunction describeNativeComponentFrame(fn, construct) {\n  if (!fn || reentry) return \"\";\n  reentry = !0;\n  var previousPrepareStackTrace = Error.prepareStackTrace;\n  Error.prepareStackTrace = prepareStackTrace;\n  try {\n    var RunInRootFrame = {\n      DetermineComponentFrameRoot: function () {\n        try {\n          if (construct) {\n            var Fake = function () {\n              throw Error();\n            };\n            Object.defineProperty(Fake.prototype, \"props\", {\n              set: function () {\n                throw Error();\n              }\n            });\n            if (\"object\" === typeof Reflect && Reflect.construct) {\n              try {\n                Reflect.construct(Fake, []);\n              } catch (x) {\n                var control = x;\n              }\n              Reflect.construct(fn, [], Fake);\n            } else {\n              try {\n                Fake.call();\n              } catch (x$24) {\n                control = x$24;\n              }\n              fn.call(Fake.prototype);\n            }\n          } else {\n            try {\n              throw Error();\n            } catch (x$25) {\n              control = x$25;\n            }\n            (Fake = fn()) &&\n              \"function\" === typeof Fake.catch &&\n              Fake.catch(function () {});\n          }\n        } catch (sample) {\n          if (sample && control && \"string\" === typeof sample.stack)\n            return [sample.stack, control.stack];\n        }\n        return [null, null];\n      }\n    };\n    RunInRootFrame.DetermineComponentFrameRoot.displayName =\n      \"DetermineComponentFrameRoot\";\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(\n      RunInRootFrame.DetermineComponentFrameRoot,\n      \"name\"\n    );\n    namePropDescriptor &&\n      namePropDescriptor.configurable &&\n      Object.defineProperty(\n        RunInRootFrame.DetermineComponentFrameRoot,\n        \"name\",\n        { value: \"DetermineComponentFrameRoot\" }\n      );\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n      sampleStack = _RunInRootFrame$Deter[0],\n      controlStack = _RunInRootFrame$Deter[1];\n    if (sampleStack && controlStack) {\n      var sampleLines = sampleStack.split(\"\\n\"),\n        controlLines = controlStack.split(\"\\n\");\n      for (\n        namePropDescriptor = RunInRootFrame = 0;\n        RunInRootFrame < sampleLines.length &&\n        !sampleLines[RunInRootFrame].includes(\"DetermineComponentFrameRoot\");\n\n      )\n        RunInRootFrame++;\n      for (\n        ;\n        namePropDescriptor < controlLines.length &&\n        !controlLines[namePropDescriptor].includes(\n          \"DetermineComponentFrameRoot\"\n        );\n\n      )\n        namePropDescriptor++;\n      if (\n        RunInRootFrame === sampleLines.length ||\n        namePropDescriptor === controlLines.length\n      )\n        for (\n          RunInRootFrame = sampleLines.length - 1,\n            namePropDescriptor = controlLines.length - 1;\n          1 <= RunInRootFrame &&\n          0 <= namePropDescriptor &&\n          sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor];\n\n        )\n          namePropDescriptor--;\n      for (\n        ;\n        1 <= RunInRootFrame && 0 <= namePropDescriptor;\n        RunInRootFrame--, namePropDescriptor--\n      )\n        if (sampleLines[RunInRootFrame] !== controlLines[namePropDescriptor]) {\n          if (1 !== RunInRootFrame || 1 !== namePropDescriptor) {\n            do\n              if (\n                (RunInRootFrame--,\n                namePropDescriptor--,\n                0 > namePropDescriptor ||\n                  sampleLines[RunInRootFrame] !==\n                    controlLines[namePropDescriptor])\n              ) {\n                var frame =\n                  \"\\n\" +\n                  sampleLines[RunInRootFrame].replace(\" at new \", \" at \");\n                fn.displayName &&\n                  frame.includes(\"<anonymous>\") &&\n                  (frame = frame.replace(\"<anonymous>\", fn.displayName));\n                return frame;\n              }\n            while (1 <= RunInRootFrame && 0 <= namePropDescriptor);\n          }\n          break;\n        }\n    }\n  } finally {\n    (reentry = !1), (Error.prepareStackTrace = previousPrepareStackTrace);\n  }\n  return (previousPrepareStackTrace = fn ? fn.displayName || fn.name : \"\")\n    ? describeBuiltInComponentFrame(previousPrepareStackTrace)\n    : \"\";\n}\nfunction describeComponentStackByType(type) {\n  if (\"string\" === typeof type) return describeBuiltInComponentFrame(type);\n  if (\"function\" === typeof type)\n    return type.prototype && type.prototype.isReactComponent\n      ? describeNativeComponentFrame(type, !0)\n      : describeNativeComponentFrame(type, !1);\n  if (\"object\" === typeof type && null !== type) {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeNativeComponentFrame(type.render, !1);\n      case REACT_MEMO_TYPE:\n        return describeNativeComponentFrame(type.type, !1);\n      case REACT_LAZY_TYPE:\n        var lazyComponent = type,\n          payload = lazyComponent._payload;\n        lazyComponent = lazyComponent._init;\n        try {\n          type = lazyComponent(payload);\n        } catch (x) {\n          return describeBuiltInComponentFrame(\"Lazy\");\n        }\n        return describeComponentStackByType(type);\n    }\n    if (\"string\" === typeof type.name) {\n      a: {\n        payload = type.name;\n        lazyComponent = type.env;\n        var location = type.debugLocation;\n        if (\n          null != location &&\n          ((type = Error.prepareStackTrace),\n          (Error.prepareStackTrace = prepareStackTrace),\n          (location = location.stack),\n          (Error.prepareStackTrace = type),\n          location.startsWith(\"Error: react-stack-top-frame\\n\") &&\n            (location = location.slice(29)),\n          (type = location.indexOf(\"\\n\")),\n          -1 !== type && (location = location.slice(type + 1)),\n          (type = location.indexOf(\"react_stack_bottom_frame\")),\n          -1 !== type && (type = location.lastIndexOf(\"\\n\", type)),\n          (type = -1 !== type ? (location = location.slice(0, type)) : \"\"),\n          (location = type.lastIndexOf(\"\\n\")),\n          (type = -1 === location ? type : type.slice(location + 1)),\n          -1 !== type.indexOf(payload))\n        ) {\n          payload = \"\\n\" + type;\n          break a;\n        }\n        payload = describeBuiltInComponentFrame(\n          payload + (lazyComponent ? \" [\" + lazyComponent + \"]\" : \"\")\n        );\n      }\n      return payload;\n    }\n  }\n  switch (type) {\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame(\"SuspenseList\");\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame(\"Suspense\");\n  }\n  return \"\";\n}\nfunction isEligibleForOutlining(request, boundary) {\n  return 500 < boundary.byteSize && null === boundary.contentPreamble;\n}\nfunction defaultErrorHandler(error) {\n  if (\n    \"object\" === typeof error &&\n    null !== error &&\n    \"string\" === typeof error.environmentName\n  ) {\n    var JSCompiler_inline_result = error.environmentName;\n    error = [error].slice(0);\n    \"string\" === typeof error[0]\n      ? error.splice(\n          0,\n          1,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c \" + error[0],\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        )\n      : error.splice(\n          0,\n          0,\n          \"\\u001b[0m\\u001b[7m%c%s\\u001b[0m%c\",\n          \"background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px\",\n          \" \" + JSCompiler_inline_result + \" \",\n          \"\"\n        );\n    error.unshift(console);\n    JSCompiler_inline_result = bind.apply(console.error, error);\n    JSCompiler_inline_result();\n  } else console.error(error);\n  return null;\n}\nfunction RequestInstance(\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  var abortSet = new Set();\n  this.destination = null;\n  this.flushScheduled = !1;\n  this.resumableState = resumableState;\n  this.renderState = renderState;\n  this.rootFormatContext = rootFormatContext;\n  this.progressiveChunkSize =\n    void 0 === progressiveChunkSize ? 12800 : progressiveChunkSize;\n  this.status = 10;\n  this.fatalError = null;\n  this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;\n  this.completedPreambleSegments = this.completedRootSegment = null;\n  this.byteSize = 0;\n  this.abortableTasks = abortSet;\n  this.pingedTasks = [];\n  this.clientRenderedBoundaries = [];\n  this.completedBoundaries = [];\n  this.partialBoundaries = [];\n  this.trackedPostpones = null;\n  this.onError = void 0 === onError ? defaultErrorHandler : onError;\n  this.onPostpone = void 0 === onPostpone ? noop : onPostpone;\n  this.onAllReady = void 0 === onAllReady ? noop : onAllReady;\n  this.onShellReady = void 0 === onShellReady ? noop : onShellReady;\n  this.onShellError = void 0 === onShellError ? noop : onShellError;\n  this.onFatalError = void 0 === onFatalError ? noop : onFatalError;\n  this.formState = void 0 === formState ? null : formState;\n}\nfunction createRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone,\n  formState\n) {\n  resumableState = new RequestInstance(\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    formState\n  );\n  renderState = createPendingSegment(\n    resumableState,\n    0,\n    null,\n    rootFormatContext,\n    !1,\n    !1\n  );\n  renderState.parentFlushed = !0;\n  children = createRenderTask(\n    resumableState,\n    null,\n    children,\n    -1,\n    null,\n    renderState,\n    null,\n    null,\n    resumableState.abortableTasks,\n    null,\n    rootFormatContext,\n    null,\n    emptyTreeContext,\n    null,\n    null\n  );\n  pushComponentStack(children);\n  resumableState.pingedTasks.push(children);\n  return resumableState;\n}\nfunction createPrerenderRequest(\n  children,\n  resumableState,\n  renderState,\n  rootFormatContext,\n  progressiveChunkSize,\n  onError,\n  onAllReady,\n  onShellReady,\n  onShellError,\n  onFatalError,\n  onPostpone\n) {\n  children = createRequest(\n    children,\n    resumableState,\n    renderState,\n    rootFormatContext,\n    progressiveChunkSize,\n    onError,\n    onAllReady,\n    onShellReady,\n    onShellError,\n    onFatalError,\n    onPostpone,\n    void 0\n  );\n  children.trackedPostpones = {\n    workingMap: new Map(),\n    rootNodes: [],\n    rootSlots: null\n  };\n  return children;\n}\nvar currentRequest = null;\nfunction resolveRequest() {\n  if (currentRequest) return currentRequest;\n  if (supportsRequestStorage) {\n    var store = requestStorage.getStore();\n    if (store) return store;\n  }\n  return null;\n}\nfunction pingTask(request, task) {\n  request.pingedTasks.push(task);\n  1 === request.pingedTasks.length &&\n    ((request.flushScheduled = null !== request.destination),\n    null !== request.trackedPostpones || 10 === request.status\n      ? scheduleMicrotask(function () {\n          return performWork(request);\n        })\n      : setTimeout(function () {\n          return performWork(request);\n        }, 0));\n}\nfunction createSuspenseBoundary(\n  request,\n  row,\n  fallbackAbortableTasks,\n  contentPreamble,\n  fallbackPreamble\n) {\n  fallbackAbortableTasks = {\n    status: 0,\n    rootSegmentID: -1,\n    parentFlushed: !1,\n    pendingTasks: 0,\n    row: row,\n    completedSegments: [],\n    byteSize: 0,\n    fallbackAbortableTasks: fallbackAbortableTasks,\n    errorDigest: null,\n    contentState: createHoistableState(),\n    fallbackState: createHoistableState(),\n    contentPreamble: contentPreamble,\n    fallbackPreamble: fallbackPreamble,\n    trackedContentKeyPath: null,\n    trackedFallbackNode: null\n  };\n  null !== row &&\n    (row.pendingTasks++,\n    (contentPreamble = row.boundaries),\n    null !== contentPreamble &&\n      (request.allPendingTasks++,\n      fallbackAbortableTasks.pendingTasks++,\n      contentPreamble.push(fallbackAbortableTasks)),\n    (request = row.inheritedHoistables),\n    null !== request &&\n      hoistHoistables(fallbackAbortableTasks.contentState, request));\n  return fallbackAbortableTasks;\n}\nfunction createRenderTask(\n  request,\n  thenableState,\n  node,\n  childIndex,\n  blockedBoundary,\n  blockedSegment,\n  blockedPreamble,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  row,\n  componentStack\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  null !== row && row.pendingTasks++;\n  var task = {\n    replay: null,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: blockedSegment,\n    blockedPreamble: blockedPreamble,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    row: row,\n    componentStack: componentStack,\n    thenableState: thenableState\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createReplayTask(\n  request,\n  thenableState,\n  replay,\n  node,\n  childIndex,\n  blockedBoundary,\n  hoistableState,\n  abortSet,\n  keyPath,\n  formatContext,\n  context,\n  treeContext,\n  row,\n  componentStack\n) {\n  request.allPendingTasks++;\n  null === blockedBoundary\n    ? request.pendingRootTasks++\n    : blockedBoundary.pendingTasks++;\n  null !== row && row.pendingTasks++;\n  replay.pendingTasks++;\n  var task = {\n    replay: replay,\n    node: node,\n    childIndex: childIndex,\n    ping: function () {\n      return pingTask(request, task);\n    },\n    blockedBoundary: blockedBoundary,\n    blockedSegment: null,\n    blockedPreamble: null,\n    hoistableState: hoistableState,\n    abortSet: abortSet,\n    keyPath: keyPath,\n    formatContext: formatContext,\n    context: context,\n    treeContext: treeContext,\n    row: row,\n    componentStack: componentStack,\n    thenableState: thenableState\n  };\n  abortSet.add(task);\n  return task;\n}\nfunction createPendingSegment(\n  request,\n  index,\n  boundary,\n  parentFormatContext,\n  lastPushedText,\n  textEmbedded\n) {\n  return {\n    status: 0,\n    parentFlushed: !1,\n    id: -1,\n    index: index,\n    chunks: [],\n    children: [],\n    preambleChildren: [],\n    parentFormatContext: parentFormatContext,\n    boundary: boundary,\n    lastPushedText: lastPushedText,\n    textEmbedded: textEmbedded\n  };\n}\nfunction pushComponentStack(task) {\n  var node = task.node;\n  if (\"object\" === typeof node && null !== node)\n    switch (node.$$typeof) {\n      case REACT_ELEMENT_TYPE:\n        task.componentStack = { parent: task.componentStack, type: node.type };\n    }\n}\nfunction replaceSuspenseComponentStackWithSuspenseFallbackStack(\n  componentStack\n) {\n  return null === componentStack\n    ? null\n    : { parent: componentStack.parent, type: \"Suspense Fallback\" };\n}\nfunction getThrownInfo(node$jscomp$0) {\n  var errorInfo = {};\n  node$jscomp$0 &&\n    Object.defineProperty(errorInfo, \"componentStack\", {\n      configurable: !0,\n      enumerable: !0,\n      get: function () {\n        try {\n          var info = \"\",\n            node = node$jscomp$0;\n          do\n            (info += describeComponentStackByType(node.type)),\n              (node = node.parent);\n          while (node);\n          var JSCompiler_inline_result = info;\n        } catch (x) {\n          JSCompiler_inline_result =\n            \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n        }\n        Object.defineProperty(errorInfo, \"componentStack\", {\n          value: JSCompiler_inline_result\n        });\n        return JSCompiler_inline_result;\n      }\n    });\n  return errorInfo;\n}\nfunction logRecoverableError(request, error, errorInfo) {\n  request = request.onError;\n  error = request(error, errorInfo);\n  if (null == error || \"string\" === typeof error) return error;\n}\nfunction fatalError(request, error) {\n  var onShellError = request.onShellError,\n    onFatalError = request.onFatalError;\n  onShellError(error);\n  onFatalError(error);\n  null !== request.destination\n    ? ((request.status = 14), closeWithError(request.destination, error))\n    : ((request.status = 13), (request.fatalError = error));\n}\nfunction finishSuspenseListRow(request, row) {\n  unblockSuspenseListRow(request, row.next, row.hoistables);\n}\nfunction unblockSuspenseListRow(request, unblockedRow, inheritedHoistables) {\n  for (; null !== unblockedRow; ) {\n    null !== inheritedHoistables &&\n      (hoistHoistables(unblockedRow.hoistables, inheritedHoistables),\n      (unblockedRow.inheritedHoistables = inheritedHoistables));\n    var unblockedBoundaries = unblockedRow.boundaries;\n    if (null !== unblockedBoundaries) {\n      unblockedRow.boundaries = null;\n      for (var i = 0; i < unblockedBoundaries.length; i++) {\n        var unblockedBoundary = unblockedBoundaries[i];\n        null !== inheritedHoistables &&\n          hoistHoistables(unblockedBoundary.contentState, inheritedHoistables);\n        finishedTask(request, unblockedBoundary, null, null);\n      }\n    }\n    unblockedRow.pendingTasks--;\n    if (0 < unblockedRow.pendingTasks) break;\n    inheritedHoistables = unblockedRow.hoistables;\n    unblockedRow = unblockedRow.next;\n  }\n}\nfunction tryToResolveTogetherRow(request, togetherRow) {\n  var boundaries = togetherRow.boundaries;\n  if (null !== boundaries && togetherRow.pendingTasks === boundaries.length) {\n    for (var allCompleteAndInlinable = !0, i = 0; i < boundaries.length; i++) {\n      var rowBoundary = boundaries[i];\n      if (\n        1 !== rowBoundary.pendingTasks ||\n        rowBoundary.parentFlushed ||\n        isEligibleForOutlining(request, rowBoundary)\n      ) {\n        allCompleteAndInlinable = !1;\n        break;\n      }\n    }\n    allCompleteAndInlinable &&\n      unblockSuspenseListRow(request, togetherRow, togetherRow.hoistables);\n  }\n}\nfunction createSuspenseListRow(previousRow) {\n  var newRow = {\n    pendingTasks: 1,\n    boundaries: null,\n    hoistables: createHoistableState(),\n    inheritedHoistables: null,\n    together: !1,\n    next: null\n  };\n  null !== previousRow &&\n    0 < previousRow.pendingTasks &&\n    (newRow.pendingTasks++,\n    (newRow.boundaries = []),\n    (previousRow.next = newRow));\n  return newRow;\n}\nfunction renderSuspenseListRows(request, task, keyPath, rows, revealOrder) {\n  var prevKeyPath = task.keyPath,\n    prevTreeContext = task.treeContext,\n    prevRow = task.row;\n  task.keyPath = keyPath;\n  keyPath = rows.length;\n  var previousSuspenseListRow = null;\n  if (null !== task.replay) {\n    var resumeSlots = task.replay.slots;\n    if (null !== resumeSlots && \"object\" === typeof resumeSlots)\n      for (var n = 0; n < keyPath; n++) {\n        var i =\n            \"backwards\" !== revealOrder &&\n            \"unstable_legacy-backwards\" !== revealOrder\n              ? n\n              : keyPath - 1 - n,\n          node = rows[i];\n        task.row = previousSuspenseListRow = createSuspenseListRow(\n          previousSuspenseListRow\n        );\n        task.treeContext = pushTreeContext(prevTreeContext, keyPath, i);\n        var resumeSegmentID = resumeSlots[i];\n        \"number\" === typeof resumeSegmentID\n          ? (resumeNode(request, task, resumeSegmentID, node, i),\n            delete resumeSlots[i])\n          : renderNode(request, task, node, i);\n        0 === --previousSuspenseListRow.pendingTasks &&\n          finishSuspenseListRow(request, previousSuspenseListRow);\n      }\n    else\n      for (resumeSlots = 0; resumeSlots < keyPath; resumeSlots++)\n        (n =\n          \"backwards\" !== revealOrder &&\n          \"unstable_legacy-backwards\" !== revealOrder\n            ? resumeSlots\n            : keyPath - 1 - resumeSlots),\n          (i = rows[n]),\n          (task.row = previousSuspenseListRow =\n            createSuspenseListRow(previousSuspenseListRow)),\n          (task.treeContext = pushTreeContext(prevTreeContext, keyPath, n)),\n          renderNode(request, task, i, n),\n          0 === --previousSuspenseListRow.pendingTasks &&\n            finishSuspenseListRow(request, previousSuspenseListRow);\n  } else if (\n    \"backwards\" !== revealOrder &&\n    \"unstable_legacy-backwards\" !== revealOrder\n  )\n    for (revealOrder = 0; revealOrder < keyPath; revealOrder++)\n      (resumeSlots = rows[revealOrder]),\n        (task.row = previousSuspenseListRow =\n          createSuspenseListRow(previousSuspenseListRow)),\n        (task.treeContext = pushTreeContext(\n          prevTreeContext,\n          keyPath,\n          revealOrder\n        )),\n        renderNode(request, task, resumeSlots, revealOrder),\n        0 === --previousSuspenseListRow.pendingTasks &&\n          finishSuspenseListRow(request, previousSuspenseListRow);\n  else {\n    revealOrder = task.blockedSegment;\n    resumeSlots = revealOrder.children.length;\n    n = revealOrder.chunks.length;\n    for (i = keyPath - 1; 0 <= i; i--) {\n      node = rows[i];\n      task.row = previousSuspenseListRow = createSuspenseListRow(\n        previousSuspenseListRow\n      );\n      task.treeContext = pushTreeContext(prevTreeContext, keyPath, i);\n      resumeSegmentID = createPendingSegment(\n        request,\n        n,\n        null,\n        task.formatContext,\n        0 === i ? revealOrder.lastPushedText : !0,\n        !0\n      );\n      revealOrder.children.splice(resumeSlots, 0, resumeSegmentID);\n      task.blockedSegment = resumeSegmentID;\n      try {\n        renderNode(request, task, node, i),\n          resumeSegmentID.lastPushedText &&\n            resumeSegmentID.textEmbedded &&\n            resumeSegmentID.chunks.push(textSeparator),\n          (resumeSegmentID.status = 1),\n          finishedSegment(request, task.blockedBoundary, resumeSegmentID),\n          0 === --previousSuspenseListRow.pendingTasks &&\n            finishSuspenseListRow(request, previousSuspenseListRow);\n      } catch (thrownValue) {\n        throw (\n          ((resumeSegmentID.status = 12 === request.status ? 3 : 4),\n          thrownValue)\n        );\n      }\n    }\n    task.blockedSegment = revealOrder;\n    revealOrder.lastPushedText = !1;\n  }\n  null !== prevRow &&\n    null !== previousSuspenseListRow &&\n    0 < previousSuspenseListRow.pendingTasks &&\n    (prevRow.pendingTasks++, (previousSuspenseListRow.next = prevRow));\n  task.treeContext = prevTreeContext;\n  task.row = prevRow;\n  task.keyPath = prevKeyPath;\n}\nfunction renderWithHooks(request, task, keyPath, Component, props, secondArg) {\n  var prevThenableState = task.thenableState;\n  task.thenableState = null;\n  currentlyRenderingComponent = {};\n  currentlyRenderingTask = task;\n  currentlyRenderingRequest = request;\n  currentlyRenderingKeyPath = keyPath;\n  actionStateCounter = localIdCounter = 0;\n  actionStateMatchingIndex = -1;\n  thenableIndexCounter = 0;\n  thenableState = prevThenableState;\n  for (request = Component(props, secondArg); didScheduleRenderPhaseUpdate; )\n    (didScheduleRenderPhaseUpdate = !1),\n      (actionStateCounter = localIdCounter = 0),\n      (actionStateMatchingIndex = -1),\n      (thenableIndexCounter = 0),\n      (numberOfReRenders += 1),\n      (workInProgressHook = null),\n      (request = Component(props, secondArg));\n  resetHooksState();\n  return request;\n}\nfunction finishFunctionComponent(\n  request,\n  task,\n  keyPath,\n  children,\n  hasId,\n  actionStateCount,\n  actionStateMatchingIndex\n) {\n  var didEmitActionStateMarkers = !1;\n  if (0 !== actionStateCount && null !== request.formState) {\n    var segment = task.blockedSegment;\n    if (null !== segment) {\n      didEmitActionStateMarkers = !0;\n      segment = segment.chunks;\n      for (var i = 0; i < actionStateCount; i++)\n        i === actionStateMatchingIndex\n          ? segment.push(formStateMarkerIsMatching)\n          : segment.push(formStateMarkerIsNotMatching);\n    }\n  }\n  actionStateCount = task.keyPath;\n  task.keyPath = keyPath;\n  hasId\n    ? ((keyPath = task.treeContext),\n      (task.treeContext = pushTreeContext(keyPath, 1, 0)),\n      renderNode(request, task, children, -1),\n      (task.treeContext = keyPath))\n    : didEmitActionStateMarkers\n      ? renderNode(request, task, children, -1)\n      : renderNodeDestructive(request, task, children, -1);\n  task.keyPath = actionStateCount;\n}\nfunction renderElement(request, task, keyPath, type, props, ref) {\n  if (\"function\" === typeof type)\n    if (type.prototype && type.prototype.isReactComponent) {\n      var newProps = props;\n      if (\"ref\" in props) {\n        newProps = {};\n        for (var propName in props)\n          \"ref\" !== propName && (newProps[propName] = props[propName]);\n      }\n      var defaultProps = type.defaultProps;\n      if (defaultProps) {\n        newProps === props && (newProps = assign({}, newProps, props));\n        for (var propName$43 in defaultProps)\n          void 0 === newProps[propName$43] &&\n            (newProps[propName$43] = defaultProps[propName$43]);\n      }\n      props = newProps;\n      newProps = emptyContextObject;\n      defaultProps = type.contextType;\n      \"object\" === typeof defaultProps &&\n        null !== defaultProps &&\n        (newProps = defaultProps._currentValue);\n      newProps = new type(props, newProps);\n      var initialState = void 0 !== newProps.state ? newProps.state : null;\n      newProps.updater = classComponentUpdater;\n      newProps.props = props;\n      newProps.state = initialState;\n      defaultProps = { queue: [], replace: !1 };\n      newProps._reactInternals = defaultProps;\n      ref = type.contextType;\n      newProps.context =\n        \"object\" === typeof ref && null !== ref\n          ? ref._currentValue\n          : emptyContextObject;\n      ref = type.getDerivedStateFromProps;\n      \"function\" === typeof ref &&\n        ((ref = ref(props, initialState)),\n        (initialState =\n          null === ref || void 0 === ref\n            ? initialState\n            : assign({}, initialState, ref)),\n        (newProps.state = initialState));\n      if (\n        \"function\" !== typeof type.getDerivedStateFromProps &&\n        \"function\" !== typeof newProps.getSnapshotBeforeUpdate &&\n        (\"function\" === typeof newProps.UNSAFE_componentWillMount ||\n          \"function\" === typeof newProps.componentWillMount)\n      )\n        if (\n          ((type = newProps.state),\n          \"function\" === typeof newProps.componentWillMount &&\n            newProps.componentWillMount(),\n          \"function\" === typeof newProps.UNSAFE_componentWillMount &&\n            newProps.UNSAFE_componentWillMount(),\n          type !== newProps.state &&\n            classComponentUpdater.enqueueReplaceState(\n              newProps,\n              newProps.state,\n              null\n            ),\n          null !== defaultProps.queue && 0 < defaultProps.queue.length)\n        )\n          if (\n            ((type = defaultProps.queue),\n            (ref = defaultProps.replace),\n            (defaultProps.queue = null),\n            (defaultProps.replace = !1),\n            ref && 1 === type.length)\n          )\n            newProps.state = type[0];\n          else {\n            defaultProps = ref ? type[0] : newProps.state;\n            initialState = !0;\n            for (ref = ref ? 1 : 0; ref < type.length; ref++)\n              (propName$43 = type[ref]),\n                (propName$43 =\n                  \"function\" === typeof propName$43\n                    ? propName$43.call(newProps, defaultProps, props, void 0)\n                    : propName$43),\n                null != propName$43 &&\n                  (initialState\n                    ? ((initialState = !1),\n                      (defaultProps = assign({}, defaultProps, propName$43)))\n                    : assign(defaultProps, propName$43));\n            newProps.state = defaultProps;\n          }\n        else defaultProps.queue = null;\n      type = newProps.render();\n      if (12 === request.status) throw null;\n      props = task.keyPath;\n      task.keyPath = keyPath;\n      renderNodeDestructive(request, task, type, -1);\n      task.keyPath = props;\n    } else {\n      type = renderWithHooks(request, task, keyPath, type, props, void 0);\n      if (12 === request.status) throw null;\n      finishFunctionComponent(\n        request,\n        task,\n        keyPath,\n        type,\n        0 !== localIdCounter,\n        actionStateCounter,\n        actionStateMatchingIndex\n      );\n    }\n  else if (\"string\" === typeof type)\n    if (((newProps = task.blockedSegment), null === newProps))\n      (newProps = props.children),\n        (defaultProps = task.formatContext),\n        (initialState = task.keyPath),\n        (task.formatContext = getChildFormatContext(defaultProps, type, props)),\n        (task.keyPath = keyPath),\n        renderNode(request, task, newProps, -1),\n        (task.formatContext = defaultProps),\n        (task.keyPath = initialState);\n    else {\n      initialState = pushStartInstance(\n        newProps.chunks,\n        type,\n        props,\n        request.resumableState,\n        request.renderState,\n        task.blockedPreamble,\n        task.hoistableState,\n        task.formatContext,\n        newProps.lastPushedText\n      );\n      newProps.lastPushedText = !1;\n      defaultProps = task.formatContext;\n      ref = task.keyPath;\n      task.keyPath = keyPath;\n      if (\n        3 ===\n        (task.formatContext = getChildFormatContext(defaultProps, type, props))\n          .insertionMode\n      ) {\n        keyPath = createPendingSegment(\n          request,\n          0,\n          null,\n          task.formatContext,\n          !1,\n          !1\n        );\n        newProps.preambleChildren.push(keyPath);\n        task.blockedSegment = keyPath;\n        try {\n          (keyPath.status = 6),\n            renderNode(request, task, initialState, -1),\n            keyPath.lastPushedText &&\n              keyPath.textEmbedded &&\n              keyPath.chunks.push(textSeparator),\n            (keyPath.status = 1),\n            finishedSegment(request, task.blockedBoundary, keyPath);\n        } finally {\n          task.blockedSegment = newProps;\n        }\n      } else renderNode(request, task, initialState, -1);\n      task.formatContext = defaultProps;\n      task.keyPath = ref;\n      a: {\n        task = newProps.chunks;\n        request = request.resumableState;\n        switch (type) {\n          case \"title\":\n          case \"style\":\n          case \"script\":\n          case \"area\":\n          case \"base\":\n          case \"br\":\n          case \"col\":\n          case \"embed\":\n          case \"hr\":\n          case \"img\":\n          case \"input\":\n          case \"keygen\":\n          case \"link\":\n          case \"meta\":\n          case \"param\":\n          case \"source\":\n          case \"track\":\n          case \"wbr\":\n            break a;\n          case \"body\":\n            if (1 >= defaultProps.insertionMode) {\n              request.hasBody = !0;\n              break a;\n            }\n            break;\n          case \"html\":\n            if (0 === defaultProps.insertionMode) {\n              request.hasHtml = !0;\n              break a;\n            }\n            break;\n          case \"head\":\n            if (1 >= defaultProps.insertionMode) break a;\n        }\n        task.push(endChunkForTag(type));\n      }\n      newProps.lastPushedText = !1;\n    }\n  else {\n    switch (type) {\n      case REACT_LEGACY_HIDDEN_TYPE:\n      case REACT_STRICT_MODE_TYPE:\n      case REACT_PROFILER_TYPE:\n      case REACT_FRAGMENT_TYPE:\n        type = task.keyPath;\n        task.keyPath = keyPath;\n        renderNodeDestructive(request, task, props.children, -1);\n        task.keyPath = type;\n        return;\n      case REACT_ACTIVITY_TYPE:\n        type = task.blockedSegment;\n        null === type\n          ? \"hidden\" !== props.mode &&\n            ((type = task.keyPath),\n            (task.keyPath = keyPath),\n            renderNode(request, task, props.children, -1),\n            (task.keyPath = type))\n          : \"hidden\" !== props.mode &&\n            (type.chunks.push(startActivityBoundary),\n            (type.lastPushedText = !1),\n            (newProps = task.keyPath),\n            (task.keyPath = keyPath),\n            renderNode(request, task, props.children, -1),\n            (task.keyPath = newProps),\n            type.chunks.push(endActivityBoundary),\n            (type.lastPushedText = !1));\n        return;\n      case REACT_SUSPENSE_LIST_TYPE:\n        a: {\n          type = props.children;\n          props = props.revealOrder;\n          if (\n            \"forwards\" === props ||\n            \"backwards\" === props ||\n            \"unstable_legacy-backwards\" === props\n          ) {\n            if (isArrayImpl(type)) {\n              renderSuspenseListRows(request, task, keyPath, type, props);\n              break a;\n            }\n            if ((newProps = getIteratorFn(type)))\n              if ((newProps = newProps.call(type))) {\n                defaultProps = newProps.next();\n                if (!defaultProps.done) {\n                  do defaultProps = newProps.next();\n                  while (!defaultProps.done);\n                  renderSuspenseListRows(request, task, keyPath, type, props);\n                }\n                break a;\n              }\n          }\n          \"together\" === props\n            ? ((props = task.keyPath),\n              (newProps = task.row),\n              (defaultProps = task.row = createSuspenseListRow(null)),\n              (defaultProps.boundaries = []),\n              (defaultProps.together = !0),\n              (task.keyPath = keyPath),\n              renderNodeDestructive(request, task, type, -1),\n              0 === --defaultProps.pendingTasks &&\n                finishSuspenseListRow(request, defaultProps),\n              (task.keyPath = props),\n              (task.row = newProps),\n              null !== newProps &&\n                0 < defaultProps.pendingTasks &&\n                (newProps.pendingTasks++, (defaultProps.next = newProps)))\n            : ((props = task.keyPath),\n              (task.keyPath = keyPath),\n              renderNodeDestructive(request, task, type, -1),\n              (task.keyPath = props));\n        }\n        return;\n      case REACT_VIEW_TRANSITION_TYPE:\n      case REACT_SCOPE_TYPE:\n        throw Error(\"ReactDOMServer does not yet support scope components.\");\n      case REACT_SUSPENSE_TYPE:\n        a: if (null !== task.replay) {\n          type = task.keyPath;\n          newProps = task.formatContext;\n          defaultProps = task.row;\n          task.keyPath = keyPath;\n          task.formatContext = getSuspenseContentFormatContext(\n            request.resumableState,\n            newProps\n          );\n          task.row = null;\n          keyPath = props.children;\n          try {\n            renderNode(request, task, keyPath, -1);\n          } finally {\n            (task.keyPath = type),\n              (task.formatContext = newProps),\n              (task.row = defaultProps);\n          }\n        } else {\n          type = task.keyPath;\n          ref = task.formatContext;\n          var prevRow = task.row;\n          propName$43 = task.blockedBoundary;\n          propName = task.blockedPreamble;\n          var parentHoistableState = task.hoistableState,\n            parentSegment = task.blockedSegment,\n            fallback = props.fallback;\n          props = props.children;\n          var fallbackAbortSet = new Set();\n          var newBoundary =\n            2 > task.formatContext.insertionMode\n              ? createSuspenseBoundary(\n                  request,\n                  task.row,\n                  fallbackAbortSet,\n                  createPreambleState(),\n                  createPreambleState()\n                )\n              : createSuspenseBoundary(\n                  request,\n                  task.row,\n                  fallbackAbortSet,\n                  null,\n                  null\n                );\n          null !== request.trackedPostpones &&\n            (newBoundary.trackedContentKeyPath = keyPath);\n          var boundarySegment = createPendingSegment(\n            request,\n            parentSegment.chunks.length,\n            newBoundary,\n            task.formatContext,\n            !1,\n            !1\n          );\n          parentSegment.children.push(boundarySegment);\n          parentSegment.lastPushedText = !1;\n          var contentRootSegment = createPendingSegment(\n            request,\n            0,\n            null,\n            task.formatContext,\n            !1,\n            !1\n          );\n          contentRootSegment.parentFlushed = !0;\n          if (null !== request.trackedPostpones) {\n            newProps = task.componentStack;\n            defaultProps = [keyPath[0], \"Suspense Fallback\", keyPath[2]];\n            initialState = [defaultProps[1], defaultProps[2], [], null];\n            request.trackedPostpones.workingMap.set(defaultProps, initialState);\n            newBoundary.trackedFallbackNode = initialState;\n            task.blockedSegment = boundarySegment;\n            task.blockedPreamble = newBoundary.fallbackPreamble;\n            task.keyPath = defaultProps;\n            task.formatContext = getSuspenseFallbackFormatContext(\n              request.resumableState,\n              ref\n            );\n            task.componentStack =\n              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);\n            boundarySegment.status = 6;\n            try {\n              renderNode(request, task, fallback, -1),\n                boundarySegment.lastPushedText &&\n                  boundarySegment.textEmbedded &&\n                  boundarySegment.chunks.push(textSeparator),\n                (boundarySegment.status = 1),\n                finishedSegment(request, propName$43, boundarySegment);\n            } catch (thrownValue) {\n              throw (\n                ((boundarySegment.status = 12 === request.status ? 3 : 4),\n                thrownValue)\n              );\n            } finally {\n              (task.blockedSegment = parentSegment),\n                (task.blockedPreamble = propName),\n                (task.keyPath = type),\n                (task.formatContext = ref);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              props,\n              -1,\n              newBoundary,\n              contentRootSegment,\n              newBoundary.contentPreamble,\n              newBoundary.contentState,\n              task.abortSet,\n              keyPath,\n              getSuspenseContentFormatContext(\n                request.resumableState,\n                task.formatContext\n              ),\n              task.context,\n              task.treeContext,\n              null,\n              newProps\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          } else {\n            task.blockedBoundary = newBoundary;\n            task.blockedPreamble = newBoundary.contentPreamble;\n            task.hoistableState = newBoundary.contentState;\n            task.blockedSegment = contentRootSegment;\n            task.keyPath = keyPath;\n            task.formatContext = getSuspenseContentFormatContext(\n              request.resumableState,\n              ref\n            );\n            task.row = null;\n            contentRootSegment.status = 6;\n            try {\n              if (\n                (renderNode(request, task, props, -1),\n                contentRootSegment.lastPushedText &&\n                  contentRootSegment.textEmbedded &&\n                  contentRootSegment.chunks.push(textSeparator),\n                (contentRootSegment.status = 1),\n                finishedSegment(request, newBoundary, contentRootSegment),\n                queueCompletedSegment(newBoundary, contentRootSegment),\n                0 === newBoundary.pendingTasks && 0 === newBoundary.status)\n              ) {\n                if (\n                  ((newBoundary.status = 1),\n                  !isEligibleForOutlining(request, newBoundary))\n                ) {\n                  null !== prevRow &&\n                    0 === --prevRow.pendingTasks &&\n                    finishSuspenseListRow(request, prevRow);\n                  0 === request.pendingRootTasks &&\n                    task.blockedPreamble &&\n                    preparePreamble(request);\n                  break a;\n                }\n              } else\n                null !== prevRow &&\n                  prevRow.together &&\n                  tryToResolveTogetherRow(request, prevRow);\n            } catch (thrownValue$30) {\n              (newBoundary.status = 4),\n                12 === request.status\n                  ? ((contentRootSegment.status = 3),\n                    (newProps = request.fatalError))\n                  : ((contentRootSegment.status = 4),\n                    (newProps = thrownValue$30)),\n                (defaultProps = getThrownInfo(task.componentStack)),\n                (initialState = logRecoverableError(\n                  request,\n                  newProps,\n                  defaultProps\n                )),\n                (newBoundary.errorDigest = initialState),\n                untrackBoundary(request, newBoundary);\n            } finally {\n              (task.blockedBoundary = propName$43),\n                (task.blockedPreamble = propName),\n                (task.hoistableState = parentHoistableState),\n                (task.blockedSegment = parentSegment),\n                (task.keyPath = type),\n                (task.formatContext = ref),\n                (task.row = prevRow);\n            }\n            task = createRenderTask(\n              request,\n              null,\n              fallback,\n              -1,\n              propName$43,\n              boundarySegment,\n              newBoundary.fallbackPreamble,\n              newBoundary.fallbackState,\n              fallbackAbortSet,\n              [keyPath[0], \"Suspense Fallback\", keyPath[2]],\n              getSuspenseFallbackFormatContext(\n                request.resumableState,\n                task.formatContext\n              ),\n              task.context,\n              task.treeContext,\n              task.row,\n              replaceSuspenseComponentStackWithSuspenseFallbackStack(\n                task.componentStack\n              )\n            );\n            pushComponentStack(task);\n            request.pingedTasks.push(task);\n          }\n        }\n        return;\n    }\n    if (\"object\" === typeof type && null !== type)\n      switch (type.$$typeof) {\n        case REACT_FORWARD_REF_TYPE:\n          if (\"ref\" in props)\n            for (parentSegment in ((newProps = {}), props))\n              \"ref\" !== parentSegment &&\n                (newProps[parentSegment] = props[parentSegment]);\n          else newProps = props;\n          type = renderWithHooks(\n            request,\n            task,\n            keyPath,\n            type.render,\n            newProps,\n            ref\n          );\n          finishFunctionComponent(\n            request,\n            task,\n            keyPath,\n            type,\n            0 !== localIdCounter,\n            actionStateCounter,\n            actionStateMatchingIndex\n          );\n          return;\n        case REACT_MEMO_TYPE:\n          renderElement(request, task, keyPath, type.type, props, ref);\n          return;\n        case REACT_CONTEXT_TYPE:\n          defaultProps = props.children;\n          newProps = task.keyPath;\n          props = props.value;\n          initialState = type._currentValue;\n          type._currentValue = props;\n          ref = currentActiveSnapshot;\n          currentActiveSnapshot = type = {\n            parent: ref,\n            depth: null === ref ? 0 : ref.depth + 1,\n            context: type,\n            parentValue: initialState,\n            value: props\n          };\n          task.context = type;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, defaultProps, -1);\n          request = currentActiveSnapshot;\n          if (null === request)\n            throw Error(\n              \"Tried to pop a Context at the root of the app. This is a bug in React.\"\n            );\n          request.context._currentValue = request.parentValue;\n          request = currentActiveSnapshot = request.parent;\n          task.context = request;\n          task.keyPath = newProps;\n          return;\n        case REACT_CONSUMER_TYPE:\n          props = props.children;\n          type = props(type._context._currentValue);\n          props = task.keyPath;\n          task.keyPath = keyPath;\n          renderNodeDestructive(request, task, type, -1);\n          task.keyPath = props;\n          return;\n        case REACT_LAZY_TYPE:\n          newProps = type._init;\n          type = newProps(type._payload);\n          if (12 === request.status) throw null;\n          renderElement(request, task, keyPath, type, props, ref);\n          return;\n      }\n    throw Error(\n      \"Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: \" +\n        ((null == type ? type : typeof type) + \".\")\n    );\n  }\n}\nfunction resumeNode(request, task, segmentId, node, childIndex) {\n  var prevReplay = task.replay,\n    blockedBoundary = task.blockedBoundary,\n    resumedSegment = createPendingSegment(\n      request,\n      0,\n      null,\n      task.formatContext,\n      !1,\n      !1\n    );\n  resumedSegment.id = segmentId;\n  resumedSegment.parentFlushed = !0;\n  try {\n    (task.replay = null),\n      (task.blockedSegment = resumedSegment),\n      renderNode(request, task, node, childIndex),\n      (resumedSegment.status = 1),\n      finishedSegment(request, blockedBoundary, resumedSegment),\n      null === blockedBoundary\n        ? (request.completedRootSegment = resumedSegment)\n        : (queueCompletedSegment(blockedBoundary, resumedSegment),\n          blockedBoundary.parentFlushed &&\n            request.partialBoundaries.push(blockedBoundary));\n  } finally {\n    (task.replay = prevReplay), (task.blockedSegment = null);\n  }\n}\nfunction renderNodeDestructive(request, task, node, childIndex) {\n  null !== task.replay && \"number\" === typeof task.replay.slots\n    ? resumeNode(request, task, task.replay.slots, node, childIndex)\n    : ((task.node = node),\n      (task.childIndex = childIndex),\n      (node = task.componentStack),\n      pushComponentStack(task),\n      retryNode(request, task),\n      (task.componentStack = node));\n}\nfunction retryNode(request, task) {\n  var node = task.node,\n    childIndex = task.childIndex;\n  if (null !== node) {\n    if (\"object\" === typeof node) {\n      switch (node.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          var type = node.type,\n            key = node.key,\n            props = node.props;\n          node = props.ref;\n          var ref = void 0 !== node ? node : null,\n            name = getComponentNameFromType(type),\n            keyOrIndex =\n              null == key ? (-1 === childIndex ? 0 : childIndex) : key;\n          key = [task.keyPath, name, keyOrIndex];\n          if (null !== task.replay)\n            a: {\n              var replay = task.replay;\n              childIndex = replay.nodes;\n              for (node = 0; node < childIndex.length; node++) {\n                var node$jscomp$0 = childIndex[node];\n                if (keyOrIndex === node$jscomp$0[1]) {\n                  if (4 === node$jscomp$0.length) {\n                    if (null !== name && name !== node$jscomp$0[0])\n                      throw Error(\n                        \"Expected the resume to render <\" +\n                          node$jscomp$0[0] +\n                          \"> in this slot but instead it rendered <\" +\n                          name +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    var childNodes = node$jscomp$0[2];\n                    name = node$jscomp$0[3];\n                    keyOrIndex = task.node;\n                    task.replay = {\n                      nodes: childNodes,\n                      slots: name,\n                      pendingTasks: 1\n                    };\n                    try {\n                      renderElement(request, task, key, type, props, ref);\n                      if (\n                        1 === task.replay.pendingTasks &&\n                        0 < task.replay.nodes.length\n                      )\n                        throw Error(\n                          \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                        );\n                      task.replay.pendingTasks--;\n                    } catch (x) {\n                      if (\n                        \"object\" === typeof x &&\n                        null !== x &&\n                        (x === SuspenseException ||\n                          \"function\" === typeof x.then)\n                      )\n                        throw (\n                          (task.node === keyOrIndex\n                            ? (task.replay = replay)\n                            : childIndex.splice(node, 1),\n                          x)\n                        );\n                      task.replay.pendingTasks--;\n                      props = getThrownInfo(task.componentStack);\n                      key = request;\n                      request = task.blockedBoundary;\n                      type = x;\n                      props = logRecoverableError(key, type, props);\n                      abortRemainingReplayNodes(\n                        key,\n                        request,\n                        childNodes,\n                        name,\n                        type,\n                        props\n                      );\n                    }\n                    task.replay = replay;\n                  } else {\n                    if (type !== REACT_SUSPENSE_TYPE)\n                      throw Error(\n                        \"Expected the resume to render <Suspense> in this slot but instead it rendered <\" +\n                          (getComponentNameFromType(type) || \"Unknown\") +\n                          \">. The tree doesn't match so React will fallback to client rendering.\"\n                      );\n                    b: {\n                      replay = void 0;\n                      type = node$jscomp$0[5];\n                      ref = node$jscomp$0[2];\n                      name = node$jscomp$0[3];\n                      keyOrIndex =\n                        null === node$jscomp$0[4] ? [] : node$jscomp$0[4][2];\n                      node$jscomp$0 =\n                        null === node$jscomp$0[4] ? null : node$jscomp$0[4][3];\n                      var prevKeyPath = task.keyPath,\n                        prevContext = task.formatContext,\n                        prevRow = task.row,\n                        previousReplaySet = task.replay,\n                        parentBoundary = task.blockedBoundary,\n                        parentHoistableState = task.hoistableState,\n                        content = props.children,\n                        fallback = props.fallback,\n                        fallbackAbortSet = new Set();\n                      props =\n                        2 > task.formatContext.insertionMode\n                          ? createSuspenseBoundary(\n                              request,\n                              task.row,\n                              fallbackAbortSet,\n                              createPreambleState(),\n                              createPreambleState()\n                            )\n                          : createSuspenseBoundary(\n                              request,\n                              task.row,\n                              fallbackAbortSet,\n                              null,\n                              null\n                            );\n                      props.parentFlushed = !0;\n                      props.rootSegmentID = type;\n                      task.blockedBoundary = props;\n                      task.hoistableState = props.contentState;\n                      task.keyPath = key;\n                      task.formatContext = getSuspenseContentFormatContext(\n                        request.resumableState,\n                        prevContext\n                      );\n                      task.row = null;\n                      task.replay = {\n                        nodes: ref,\n                        slots: name,\n                        pendingTasks: 1\n                      };\n                      try {\n                        renderNode(request, task, content, -1);\n                        if (\n                          1 === task.replay.pendingTasks &&\n                          0 < task.replay.nodes.length\n                        )\n                          throw Error(\n                            \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                          );\n                        task.replay.pendingTasks--;\n                        if (0 === props.pendingTasks && 0 === props.status) {\n                          props.status = 1;\n                          request.completedBoundaries.push(props);\n                          break b;\n                        }\n                      } catch (error) {\n                        (props.status = 4),\n                          (childNodes = getThrownInfo(task.componentStack)),\n                          (replay = logRecoverableError(\n                            request,\n                            error,\n                            childNodes\n                          )),\n                          (props.errorDigest = replay),\n                          task.replay.pendingTasks--,\n                          request.clientRenderedBoundaries.push(props);\n                      } finally {\n                        (task.blockedBoundary = parentBoundary),\n                          (task.hoistableState = parentHoistableState),\n                          (task.replay = previousReplaySet),\n                          (task.keyPath = prevKeyPath),\n                          (task.formatContext = prevContext),\n                          (task.row = prevRow);\n                      }\n                      childNodes = createReplayTask(\n                        request,\n                        null,\n                        {\n                          nodes: keyOrIndex,\n                          slots: node$jscomp$0,\n                          pendingTasks: 0\n                        },\n                        fallback,\n                        -1,\n                        parentBoundary,\n                        props.fallbackState,\n                        fallbackAbortSet,\n                        [key[0], \"Suspense Fallback\", key[2]],\n                        getSuspenseFallbackFormatContext(\n                          request.resumableState,\n                          task.formatContext\n                        ),\n                        task.context,\n                        task.treeContext,\n                        task.row,\n                        replaceSuspenseComponentStackWithSuspenseFallbackStack(\n                          task.componentStack\n                        )\n                      );\n                      pushComponentStack(childNodes);\n                      request.pingedTasks.push(childNodes);\n                    }\n                  }\n                  childIndex.splice(node, 1);\n                  break a;\n                }\n              }\n            }\n          else renderElement(request, task, key, type, props, ref);\n          return;\n        case REACT_PORTAL_TYPE:\n          throw Error(\n            \"Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.\"\n          );\n        case REACT_LAZY_TYPE:\n          childNodes = node._init;\n          node = childNodes(node._payload);\n          if (12 === request.status) throw null;\n          renderNodeDestructive(request, task, node, childIndex);\n          return;\n      }\n      if (isArrayImpl(node)) {\n        renderChildrenArray(request, task, node, childIndex);\n        return;\n      }\n      if ((childNodes = getIteratorFn(node)))\n        if ((childNodes = childNodes.call(node))) {\n          node = childNodes.next();\n          if (!node.done) {\n            props = [];\n            do props.push(node.value), (node = childNodes.next());\n            while (!node.done);\n            renderChildrenArray(request, task, props, childIndex);\n          }\n          return;\n        }\n      if (\"function\" === typeof node.then)\n        return (\n          (task.thenableState = null),\n          renderNodeDestructive(request, task, unwrapThenable(node), childIndex)\n        );\n      if (node.$$typeof === REACT_CONTEXT_TYPE)\n        return renderNodeDestructive(\n          request,\n          task,\n          node._currentValue,\n          childIndex\n        );\n      childIndex = Object.prototype.toString.call(node);\n      throw Error(\n        \"Objects are not valid as a React child (found: \" +\n          (\"[object Object]\" === childIndex\n            ? \"object with keys {\" + Object.keys(node).join(\", \") + \"}\"\n            : childIndex) +\n          \"). If you meant to render a collection of children, use an array instead.\"\n      );\n    }\n    if (\"string\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n    else if (\"number\" === typeof node || \"bigint\" === typeof node)\n      (childIndex = task.blockedSegment),\n        null !== childIndex &&\n          (childIndex.lastPushedText = pushTextInstance(\n            childIndex.chunks,\n            \"\" + node,\n            request.renderState,\n            childIndex.lastPushedText\n          ));\n  }\n}\nfunction renderChildrenArray(request, task, children, childIndex) {\n  var prevKeyPath = task.keyPath;\n  if (\n    -1 !== childIndex &&\n    ((task.keyPath = [task.keyPath, \"Fragment\", childIndex]),\n    null !== task.replay)\n  ) {\n    for (\n      var replay = task.replay, replayNodes = replay.nodes, j = 0;\n      j < replayNodes.length;\n      j++\n    ) {\n      var node = replayNodes[j];\n      if (node[1] === childIndex) {\n        childIndex = node[2];\n        node = node[3];\n        task.replay = { nodes: childIndex, slots: node, pendingTasks: 1 };\n        try {\n          renderChildrenArray(request, task, children, -1);\n          if (1 === task.replay.pendingTasks && 0 < task.replay.nodes.length)\n            throw Error(\n              \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n            );\n          task.replay.pendingTasks--;\n        } catch (x) {\n          if (\n            \"object\" === typeof x &&\n            null !== x &&\n            (x === SuspenseException || \"function\" === typeof x.then)\n          )\n            throw x;\n          task.replay.pendingTasks--;\n          children = getThrownInfo(task.componentStack);\n          var boundary = task.blockedBoundary,\n            error = x;\n          children = logRecoverableError(request, error, children);\n          abortRemainingReplayNodes(\n            request,\n            boundary,\n            childIndex,\n            node,\n            error,\n            children\n          );\n        }\n        task.replay = replay;\n        replayNodes.splice(j, 1);\n        break;\n      }\n    }\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  replay = task.treeContext;\n  replayNodes = children.length;\n  if (\n    null !== task.replay &&\n    ((j = task.replay.slots), null !== j && \"object\" === typeof j)\n  ) {\n    for (childIndex = 0; childIndex < replayNodes; childIndex++)\n      (node = children[childIndex]),\n        (task.treeContext = pushTreeContext(replay, replayNodes, childIndex)),\n        (boundary = j[childIndex]),\n        \"number\" === typeof boundary\n          ? (resumeNode(request, task, boundary, node, childIndex),\n            delete j[childIndex])\n          : renderNode(request, task, node, childIndex);\n    task.treeContext = replay;\n    task.keyPath = prevKeyPath;\n    return;\n  }\n  for (j = 0; j < replayNodes; j++)\n    (childIndex = children[j]),\n      (task.treeContext = pushTreeContext(replay, replayNodes, j)),\n      renderNode(request, task, childIndex, j);\n  task.treeContext = replay;\n  task.keyPath = prevKeyPath;\n}\nfunction untrackBoundary(request, boundary) {\n  request = request.trackedPostpones;\n  null !== request &&\n    ((boundary = boundary.trackedContentKeyPath),\n    null !== boundary &&\n      ((boundary = request.workingMap.get(boundary)),\n      void 0 !== boundary &&\n        ((boundary.length = 4), (boundary[2] = []), (boundary[3] = null))));\n}\nfunction spawnNewSuspendedReplayTask(request, task, thenableState) {\n  return createReplayTask(\n    request,\n    thenableState,\n    task.replay,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.row,\n    task.componentStack\n  );\n}\nfunction spawnNewSuspendedRenderTask(request, task, thenableState) {\n  var segment = task.blockedSegment,\n    newSegment = createPendingSegment(\n      request,\n      segment.chunks.length,\n      null,\n      task.formatContext,\n      segment.lastPushedText,\n      !0\n    );\n  segment.children.push(newSegment);\n  segment.lastPushedText = !1;\n  return createRenderTask(\n    request,\n    thenableState,\n    task.node,\n    task.childIndex,\n    task.blockedBoundary,\n    newSegment,\n    task.blockedPreamble,\n    task.hoistableState,\n    task.abortSet,\n    task.keyPath,\n    task.formatContext,\n    task.context,\n    task.treeContext,\n    task.row,\n    task.componentStack\n  );\n}\nfunction renderNode(request, task, node, childIndex) {\n  var previousFormatContext = task.formatContext,\n    previousContext = task.context,\n    previousKeyPath = task.keyPath,\n    previousTreeContext = task.treeContext,\n    previousComponentStack = task.componentStack,\n    segment = task.blockedSegment;\n  if (null === segment) {\n    segment = task.replay;\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue) {\n      if (\n        (resetHooksState(),\n        (node =\n          thrownValue === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue),\n        12 !== request.status && \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          childIndex =\n            thrownValue === SuspenseException\n              ? getThenableStateAfterSuspending()\n              : null;\n          request = spawnNewSuspendedReplayTask(request, task, childIndex).ping;\n          node.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          task.replay = segment;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          node =\n            thrownValue === SuspenseException\n              ? getThenableStateAfterSuspending()\n              : null;\n          node = spawnNewSuspendedReplayTask(request, task, node);\n          request.pingedTasks.push(node);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          task.replay = segment;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  } else {\n    var childrenLength = segment.children.length,\n      chunkLength = segment.chunks.length;\n    try {\n      return renderNodeDestructive(request, task, node, childIndex);\n    } catch (thrownValue$60) {\n      if (\n        (resetHooksState(),\n        (segment.children.length = childrenLength),\n        (segment.chunks.length = chunkLength),\n        (node =\n          thrownValue$60 === SuspenseException\n            ? getSuspendedThenable()\n            : thrownValue$60),\n        12 !== request.status && \"object\" === typeof node && null !== node)\n      ) {\n        if (\"function\" === typeof node.then) {\n          segment = node;\n          node =\n            thrownValue$60 === SuspenseException\n              ? getThenableStateAfterSuspending()\n              : null;\n          request = spawnNewSuspendedRenderTask(request, task, node).ping;\n          segment.then(request, request);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n        if (\"Maximum call stack size exceeded\" === node.message) {\n          segment =\n            thrownValue$60 === SuspenseException\n              ? getThenableStateAfterSuspending()\n              : null;\n          segment = spawnNewSuspendedRenderTask(request, task, segment);\n          request.pingedTasks.push(segment);\n          task.formatContext = previousFormatContext;\n          task.context = previousContext;\n          task.keyPath = previousKeyPath;\n          task.treeContext = previousTreeContext;\n          task.componentStack = previousComponentStack;\n          switchContext(previousContext);\n          return;\n        }\n      }\n    }\n  }\n  task.formatContext = previousFormatContext;\n  task.context = previousContext;\n  task.keyPath = previousKeyPath;\n  task.treeContext = previousTreeContext;\n  switchContext(previousContext);\n  throw node;\n}\nfunction abortTaskSoft(task) {\n  var boundary = task.blockedBoundary,\n    segment = task.blockedSegment;\n  null !== segment &&\n    ((segment.status = 3), finishedTask(this, boundary, task.row, segment));\n}\nfunction abortRemainingReplayNodes(\n  request$jscomp$0,\n  boundary,\n  nodes,\n  slots,\n  error,\n  errorDigest$jscomp$0\n) {\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (4 === node.length)\n      abortRemainingReplayNodes(\n        request$jscomp$0,\n        boundary,\n        node[2],\n        node[3],\n        error,\n        errorDigest$jscomp$0\n      );\n    else {\n      node = node[5];\n      var request = request$jscomp$0,\n        errorDigest = errorDigest$jscomp$0,\n        resumedBoundary = createSuspenseBoundary(\n          request,\n          null,\n          new Set(),\n          null,\n          null\n        );\n      resumedBoundary.parentFlushed = !0;\n      resumedBoundary.rootSegmentID = node;\n      resumedBoundary.status = 4;\n      resumedBoundary.errorDigest = errorDigest;\n      resumedBoundary.parentFlushed &&\n        request.clientRenderedBoundaries.push(resumedBoundary);\n    }\n  }\n  nodes.length = 0;\n  if (null !== slots) {\n    if (null === boundary)\n      throw Error(\n        \"We should not have any resumable nodes in the shell. This is a bug in React.\"\n      );\n    4 !== boundary.status &&\n      ((boundary.status = 4),\n      (boundary.errorDigest = errorDigest$jscomp$0),\n      boundary.parentFlushed &&\n        request$jscomp$0.clientRenderedBoundaries.push(boundary));\n    if (\"object\" === typeof slots) for (var index in slots) delete slots[index];\n  }\n}\nfunction abortTask(task, request, error) {\n  var boundary = task.blockedBoundary,\n    segment = task.blockedSegment;\n  if (null !== segment) {\n    if (6 === segment.status) return;\n    segment.status = 3;\n  }\n  segment = getThrownInfo(task.componentStack);\n  if (null === boundary) {\n    if (13 !== request.status && 14 !== request.status) {\n      boundary = task.replay;\n      if (null === boundary) {\n        logRecoverableError(request, error, segment);\n        fatalError(request, error);\n        return;\n      }\n      boundary.pendingTasks--;\n      0 === boundary.pendingTasks &&\n        0 < boundary.nodes.length &&\n        ((segment = logRecoverableError(request, error, segment)),\n        abortRemainingReplayNodes(\n          request,\n          null,\n          boundary.nodes,\n          boundary.slots,\n          error,\n          segment\n        ));\n      request.pendingRootTasks--;\n      0 === request.pendingRootTasks && completeShell(request);\n    }\n  } else\n    4 !== boundary.status &&\n      ((boundary.status = 4),\n      (segment = logRecoverableError(request, error, segment)),\n      (boundary.status = 4),\n      (boundary.errorDigest = segment),\n      untrackBoundary(request, boundary),\n      boundary.parentFlushed &&\n        request.clientRenderedBoundaries.push(boundary)),\n      boundary.pendingTasks--,\n      (segment = boundary.row),\n      null !== segment &&\n        0 === --segment.pendingTasks &&\n        finishSuspenseListRow(request, segment),\n      boundary.fallbackAbortableTasks.forEach(function (fallbackTask) {\n        return abortTask(fallbackTask, request, error);\n      }),\n      boundary.fallbackAbortableTasks.clear();\n  task = task.row;\n  null !== task &&\n    0 === --task.pendingTasks &&\n    finishSuspenseListRow(request, task);\n  request.allPendingTasks--;\n  0 === request.allPendingTasks && completeAll(request);\n}\nfunction safelyEmitEarlyPreloads(request, shellComplete) {\n  try {\n    var renderState = request.renderState,\n      onHeaders = renderState.onHeaders;\n    if (onHeaders) {\n      var headers = renderState.headers;\n      if (headers) {\n        renderState.headers = null;\n        var linkHeader = headers.preconnects;\n        headers.fontPreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.fontPreloads));\n        headers.highImagePreloads &&\n          (linkHeader && (linkHeader += \", \"),\n          (linkHeader += headers.highImagePreloads));\n        if (!shellComplete) {\n          var queueIter = renderState.styles.values(),\n            queueStep = queueIter.next();\n          b: for (\n            ;\n            0 < headers.remainingCapacity && !queueStep.done;\n            queueStep = queueIter.next()\n          )\n            for (\n              var sheetIter = queueStep.value.sheets.values(),\n                sheetStep = sheetIter.next();\n              0 < headers.remainingCapacity && !sheetStep.done;\n              sheetStep = sheetIter.next()\n            ) {\n              var sheet = sheetStep.value,\n                props = sheet.props,\n                key = props.href,\n                props$jscomp$0 = sheet.props,\n                header = getPreloadAsHeader(props$jscomp$0.href, \"style\", {\n                  crossOrigin: props$jscomp$0.crossOrigin,\n                  integrity: props$jscomp$0.integrity,\n                  nonce: props$jscomp$0.nonce,\n                  type: props$jscomp$0.type,\n                  fetchPriority: props$jscomp$0.fetchPriority,\n                  referrerPolicy: props$jscomp$0.referrerPolicy,\n                  media: props$jscomp$0.media\n                });\n              if (0 <= (headers.remainingCapacity -= header.length + 2))\n                (renderState.resets.style[key] = PRELOAD_NO_CREDS),\n                  linkHeader && (linkHeader += \", \"),\n                  (linkHeader += header),\n                  (renderState.resets.style[key] =\n                    \"string\" === typeof props.crossOrigin ||\n                    \"string\" === typeof props.integrity\n                      ? [props.crossOrigin, props.integrity]\n                      : PRELOAD_NO_CREDS);\n              else break b;\n            }\n        }\n        linkHeader ? onHeaders({ Link: linkHeader }) : onHeaders({});\n      }\n    }\n  } catch (error) {\n    logRecoverableError(request, error, {});\n  }\n}\nfunction completeShell(request) {\n  null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);\n  null === request.trackedPostpones && preparePreamble(request);\n  request.onShellError = noop;\n  request = request.onShellReady;\n  request();\n}\nfunction completeAll(request) {\n  safelyEmitEarlyPreloads(\n    request,\n    null === request.trackedPostpones\n      ? !0\n      : null === request.completedRootSegment ||\n          5 !== request.completedRootSegment.status\n  );\n  preparePreamble(request);\n  request = request.onAllReady;\n  request();\n}\nfunction queueCompletedSegment(boundary, segment) {\n  if (\n    0 === segment.chunks.length &&\n    1 === segment.children.length &&\n    null === segment.children[0].boundary &&\n    -1 === segment.children[0].id\n  ) {\n    var childSegment = segment.children[0];\n    childSegment.id = segment.id;\n    childSegment.parentFlushed = !0;\n    (1 !== childSegment.status &&\n      3 !== childSegment.status &&\n      4 !== childSegment.status) ||\n      queueCompletedSegment(boundary, childSegment);\n  } else boundary.completedSegments.push(segment);\n}\nfunction finishedSegment(request, boundary, segment) {\n  if (null !== byteLengthOfChunk) {\n    segment = segment.chunks;\n    for (var segmentByteSize = 0, i = 0; i < segment.length; i++)\n      segmentByteSize += segment[i].byteLength;\n    null === boundary\n      ? (request.byteSize += segmentByteSize)\n      : (boundary.byteSize += segmentByteSize);\n  }\n}\nfunction finishedTask(request$jscomp$0, boundary, row, segment) {\n  null !== row &&\n    (0 === --row.pendingTasks\n      ? finishSuspenseListRow(request$jscomp$0, row)\n      : row.together && tryToResolveTogetherRow(request$jscomp$0, row));\n  request$jscomp$0.allPendingTasks--;\n  if (null === boundary) {\n    if (null !== segment && segment.parentFlushed) {\n      if (null !== request$jscomp$0.completedRootSegment)\n        throw Error(\n          \"There can only be one root segment. This is a bug in React.\"\n        );\n      request$jscomp$0.completedRootSegment = segment;\n    }\n    request$jscomp$0.pendingRootTasks--;\n    0 === request$jscomp$0.pendingRootTasks && completeShell(request$jscomp$0);\n  } else if ((boundary.pendingTasks--, 4 !== boundary.status))\n    if (0 === boundary.pendingTasks)\n      if (\n        (0 === boundary.status && (boundary.status = 1),\n        null !== segment &&\n          segment.parentFlushed &&\n          (1 === segment.status || 3 === segment.status) &&\n          queueCompletedSegment(boundary, segment),\n        boundary.parentFlushed &&\n          request$jscomp$0.completedBoundaries.push(boundary),\n        1 === boundary.status)\n      )\n        (row = boundary.row),\n          null !== row &&\n            hoistHoistables(row.hoistables, boundary.contentState),\n          isEligibleForOutlining(request$jscomp$0, boundary) ||\n            (boundary.fallbackAbortableTasks.forEach(\n              abortTaskSoft,\n              request$jscomp$0\n            ),\n            boundary.fallbackAbortableTasks.clear(),\n            null !== row &&\n              0 === --row.pendingTasks &&\n              finishSuspenseListRow(request$jscomp$0, row)),\n          0 === request$jscomp$0.pendingRootTasks &&\n            null === request$jscomp$0.trackedPostpones &&\n            null !== boundary.contentPreamble &&\n            preparePreamble(request$jscomp$0);\n      else {\n        if (\n          5 === boundary.status &&\n          ((boundary = boundary.row), null !== boundary)\n        ) {\n          if (null !== request$jscomp$0.trackedPostpones) {\n            row = request$jscomp$0.trackedPostpones;\n            var postponedRow = boundary.next;\n            if (\n              null !== postponedRow &&\n              ((segment = postponedRow.boundaries), null !== segment)\n            )\n              for (\n                postponedRow.boundaries = null, postponedRow = 0;\n                postponedRow < segment.length;\n                postponedRow++\n              ) {\n                var postponedBoundary = segment[postponedRow];\n                var request = request$jscomp$0,\n                  trackedPostpones = row;\n                postponedBoundary.status = 5;\n                postponedBoundary.rootSegmentID = request.nextSegmentId++;\n                request = postponedBoundary.trackedContentKeyPath;\n                if (null === request)\n                  throw Error(\n                    \"It should not be possible to postpone at the root. This is a bug in React.\"\n                  );\n                var fallbackReplayNode = postponedBoundary.trackedFallbackNode,\n                  children = [],\n                  boundaryNode = trackedPostpones.workingMap.get(request);\n                void 0 === boundaryNode\n                  ? ((fallbackReplayNode = [\n                      request[1],\n                      request[2],\n                      children,\n                      null,\n                      fallbackReplayNode,\n                      postponedBoundary.rootSegmentID\n                    ]),\n                    trackedPostpones.workingMap.set(\n                      request,\n                      fallbackReplayNode\n                    ),\n                    addToReplayParent(\n                      fallbackReplayNode,\n                      request[0],\n                      trackedPostpones\n                    ))\n                  : ((boundaryNode[4] = fallbackReplayNode),\n                    (boundaryNode[5] = postponedBoundary.rootSegmentID));\n                finishedTask(request$jscomp$0, postponedBoundary, null, null);\n              }\n          }\n          0 === --boundary.pendingTasks &&\n            finishSuspenseListRow(request$jscomp$0, boundary);\n        }\n      }\n    else\n      null === segment ||\n        !segment.parentFlushed ||\n        (1 !== segment.status && 3 !== segment.status) ||\n        (queueCompletedSegment(boundary, segment),\n        1 === boundary.completedSegments.length &&\n          boundary.parentFlushed &&\n          request$jscomp$0.partialBoundaries.push(boundary)),\n        (boundary = boundary.row),\n        null !== boundary &&\n          boundary.together &&\n          tryToResolveTogetherRow(request$jscomp$0, boundary);\n  0 === request$jscomp$0.allPendingTasks && completeAll(request$jscomp$0);\n}\nfunction performWork(request$jscomp$2) {\n  if (14 !== request$jscomp$2.status && 13 !== request$jscomp$2.status) {\n    var prevContext = currentActiveSnapshot,\n      prevDispatcher = ReactSharedInternals.H;\n    ReactSharedInternals.H = HooksDispatcher;\n    var prevAsyncDispatcher = ReactSharedInternals.A;\n    ReactSharedInternals.A = DefaultAsyncDispatcher;\n    var prevRequest = currentRequest;\n    currentRequest = request$jscomp$2;\n    var prevResumableState = currentResumableState;\n    currentResumableState = request$jscomp$2.resumableState;\n    try {\n      var pingedTasks = request$jscomp$2.pingedTasks,\n        i;\n      for (i = 0; i < pingedTasks.length; i++) {\n        var task = pingedTasks[i],\n          request = request$jscomp$2,\n          segment = task.blockedSegment;\n        if (null === segment) {\n          var request$jscomp$0 = request;\n          if (0 !== task.replay.pendingTasks) {\n            switchContext(task.context);\n            try {\n              \"number\" === typeof task.replay.slots\n                ? resumeNode(\n                    request$jscomp$0,\n                    task,\n                    task.replay.slots,\n                    task.node,\n                    task.childIndex\n                  )\n                : retryNode(request$jscomp$0, task);\n              if (\n                1 === task.replay.pendingTasks &&\n                0 < task.replay.nodes.length\n              )\n                throw Error(\n                  \"Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering.\"\n                );\n              task.replay.pendingTasks--;\n              task.abortSet.delete(task);\n              finishedTask(\n                request$jscomp$0,\n                task.blockedBoundary,\n                task.row,\n                null\n              );\n            } catch (thrownValue) {\n              resetHooksState();\n              var x =\n                thrownValue === SuspenseException\n                  ? getSuspendedThenable()\n                  : thrownValue;\n              if (\n                \"object\" === typeof x &&\n                null !== x &&\n                \"function\" === typeof x.then\n              ) {\n                var ping = task.ping;\n                x.then(ping, ping);\n                task.thenableState =\n                  thrownValue === SuspenseException\n                    ? getThenableStateAfterSuspending()\n                    : null;\n              } else {\n                task.replay.pendingTasks--;\n                task.abortSet.delete(task);\n                var errorInfo = getThrownInfo(task.componentStack);\n                request = void 0;\n                var request$jscomp$1 = request$jscomp$0,\n                  boundary = task.blockedBoundary,\n                  error$jscomp$0 =\n                    12 === request$jscomp$0.status\n                      ? request$jscomp$0.fatalError\n                      : x,\n                  replayNodes = task.replay.nodes,\n                  resumeSlots = task.replay.slots;\n                request = logRecoverableError(\n                  request$jscomp$1,\n                  error$jscomp$0,\n                  errorInfo\n                );\n                abortRemainingReplayNodes(\n                  request$jscomp$1,\n                  boundary,\n                  replayNodes,\n                  resumeSlots,\n                  error$jscomp$0,\n                  request\n                );\n                request$jscomp$0.pendingRootTasks--;\n                0 === request$jscomp$0.pendingRootTasks &&\n                  completeShell(request$jscomp$0);\n                request$jscomp$0.allPendingTasks--;\n                0 === request$jscomp$0.allPendingTasks &&\n                  completeAll(request$jscomp$0);\n              }\n            } finally {\n            }\n          }\n        } else if (\n          ((request$jscomp$0 = void 0),\n          (request$jscomp$1 = segment),\n          0 === request$jscomp$1.status)\n        ) {\n          request$jscomp$1.status = 6;\n          switchContext(task.context);\n          var childrenLength = request$jscomp$1.children.length,\n            chunkLength = request$jscomp$1.chunks.length;\n          try {\n            retryNode(request, task),\n              request$jscomp$1.lastPushedText &&\n                request$jscomp$1.textEmbedded &&\n                request$jscomp$1.chunks.push(textSeparator),\n              task.abortSet.delete(task),\n              (request$jscomp$1.status = 1),\n              finishedSegment(request, task.blockedBoundary, request$jscomp$1),\n              finishedTask(\n                request,\n                task.blockedBoundary,\n                task.row,\n                request$jscomp$1\n              );\n          } catch (thrownValue) {\n            resetHooksState();\n            request$jscomp$1.children.length = childrenLength;\n            request$jscomp$1.chunks.length = chunkLength;\n            var x$jscomp$0 =\n              thrownValue === SuspenseException\n                ? getSuspendedThenable()\n                : 12 === request.status\n                  ? request.fatalError\n                  : thrownValue;\n            if (\n              \"object\" === typeof x$jscomp$0 &&\n              null !== x$jscomp$0 &&\n              \"function\" === typeof x$jscomp$0.then\n            ) {\n              request$jscomp$1.status = 0;\n              task.thenableState =\n                thrownValue === SuspenseException\n                  ? getThenableStateAfterSuspending()\n                  : null;\n              var ping$jscomp$0 = task.ping;\n              x$jscomp$0.then(ping$jscomp$0, ping$jscomp$0);\n            } else {\n              var errorInfo$jscomp$0 = getThrownInfo(task.componentStack);\n              task.abortSet.delete(task);\n              request$jscomp$1.status = 4;\n              var boundary$jscomp$0 = task.blockedBoundary,\n                row = task.row;\n              null !== row &&\n                0 === --row.pendingTasks &&\n                finishSuspenseListRow(request, row);\n              request.allPendingTasks--;\n              request$jscomp$0 = logRecoverableError(\n                request,\n                x$jscomp$0,\n                errorInfo$jscomp$0\n              );\n              if (null === boundary$jscomp$0) fatalError(request, x$jscomp$0);\n              else if (\n                (boundary$jscomp$0.pendingTasks--,\n                4 !== boundary$jscomp$0.status)\n              ) {\n                boundary$jscomp$0.status = 4;\n                boundary$jscomp$0.errorDigest = request$jscomp$0;\n                untrackBoundary(request, boundary$jscomp$0);\n                var boundaryRow = boundary$jscomp$0.row;\n                null !== boundaryRow &&\n                  0 === --boundaryRow.pendingTasks &&\n                  finishSuspenseListRow(request, boundaryRow);\n                boundary$jscomp$0.parentFlushed &&\n                  request.clientRenderedBoundaries.push(boundary$jscomp$0);\n                0 === request.pendingRootTasks &&\n                  null === request.trackedPostpones &&\n                  null !== boundary$jscomp$0.contentPreamble &&\n                  preparePreamble(request);\n              }\n              0 === request.allPendingTasks && completeAll(request);\n            }\n          } finally {\n          }\n        }\n      }\n      pingedTasks.splice(0, i);\n      null !== request$jscomp$2.destination &&\n        flushCompletedQueues(request$jscomp$2, request$jscomp$2.destination);\n    } catch (error) {\n      logRecoverableError(request$jscomp$2, error, {}),\n        fatalError(request$jscomp$2, error);\n    } finally {\n      (currentResumableState = prevResumableState),\n        (ReactSharedInternals.H = prevDispatcher),\n        (ReactSharedInternals.A = prevAsyncDispatcher),\n        prevDispatcher === HooksDispatcher && switchContext(prevContext),\n        (currentRequest = prevRequest);\n    }\n  }\n}\nfunction preparePreambleFromSubtree(\n  request,\n  segment,\n  collectedPreambleSegments\n) {\n  segment.preambleChildren.length &&\n    collectedPreambleSegments.push(segment.preambleChildren);\n  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)\n    pendingPreambles =\n      preparePreambleFromSegment(\n        request,\n        segment.children[i],\n        collectedPreambleSegments\n      ) || pendingPreambles;\n  return pendingPreambles;\n}\nfunction preparePreambleFromSegment(\n  request,\n  segment,\n  collectedPreambleSegments\n) {\n  var boundary = segment.boundary;\n  if (null === boundary)\n    return preparePreambleFromSubtree(\n      request,\n      segment,\n      collectedPreambleSegments\n    );\n  var preamble = boundary.contentPreamble,\n    fallbackPreamble = boundary.fallbackPreamble;\n  if (null === preamble || null === fallbackPreamble) return !1;\n  switch (boundary.status) {\n    case 1:\n      hoistPreambleState(request.renderState, preamble);\n      request.byteSize += boundary.byteSize;\n      segment = boundary.completedSegments[0];\n      if (!segment)\n        throw Error(\n          \"A previously unvisited boundary must have exactly one root segment. This is a bug in React.\"\n        );\n      return preparePreambleFromSubtree(\n        request,\n        segment,\n        collectedPreambleSegments\n      );\n    case 5:\n      if (null !== request.trackedPostpones) return !0;\n    case 4:\n      if (1 === segment.status)\n        return (\n          hoistPreambleState(request.renderState, fallbackPreamble),\n          preparePreambleFromSubtree(\n            request,\n            segment,\n            collectedPreambleSegments\n          )\n        );\n    default:\n      return !0;\n  }\n}\nfunction preparePreamble(request) {\n  if (\n    request.completedRootSegment &&\n    null === request.completedPreambleSegments\n  ) {\n    var collectedPreambleSegments = [],\n      originalRequestByteSize = request.byteSize,\n      hasPendingPreambles = preparePreambleFromSegment(\n        request,\n        request.completedRootSegment,\n        collectedPreambleSegments\n      ),\n      preamble = request.renderState.preamble;\n    !1 === hasPendingPreambles || (preamble.headChunks && preamble.bodyChunks)\n      ? (request.completedPreambleSegments = collectedPreambleSegments)\n      : (request.byteSize = originalRequestByteSize);\n  }\n}\nfunction flushSubtree(request, destination, segment, hoistableState) {\n  segment.parentFlushed = !0;\n  switch (segment.status) {\n    case 0:\n      segment.id = request.nextSegmentId++;\n    case 5:\n      return (\n        (hoistableState = segment.id),\n        (segment.lastPushedText = !1),\n        (segment.textEmbedded = !1),\n        (request = request.renderState),\n        writeChunk(destination, placeholder1),\n        writeChunk(destination, request.placeholderPrefix),\n        (request = stringToChunk(hoistableState.toString(16))),\n        writeChunk(destination, request),\n        writeChunkAndReturn(destination, placeholder2)\n      );\n    case 1:\n      segment.status = 2;\n      var r = !0,\n        chunks = segment.chunks,\n        chunkIdx = 0;\n      segment = segment.children;\n      for (var childIdx = 0; childIdx < segment.length; childIdx++) {\n        for (r = segment[childIdx]; chunkIdx < r.index; chunkIdx++)\n          writeChunk(destination, chunks[chunkIdx]);\n        r = flushSegment(request, destination, r, hoistableState);\n      }\n      for (; chunkIdx < chunks.length - 1; chunkIdx++)\n        writeChunk(destination, chunks[chunkIdx]);\n      chunkIdx < chunks.length &&\n        (r = writeChunkAndReturn(destination, chunks[chunkIdx]));\n      return r;\n    case 3:\n      return !0;\n    default:\n      throw Error(\n        \"Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.\"\n      );\n  }\n}\nvar flushedByteSize = 0;\nfunction flushSegment(request, destination, segment, hoistableState) {\n  var boundary = segment.boundary;\n  if (null === boundary)\n    return flushSubtree(request, destination, segment, hoistableState);\n  boundary.parentFlushed = !0;\n  if (4 === boundary.status) {\n    var row = boundary.row;\n    null !== row &&\n      0 === --row.pendingTasks &&\n      finishSuspenseListRow(request, row);\n    boundary = boundary.errorDigest;\n    writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);\n    writeChunk(destination, clientRenderedSuspenseBoundaryError1);\n    boundary &&\n      (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),\n      writeChunk(destination, stringToChunk(escapeTextForBrowser(boundary))),\n      writeChunk(\n        destination,\n        clientRenderedSuspenseBoundaryErrorAttrInterstitial\n      ));\n    writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);\n    flushSubtree(request, destination, segment, hoistableState);\n  } else if (1 !== boundary.status)\n    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),\n      0 < boundary.completedSegments.length &&\n        request.partialBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      hoistableState && hoistHoistables(hoistableState, boundary.fallbackState),\n      flushSubtree(request, destination, segment, hoistableState);\n  else if (\n    isEligibleForOutlining(request, boundary) &&\n    flushedByteSize + boundary.byteSize > request.progressiveChunkSize\n  )\n    (boundary.rootSegmentID = request.nextSegmentId++),\n      request.completedBoundaries.push(boundary),\n      writeStartPendingSuspenseBoundary(\n        destination,\n        request.renderState,\n        boundary.rootSegmentID\n      ),\n      flushSubtree(request, destination, segment, hoistableState);\n  else {\n    flushedByteSize += boundary.byteSize;\n    hoistableState && hoistHoistables(hoistableState, boundary.contentState);\n    segment = boundary.row;\n    null !== segment &&\n      isEligibleForOutlining(request, boundary) &&\n      0 === --segment.pendingTasks &&\n      finishSuspenseListRow(request, segment);\n    writeChunkAndReturn(destination, startCompletedSuspenseBoundary);\n    segment = boundary.completedSegments;\n    if (1 !== segment.length)\n      throw Error(\n        \"A previously unvisited boundary must have exactly one root segment. This is a bug in React.\"\n      );\n    flushSegment(request, destination, segment[0], hoistableState);\n  }\n  return writeChunkAndReturn(destination, endSuspenseBoundary);\n}\nfunction flushSegmentContainer(request, destination, segment, hoistableState) {\n  writeStartSegment(\n    destination,\n    request.renderState,\n    segment.parentFormatContext,\n    segment.id\n  );\n  flushSegment(request, destination, segment, hoistableState);\n  return writeEndSegment(destination, segment.parentFormatContext);\n}\nfunction flushCompletedBoundary(request, destination, boundary) {\n  flushedByteSize = boundary.byteSize;\n  for (\n    var completedSegments = boundary.completedSegments, i = 0;\n    i < completedSegments.length;\n    i++\n  )\n    flushPartiallyCompletedSegment(\n      request,\n      destination,\n      boundary,\n      completedSegments[i]\n    );\n  completedSegments.length = 0;\n  completedSegments = boundary.row;\n  null !== completedSegments &&\n    isEligibleForOutlining(request, boundary) &&\n    0 === --completedSegments.pendingTasks &&\n    finishSuspenseListRow(request, completedSegments);\n  writeHoistablesForBoundary(\n    destination,\n    boundary.contentState,\n    request.renderState\n  );\n  completedSegments = request.resumableState;\n  request = request.renderState;\n  i = boundary.rootSegmentID;\n  boundary = boundary.contentState;\n  var requiresStyleInsertion = request.stylesToHoist;\n  request.stylesToHoist = !1;\n  writeChunk(destination, request.startInlineScript);\n  writeChunk(destination, endOfStartTag);\n  requiresStyleInsertion\n    ? (0 === (completedSegments.instructions & 4) &&\n        ((completedSegments.instructions |= 4),\n        writeChunk(destination, clientRenderScriptFunctionOnly)),\n      0 === (completedSegments.instructions & 2) &&\n        ((completedSegments.instructions |= 2),\n        writeChunk(destination, completeBoundaryScriptFunctionOnly)),\n      0 === (completedSegments.instructions & 8)\n        ? ((completedSegments.instructions |= 8),\n          writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))\n        : writeChunk(destination, completeBoundaryWithStylesScript1Partial))\n    : (0 === (completedSegments.instructions & 2) &&\n        ((completedSegments.instructions |= 2),\n        writeChunk(destination, completeBoundaryScriptFunctionOnly)),\n      writeChunk(destination, completeBoundaryScript1Partial));\n  completedSegments = stringToChunk(i.toString(16));\n  writeChunk(destination, request.boundaryPrefix);\n  writeChunk(destination, completedSegments);\n  writeChunk(destination, completeBoundaryScript2);\n  writeChunk(destination, request.segmentPrefix);\n  writeChunk(destination, completedSegments);\n  requiresStyleInsertion\n    ? (writeChunk(destination, completeBoundaryScript3a),\n      writeStyleResourceDependenciesInJS(destination, boundary))\n    : writeChunk(destination, completeBoundaryScript3b);\n  boundary = writeChunkAndReturn(destination, completeBoundaryScriptEnd);\n  return writeBootstrap(destination, request) && boundary;\n}\nfunction flushPartiallyCompletedSegment(\n  request,\n  destination,\n  boundary,\n  segment\n) {\n  if (2 === segment.status) return !0;\n  var hoistableState = boundary.contentState,\n    segmentID = segment.id;\n  if (-1 === segmentID) {\n    if (-1 === (segment.id = boundary.rootSegmentID))\n      throw Error(\n        \"A root segment ID must have been assigned by now. This is a bug in React.\"\n      );\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  }\n  if (segmentID === boundary.rootSegmentID)\n    return flushSegmentContainer(request, destination, segment, hoistableState);\n  flushSegmentContainer(request, destination, segment, hoistableState);\n  boundary = request.resumableState;\n  request = request.renderState;\n  writeChunk(destination, request.startInlineScript);\n  writeChunk(destination, endOfStartTag);\n  0 === (boundary.instructions & 1)\n    ? ((boundary.instructions |= 1),\n      writeChunk(destination, completeSegmentScript1Full))\n    : writeChunk(destination, completeSegmentScript1Partial);\n  writeChunk(destination, request.segmentPrefix);\n  segmentID = stringToChunk(segmentID.toString(16));\n  writeChunk(destination, segmentID);\n  writeChunk(destination, completeSegmentScript2);\n  writeChunk(destination, request.placeholderPrefix);\n  writeChunk(destination, segmentID);\n  destination = writeChunkAndReturn(destination, completeSegmentScriptEnd);\n  return destination;\n}\nfunction flushCompletedQueues(request, destination) {\n  currentView = new Uint8Array(2048);\n  writtenBytes = 0;\n  try {\n    if (!(0 < request.pendingRootTasks)) {\n      var i,\n        completedRootSegment = request.completedRootSegment;\n      if (null !== completedRootSegment) {\n        if (5 === completedRootSegment.status) return;\n        var completedPreambleSegments = request.completedPreambleSegments;\n        if (null === completedPreambleSegments) return;\n        flushedByteSize = request.byteSize;\n        var resumableState = request.resumableState,\n          renderState = request.renderState,\n          preamble = renderState.preamble,\n          htmlChunks = preamble.htmlChunks,\n          headChunks = preamble.headChunks,\n          i$jscomp$0;\n        if (htmlChunks) {\n          for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)\n            writeChunk(destination, htmlChunks[i$jscomp$0]);\n          if (headChunks)\n            for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n              writeChunk(destination, headChunks[i$jscomp$0]);\n          else\n            writeChunk(destination, startChunkForTag(\"head\")),\n              writeChunk(destination, endOfStartTag);\n        } else if (headChunks)\n          for (i$jscomp$0 = 0; i$jscomp$0 < headChunks.length; i$jscomp$0++)\n            writeChunk(destination, headChunks[i$jscomp$0]);\n        var charsetChunks = renderState.charsetChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < charsetChunks.length; i$jscomp$0++)\n          writeChunk(destination, charsetChunks[i$jscomp$0]);\n        charsetChunks.length = 0;\n        renderState.preconnects.forEach(flushResource, destination);\n        renderState.preconnects.clear();\n        var viewportChunks = renderState.viewportChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < viewportChunks.length; i$jscomp$0++)\n          writeChunk(destination, viewportChunks[i$jscomp$0]);\n        viewportChunks.length = 0;\n        renderState.fontPreloads.forEach(flushResource, destination);\n        renderState.fontPreloads.clear();\n        renderState.highImagePreloads.forEach(flushResource, destination);\n        renderState.highImagePreloads.clear();\n        currentlyFlushingRenderState = renderState;\n        renderState.styles.forEach(flushStylesInPreamble, destination);\n        currentlyFlushingRenderState = null;\n        var importMapChunks = renderState.importMapChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < importMapChunks.length; i$jscomp$0++)\n          writeChunk(destination, importMapChunks[i$jscomp$0]);\n        importMapChunks.length = 0;\n        renderState.bootstrapScripts.forEach(flushResource, destination);\n        renderState.scripts.forEach(flushResource, destination);\n        renderState.scripts.clear();\n        renderState.bulkPreloads.forEach(flushResource, destination);\n        renderState.bulkPreloads.clear();\n        htmlChunks || headChunks || (resumableState.instructions |= 32);\n        var hoistableChunks = renderState.hoistableChunks;\n        for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)\n          writeChunk(destination, hoistableChunks[i$jscomp$0]);\n        for (\n          resumableState = hoistableChunks.length = 0;\n          resumableState < completedPreambleSegments.length;\n          resumableState++\n        ) {\n          var segments = completedPreambleSegments[resumableState];\n          for (renderState = 0; renderState < segments.length; renderState++)\n            flushSegment(request, destination, segments[renderState], null);\n        }\n        var preamble$jscomp$0 = request.renderState.preamble,\n          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;\n        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&\n          writeChunk(destination, endChunkForTag(\"head\"));\n        var bodyChunks = preamble$jscomp$0.bodyChunks;\n        if (bodyChunks)\n          for (\n            completedPreambleSegments = 0;\n            completedPreambleSegments < bodyChunks.length;\n            completedPreambleSegments++\n          )\n            writeChunk(destination, bodyChunks[completedPreambleSegments]);\n        flushSegment(request, destination, completedRootSegment, null);\n        request.completedRootSegment = null;\n        var renderState$jscomp$0 = request.renderState;\n        if (\n          0 !== request.allPendingTasks ||\n          0 !== request.clientRenderedBoundaries.length ||\n          0 !== request.completedBoundaries.length ||\n          (null !== request.trackedPostpones &&\n            (0 !== request.trackedPostpones.rootNodes.length ||\n              null !== request.trackedPostpones.rootSlots))\n        ) {\n          var resumableState$jscomp$0 = request.resumableState;\n          if (0 === (resumableState$jscomp$0.instructions & 64)) {\n            resumableState$jscomp$0.instructions |= 64;\n            writeChunk(destination, renderState$jscomp$0.startInlineScript);\n            if (0 === (resumableState$jscomp$0.instructions & 32)) {\n              resumableState$jscomp$0.instructions |= 32;\n              var shellId = \"_\" + resumableState$jscomp$0.idPrefix + \"R_\";\n              writeChunk(destination, completedShellIdAttributeStart);\n              writeChunk(\n                destination,\n                stringToChunk(escapeTextForBrowser(shellId))\n              );\n              writeChunk(destination, attributeEnd);\n            }\n            writeChunk(destination, endOfStartTag);\n            writeChunk(destination, shellTimeRuntimeScript);\n            writeChunkAndReturn(destination, endInlineScript);\n          }\n        }\n        writeBootstrap(destination, renderState$jscomp$0);\n      }\n      var renderState$jscomp$1 = request.renderState;\n      completedRootSegment = 0;\n      var viewportChunks$jscomp$0 = renderState$jscomp$1.viewportChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < viewportChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, viewportChunks$jscomp$0[completedRootSegment]);\n      viewportChunks$jscomp$0.length = 0;\n      renderState$jscomp$1.preconnects.forEach(flushResource, destination);\n      renderState$jscomp$1.preconnects.clear();\n      renderState$jscomp$1.fontPreloads.forEach(flushResource, destination);\n      renderState$jscomp$1.fontPreloads.clear();\n      renderState$jscomp$1.highImagePreloads.forEach(\n        flushResource,\n        destination\n      );\n      renderState$jscomp$1.highImagePreloads.clear();\n      renderState$jscomp$1.styles.forEach(preloadLateStyles, destination);\n      renderState$jscomp$1.scripts.forEach(flushResource, destination);\n      renderState$jscomp$1.scripts.clear();\n      renderState$jscomp$1.bulkPreloads.forEach(flushResource, destination);\n      renderState$jscomp$1.bulkPreloads.clear();\n      var hoistableChunks$jscomp$0 = renderState$jscomp$1.hoistableChunks;\n      for (\n        completedRootSegment = 0;\n        completedRootSegment < hoistableChunks$jscomp$0.length;\n        completedRootSegment++\n      )\n        writeChunk(destination, hoistableChunks$jscomp$0[completedRootSegment]);\n      hoistableChunks$jscomp$0.length = 0;\n      var clientRenderedBoundaries = request.clientRenderedBoundaries;\n      for (i = 0; i < clientRenderedBoundaries.length; i++) {\n        var boundary = clientRenderedBoundaries[i];\n        renderState$jscomp$1 = destination;\n        var resumableState$jscomp$1 = request.resumableState,\n          renderState$jscomp$2 = request.renderState,\n          id = boundary.rootSegmentID,\n          errorDigest = boundary.errorDigest;\n        writeChunk(\n          renderState$jscomp$1,\n          renderState$jscomp$2.startInlineScript\n        );\n        writeChunk(renderState$jscomp$1, endOfStartTag);\n        0 === (resumableState$jscomp$1.instructions & 4)\n          ? ((resumableState$jscomp$1.instructions |= 4),\n            writeChunk(renderState$jscomp$1, clientRenderScript1Full))\n          : writeChunk(renderState$jscomp$1, clientRenderScript1Partial);\n        writeChunk(renderState$jscomp$1, renderState$jscomp$2.boundaryPrefix);\n        writeChunk(renderState$jscomp$1, stringToChunk(id.toString(16)));\n        writeChunk(renderState$jscomp$1, clientRenderScript1A);\n        errorDigest &&\n          (writeChunk(\n            renderState$jscomp$1,\n            clientRenderErrorScriptArgInterstitial\n          ),\n          writeChunk(\n            renderState$jscomp$1,\n            stringToChunk(\n              escapeJSStringsForInstructionScripts(errorDigest || \"\")\n            )\n          ));\n        var JSCompiler_inline_result = writeChunkAndReturn(\n          renderState$jscomp$1,\n          clientRenderScriptEnd\n        );\n        if (!JSCompiler_inline_result) {\n          request.destination = null;\n          i++;\n          clientRenderedBoundaries.splice(0, i);\n          return;\n        }\n      }\n      clientRenderedBoundaries.splice(0, i);\n      var completedBoundaries = request.completedBoundaries;\n      for (i = 0; i < completedBoundaries.length; i++)\n        if (\n          !flushCompletedBoundary(request, destination, completedBoundaries[i])\n        ) {\n          request.destination = null;\n          i++;\n          completedBoundaries.splice(0, i);\n          return;\n        }\n      completedBoundaries.splice(0, i);\n      completeWriting(destination);\n      currentView = new Uint8Array(2048);\n      writtenBytes = 0;\n      var partialBoundaries = request.partialBoundaries;\n      for (i = 0; i < partialBoundaries.length; i++) {\n        var boundary$66 = partialBoundaries[i];\n        a: {\n          clientRenderedBoundaries = request;\n          boundary = destination;\n          flushedByteSize = boundary$66.byteSize;\n          var completedSegments = boundary$66.completedSegments;\n          for (\n            JSCompiler_inline_result = 0;\n            JSCompiler_inline_result < completedSegments.length;\n            JSCompiler_inline_result++\n          )\n            if (\n              !flushPartiallyCompletedSegment(\n                clientRenderedBoundaries,\n                boundary,\n                boundary$66,\n                completedSegments[JSCompiler_inline_result]\n              )\n            ) {\n              JSCompiler_inline_result++;\n              completedSegments.splice(0, JSCompiler_inline_result);\n              var JSCompiler_inline_result$jscomp$0 = !1;\n              break a;\n            }\n          completedSegments.splice(0, JSCompiler_inline_result);\n          var row = boundary$66.row;\n          null !== row &&\n            row.together &&\n            1 === boundary$66.pendingTasks &&\n            (1 === row.pendingTasks\n              ? unblockSuspenseListRow(\n                  clientRenderedBoundaries,\n                  row,\n                  row.hoistables\n                )\n              : row.pendingTasks--);\n          JSCompiler_inline_result$jscomp$0 = writeHoistablesForBoundary(\n            boundary,\n            boundary$66.contentState,\n            clientRenderedBoundaries.renderState\n          );\n        }\n        if (!JSCompiler_inline_result$jscomp$0) {\n          request.destination = null;\n          i++;\n          partialBoundaries.splice(0, i);\n          return;\n        }\n      }\n      partialBoundaries.splice(0, i);\n      var largeBoundaries = request.completedBoundaries;\n      for (i = 0; i < largeBoundaries.length; i++)\n        if (!flushCompletedBoundary(request, destination, largeBoundaries[i])) {\n          request.destination = null;\n          i++;\n          largeBoundaries.splice(0, i);\n          return;\n        }\n      largeBoundaries.splice(0, i);\n    }\n  } finally {\n    0 === request.allPendingTasks &&\n    0 === request.clientRenderedBoundaries.length &&\n    0 === request.completedBoundaries.length\n      ? ((request.flushScheduled = !1),\n        (i = request.resumableState),\n        i.hasBody && writeChunk(destination, endChunkForTag(\"body\")),\n        i.hasHtml && writeChunk(destination, endChunkForTag(\"html\")),\n        completeWriting(destination),\n        (request.status = 14),\n        destination.close(),\n        (request.destination = null))\n      : completeWriting(destination);\n  }\n}\nfunction startWork(request) {\n  request.flushScheduled = null !== request.destination;\n  supportsRequestStorage\n    ? scheduleMicrotask(function () {\n        return requestStorage.run(request, performWork, request);\n      })\n    : scheduleMicrotask(function () {\n        return performWork(request);\n      });\n  setTimeout(function () {\n    10 === request.status && (request.status = 11);\n    null === request.trackedPostpones &&\n      (supportsRequestStorage\n        ? requestStorage.run(\n            request,\n            enqueueEarlyPreloadsAfterInitialWork,\n            request\n          )\n        : enqueueEarlyPreloadsAfterInitialWork(request));\n  }, 0);\n}\nfunction enqueueEarlyPreloadsAfterInitialWork(request) {\n  safelyEmitEarlyPreloads(request, 0 === request.pendingRootTasks);\n}\nfunction enqueueFlush(request) {\n  !1 === request.flushScheduled &&\n    0 === request.pingedTasks.length &&\n    null !== request.destination &&\n    ((request.flushScheduled = !0),\n    setTimeout(function () {\n      var destination = request.destination;\n      destination\n        ? flushCompletedQueues(request, destination)\n        : (request.flushScheduled = !1);\n    }, 0));\n}\nfunction startFlowing(request, destination) {\n  if (13 === request.status)\n    (request.status = 14), closeWithError(destination, request.fatalError);\n  else if (14 !== request.status && null === request.destination) {\n    request.destination = destination;\n    try {\n      flushCompletedQueues(request, destination);\n    } catch (error) {\n      logRecoverableError(request, error, {}), fatalError(request, error);\n    }\n  }\n}\nfunction abort(request, reason) {\n  if (11 === request.status || 10 === request.status) request.status = 12;\n  try {\n    var abortableTasks = request.abortableTasks;\n    if (0 < abortableTasks.size) {\n      var error =\n        void 0 === reason\n          ? Error(\"The render was aborted by the server without a reason.\")\n          : \"object\" === typeof reason &&\n              null !== reason &&\n              \"function\" === typeof reason.then\n            ? Error(\"The render was aborted by the server with a promise.\")\n            : reason;\n      request.fatalError = error;\n      abortableTasks.forEach(function (task) {\n        return abortTask(task, request, error);\n      });\n      abortableTasks.clear();\n    }\n    null !== request.destination &&\n      flushCompletedQueues(request, request.destination);\n  } catch (error$68) {\n    logRecoverableError(request, error$68, {}), fatalError(request, error$68);\n  }\n}\nfunction addToReplayParent(node, parentKeyPath, trackedPostpones) {\n  if (null === parentKeyPath) trackedPostpones.rootNodes.push(node);\n  else {\n    var workingMap = trackedPostpones.workingMap,\n      parentNode = workingMap.get(parentKeyPath);\n    void 0 === parentNode &&\n      ((parentNode = [parentKeyPath[1], parentKeyPath[2], [], null]),\n      workingMap.set(parentKeyPath, parentNode),\n      addToReplayParent(parentNode, parentKeyPath[0], trackedPostpones));\n    parentNode[2].push(node);\n  }\n}\nfunction ensureCorrectIsomorphicReactVersion() {\n  var isomorphicReactPackageVersion = React.version;\n  if (\"19.2.0-canary-0bdb9206-20250818\" !== isomorphicReactPackageVersion)\n    throw Error(\n      'Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\\n  - react:      ' +\n        (isomorphicReactPackageVersion +\n          \"\\n  - react-dom:  19.2.0-canary-0bdb9206-20250818\\nLearn more: https://react.dev/warnings/version-mismatch\")\n    );\n}\nensureCorrectIsomorphicReactVersion();\nensureCorrectIsomorphicReactVersion();\nexports.prerender = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resources = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createPrerenderRequest(\n        children,\n        resources,\n        createRenderState(\n          resources,\n          void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        function () {\n          var result = {\n            prelude: new ReadableStream(\n              {\n                type: \"bytes\",\n                pull: function (controller) {\n                  startFlowing(request, controller);\n                },\n                cancel: function (reason) {\n                  request.destination = null;\n                  abort(request, reason);\n                }\n              },\n              { highWaterMark: 0 }\n            )\n          };\n          resolve(result);\n        },\n        void 0,\n        void 0,\n        reject,\n        options ? options.onPostpone : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\nexports.renderToReadableStream = function (children, options) {\n  return new Promise(function (resolve, reject) {\n    var onFatalError,\n      onAllReady,\n      allReady = new Promise(function (res, rej) {\n        onAllReady = res;\n        onFatalError = rej;\n      }),\n      onHeaders = options ? options.onHeaders : void 0,\n      onHeadersImpl;\n    onHeaders &&\n      (onHeadersImpl = function (headersDescriptor) {\n        onHeaders(new Headers(headersDescriptor));\n      });\n    var resumableState = createResumableState(\n        options ? options.identifierPrefix : void 0,\n        options ? options.unstable_externalRuntimeSrc : void 0,\n        options ? options.bootstrapScriptContent : void 0,\n        options ? options.bootstrapScripts : void 0,\n        options ? options.bootstrapModules : void 0\n      ),\n      request = createRequest(\n        children,\n        resumableState,\n        createRenderState(\n          resumableState,\n          options ? options.nonce : void 0,\n          options ? options.unstable_externalRuntimeSrc : void 0,\n          options ? options.importMap : void 0,\n          onHeadersImpl,\n          options ? options.maxHeadersLength : void 0\n        ),\n        createRootFormatContext(options ? options.namespaceURI : void 0),\n        options ? options.progressiveChunkSize : void 0,\n        options ? options.onError : void 0,\n        onAllReady,\n        function () {\n          var stream = new ReadableStream(\n            {\n              type: \"bytes\",\n              pull: function (controller) {\n                startFlowing(request, controller);\n              },\n              cancel: function (reason) {\n                request.destination = null;\n                abort(request, reason);\n              }\n            },\n            { highWaterMark: 0 }\n          );\n          stream.allReady = allReady;\n          resolve(stream);\n        },\n        function (error) {\n          allReady.catch(function () {});\n          reject(error);\n        },\n        onFatalError,\n        options ? options.onPostpone : void 0,\n        options ? options.formState : void 0\n      );\n    if (options && options.signal) {\n      var signal = options.signal;\n      if (signal.aborted) abort(request, signal.reason);\n      else {\n        var listener = function () {\n          abort(request, signal.reason);\n          signal.removeEventListener(\"abort\", listener);\n        };\n        signal.addEventListener(\"abort\", listener);\n      }\n    }\n    startWork(request);\n  });\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","'use client'\n\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Segment component.\n *\n * additionally we may send a promise representing params. We don't ever use this passed\n * value but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations\n * such as when cacheComponents is enabled. It is up to the caller to decide if the promises are needed.\n */\nexport function ClientSegmentRoot({\n  Component,\n  slots,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promise,\n}: {\n  Component: React.ComponentType<any>\n  slots: { [key: string]: React.ReactNode }\n  params: Params\n  promise?: Promise<any>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling params in a client segment such as a Layout or Template.'\n      )\n    }\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component {...slots} params={clientParams} />\n  } else {\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n    return <Component {...slots} params={clientParams} />\n  }\n}\n","/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n  REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || \"object\" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[\"@@iterator\"];\n  return \"function\" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    \"object\" !== typeof partialState &&\n    \"function\" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      \"takes an object of state variables to update or a function which returns an object of state variables.\"\n    );\n  this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray;\nfunction noop() {}\nvar ReactSharedInternals = { H: null, A: null, T: null, S: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, props) {\n  var refProp = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== refProp ? refProp : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(oldElement.type, newKey, oldElement.props);\n}\nfunction isValidElement(object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { \"=\": \"=0\", \":\": \"=2\" };\n  return (\n    \"$\" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return \"object\" === typeof element && null !== element && null != element.key\n    ? escape(\"\" + element.key)\n    : index.toString(36);\n}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case \"fulfilled\":\n      return thenable.value;\n    case \"rejected\":\n      throw thenable.reason;\n    default:\n      switch (\n        (\"string\" === typeof thenable.status\n          ? thenable.then(noop, noop)\n          : ((thenable.status = \"pending\"),\n            thenable.then(\n              function (fulfilledValue) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"fulfilled\"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                \"pending\" === thenable.status &&\n                  ((thenable.status = \"rejected\"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case \"fulfilled\":\n          return thenable.value;\n        case \"rejected\":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if (\"undefined\" === type || \"boolean\" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case \"bigint\":\n      case \"string\":\n      case \"number\":\n        invokeCallback = !0;\n        break;\n      case \"object\":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        \"\" === nameSoFar ? \".\" + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = \"\"),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, \"$&/\") + \"/\"),\n          mapIntoArray(callback, array, escapedPrefix, \"\", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? \"\"\n                  : (\"\" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      \"$&/\"\n                    ) + \"/\") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = \"\" === nameSoFar ? \".\" : nameSoFar + \":\";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), \"function\" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (\"object\" === type) {\n    if (\"function\" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      \"Objects are not valid as a React child (found: \" +\n        (\"[object Object]\" === array\n          ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\"\n          : array) +\n        \"). If you meant to render a collection of children, use an array instead.\"\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, \"\", \"\", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  \"function\" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          \"object\" === typeof window &&\n          \"function\" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent(\"error\", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              \"object\" === typeof error &&\n              null !== error &&\n              \"string\" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          \"object\" === typeof process &&\n          \"function\" === typeof process.emit\n        ) {\n          process.emit(\"uncaughtException\", error);\n          return;\n        }\n        console.error(error);\n      };\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        \"React.Children.only expected to receive a single React element child.\"\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cacheSignal = function () {\n  return null;\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      \"The argument must be a React element, but you passed \" + element + \".\"\n    );\n  var props = assign({}, element.props),\n    key = element.key;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      !hasOwnProperty.call(config, propName) ||\n        \"key\" === propName ||\n        \"__self\" === propName ||\n        \"__source\" === propName ||\n        (\"ref\" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = \"\" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        \"key\" !== propName &&\n        \"__self\" !== propName &&\n        \"__source\" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    \"object\" === typeof returnValue &&\n      null !== returnValue &&\n      \"function\" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    null !== prevTransition &&\n      null !== currentTransition.types &&\n      (prevTransition.types = currentTransition.types),\n      (ReactSharedInternals.T = prevTransition);\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, deps) {\n  return ReactSharedInternals.H.useEffect(create, deps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","module.exports = require(\"node:buffer\");","import type { Timestamp } from '../cache-handlers/types'\n\n// We share the tags manifest between the \"use cache\" handlers and the previous\n// file-system cache.\nexport const tagsManifest = new Map<string, number>()\n\nexport const isStale = (tags: string[], timestamp: Timestamp) => {\n  for (const tag of tags) {\n    const revalidatedAt = tagsManifest.get(tag)\n\n    if (typeof revalidatedAt === 'number' && revalidatedAt >= timestamp) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @license React\n * react-dom.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction formatProdErrorMessage(code) {\n  var url = \"https://react.dev/errors/\" + code;\n  if (1 < arguments.length) {\n    url += \"?args[]=\" + encodeURIComponent(arguments[1]);\n    for (var i = 2; i < arguments.length; i++)\n      url += \"&args[]=\" + encodeURIComponent(arguments[i]);\n  }\n  return (\n    \"Minified React error #\" +\n    code +\n    \"; visit \" +\n    url +\n    \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"\n  );\n}\nfunction noop() {}\nvar Internals = {\n    d: {\n      f: noop,\n      r: function () {\n        throw Error(formatProdErrorMessage(522));\n      },\n      D: noop,\n      C: noop,\n      L: noop,\n      m: noop,\n      X: noop,\n      S: noop,\n      M: noop\n    },\n    p: 0,\n    findDOMNode: null\n  },\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\nfunction createPortal$1(children, containerInfo, implementation) {\n  var key =\n    3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: null == key ? null : \"\" + key,\n    children: children,\n    containerInfo: containerInfo,\n    implementation: implementation\n  };\n}\nvar ReactSharedInternals =\n  React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.createPortal = function (children, container) {\n  var key =\n    2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  if (\n    !container ||\n    (1 !== container.nodeType &&\n      9 !== container.nodeType &&\n      11 !== container.nodeType)\n  )\n    throw Error(formatProdErrorMessage(299));\n  return createPortal$1(children, container, null, key);\n};\nexports.flushSync = function (fn) {\n  var previousTransition = ReactSharedInternals.T,\n    previousUpdatePriority = Internals.p;\n  try {\n    if (((ReactSharedInternals.T = null), (Internals.p = 2), fn)) return fn();\n  } finally {\n    (ReactSharedInternals.T = previousTransition),\n      (Internals.p = previousUpdatePriority),\n      Internals.d.f();\n  }\n};\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.requestFormReset = function (form) {\n  Internals.d.r(form);\n};\nexports.unstable_batchedUpdates = function (fn, a) {\n  return fn(a);\n};\nexports.useFormState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useFormState(action, initialState, permalink);\n};\nexports.useFormStatus = function () {\n  return ReactSharedInternals.H.useHostTransitionStatus();\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","export function isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(route, expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context. This occurred at route \"${route}\".`), this.route = route, this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\n/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for cacheComponents where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */ export function makeHangingPromise(signal, route, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(route, expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(route, expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\nexport function makeDevtoolsIOAwarePromise(underlying) {\n    // in React DevTools if we resolve in a setTimeout we will observe\n    // the promise resolution as something that can suspend a boundary or root.\n    return new Promise((resolve)=>{\n        // Must use setTimeout to be considered IO React DevTools. setImmediate will not work.\n        setTimeout(()=>{\n            resolve(underlying);\n        }, 0);\n    });\n}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","module.exports = require(\"node:async_hooks\");","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","import {\n  fetchServerResponse,\n  type FetchServerResponseResult,\n} from './fetch-server-response'\nimport {\n  PrefetchCacheEntryStatus,\n  type PrefetchCacheEntry,\n  PrefetchKind,\n  type ReadonlyReducerState,\n} from './router-reducer-types'\nimport { prefetchQueue } from './reducers/prefetch-reducer'\n\nconst INTERCEPTION_CACHE_KEY_MARKER = '%'\n\nexport type AliasedPrefetchCacheEntry = PrefetchCacheEntry & {\n  /** This is a special property that indicates a prefetch entry associated with a different URL\n   * was returned rather than the requested URL. This signals to the router that it should only\n   * apply the part that doesn't depend on searchParams (specifically the loading state).\n   */\n  aliased?: boolean\n}\n\n/**\n * Creates a cache key for the router prefetch cache\n *\n * @param url - The URL being navigated to\n * @param nextUrl - an internal URL, primarily used for handling rewrites. Defaults to '/'.\n * @return The generated prefetch cache key.\n */\nfunction createPrefetchCacheKeyImpl(\n  url: URL,\n  includeSearchParams: boolean,\n  prefix?: string | null\n) {\n  // Initially we only use the pathname as the cache key. We don't want to include\n  // search params so that multiple URLs with the same search parameter can re-use\n  // loading states.\n  let pathnameFromUrl = url.pathname\n\n  // RSC responses can differ based on search params, specifically in the case where we aren't\n  // returning a partial response (ie with `PrefetchKind.AUTO`).\n  // In the auto case, since loading.js & layout.js won't have access to search params,\n  // we can safely re-use that cache entry. But for full prefetches, we should not\n  // re-use the cache entry as the response may differ.\n  if (includeSearchParams) {\n    // if we have a full prefetch, we can include the search param in the key,\n    // as we'll be getting back a full response. The server might have read the search\n    // params when generating the full response.\n    pathnameFromUrl += url.search\n  }\n\n  if (prefix) {\n    return `${prefix}${INTERCEPTION_CACHE_KEY_MARKER}${pathnameFromUrl}`\n  }\n\n  return pathnameFromUrl\n}\n\nfunction createPrefetchCacheKey(\n  url: URL,\n  kind: PrefetchKind | undefined,\n  nextUrl?: string | null\n) {\n  return createPrefetchCacheKeyImpl(url, kind === PrefetchKind.FULL, nextUrl)\n}\n\nfunction getExistingCacheEntry(\n  url: URL,\n  kind: PrefetchKind = PrefetchKind.TEMPORARY,\n  nextUrl: string | null,\n  prefetchCache: Map<string, PrefetchCacheEntry>,\n  allowAliasing: boolean\n): AliasedPrefetchCacheEntry | undefined {\n  // We first check if there's a more specific interception route prefetch entry\n  // This is because when we detect a prefetch that corresponds with an interception route, we prefix it with nextUrl (see `createPrefetchCacheKey`)\n  // to avoid conflicts with other pages that may have the same URL but render different things depending on the `Next-URL` header.\n  for (const maybeNextUrl of [nextUrl, null]) {\n    const cacheKeyWithParams = createPrefetchCacheKeyImpl(\n      url,\n      true,\n      maybeNextUrl\n    )\n    const cacheKeyWithoutParams = createPrefetchCacheKeyImpl(\n      url,\n      false,\n      maybeNextUrl\n    )\n\n    // First, we check if we have a cache entry that exactly matches the URL\n    const cacheKeyToUse = url.search\n      ? cacheKeyWithParams\n      : cacheKeyWithoutParams\n\n    const existingEntry = prefetchCache.get(cacheKeyToUse)\n    if (existingEntry && allowAliasing) {\n      // We know we're returning an aliased entry when the pathname matches but the search params don't,\n      const isAliased =\n        existingEntry.url.pathname === url.pathname &&\n        existingEntry.url.search !== url.search\n\n      if (isAliased) {\n        return {\n          ...existingEntry,\n          aliased: true,\n        }\n      }\n\n      return existingEntry\n    }\n\n    // If the request contains search params, and we're not doing a full prefetch, we can return the\n    // param-less entry if it exists.\n    // This is technically covered by the check at the bottom of this function, which iterates over cache entries,\n    // but lets us arrive there quicker in the param-full case.\n    const entryWithoutParams = prefetchCache.get(cacheKeyWithoutParams)\n    if (\n      process.env.NODE_ENV !== 'development' &&\n      allowAliasing &&\n      url.search &&\n      kind !== PrefetchKind.FULL &&\n      entryWithoutParams &&\n      // We shouldn't return the aliased entry if it was relocated to a new cache key.\n      // Since it's rewritten, it could respond with a completely different loading state.\n      !entryWithoutParams.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n    ) {\n      return { ...entryWithoutParams, aliased: true }\n    }\n  }\n\n  // If we've gotten to this point, we didn't find a specific cache entry that matched\n  // the request URL.\n  // We attempt a partial match by checking if there's a cache entry with the same pathname.\n  // Regardless of what we find, since it doesn't correspond with the requested URL, we'll mark it \"aliased\".\n  // This will signal to the router that it should only apply the loading state on the prefetched data.\n  if (\n    process.env.NODE_ENV !== 'development' &&\n    kind !== PrefetchKind.FULL &&\n    allowAliasing\n  ) {\n    for (const cacheEntry of prefetchCache.values()) {\n      if (\n        cacheEntry.url.pathname === url.pathname &&\n        // We shouldn't return the aliased entry if it was relocated to a new cache key.\n        // Since it's rewritten, it could respond with a completely different loading state.\n        !cacheEntry.key.includes(INTERCEPTION_CACHE_KEY_MARKER)\n      ) {\n        return { ...cacheEntry, aliased: true }\n      }\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns a prefetch cache entry if one exists. Otherwise creates a new one and enqueues a fetch request\n * to retrieve the prefetch data from the server.\n */\nexport function getOrCreatePrefetchCacheEntry({\n  url,\n  nextUrl,\n  tree,\n  prefetchCache,\n  kind,\n  allowAliasing = true,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'prefetchCache' | 'tree'> & {\n  url: URL\n  kind?: PrefetchKind\n  allowAliasing: boolean\n}): AliasedPrefetchCacheEntry {\n  const existingCacheEntry = getExistingCacheEntry(\n    url,\n    kind,\n    nextUrl,\n    prefetchCache,\n    allowAliasing\n  )\n\n  if (existingCacheEntry) {\n    // Grab the latest status of the cache entry and update it\n    existingCacheEntry.status = getPrefetchEntryCacheStatus(existingCacheEntry)\n\n    // when `kind` is provided, an explicit prefetch was requested.\n    // if the requested prefetch is \"full\" and the current cache entry wasn't, we want to re-prefetch with the new intent\n    const switchedToFullPrefetch =\n      existingCacheEntry.kind !== PrefetchKind.FULL &&\n      kind === PrefetchKind.FULL\n\n    if (switchedToFullPrefetch) {\n      // If we switched to a full prefetch, validate that the existing cache entry contained partial data.\n      // It's possible that the cache entry was seeded with full data but has a cache type of \"auto\" (ie when cache entries\n      // are seeded but without a prefetch intent)\n      existingCacheEntry.data.then((prefetchResponse) => {\n        const isFullPrefetch =\n          Array.isArray(prefetchResponse.flightData) &&\n          prefetchResponse.flightData.some((flightData) => {\n            // If we started rendering from the root and we returned RSC data (seedData), we already had a full prefetch.\n            return flightData.isRootRender && flightData.seedData !== null\n          })\n\n        if (!isFullPrefetch) {\n          return createLazyPrefetchEntry({\n            tree,\n            url,\n            nextUrl,\n            prefetchCache,\n            // If we didn't get an explicit prefetch kind, we want to set a temporary kind\n            // rather than assuming the same intent as the previous entry, to be consistent with how we\n            // lazily create prefetch entries when intent is left unspecified.\n            kind: kind ?? PrefetchKind.TEMPORARY,\n          })\n        }\n      })\n    }\n\n    // If the existing cache entry was marked as temporary, it means it was lazily created when attempting to get an entry,\n    // where we didn't have the prefetch intent. Now that we have the intent (in `kind`), we want to update the entry to the more accurate kind.\n    if (kind && existingCacheEntry.kind === PrefetchKind.TEMPORARY) {\n      existingCacheEntry.kind = kind\n    }\n\n    // We've determined that the existing entry we found is still valid, so we return it.\n    return existingCacheEntry\n  }\n\n  // If we didn't return an entry, create a new one.\n  return createLazyPrefetchEntry({\n    tree,\n    url,\n    nextUrl,\n    prefetchCache,\n    kind: kind || PrefetchKind.TEMPORARY,\n  })\n}\n\n/*\n * Used to take an existing cache entry and prefix it with the nextUrl, if it exists.\n * This ensures that we don't have conflicting cache entries for the same URL (as is the case with route interception).\n */\nfunction prefixExistingPrefetchCacheEntry({\n  url,\n  nextUrl,\n  prefetchCache,\n  existingCacheKey,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'prefetchCache'> & {\n  url: URL\n  existingCacheKey: string\n}) {\n  const existingCacheEntry = prefetchCache.get(existingCacheKey)\n  if (!existingCacheEntry) {\n    // no-op -- there wasn't an entry to move\n    return\n  }\n\n  const newCacheKey = createPrefetchCacheKey(\n    url,\n    existingCacheEntry.kind,\n    nextUrl\n  )\n  prefetchCache.set(newCacheKey, { ...existingCacheEntry, key: newCacheKey })\n  prefetchCache.delete(existingCacheKey)\n\n  return newCacheKey\n}\n\n/**\n * Use to seed the prefetch cache with data that has already been fetched.\n */\nexport function createSeededPrefetchCacheEntry({\n  nextUrl,\n  tree,\n  prefetchCache,\n  url,\n  data,\n  kind,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'tree' | 'prefetchCache'> & {\n  url: URL\n  data: FetchServerResponseResult\n  kind: PrefetchKind\n}) {\n  // The initial cache entry technically includes full data, but it isn't explicitly prefetched -- we just seed the\n  // prefetch cache so that we can skip an extra prefetch request later, since we already have the data.\n  // if the prefetch corresponds with an interception route, we use the nextUrl to prefix the cache key\n  const prefetchCacheKey = data.couldBeIntercepted\n    ? createPrefetchCacheKey(url, kind, nextUrl)\n    : createPrefetchCacheKey(url, kind)\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data: Promise.resolve(data),\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: Date.now(),\n    staleTime: data.staleTime,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  } satisfies PrefetchCacheEntry\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\n/**\n * Creates a prefetch entry entry and enqueues a fetch request to retrieve the data.\n */\nfunction createLazyPrefetchEntry({\n  url,\n  kind,\n  tree,\n  nextUrl,\n  prefetchCache,\n}: Pick<ReadonlyReducerState, 'nextUrl' | 'tree' | 'prefetchCache'> & {\n  url: URL\n  kind: PrefetchKind\n}): PrefetchCacheEntry {\n  const prefetchCacheKey = createPrefetchCacheKey(url, kind)\n\n  // initiates the fetch request for the prefetch and attaches a listener\n  // to the promise to update the prefetch cache entry when the promise resolves (if necessary)\n  const data = prefetchQueue.enqueue(() =>\n    fetchServerResponse(url, {\n      flightRouterState: tree,\n      nextUrl,\n      prefetchKind: kind,\n    }).then((prefetchResponse) => {\n      // TODO: `fetchServerResponse` should be more tighly coupled to these prefetch cache operations\n      // to avoid drift between this cache key prefixing logic\n      // (which is currently directly influenced by the server response)\n      let newCacheKey\n\n      if (prefetchResponse.couldBeIntercepted) {\n        // Determine if we need to prefix the cache key with the nextUrl\n        newCacheKey = prefixExistingPrefetchCacheEntry({\n          url,\n          existingCacheKey: prefetchCacheKey,\n          nextUrl,\n          prefetchCache,\n        })\n      }\n\n      // If the prefetch was a cache hit, we want to update the existing cache entry to reflect that it was a full prefetch.\n      // This is because we know that a static response will contain the full RSC payload, and can be updated to respect the `static`\n      // staleTime.\n      if (prefetchResponse.prerendered) {\n        const existingCacheEntry = prefetchCache.get(\n          // if we prefixed the cache key due to route interception, we want to use the new key. Otherwise we use the original key\n          newCacheKey ?? prefetchCacheKey\n        )\n        if (existingCacheEntry) {\n          existingCacheEntry.kind = PrefetchKind.FULL\n          if (prefetchResponse.staleTime !== -1) {\n            // This is the stale time that was collected by the server during\n            // static generation. Use this in place of the default stale time.\n            existingCacheEntry.staleTime = prefetchResponse.staleTime\n          }\n        }\n      }\n\n      return prefetchResponse\n    })\n  )\n\n  const prefetchEntry = {\n    treeAtTimeOfPrefetch: tree,\n    data,\n    kind,\n    prefetchTime: Date.now(),\n    lastUsedTime: null,\n    staleTime: -1,\n    key: prefetchCacheKey,\n    status: PrefetchCacheEntryStatus.fresh,\n    url,\n  }\n\n  prefetchCache.set(prefetchCacheKey, prefetchEntry)\n\n  return prefetchEntry\n}\n\nexport function prunePrefetchCache(\n  prefetchCache: ReadonlyReducerState['prefetchCache']\n) {\n  for (const [href, prefetchCacheEntry] of prefetchCache) {\n    if (\n      getPrefetchEntryCacheStatus(prefetchCacheEntry) ===\n      PrefetchCacheEntryStatus.expired\n    ) {\n      prefetchCache.delete(href)\n    }\n  }\n}\n\n// These values are set by `define-env-plugin` (based on `nextConfig.experimental.staleTimes`)\n// and default to 5 minutes (static) / 0 seconds (dynamic)\nexport const DYNAMIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_DYNAMIC_STALETIME) * 1000\n\nexport const STATIC_STALETIME_MS =\n  Number(process.env.__NEXT_CLIENT_ROUTER_STATIC_STALETIME) * 1000\n\nfunction getPrefetchEntryCacheStatus({\n  kind,\n  prefetchTime,\n  lastUsedTime,\n}: PrefetchCacheEntry): PrefetchCacheEntryStatus {\n  // We will re-use the cache entry data for up to the `dynamic` staletime window.\n  if (Date.now() < (lastUsedTime ?? prefetchTime) + DYNAMIC_STALETIME_MS) {\n    return lastUsedTime\n      ? PrefetchCacheEntryStatus.reusable\n      : PrefetchCacheEntryStatus.fresh\n  }\n\n  // For \"auto\" prefetching, we'll re-use only the loading boundary for up to `static` staletime window.\n  // A stale entry will only re-use the `loading` boundary, not the full data.\n  // This will trigger a \"lazy fetch\" for the full data.\n  if (kind === PrefetchKind.AUTO) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.stale\n    }\n  }\n\n  // for \"full\" prefetching, we'll re-use the cache entry data for up to `static` staletime window.\n  if (kind === PrefetchKind.FULL) {\n    if (Date.now() < prefetchTime + STATIC_STALETIME_MS) {\n      return PrefetchCacheEntryStatus.reusable\n    }\n  }\n\n  return PrefetchCacheEntryStatus.expired\n}\n","'use client'\n\nimport type { FetchServerResponseResult } from '../../client/components/router-reducer/fetch-server-response'\nimport type {\n  FocusAndScrollRef,\n  PrefetchKind,\n} from '../../client/components/router-reducer/router-reducer-types'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport React from 'react'\n\nexport type ChildSegmentMap = Map<string, CacheNode>\n\n/**\n * Cache node used in app-router / layout-router.\n */\nexport type CacheNode = ReadyCacheNode | LazyCacheNode\n\nexport type LoadingModuleData =\n  | [React.JSX.Element, React.ReactNode, React.ReactNode]\n  | null\n\n/** viewport metadata node */\nexport type HeadData = React.ReactNode\n\nexport type LazyCacheNode = {\n  /**\n   * When rsc is null, this is a lazily-initialized cache node.\n   *\n   * If the app attempts to render it, it triggers a lazy data fetch,\n   * postpones the render, and schedules an update to a new tree.\n   *\n   * TODO: This mechanism should not be used when PPR is enabled, though it\n   * currently is in some cases until we've implemented partial\n   * segment fetching.\n   */\n  rsc: null\n\n  /**\n   * A prefetched version of the segment data. See explanation in corresponding\n   * field of ReadyCacheNode (below).\n   *\n   * Since LazyCacheNode mostly only exists in the non-PPR implementation, this\n   * will usually be null, but it could have been cloned from a previous\n   * CacheNode that was created by the PPR implementation. Eventually we want\n   * to migrate everything away from LazyCacheNode entirely.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * A pending response for the lazy data fetch. If this is not present\n   * during render, it is lazily created.\n   */\n  lazyData: Promise<FetchServerResponseResult> | null\n\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  /**\n   * Child parallel routes.\n   */\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  /**\n   * The timestamp of the navigation that last updated the CacheNode's data. If\n   * a CacheNode is reused from a previous navigation, this value is not\n   * updated. Used to track the staleness of the data.\n   */\n  navigatedAt: number\n}\n\nexport type ReadyCacheNode = {\n  /**\n   * When rsc is not null, it represents the RSC data for the\n   * corresponding segment.\n   *\n   * `null` is a valid React Node but because segment data is always a\n   * <LayoutRouter> component, we can use `null` to represent empty.\n   *\n   * TODO: For additional type safety, update this type to\n   * Exclude<React.ReactNode, null>. Need to update createEmptyCacheNode to\n   * accept rsc as an argument, or just inline the callers.\n   */\n  rsc: React.ReactNode\n\n  /**\n   * Represents a static version of the segment that can be shown immediately,\n   * and may or may not contain dynamic holes. It's prefetched before a\n   * navigation occurs.\n   *\n   * During rendering, we will choose whether to render `rsc` or `prefetchRsc`\n   * with `useDeferredValue`. As with the `rsc` field, a value of `null` means\n   * no value was provided. In this case, the LayoutRouter will go straight to\n   * rendering the `rsc` value; if that one is also missing, it will suspend and\n   * trigger a lazy fetch.\n   */\n  prefetchRsc: React.ReactNode\n\n  /**\n   * There should never be a lazy data request in this case.\n   */\n  lazyData: null\n  prefetchHead: HeadData | null\n\n  head: HeadData\n\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n\n  parallelRoutes: Map<string, ChildSegmentMap>\n\n  navigatedAt: number\n}\n\nexport interface NavigateOptions {\n  scroll?: boolean\n}\n\nexport interface PrefetchOptions {\n  kind: PrefetchKind\n  onInvalidate?: () => void\n}\n\nexport interface AppRouterInstance {\n  /**\n   * Navigate to the previous history entry.\n   */\n  back(): void\n  /**\n   * Navigate to the next history entry.\n   */\n  forward(): void\n  /**\n   * Refresh the current page.\n   */\n  refresh(): void\n  /**\n   * Refresh the current page. Use in development only.\n   * @internal\n   */\n  hmrRefresh(): void\n  /**\n   * Navigate to the provided href.\n   * Pushes a new history entry.\n   */\n  push(href: string, options?: NavigateOptions): void\n  /**\n   * Navigate to the provided href.\n   * Replaces the current history entry.\n   */\n  replace(href: string, options?: NavigateOptions): void\n  /**\n   * Prefetch the provided href.\n   */\n  prefetch(href: string, options?: PrefetchOptions): void\n}\n\nexport const AppRouterContext = React.createContext<AppRouterInstance | null>(\n  null\n)\nexport const LayoutRouterContext = React.createContext<{\n  parentTree: FlightRouterState\n  parentCacheNode: CacheNode\n  parentSegmentPath: FlightSegmentPath | null\n  url: string\n} | null>(null)\n\nexport const GlobalLayoutRouterContext = React.createContext<{\n  tree: FlightRouterState\n  focusAndScrollRef: FocusAndScrollRef\n  nextUrl: string | null\n}>(null as any)\n\nexport const TemplateContext = React.createContext<React.ReactNode>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  AppRouterContext.displayName = 'AppRouterContext'\n  LayoutRouterContext.displayName = 'LayoutRouterContext'\n  GlobalLayoutRouterContext.displayName = 'GlobalLayoutRouterContext'\n  TemplateContext.displayName = 'TemplateContext'\n}\n\nexport const MissingSlotContext = React.createContext<Set<string>>(new Set())\n","// This gets assigned as a side-effect during app initialization. Because it\n// represents the build used to create the JS bundle, it should never change\n// after being set, so we store it in a global variable.\n//\n// When performing RSC requests, if the incoming data has a different build ID,\n// we perform an MPA navigation/refresh to load the updated build and ensure\n// that the client and server in sync.\n\n// Starts as an empty string. In practice, because setAppBuildId is called\n// during initialization before hydration starts, this will always get\n// reassigned to the actual build ID before it's ever needed by a navigation.\n// If for some reasons it didn't, due to a bug or race condition, then on\n// navigation the build comparision would fail and trigger an MPA navigation.\nlet globalBuildId: string = ''\n\nexport function setAppBuildId(buildId: string) {\n  globalBuildId = buildId\n}\n\nexport function getAppBuildId(): string {\n  return globalBuildId\n}\n","import type { DynamicParamTypesShort } from '../server/app-render/types'\nimport {\n  addSearchParamsIfPageSegment,\n  DEFAULT_SEGMENT_KEY,\n  PAGE_SEGMENT_KEY,\n} from '../shared/lib/segment'\nimport { ROOT_SEGMENT_REQUEST_KEY } from '../shared/lib/segment-cache/segment-value-encoding'\nimport {\n  NEXT_REWRITTEN_PATH_HEADER,\n  NEXT_REWRITTEN_QUERY_HEADER,\n  NEXT_RSC_UNION_QUERY,\n} from './components/app-router-headers'\nimport type { NormalizedSearch } from './components/segment-cache'\nimport type { RSCResponse } from './components/router-reducer/fetch-server-response'\n\nexport type RouteParamValue = string | Array<string> | null\n\nexport type RouteParam = {\n  name: string\n  value: RouteParamValue\n  type: DynamicParamTypesShort\n}\n\nexport function getRenderedSearch(response: RSCResponse): NormalizedSearch {\n  // If the server performed a rewrite, the search params used to render the\n  // page will be different from the params in the request URL. In this case,\n  // the response will include a header that gives the rewritten search query.\n  const rewrittenQuery = response.headers.get(NEXT_REWRITTEN_QUERY_HEADER)\n  if (rewrittenQuery !== null) {\n    return (\n      rewrittenQuery === '' ? '' : '?' + rewrittenQuery\n    ) as NormalizedSearch\n  }\n  // If the header is not present, there was no rewrite, so we use the search\n  // query of the response URL.\n  return urlToUrlWithoutFlightMarker(new URL(response.url))\n    .search as NormalizedSearch\n}\n\nexport function getRenderedPathname(response: RSCResponse): string {\n  // If the server performed a rewrite, the pathname used to render the\n  // page will be different from the pathname in the request URL. In this case,\n  // the response will include a header that gives the rewritten pathname.\n  const rewrittenPath = response.headers.get(NEXT_REWRITTEN_PATH_HEADER)\n  return (\n    rewrittenPath ?? urlToUrlWithoutFlightMarker(new URL(response.url)).pathname\n  )\n}\n\nexport function parseDynamicParamFromURLPart(\n  paramType: DynamicParamTypesShort,\n  pathnameParts: Array<string>,\n  partIndex: number\n): RouteParamValue {\n  // This needs to match the behavior in get-dynamic-param.ts.\n  switch (paramType) {\n    // Catchalls\n    case 'c':\n    case 'ci': {\n      // Catchalls receive all the remaining URL parts. If there are no\n      // remaining pathname parts, return an empty array.\n      return partIndex < pathnameParts.length\n        ? pathnameParts.slice(partIndex).map((s) => encodeURIComponent(s))\n        : []\n    }\n    // Optional catchalls\n    case 'oc': {\n      // Optional catchalls receive all the remaining URL parts, unless this is\n      // the end of the pathname, in which case they return null.\n      return partIndex < pathnameParts.length\n        ? pathnameParts.slice(partIndex).map((s) => encodeURIComponent(s))\n        : null\n    }\n    // Dynamic\n    case 'd':\n    case 'di': {\n      if (partIndex >= pathnameParts.length) {\n        // The route tree expected there to be more parts in the URL than there\n        // actually are. This could happen if the x-nextjs-rewritten-path header\n        // is incorrectly set, or potentially due to bug in Next.js. TODO:\n        // Should this be a hard error? During a prefetch, we can just abort.\n        // During a client navigation, we could trigger a hard refresh. But if\n        // it happens during initial render, we don't really have any\n        // recovery options.\n        return ''\n      }\n      return encodeURIComponent(pathnameParts[partIndex])\n    }\n    default:\n      paramType satisfies never\n      return ''\n  }\n}\n\nexport function doesStaticSegmentAppearInURL(segment: string): boolean {\n  // This is not a parameterized segment; however, we need to determine\n  // whether or not this segment appears in the URL. For example, this route\n  // groups do not appear in the URL, so they should be skipped. Any other\n  // special cases must be handled here.\n  // TODO: Consider encoding this directly into the router tree instead of\n  // inferring it on the client based on the segment type. Something like\n  // a `doesAppearInURL` flag in FlightRouterState.\n  if (\n    segment === ROOT_SEGMENT_REQUEST_KEY ||\n    // For some reason, the loader tree sometimes includes extra __PAGE__\n    // \"layouts\" when part of a parallel route. But it's not a leaf node.\n    // Otherwise, we wouldn't need this special case because pages are\n    // always leaf nodes.\n    // TODO: Investigate why the loader produces these fake page segments.\n    segment.startsWith(PAGE_SEGMENT_KEY) ||\n    // Route groups.\n    (segment[0] === '(' && segment.endsWith(')')) ||\n    segment === DEFAULT_SEGMENT_KEY ||\n    segment === '/_not-found'\n  ) {\n    return false\n  } else {\n    // All other segment types appear in the URL\n    return true\n  }\n}\n\nexport function getCacheKeyForDynamicParam(\n  paramValue: RouteParamValue,\n  renderedSearch: NormalizedSearch\n): string {\n  // This needs to match the logic in get-dynamic-param.ts, until we're able to\n  // unify the various implementations so that these are always computed on\n  // the client.\n  if (typeof paramValue === 'string') {\n    // TODO: Refactor or remove this helper function to accept a string rather\n    // than the whole segment type. Also we can probably just append the\n    // search string instead of turning it into JSON.\n    const pageSegmentWithSearchParams = addSearchParamsIfPageSegment(\n      paramValue,\n      Object.fromEntries(new URLSearchParams(renderedSearch))\n    ) as string\n    return pageSegmentWithSearchParams\n  } else if (paramValue === null) {\n    return ''\n  } else {\n    return paramValue.join('/')\n  }\n}\n\nexport function urlToUrlWithoutFlightMarker(url: URL): URL {\n  const urlWithoutFlightParameters = new URL(url)\n  urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY)\n  if (process.env.NODE_ENV === 'production') {\n    if (\n      process.env.__NEXT_CONFIG_OUTPUT === 'export' &&\n      urlWithoutFlightParameters.pathname.endsWith('.txt')\n    ) {\n      const { pathname } = urlWithoutFlightParameters\n      const length = pathname.endsWith('/index.txt') ? 10 : 4\n      // Slice off `/index.txt` or `.txt` from the end of the pathname\n      urlWithoutFlightParameters.pathname = pathname.slice(0, -length)\n    }\n  }\n  return urlWithoutFlightParameters\n}\n\nexport function getParamValueFromCacheKey(\n  paramCacheKey: string,\n  paramType: DynamicParamTypesShort\n) {\n  // Turn the cache key string sent by the server (as part of FlightRouterState)\n  // into a value that can be passed to `useParams` and client components.\n  const isCatchAll = paramType === 'c' || paramType === 'oc'\n  if (isCatchAll) {\n    // Catch-all param keys are a concatenation of the path segments.\n    // See equivalent logic in `getSelectedParams`.\n    // TODO: We should just pass the array directly, rather than concatenate\n    // it to a string and then split it back to an array. It needs to be an\n    // array in some places, like when passing a key React, but we can convert\n    // it at runtime in those places.\n    return paramCacheKey.split('/')\n  }\n  return paramCacheKey\n}\n","'use client'\n\n// TODO: Explicitly import from client.browser\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { createFromReadableStream as createFromReadableStreamBrowser } from 'react-server-dom-webpack/client'\n\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../server/app-render/types'\n\nimport type { NEXT_ROUTER_SEGMENT_PREFETCH_HEADER } from '../app-router-headers'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_URL,\n  RSC_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n} from '../app-router-headers'\nimport { callServer } from '../../app-call-server'\nimport { findSourceMapURL } from '../../app-find-source-map-url'\nimport { PrefetchKind } from './router-reducer-types'\nimport {\n  normalizeFlightData,\n  prepareFlightRouterStateForRequest,\n  type NormalizedFlightData,\n} from '../../flight-data-helpers'\nimport { getAppBuildId } from '../../app-build-id'\nimport { setCacheBustingSearchParam } from './set-cache-busting-search-param'\nimport { urlToUrlWithoutFlightMarker } from '../../route-params'\n\nconst createFromReadableStream =\n  createFromReadableStreamBrowser as (typeof import('react-server-dom-webpack/client.browser'))['createFromReadableStream']\n\nexport interface FetchServerResponseOptions {\n  readonly flightRouterState: FlightRouterState\n  readonly nextUrl: string | null\n  readonly prefetchKind?: PrefetchKind\n  readonly isHmrRefresh?: boolean\n}\n\nexport type FetchServerResponseResult = {\n  flightData: NormalizedFlightData[] | string\n  canonicalUrl: URL | undefined\n  couldBeIntercepted: boolean\n  prerendered: boolean\n  postponed: boolean\n  staleTime: number\n}\n\nexport type RequestHeaders = {\n  [RSC_HEADER]?: '1'\n  [NEXT_ROUTER_STATE_TREE_HEADER]?: string\n  [NEXT_URL]?: string\n  [NEXT_ROUTER_PREFETCH_HEADER]?: '1' | '2'\n  [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]?: string\n  'x-deployment-id'?: string\n  [NEXT_HMR_REFRESH_HEADER]?: '1'\n  // A header that is only added in test mode to assert on fetch priority\n  'Next-Test-Fetch-Priority'?: RequestInit['priority']\n}\n\nfunction doMpaNavigation(url: string): FetchServerResponseResult {\n  return {\n    flightData: urlToUrlWithoutFlightMarker(\n      new URL(url, location.origin)\n    ).toString(),\n    canonicalUrl: undefined,\n    couldBeIntercepted: false,\n    prerendered: false,\n    postponed: false,\n    staleTime: -1,\n  }\n}\n\nlet abortController = new AbortController()\n\nif (typeof window !== 'undefined') {\n  // Abort any in-flight requests when the page is unloaded, e.g. due to\n  // reloading the page or performing hard navigations. This allows us to ignore\n  // what would otherwise be a thrown TypeError when the browser cancels the\n  // requests.\n  window.addEventListener('pagehide', () => {\n    abortController.abort()\n  })\n\n  // Use a fresh AbortController instance on pageshow, e.g. when navigating back\n  // and the JavaScript execution context is restored by the browser.\n  window.addEventListener('pageshow', () => {\n    abortController = new AbortController()\n  })\n}\n\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */\nexport async function fetchServerResponse(\n  url: URL,\n  options: FetchServerResponseOptions\n): Promise<FetchServerResponseResult> {\n  const { flightRouterState, nextUrl, prefetchKind } = options\n\n  const headers: RequestHeaders = {\n    // Enable flight response\n    [RSC_HEADER]: '1',\n    // Provide the current router state\n    [NEXT_ROUTER_STATE_TREE_HEADER]: prepareFlightRouterStateForRequest(\n      flightRouterState,\n      options.isHmrRefresh\n    ),\n  }\n\n  /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */\n  if (prefetchKind === PrefetchKind.AUTO) {\n    headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n    headers[NEXT_HMR_REFRESH_HEADER] = '1'\n  }\n\n  if (nextUrl) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  try {\n    // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n    // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n    // Otherwise, all other prefetches are sent with a \"low\" priority.\n    // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n    const fetchPriority = prefetchKind\n      ? prefetchKind === PrefetchKind.TEMPORARY\n        ? 'high'\n        : 'low'\n      : 'auto'\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        // In \"output: export\" mode, we can't rely on headers to distinguish\n        // between HTML and RSC requests. Instead, we append an extra prefix\n        // to the request.\n        url = new URL(url)\n        if (url.pathname.endsWith('/')) {\n          url.pathname += 'index.txt'\n        } else {\n          url.pathname += '.txt'\n        }\n      }\n    }\n\n    const res = await createFetch(\n      url,\n      headers,\n      fetchPriority,\n      abortController.signal\n    )\n\n    const responseUrl = urlToUrlWithoutFlightMarker(new URL(res.url))\n    const canonicalUrl = res.redirected ? responseUrl : undefined\n\n    const contentType = res.headers.get('content-type') || ''\n    const interception = !!res.headers.get('vary')?.includes(NEXT_URL)\n    const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER)\n    const staleTimeHeaderSeconds = res.headers.get(\n      NEXT_ROUTER_STALE_TIME_HEADER\n    )\n    const staleTime =\n      staleTimeHeaderSeconds !== null\n        ? parseInt(staleTimeHeaderSeconds, 10) * 1000\n        : -1\n    let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (!isFlightResponse) {\n          isFlightResponse = contentType.startsWith('text/plain')\n        }\n      }\n    }\n\n    // If fetch returns something different than flight response handle it like a mpa navigation\n    // If the fetch was not 200, we also handle it like a mpa navigation\n    if (!isFlightResponse || !res.ok || !res.body) {\n      // in case the original URL came with a hash, preserve it before redirecting to the new URL\n      if (url.hash) {\n        responseUrl.hash = url.hash\n      }\n\n      return doMpaNavigation(responseUrl.toString())\n    }\n\n    // We may navigate to a page that requires a different Webpack runtime.\n    // In prod, every page will have the same Webpack runtime.\n    // In dev, the Webpack runtime is minimal for each page.\n    // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n    if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n      await (\n        require('../../dev/hot-reloader/app/hot-reloader-app') as typeof import('../../dev/hot-reloader/app/hot-reloader-app')\n      ).waitForWebpackRuntimeHotUpdate()\n    }\n\n    // Handle the `fetch` readable stream that can be unwrapped by `React.use`.\n    const flightStream = postponed\n      ? createUnclosingPrefetchStream(res.body)\n      : res.body\n    const response = await (createFromNextReadableStream(\n      flightStream\n    ) as Promise<NavigationFlightResponse>)\n\n    if (getAppBuildId() !== response.b) {\n      return doMpaNavigation(res.url)\n    }\n\n    return {\n      flightData: normalizeFlightData(response.f),\n      canonicalUrl: canonicalUrl,\n      couldBeIntercepted: interception,\n      prerendered: response.S,\n      postponed,\n      staleTime,\n    }\n  } catch (err) {\n    if (!abortController.signal.aborted) {\n      console.error(\n        `Failed to fetch RSC payload for ${url}. Falling back to browser navigation.`,\n        err\n      )\n    }\n\n    // If fetch fails handle it like a mpa navigation\n    // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n    // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n    return {\n      flightData: url.toString(),\n      canonicalUrl: undefined,\n      couldBeIntercepted: false,\n      prerendered: false,\n      postponed: false,\n      staleTime: -1,\n    }\n  }\n}\n\n// This is a subset of the standard Response type. We use a custom type for\n// this so we can limit which details about the response leak into the rest of\n// the codebase. For example, there's some custom logic for manually following\n// redirects, so \"redirected\" in this type could be a composite of multiple\n// browser fetch calls; however, this fact should not leak to the caller.\nexport type RSCResponse = {\n  ok: boolean\n  redirected: boolean\n  headers: Headers\n  body: ReadableStream<Uint8Array> | null\n  status: number\n  url: string\n}\n\nexport async function createFetch(\n  url: URL,\n  headers: RequestHeaders,\n  fetchPriority: 'auto' | 'high' | 'low' | null,\n  signal?: AbortSignal\n): Promise<RSCResponse> {\n  // TODO: In output: \"export\" mode, the headers do nothing. Omit them (and the\n  // cache busting search param) from the request so they're\n  // maximally cacheable.\n\n  if (process.env.__NEXT_TEST_MODE && fetchPriority !== null) {\n    headers['Next-Test-Fetch-Priority'] = fetchPriority\n  }\n\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID\n  }\n\n  const fetchOptions: RequestInit = {\n    // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n    credentials: 'same-origin',\n    headers,\n    priority: fetchPriority || undefined,\n    signal,\n  }\n  // `fetchUrl` is slightly different from `url` because we add a cache-busting\n  // search param to it. This should not leak outside of this function, so we\n  // track them separately.\n  let fetchUrl = new URL(url)\n  setCacheBustingSearchParam(fetchUrl, headers)\n  let browserResponse = await fetch(fetchUrl, fetchOptions)\n\n  // If the server responds with a redirect (e.g. 307), and the redirected\n  // location does not contain the cache busting search param set in the\n  // original request, the response is likely invalid — when following the\n  // redirect, the browser forwards the request headers, but since the cache\n  // busting search param is missing, the server will reject the request due to\n  // a mismatch.\n  //\n  // Ideally, we would be able to intercept the redirect response and perform it\n  // manually, instead of letting the browser automatically follow it, but this\n  // is not allowed by the fetch API.\n  //\n  // So instead, we must \"replay\" the redirect by fetching the new location\n  // again, but this time we'll append the cache busting search param to prevent\n  // a mismatch.\n  //\n  // TODO: We can optimize Next.js's built-in middleware APIs by returning a\n  // custom status code, to prevent the browser from automatically following it.\n  //\n  // This does not affect Server Action-based redirects; those are encoded\n  // differently, as part of the Flight body. It only affects redirects that\n  // occur in a middleware or a third-party proxy.\n\n  let redirected = browserResponse.redirected\n  if (process.env.__NEXT_CLIENT_VALIDATE_RSC_REQUEST_HEADERS) {\n    // This is to prevent a redirect loop. Same limit used by Chrome.\n    const MAX_REDIRECTS = 20\n    for (let n = 0; n < MAX_REDIRECTS; n++) {\n      if (!browserResponse.redirected) {\n        // The server did not perform a redirect.\n        break\n      }\n      const responseUrl = new URL(browserResponse.url, fetchUrl)\n      if (responseUrl.origin !== fetchUrl.origin) {\n        // The server redirected to an external URL. The rest of the logic below\n        // is not relevant, because it only applies to internal redirects.\n        break\n      }\n      if (\n        responseUrl.searchParams.get(NEXT_RSC_UNION_QUERY) ===\n        fetchUrl.searchParams.get(NEXT_RSC_UNION_QUERY)\n      ) {\n        // The redirected URL already includes the cache busting search param.\n        // This was probably intentional. Regardless, there's no reason to\n        // issue another request to this URL because it already has the param\n        // value that we would have added below.\n        break\n      }\n      // The RSC request was redirected. Assume the response is invalid.\n      //\n      // Append the cache busting search param to the redirected URL and\n      // fetch again.\n      fetchUrl = new URL(responseUrl)\n      setCacheBustingSearchParam(fetchUrl, headers)\n      browserResponse = await fetch(fetchUrl, fetchOptions)\n      // We just performed a manual redirect, so this is now true.\n      redirected = true\n    }\n  }\n\n  // Remove the cache busting search param from the response URL, to prevent it\n  // from leaking outside of this function.\n  const responseUrl = new URL(browserResponse.url, fetchUrl)\n  responseUrl.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  const rscResponse: RSCResponse = {\n    url: responseUrl.href,\n\n    // This is true if any redirects occurred, either automatically by the\n    // browser, or manually by us. So it's different from\n    // `browserResponse.redirected`, which only tells us whether the browser\n    // followed a redirect, and only for the last response in the chain.\n    redirected,\n\n    // These can be copied from the last browser response we received. We\n    // intentionally only expose the subset of fields that are actually used\n    // elsewhere in the codebase.\n    ok: browserResponse.ok,\n    headers: browserResponse.headers,\n    body: browserResponse.body,\n    status: browserResponse.status,\n  }\n\n  return rscResponse\n}\n\nexport function createFromNextReadableStream(\n  flightStream: ReadableStream<Uint8Array>\n): Promise<unknown> {\n  return createFromReadableStream(flightStream, {\n    callServer,\n    findSourceMapURL,\n  })\n}\n\nfunction createUnclosingPrefetchStream(\n  originalFlightStream: ReadableStream<Uint8Array>\n): ReadableStream<Uint8Array> {\n  // When PPR is enabled, prefetch streams may contain references that never\n  // resolve, because that's how we encode dynamic data access. In the decoded\n  // object returned by the Flight client, these are reified into hanging\n  // promises that suspend during render, which is effectively what we want.\n  // The UI resolves when it switches to the dynamic data stream\n  // (via useDeferredValue(dynamic, static)).\n  //\n  // However, the Flight implementation currently errors if the server closes\n  // the response before all the references are resolved. As a cheat to work\n  // around this, we wrap the original stream in a new stream that never closes,\n  // and therefore doesn't error.\n  const reader = originalFlightStream.getReader()\n  return new ReadableStream({\n    async pull(controller) {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (!done) {\n          // Pass to the target stream and keep consuming the Flight response\n          // from the server.\n          controller.enqueue(value)\n          continue\n        }\n        // The server stream has closed. Exit, but intentionally do not close\n        // the target stream.\n        return\n      }\n    },\n  })\n}\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","import { RequestCookies } from '../cookies';\nimport { ResponseCookies } from '../cookies';\nimport { ReflectAdapter } from './reflect';\nimport { workAsyncStorage } from '../../../app-render/work-async-storage.external';\n/**\n * @internal\n */ export class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport class RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nexport function getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nexport function appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nexport class MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nexport function createCookiesWithMutableAccessCheck(requestStore) {\n    const wrappedCookies = new Proxy(requestStore.mutableCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable(requestStore, 'cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable(requestStore, 'cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nexport function areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(requestStore, _callingExpression) {\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nexport function responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map","import { normalizeAppPath } from '../../shared/lib/router/utils/app-paths';\nimport { pathHasPrefix } from '../../shared/lib/router/utils/path-has-prefix';\nimport { removePathPrefix } from '../../shared/lib/router/utils/remove-path-prefix';\nimport { workAsyncStorage } from './work-async-storage.external';\n// This function creates a Flight-acceptable server module map proxy from our\n// Server Reference Manifest similar to our client module map.\n// This is because our manifest contains a lot of internal Next.js data that\n// are relevant to the runtime, workers, etc. that React doesn't need to know.\nexport function createServerModuleMap({ serverActionsManifest }) {\n    return new Proxy({}, {\n        get: (_, id)=>{\n            var _serverActionsManifest__id, _serverActionsManifest_;\n            const workers = (_serverActionsManifest_ = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node']) == null ? void 0 : (_serverActionsManifest__id = _serverActionsManifest_[id]) == null ? void 0 : _serverActionsManifest__id.workers;\n            if (!workers) {\n                return undefined;\n            }\n            const workStore = workAsyncStorage.getStore();\n            let workerEntry;\n            if (workStore) {\n                workerEntry = workers[normalizeWorkerPageName(workStore.page)];\n            } else {\n                // If there's no work store defined, we can assume that a server\n                // module map is needed during module evaluation, e.g. to create a\n                // server action using a higher-order function. Therefore it should be\n                // safe to return any entry from the manifest that matches the action\n                // ID. They all refer to the same module ID, which must also exist in\n                // the current page bundle. TODO: This is currently not guaranteed in\n                // Turbopack, and needs to be fixed.\n                workerEntry = Object.values(workers).at(0);\n            }\n            if (!workerEntry) {\n                return undefined;\n            }\n            const { moduleId, async } = workerEntry;\n            return {\n                id: moduleId,\n                name: id,\n                chunks: [],\n                async\n            };\n        }\n    });\n}\n/**\n * Checks if the requested action has a worker for the current page.\n * If not, it returns the first worker that has a handler for the action.\n */ export function selectWorkerForForwarding(actionId, pageName, serverActionsManifest) {\n    var _serverActionsManifest__actionId;\n    const workers = (_serverActionsManifest__actionId = serverActionsManifest[process.env.NEXT_RUNTIME === 'edge' ? 'edge' : 'node'][actionId]) == null ? void 0 : _serverActionsManifest__actionId.workers;\n    const workerName = normalizeWorkerPageName(pageName);\n    // no workers, nothing to forward to\n    if (!workers) return;\n    // if there is a worker for this page, no need to forward it.\n    if (workers[workerName]) {\n        return;\n    }\n    // otherwise, grab the first worker that has a handler for this action id\n    return denormalizeWorkerPageName(Object.keys(workers)[0]);\n}\n/**\n * The flight entry loader keys actions by bundlePath.\n * bundlePath corresponds with the relative path (including 'app') to the page entrypoint.\n */ function normalizeWorkerPageName(pageName) {\n    if (pathHasPrefix(pageName, 'app')) {\n        return pageName;\n    }\n    return 'app' + pageName;\n}\n/**\n * Converts a bundlePath (relative path to the entrypoint) to a routable page name\n */ function denormalizeWorkerPageName(bundlePath) {\n    return normalizeAppPath(removePathPrefix(bundlePath, 'app'));\n}\n\n//# sourceMappingURL=action-utils.js.map","/**\n * @license React\n * react-dom.react-server.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"next/dist/compiled/react\");\nfunction noop() {}\nvar Internals = {\n  d: {\n    f: noop,\n    r: function () {\n      throw Error(\n        \"Invalid form element. requestFormReset must be passed a form that was rendered by React.\"\n      );\n    },\n    D: noop,\n    C: noop,\n    L: noop,\n    m: noop,\n    X: noop,\n    S: noop,\n    M: noop\n  },\n  p: 0,\n  findDOMNode: null\n};\nif (!React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE)\n  throw Error(\n    'The \"react\" package in this environment is not configured correctly. The \"react-server\" condition must be enabled in any environment that runs React Server Components.'\n  );\nfunction getCrossOriginStringAs(as, input) {\n  if (\"font\" === as) return \"\";\n  if (\"string\" === typeof input)\n    return \"use-credentials\" === input ? input : \"\";\n}\nexports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  Internals;\nexports.preconnect = function (href, options) {\n  \"string\" === typeof href &&\n    (options\n      ? ((options = options.crossOrigin),\n        (options =\n          \"string\" === typeof options\n            ? \"use-credentials\" === options\n              ? options\n              : \"\"\n            : void 0))\n      : (options = null),\n    Internals.d.C(href, options));\n};\nexports.prefetchDNS = function (href) {\n  \"string\" === typeof href && Internals.d.D(href);\n};\nexports.preinit = function (href, options) {\n  if (\"string\" === typeof href && options && \"string\" === typeof options.as) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),\n      integrity =\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      fetchPriority =\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0;\n    \"style\" === as\n      ? Internals.d.S(\n          href,\n          \"string\" === typeof options.precedence ? options.precedence : void 0,\n          {\n            crossOrigin: crossOrigin,\n            integrity: integrity,\n            fetchPriority: fetchPriority\n          }\n        )\n      : \"script\" === as &&\n        Internals.d.X(href, {\n          crossOrigin: crossOrigin,\n          integrity: integrity,\n          fetchPriority: fetchPriority,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n  }\n};\nexports.preinitModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (\"object\" === typeof options && null !== options) {\n      if (null == options.as || \"script\" === options.as) {\n        var crossOrigin = getCrossOriginStringAs(\n          options.as,\n          options.crossOrigin\n        );\n        Internals.d.M(href, {\n          crossOrigin: crossOrigin,\n          integrity:\n            \"string\" === typeof options.integrity ? options.integrity : void 0,\n          nonce: \"string\" === typeof options.nonce ? options.nonce : void 0\n        });\n      }\n    } else null == options && Internals.d.M(href);\n};\nexports.preload = function (href, options) {\n  if (\n    \"string\" === typeof href &&\n    \"object\" === typeof options &&\n    null !== options &&\n    \"string\" === typeof options.as\n  ) {\n    var as = options.as,\n      crossOrigin = getCrossOriginStringAs(as, options.crossOrigin);\n    Internals.d.L(href, as, {\n      crossOrigin: crossOrigin,\n      integrity:\n        \"string\" === typeof options.integrity ? options.integrity : void 0,\n      nonce: \"string\" === typeof options.nonce ? options.nonce : void 0,\n      type: \"string\" === typeof options.type ? options.type : void 0,\n      fetchPriority:\n        \"string\" === typeof options.fetchPriority\n          ? options.fetchPriority\n          : void 0,\n      referrerPolicy:\n        \"string\" === typeof options.referrerPolicy\n          ? options.referrerPolicy\n          : void 0,\n      imageSrcSet:\n        \"string\" === typeof options.imageSrcSet ? options.imageSrcSet : void 0,\n      imageSizes:\n        \"string\" === typeof options.imageSizes ? options.imageSizes : void 0,\n      media: \"string\" === typeof options.media ? options.media : void 0\n    });\n  }\n};\nexports.preloadModule = function (href, options) {\n  if (\"string\" === typeof href)\n    if (options) {\n      var crossOrigin = getCrossOriginStringAs(options.as, options.crossOrigin);\n      Internals.d.m(href, {\n        as:\n          \"string\" === typeof options.as && \"script\" !== options.as\n            ? options.as\n            : void 0,\n        crossOrigin: crossOrigin,\n        integrity:\n          \"string\" === typeof options.integrity ? options.integrity : void 0\n      });\n    } else Internals.d.m(href);\n};\nexports.version = \"19.2.0-canary-0bdb9206-20250818\";\n","import { useContext } from 'react'\nimport { PathnameContext } from '../../shared/lib/hooks-client-context.shared-runtime'\n\n/**\n * This checks to see if the current render has any unknown route parameters.\n * It's used to trigger a different render path in the error boundary.\n *\n * @returns true if there are any unknown route parameters, false otherwise\n */\nfunction hasFallbackRouteParams(): boolean {\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { workUnitAsyncStorage } =\n      require('../../server/app-render/work-unit-async-storage.external') as typeof import('../../server/app-render/work-unit-async-storage.external')\n\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (!workUnitStore) return false\n\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-client':\n      case 'prerender-ppr':\n        const fallbackParams = workUnitStore.fallbackRouteParams\n        return fallbackParams ? fallbackParams.size > 0 : false\n      case 'prerender-legacy':\n      case 'request':\n      case 'prerender-runtime':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n\n    return false\n  }\n\n  return false\n}\n\n/**\n * This returns a `null` value if there are any unknown route parameters, and\n * otherwise returns the pathname from the context. This is an alternative to\n * `usePathname` that is used in the error boundary to avoid rendering the\n * error boundary when there are unknown route parameters. This doesn't throw\n * when accessed with unknown route parameters.\n *\n * @returns\n *\n * @internal\n */\nexport function useUntrackedPathname(): string | null {\n  // If there are any unknown route parameters we would typically throw\n  // an error, but this internal method allows us to return a null value instead\n  // for components that do not propagate the pathname to the static shell (like\n  // the error boundary).\n  if (hasFallbackRouteParams()) {\n    return null\n  }\n\n  // This shouldn't cause any issues related to conditional rendering because\n  // the environment will be consistent for the render.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(PathnameContext)\n}\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const fetchServerResponse = registerClientReference(\nfunction() { throw new Error(\"Attempted to call fetchServerResponse() from the server but fetchServerResponse is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\",\n\"fetchServerResponse\",\n);export const createFetch = registerClientReference(\nfunction() { throw new Error(\"Attempted to call createFetch() from the server but createFetch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\",\n\"createFetch\",\n);export const createFromNextReadableStream = registerClientReference(\nfunction() { throw new Error(\"Attempted to call createFromNextReadableStream() from the server but createFromNextReadableStream is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/router-reducer/fetch-server-response.js\",\n\"createFromNextReadableStream\",\n);","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-server-dom-webpack-server.edge.production.js');\n} else {\n  s = require('./cjs/react-server-dom-webpack-server.edge.development.js');\n}\n\nif (s.unstable_prerender) {\n  exports.unstable_prerender = s.unstable_prerender;\n}\n","import { ACTION_HEADER } from '../../client/components/app-router-headers';\nexport function getServerActionRequestMetadata(req) {\n    let actionId;\n    let contentType;\n    if (req.headers instanceof Headers) {\n        actionId = req.headers.get(ACTION_HEADER) ?? null;\n        contentType = req.headers.get('content-type');\n    } else {\n        actionId = req.headers[ACTION_HEADER] ?? null;\n        contentType = req.headers['content-type'] ?? null;\n    }\n    const isURLEncodedAction = Boolean(req.method === 'POST' && contentType === 'application/x-www-form-urlencoded');\n    const isMultipartAction = Boolean(req.method === 'POST' && (contentType == null ? void 0 : contentType.startsWith('multipart/form-data')));\n    const isFetchAction = Boolean(actionId !== undefined && typeof actionId === 'string' && req.method === 'POST');\n    const isPossibleServerAction = Boolean(isFetchAction || isURLEncodedAction || isMultipartAction);\n    return {\n        actionId,\n        isURLEncodedAction,\n        isMultipartAction,\n        isFetchAction,\n        isPossibleServerAction\n    };\n}\nexport function getIsPossibleServerAction(req) {\n    return getServerActionRequestMetadata(req).isPossibleServerAction;\n}\n\n//# sourceMappingURL=server-action-request-meta.js.map","import './globals.css';\n\nexport const dynamic = 'force-dynamic';\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"ja\" className=\"dark\">\n      <body className=\"min-h-screen\">\n        {children}\n      </body>\n    </html>\n  );\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.production.js');\n} else {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.development.js');\n}\n","import type { FlightRouterState } from '../../../server/app-render/types'\nimport type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type { AppRouterState } from './router-reducer-types'\nimport { applyFlightData } from './apply-flight-data'\nimport { fetchServerResponse } from './fetch-server-response'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\ninterface RefreshInactiveParallelSegments {\n  navigatedAt: number\n  state: AppRouterState\n  updatedTree: FlightRouterState\n  updatedCache: CacheNode\n  includeNextUrl: boolean\n  canonicalUrl: string\n}\n\n/**\n * Refreshes inactive segments that are still in the current FlightRouterState.\n * A segment is considered \"inactive\" when the server response indicates it didn't match to a page component.\n * This happens during a soft-navigation, where the server will want to patch in the segment\n * with the \"default\" component, but we explicitly ignore the server in this case\n * and keep the existing state for that segment. New data for inactive segments are inherently\n * not part of the server response when we patch the tree, because they were associated with a response\n * from an earlier navigation/request. For each segment, once it becomes \"active\", we encode the URL that provided\n * the data for it. This function traverses parallel routes looking for these markers so that it can re-fetch\n * and patch the new data into the tree.\n */\nexport async function refreshInactiveParallelSegments(\n  options: RefreshInactiveParallelSegments\n) {\n  const fetchedSegments = new Set<string>()\n  await refreshInactiveParallelSegmentsImpl({\n    ...options,\n    rootTree: options.updatedTree,\n    fetchedSegments,\n  })\n}\n\nasync function refreshInactiveParallelSegmentsImpl({\n  navigatedAt,\n  state,\n  updatedTree,\n  updatedCache,\n  includeNextUrl,\n  fetchedSegments,\n  rootTree = updatedTree,\n  canonicalUrl,\n}: RefreshInactiveParallelSegments & {\n  fetchedSegments: Set<string>\n  rootTree: FlightRouterState\n}) {\n  const [, parallelRoutes, refetchPath, refetchMarker] = updatedTree\n  const fetchPromises = []\n\n  if (\n    refetchPath &&\n    refetchPath !== canonicalUrl &&\n    refetchMarker === 'refresh' &&\n    // it's possible for the tree to contain multiple segments that contain data at the same URL\n    // we keep track of them so we can dedupe the requests\n    !fetchedSegments.has(refetchPath)\n  ) {\n    fetchedSegments.add(refetchPath) // Mark this URL as fetched\n\n    // Eagerly kick off the fetch for the refetch path & the parallel routes. This should be fine to do as they each operate\n    // independently on their own cache nodes, and `applyFlightData` will copy anything it doesn't care about from the existing cache.\n    const fetchPromise = fetchServerResponse(\n      new URL(refetchPath, location.origin),\n      {\n        // refetch from the root of the updated tree, otherwise it will be scoped to the current segment\n        // and might not contain the data we need to patch in interception route data (such as dynamic params from a previous segment)\n        flightRouterState: [rootTree[0], rootTree[1], rootTree[2], 'refetch'],\n        nextUrl: includeNextUrl ? state.nextUrl : null,\n      }\n    ).then(({ flightData }) => {\n      if (typeof flightData !== 'string') {\n        for (const flightDataPath of flightData) {\n          // we only pass the new cache as this function is called after clearing the router cache\n          // and filling in the new page data from the server. Meaning the existing cache is actually the cache that's\n          // just been created & has been written to, but hasn't been \"committed\" yet.\n          applyFlightData(\n            navigatedAt,\n            updatedCache,\n            updatedCache,\n            flightDataPath\n          )\n        }\n      } else {\n        // When flightData is a string, it suggests that the server response should have triggered an MPA navigation\n        // I'm not 100% sure of this decision, but it seems unlikely that we'd want to introduce a redirect side effect\n        // when refreshing on-screen data, so handling this has been ommitted.\n      }\n    })\n\n    fetchPromises.push(fetchPromise)\n  }\n\n  for (const key in parallelRoutes) {\n    const parallelFetchPromise = refreshInactiveParallelSegmentsImpl({\n      navigatedAt,\n      state,\n      updatedTree: parallelRoutes[key],\n      updatedCache,\n      includeNextUrl,\n      fetchedSegments,\n      rootTree,\n      canonicalUrl,\n    })\n\n    fetchPromises.push(parallelFetchPromise)\n  }\n\n  await Promise.all(fetchPromises)\n}\n\n/**\n * Walks the current parallel segments to determine if they are \"active\".\n * An active parallel route will have a `__PAGE__` segment in the FlightRouterState.\n * As opposed to a `__DEFAULT__` segment, which means there was no match for that parallel route.\n * We add a special marker here so that we know how to refresh its data when the router is revalidated.\n */\nexport function addRefreshMarkerToActiveParallelSegments(\n  tree: FlightRouterState,\n  path: string\n) {\n  const [segment, parallelRoutes, , refetchMarker] = tree\n  // a page segment might also contain concatenated search params, so we do a partial match on the key\n  if (segment.includes(PAGE_SEGMENT_KEY) && refetchMarker !== 'refresh') {\n    tree[2] = path\n    tree[3] = 'refresh'\n  }\n\n  for (const key in parallelRoutes) {\n    addRefreshMarkerToActiveParallelSegments(parallelRoutes[key], path)\n  }\n}\n","export async function getEdgeInstrumentationModule() {\n    const instrumentation = '_ENTRIES' in globalThis && _ENTRIES.middleware_instrumentation && await _ENTRIES.middleware_instrumentation;\n    return instrumentation;\n}\nlet instrumentationModulePromise = null;\nasync function registerInstrumentation() {\n    // Ensure registerInstrumentation is not called in production build\n    if (process.env.NEXT_PHASE === 'phase-production-build') return;\n    if (!instrumentationModulePromise) {\n        instrumentationModulePromise = getEdgeInstrumentationModule();\n    }\n    const instrumentation = await instrumentationModulePromise;\n    if (instrumentation == null ? void 0 : instrumentation.register) {\n        try {\n            await instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nexport async function edgeInstrumentationOnRequestError(...args) {\n    const instrumentation = await getEdgeInstrumentationModule();\n    try {\n        var _instrumentation_onRequestError;\n        await (instrumentation == null ? void 0 : (_instrumentation_onRequestError = instrumentation.onRequestError) == null ? void 0 : _instrumentation_onRequestError.call(instrumentation, ...args));\n    } catch (err) {\n        // Log the soft error and continue, since the original error has already been thrown\n        console.error('Error in instrumentation.onRequestError:', err);\n    }\n}\nlet registerInstrumentationPromise = null;\nexport function ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === 'then') {\n                return {};\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        construct () {\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === 'function') {\n                return args[0](proxy);\n            }\n            throw Object.defineProperty(new Error(getUnsupportedModuleErrorMessage(moduleName)), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    if (process.env.NEXT_RUNTIME !== 'edge') {\n        return;\n    }\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    try {\n        Object.defineProperty(globalThis, '__import_unsupported', {\n            value: __import_unsupported,\n            enumerable: false,\n            configurable: false\n        });\n    } catch  {}\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals();\n\n//# sourceMappingURL=globals.js.map","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.production.js');\n} else {\n  module.exports = require('./cjs/react-server-dom-webpack-client.edge.development.js');\n}\n","import type {\n  CacheNodeSeedData,\n  FlightData,\n  FlightDataPath,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../server/app-render/types'\nimport type { HeadData } from '../shared/lib/app-router-context.shared-runtime'\nimport { PAGE_SEGMENT_KEY } from '../shared/lib/segment'\n\nexport type NormalizedFlightData = {\n  /**\n   * The full `FlightSegmentPath` inclusive of the final `Segment`\n   */\n  segmentPath: FlightSegmentPath\n  /**\n   * The `FlightSegmentPath` exclusive of the final `Segment`\n   */\n  pathToSegment: FlightSegmentPath\n  segment: Segment\n  tree: FlightRouterState\n  seedData: CacheNodeSeedData | null\n  head: HeadData\n  isHeadPartial: boolean\n  isRootRender: boolean\n}\n\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(\n  flightDataPath: FlightDataPath\n): NormalizedFlightData {\n  // Pick the last 4 items from the `FlightDataPath` to get the [tree, seedData, viewport, isHeadPartial].\n  const flightDataPathLength = 4\n  // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n  const [tree, seedData, head, isHeadPartial] =\n    flightDataPath.slice(-flightDataPathLength)\n  // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n  const segmentPath = flightDataPath.slice(0, -flightDataPathLength)\n\n  return {\n    // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n    // to the start of the segment path in some places which makes it hard to use solely the segment path.\n    // Look for \"// TODO-APP: remove ''\" in the codebase.\n    pathToSegment: segmentPath.slice(0, -1),\n    segmentPath,\n    // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n    // in which case we default to ''.\n    segment: segmentPath[segmentPath.length - 1] ?? '',\n    tree,\n    seedData,\n    head,\n    isHeadPartial,\n    isRootRender: flightDataPath.length === flightDataPathLength,\n  }\n}\n\nexport function getNextFlightSegmentPath(\n  flightSegmentPath: FlightSegmentPath\n): FlightSegmentPath {\n  // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n  // to get the next segment path.\n  return flightSegmentPath.slice(2)\n}\n\nexport function normalizeFlightData(\n  flightData: FlightData\n): NormalizedFlightData[] | string {\n  // FlightData can be a string when the server didn't respond with a proper flight response,\n  // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n  if (typeof flightData === 'string') {\n    return flightData\n  }\n\n  return flightData.map((flightDataPath) =>\n    getFlightDataPartsFromPath(flightDataPath)\n  )\n}\n\n/**\n * This function is used to prepare the flight router state for the request.\n * It removes markers that are not needed by the server, and are purely used\n * for stashing state on the client.\n * @param flightRouterState - The flight router state to prepare.\n * @param isHmrRefresh - Whether this is an HMR refresh request.\n * @returns The prepared flight router state.\n */\nexport function prepareFlightRouterStateForRequest(\n  flightRouterState: FlightRouterState,\n  isHmrRefresh?: boolean\n): string {\n  // HMR requests need the complete, unmodified state for proper functionality\n  if (isHmrRefresh) {\n    return encodeURIComponent(JSON.stringify(flightRouterState))\n  }\n\n  return encodeURIComponent(\n    JSON.stringify(stripClientOnlyDataFromFlightRouterState(flightRouterState))\n  )\n}\n\n/**\n * Recursively strips client-only data from FlightRouterState while preserving\n * server-needed information for proper rendering decisions.\n */\nfunction stripClientOnlyDataFromFlightRouterState(\n  flightRouterState: FlightRouterState\n): FlightRouterState {\n  const [\n    segment,\n    parallelRoutes,\n    _url, // Intentionally unused - URLs are client-only\n    refreshMarker,\n    isRootLayout,\n    hasLoadingBoundary,\n  ] = flightRouterState\n\n  // __PAGE__ segments are always fetched from the server, so there's\n  // no need to send them up\n  const cleanedSegment = stripSearchParamsFromPageSegment(segment)\n\n  // Recursively process parallel routes\n  const cleanedParallelRoutes: { [key: string]: FlightRouterState } = {}\n  for (const [key, childState] of Object.entries(parallelRoutes)) {\n    cleanedParallelRoutes[key] =\n      stripClientOnlyDataFromFlightRouterState(childState)\n  }\n\n  const result: FlightRouterState = [\n    cleanedSegment,\n    cleanedParallelRoutes,\n    null, // URLs omitted - server reconstructs paths from segments\n    shouldPreserveRefreshMarker(refreshMarker) ? refreshMarker : null,\n  ]\n\n  // Append optional fields if present\n  if (isRootLayout !== undefined) {\n    result[4] = isRootLayout\n  }\n  if (hasLoadingBoundary !== undefined) {\n    result[5] = hasLoadingBoundary\n  }\n\n  return result\n}\n\n/**\n * Strips search parameters from __PAGE__ segments to prevent sensitive\n * client-side data from being sent to the server.\n */\nfunction stripSearchParamsFromPageSegment(segment: Segment): Segment {\n  if (\n    typeof segment === 'string' &&\n    segment.startsWith(PAGE_SEGMENT_KEY + '?')\n  ) {\n    return PAGE_SEGMENT_KEY\n  }\n  return segment\n}\n\n/**\n * Determines whether the refresh marker should be sent to the server\n * Client-only markers like 'refresh' are stripped, while server-needed markers\n * like 'refetch' and 'inside-shared-layout' are preserved.\n */\nfunction shouldPreserveRefreshMarker(\n  refreshMarker: FlightRouterState[3]\n): boolean {\n  return Boolean(refreshMarker && refreshMarker !== 'refresh')\n}\n","import { detectDomainLocale } from '../../shared/lib/i18n/detect-domain-locale';\nimport { formatNextPathnameInfo } from '../../shared/lib/router/utils/format-next-pathname-info';\nimport { getHostname } from '../../shared/lib/get-hostname';\nimport { getNextPathnameInfo } from '../../shared/lib/router/utils/get-next-pathname-info';\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, 'localhost'));\n}\nconst Internal = Symbol('NextURLInternal');\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === 'object' && 'pathname' in baseOrOpts || typeof baseOrOpts === 'string') {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: ''\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = getHostname(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : detectDomainLocale((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? '';\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? '';\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw Object.defineProperty(new TypeError(`The NextURL configuration includes no locale \"${locale}\"`), \"__NEXT_ERROR_CODE\", {\n                value: \"E597\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith('/') ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","import { createAsyncLocalStorage } from './async-local-storage';\nexport const actionAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=action-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { actionAsyncStorageInstance } from './action-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { actionAsyncStorageInstance as actionAsyncStorage };\n\n//# sourceMappingURL=action-async-storage.external.js.map","import { NEXT_URL } from '../client/components/app-router-headers';\nimport { extractInterceptionRouteInformation, isInterceptionRouteAppPath } from '../shared/lib/router/utils/interception-routes';\nimport { safePathToRegexp } from '../shared/lib/router/utils/route-match-utils';\n// a function that converts normalised paths (e.g. /foo/[bar]/[baz]) to the format expected by pathToRegexp (e.g. /foo/:bar/:baz)\nfunction toPathToRegexpPath(path) {\n    return path.replace(/\\[\\[?([^\\]]+)\\]\\]?/g, (_, capture)=>{\n        // path-to-regexp only supports word characters, so we replace any non-word characters with underscores\n        const paramName = capture.replace(/\\W+/g, '_');\n        // handle catch-all segments (e.g. /foo/bar/[...baz] or /foo/bar/[[...baz]])\n        if (capture.startsWith('...')) {\n            return `:${capture.slice(3)}*`;\n        }\n        return ':' + paramName;\n    });\n}\nexport function generateInterceptionRoutesRewrites(appPaths, basePath = '') {\n    const rewrites = [];\n    for (const appPath of appPaths){\n        if (isInterceptionRouteAppPath(appPath)) {\n            const { interceptingRoute, interceptedRoute } = extractInterceptionRouteInformation(appPath);\n            const normalizedInterceptingRoute = `${interceptingRoute !== '/' ? toPathToRegexpPath(interceptingRoute) : ''}/(.*)?`;\n            const normalizedInterceptedRoute = toPathToRegexpPath(interceptedRoute);\n            const normalizedAppPath = toPathToRegexpPath(appPath);\n            // pathToRegexp returns a regex that matches the path, but we need to\n            // convert it to a string that can be used in a header value\n            // to the format that Next/the proxy expects\n            let interceptingRouteRegex = safePathToRegexp(normalizedInterceptingRoute).toString().slice(2, -3);\n            rewrites.push({\n                source: `${basePath}${normalizedInterceptedRoute}`,\n                destination: `${basePath}${normalizedAppPath}`,\n                has: [\n                    {\n                        type: 'header',\n                        key: NEXT_URL,\n                        value: interceptingRouteRegex\n                    }\n                ]\n            });\n        }\n    }\n    return rewrites;\n}\nexport function isInterceptionRouteRewrite(route) {\n    var _route_has_, _route_has;\n    // When we generate interception rewrites in the above implementation, we always do so with only a single `has` condition.\n    return ((_route_has = route.has) == null ? void 0 : (_route_has_ = _route_has[0]) == null ? void 0 : _route_has_.key) === NEXT_URL;\n}\n\n//# sourceMappingURL=generate-interception-routes-rewrites.js.map","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","export * from '../client/components/navigation.react-server';\n\n//# sourceMappingURL=navigation.react-server.js.map","import { redirect } from 'next/navigation';\n\nexport const runtime = 'edge';\nexport const dynamic = 'force-dynamic';\n\nexport default function RootRedirect() {\n  // Generate UUID v4 compatible string\n  const sid = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, () => {\n    return (Math.random() * 16 | 0).toString(16);\n  });\n  redirect(`/s/${sid}`);\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n",null,"import { warnOnce } from '../../utils/warn-once'\n\n/**\n * Run function with `scroll-behavior: auto` applied to `<html/>`.\n * This css change will be reverted after the function finishes.\n */\nexport function disableSmoothScrollDuringRouteTransition(\n  fn: () => void,\n  options: { dontForceLayout?: boolean; onlyHashChange?: boolean } = {}\n) {\n  // if only the hash is changed, we don't need to disable smooth scrolling\n  // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX\n  if (options.onlyHashChange) {\n    fn()\n    return\n  }\n\n  const htmlElement = document.documentElement\n  const hasDataAttribute = htmlElement.dataset.scrollBehavior === 'smooth'\n\n  // Since this is a breaking change, this is temporarily flagged\n  // and will be false by default.\n  // In the next major (v16), this will be automatically enabled\n  if (process.env.__NEXT_OPTIMIZE_ROUTER_SCROLL) {\n    if (!hasDataAttribute) {\n      // No smooth scrolling configured, run directly without style manipulation\n      fn()\n      return\n    }\n  } else {\n    // Old behavior: always manipulate styles, but warn about upcoming change\n\n    // Warn if smooth scrolling is detected but no data attribute is present\n    if (\n      process.env.NODE_ENV === 'development' &&\n      !hasDataAttribute &&\n      getComputedStyle(htmlElement).scrollBehavior === 'smooth'\n    ) {\n      warnOnce(\n        'Detected `scroll-behavior: smooth` on the `<html>` element. In a future version, ' +\n          'Next.js will no longer automatically disable smooth scrolling during route transitions. ' +\n          'To prepare for this change, add `data-scroll-behavior=\"smooth\"` to your <html> element. ' +\n          'Learn more: https://nextjs.org/docs/messages/missing-data-scroll-behavior'\n      )\n    }\n  }\n\n  // Proceed with temporarily disabling smooth scrolling\n  const existing = htmlElement.style.scrollBehavior\n  htmlElement.style.scrollBehavior = 'auto'\n  if (!options.dontForceLayout) {\n    // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n    // Otherwise it will not pickup the change in scrollBehavior\n    // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n    htmlElement.getClientRects()\n  }\n  fn()\n  htmlElement.style.scrollBehavior = existing\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport { isInterceptionRouteAppPath } from '../../../../shared/lib/router/utils/interception-routes'\n\nexport function hasInterceptionRouteInCurrentTree([\n  segment,\n  parallelRoutes,\n]: FlightRouterState): boolean {\n  // If we have a dynamic segment, it's marked as an interception route by the presence of the `i` suffix.\n  if (Array.isArray(segment) && (segment[2] === 'di' || segment[2] === 'ci')) {\n    return true\n  }\n\n  // If segment is not an array, apply the existing string-based check\n  if (typeof segment === 'string' && isInterceptionRouteAppPath(segment)) {\n    return true\n  }\n\n  // Iterate through parallelRoutes if they exist\n  if (parallelRoutes) {\n    for (const key in parallelRoutes) {\n      if (hasInterceptionRouteInCurrentTree(parallelRoutes[key])) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport { useState } from 'react'\n\n// When the flag is disabled, only track the currently active tree\nconst MAX_BF_CACHE_ENTRIES = process.env.__NEXT_ROUTER_BF_CACHE ? 3 : 1\n\nexport type RouterBFCacheEntry = {\n  tree: FlightRouterState\n  stateKey: string\n  // The entries form a linked list, sorted in order of most recently active.\n  next: RouterBFCacheEntry | null\n}\n\n/**\n * Keeps track of the most recent N trees (FlightRouterStates) that were active\n * at a certain segment level. E.g. for a segment \"/a/b/[param]\", this hook\n * tracks the last N param values that the router rendered for N.\n *\n * The result of this hook precisely determines the number and order of\n * trees that are rendered in parallel at their segment level.\n *\n * The purpose of this cache is to we can preserve the React and DOM state of\n * some number of inactive trees, by rendering them in an <Activity> boundary.\n * That means it would not make sense for the the lifetime of the cache to be\n * any longer than the lifetime of the React tree; e.g. if the hook were\n * unmounted, then the React tree would be, too. So, we use React state to\n * manage it.\n *\n * Note that we don't store the RSC data for the cache entries in this hook —\n * the data for inactive segments is stored in the parent CacheNode, which\n * *does* have a longer lifetime than the React tree. This hook only determines\n * which of those trees should have their *state* preserved, by <Activity>.\n */\nexport function useRouterBFCache(\n  activeTree: FlightRouterState,\n  activeStateKey: string\n): RouterBFCacheEntry {\n  // The currently active entry. The entries form a linked list, sorted in\n  // order of most recently active. This allows us to reuse parts of the list\n  // without cloning, unless there's a reordering or removal.\n  // TODO: Once we start tracking back/forward history at each route level,\n  // we should use the history order instead. In other words, when traversing\n  // to an existing entry as a result of a popstate event, we should maintain\n  // the existing order instead of moving it to the front of the list. I think\n  // an initial implementation of this could be to pass an incrementing id\n  // to history.pushState/replaceState, then use that here for ordering.\n  const [prevActiveEntry, setPrevActiveEntry] = useState<RouterBFCacheEntry>(\n    () => {\n      const initialEntry: RouterBFCacheEntry = {\n        tree: activeTree,\n        stateKey: activeStateKey,\n        next: null,\n      }\n      return initialEntry\n    }\n  )\n\n  if (prevActiveEntry.tree === activeTree) {\n    // Fast path. The active tree hasn't changed, so we can reuse the\n    // existing state.\n    return prevActiveEntry\n  }\n\n  // The route tree changed. Note that this doesn't mean that the tree changed\n  // *at this level* — the change may be due to a child route. Either way, we\n  // need to either add or update the router tree in the bfcache.\n  //\n  // The rest of the code looks more complicated than it actually is because we\n  // can't mutate the state in place; we have to copy-on-write.\n\n  // Create a new entry for the active cache key. This is the head of the new\n  // linked list.\n  const newActiveEntry: RouterBFCacheEntry = {\n    tree: activeTree,\n    stateKey: activeStateKey,\n    next: null,\n  }\n\n  // We need to append the old list onto the new list. If the head of the new\n  // list was already present in the cache, then we'll need to clone everything\n  // that came before it. Then we can reuse the rest.\n  let n = 1\n  let oldEntry: RouterBFCacheEntry | null = prevActiveEntry\n  let clonedEntry: RouterBFCacheEntry = newActiveEntry\n  while (oldEntry !== null && n < MAX_BF_CACHE_ENTRIES) {\n    if (oldEntry.stateKey === activeStateKey) {\n      // Fast path. This entry in the old list that corresponds to the key that\n      // is now active. We've already placed a clone of this entry at the front\n      // of the new list. We can reuse the rest of the old list without cloning.\n      // NOTE: We don't need to worry about eviction in this case because we\n      // haven't increased the size of the cache, and we assume the max size\n      // is constant across renders. If we were to change it to a dynamic limit,\n      // then the implementation would need to account for that.\n      clonedEntry.next = oldEntry.next\n      break\n    } else {\n      // Clone the entry and append it to the list.\n      n++\n      const entry: RouterBFCacheEntry = {\n        tree: oldEntry.tree,\n        stateKey: oldEntry.stateKey,\n        next: null,\n      }\n      clonedEntry.next = entry\n      clonedEntry = entry\n    }\n    oldEntry = oldEntry.next\n  }\n\n  setPrevActiveEntry(newActiveEntry)\n  return newActiveEntry\n}\n","'use client'\n\nimport type {\n  CacheNode,\n  LazyCacheNode,\n  LoadingModuleData,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../server/app-render/types'\nimport type { ErrorComponent } from './error-boundary'\nimport {\n  ACTION_SERVER_PATCH,\n  type FocusAndScrollRef,\n} from './router-reducer/router-reducer-types'\n\nimport React, {\n  useContext,\n  use,\n  startTransition,\n  Suspense,\n  useDeferredValue,\n  type JSX,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n  TemplateContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport { fetchServerResponse } from './router-reducer/fetch-server-response'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { ErrorBoundary } from './error-boundary'\nimport { matchSegment } from './match-segments'\nimport { disableSmoothScrollDuringRouteTransition } from '../../shared/lib/router/utils/disable-smooth-scroll'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { HTTPAccessFallbackBoundary } from './http-access-fallback/error-boundary'\nimport { createRouterCacheKey } from './router-reducer/create-router-cache-key'\nimport { hasInterceptionRouteInCurrentTree } from './router-reducer/reducers/has-interception-route-in-current-tree'\nimport { dispatchAppRouterAction } from './use-action-queue'\nimport { useRouterBFCache, type RouterBFCacheEntry } from './bfcache'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\n\nconst Activity = process.env.__NEXT_ROUTER_BF_CACHE\n  ? (require('react') as typeof import('react')).unstable_Activity\n  : null!\n\n/**\n * Add refetch marker to router state at the point of the current layout segment.\n * This ensures the response returned is not further down than the current layout segment.\n */\nfunction walkAddRefetch(\n  segmentPathToWalk: FlightSegmentPath | undefined,\n  treeToRecreate: FlightRouterState\n): FlightRouterState {\n  if (segmentPathToWalk) {\n    const [segment, parallelRouteKey] = segmentPathToWalk\n    const isLast = segmentPathToWalk.length === 2\n\n    if (matchSegment(treeToRecreate[0], segment)) {\n      if (treeToRecreate[1].hasOwnProperty(parallelRouteKey)) {\n        if (isLast) {\n          const subTree = walkAddRefetch(\n            undefined,\n            treeToRecreate[1][parallelRouteKey]\n          )\n          return [\n            treeToRecreate[0],\n            {\n              ...treeToRecreate[1],\n              [parallelRouteKey]: [\n                subTree[0],\n                subTree[1],\n                subTree[2],\n                'refetch',\n              ],\n            },\n          ]\n        }\n\n        return [\n          treeToRecreate[0],\n          {\n            ...treeToRecreate[1],\n            [parallelRouteKey]: walkAddRefetch(\n              segmentPathToWalk.slice(2),\n              treeToRecreate[1][parallelRouteKey]\n            ),\n          },\n        ]\n      }\n    }\n  }\n\n  return treeToRecreate\n}\n\nconst __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = (\n  ReactDOM as any\n).__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE\n\n// TODO-APP: Replace with new React API for finding dom nodes without a `ref` when available\n/**\n * Wraps ReactDOM.findDOMNode with additional logic to hide React Strict Mode warning\n */\nfunction findDOMNode(\n  instance: React.ReactInstance | null | undefined\n): Element | Text | null {\n  // Tree-shake for server bundle\n  if (typeof window === 'undefined') return null\n\n  // __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode is null during module init.\n  // We need to lazily reference it.\n  const internal_reactDOMfindDOMNode =\n    __DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE.findDOMNode\n  return internal_reactDOMfindDOMNode(instance)\n}\n\nconst rectProperties = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width',\n  'x',\n  'y',\n] as const\n/**\n * Check if a HTMLElement is hidden or fixed/sticky position\n */\nfunction shouldSkipElement(element: HTMLElement) {\n  // we ignore fixed or sticky positioned elements since they'll likely pass the \"in-viewport\" check\n  // and will result in a situation we bail on scroll because of something like a fixed nav,\n  // even though the actual page content is offscreen\n  if (['sticky', 'fixed'].includes(getComputedStyle(element).position)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'Skipping auto-scroll behavior due to `position: sticky` or `position: fixed` on element:',\n        element\n      )\n    }\n    return true\n  }\n\n  // Uses `getBoundingClientRect` to check if the element is hidden instead of `offsetParent`\n  // because `offsetParent` doesn't consider document/body\n  const rect = element.getBoundingClientRect()\n  return rectProperties.every((item) => rect[item] === 0)\n}\n\n/**\n * Check if the top corner of the HTMLElement is in the viewport.\n */\nfunction topOfElementInViewport(element: HTMLElement, viewportHeight: number) {\n  const rect = element.getBoundingClientRect()\n  return rect.top >= 0 && rect.top <= viewportHeight\n}\n\n/**\n * Find the DOM node for a hash fragment.\n * If `top` the page has to scroll to the top of the page. This mirrors the browser's behavior.\n * If the hash fragment is an id, the page has to scroll to the element with that id.\n * If the hash fragment is a name, the page has to scroll to the first element with that name.\n */\nfunction getHashFragmentDomNode(hashFragment: string) {\n  // If the hash fragment is `top` the page has to scroll to the top of the page.\n  if (hashFragment === 'top') {\n    return document.body\n  }\n\n  // If the hash fragment is an id, the page has to scroll to the element with that id.\n  return (\n    document.getElementById(hashFragment) ??\n    // If the hash fragment is a name, the page has to scroll to the first element with that name.\n    document.getElementsByName(hashFragment)[0]\n  )\n}\ninterface ScrollAndFocusHandlerProps {\n  focusAndScrollRef: FocusAndScrollRef\n  children: React.ReactNode\n  segmentPath: FlightSegmentPath\n}\nclass InnerScrollAndFocusHandler extends React.Component<ScrollAndFocusHandlerProps> {\n  handlePotentialScroll = () => {\n    // Handle scroll and focus, it's only applied once in the first useEffect that triggers that changed.\n    const { focusAndScrollRef, segmentPath } = this.props\n\n    if (focusAndScrollRef.apply) {\n      // segmentPaths is an array of segment paths that should be scrolled to\n      // if the current segment path is not in the array, the scroll is not applied\n      // unless the array is empty, in which case the scroll is always applied\n      if (\n        focusAndScrollRef.segmentPaths.length !== 0 &&\n        !focusAndScrollRef.segmentPaths.some((scrollRefSegmentPath) =>\n          segmentPath.every((segment, index) =>\n            matchSegment(segment, scrollRefSegmentPath[index])\n          )\n        )\n      ) {\n        return\n      }\n\n      let domNode:\n        | ReturnType<typeof getHashFragmentDomNode>\n        | ReturnType<typeof findDOMNode> = null\n      const hashFragment = focusAndScrollRef.hashFragment\n\n      if (hashFragment) {\n        domNode = getHashFragmentDomNode(hashFragment)\n      }\n\n      // `findDOMNode` is tricky because it returns just the first child if the component is a fragment.\n      // This already caused a bug where the first child was a <link/> in head.\n      if (!domNode) {\n        domNode = findDOMNode(this)\n      }\n\n      // If there is no DOM node this layout-router level is skipped. It'll be handled higher-up in the tree.\n      if (!(domNode instanceof Element)) {\n        return\n      }\n\n      // Verify if the element is a HTMLElement and if we want to consider it for scroll behavior.\n      // If the element is skipped, try to select the next sibling and try again.\n      while (!(domNode instanceof HTMLElement) || shouldSkipElement(domNode)) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (domNode.parentElement?.localName === 'head') {\n            // TODO: We enter this state when metadata was rendered as part of the page or via Next.js.\n            // This is always a bug in Next.js and caused by React hoisting metadata.\n            // We need to replace `findDOMNode` in favor of Fragment Refs (when available) so that we can skip over metadata.\n          }\n        }\n\n        // No siblings found that match the criteria are found, so handle scroll higher up in the tree instead.\n        if (domNode.nextElementSibling === null) {\n          return\n        }\n        domNode = domNode.nextElementSibling\n      }\n\n      // State is mutated to ensure that the focus and scroll is applied only once.\n      focusAndScrollRef.apply = false\n      focusAndScrollRef.hashFragment = null\n      focusAndScrollRef.segmentPaths = []\n\n      disableSmoothScrollDuringRouteTransition(\n        () => {\n          // In case of hash scroll, we only need to scroll the element into view\n          if (hashFragment) {\n            ;(domNode as HTMLElement).scrollIntoView()\n\n            return\n          }\n          // Store the current viewport height because reading `clientHeight` causes a reflow,\n          // and it won't change during this function.\n          const htmlElement = document.documentElement\n          const viewportHeight = htmlElement.clientHeight\n\n          // If the element's top edge is already in the viewport, exit early.\n          if (topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            return\n          }\n\n          // Otherwise, try scrolling go the top of the document to be backward compatible with pages\n          // scrollIntoView() called on `<html/>` element scrolls horizontally on chrome and firefox (that shouldn't happen)\n          // We could use it to scroll horizontally following RTL but that also seems to be broken - it will always scroll left\n          // scrollLeft = 0 also seems to ignore RTL and manually checking for RTL is too much hassle so we will scroll just vertically\n          htmlElement.scrollTop = 0\n\n          // Scroll to domNode if domNode is not in viewport when scrolled to top of document\n          if (!topOfElementInViewport(domNode as HTMLElement, viewportHeight)) {\n            // Scroll into view doesn't scroll horizontally by default when not needed\n            ;(domNode as HTMLElement).scrollIntoView()\n          }\n        },\n        {\n          // We will force layout by querying domNode position\n          dontForceLayout: true,\n          onlyHashChange: focusAndScrollRef.onlyHashChange,\n        }\n      )\n\n      // Mutate after scrolling so that it can be read by `disableSmoothScrollDuringRouteTransition`\n      focusAndScrollRef.onlyHashChange = false\n\n      // Set focus on the element\n      domNode.focus()\n    }\n  }\n\n  componentDidMount() {\n    this.handlePotentialScroll()\n  }\n\n  componentDidUpdate() {\n    // Because this property is overwritten in handlePotentialScroll it's fine to always run it when true as it'll be set to false for subsequent renders.\n    if (this.props.focusAndScrollRef.apply) {\n      this.handlePotentialScroll()\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nfunction ScrollAndFocusHandler({\n  segmentPath,\n  children,\n}: {\n  segmentPath: FlightSegmentPath\n  children: React.ReactNode\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  return (\n    <InnerScrollAndFocusHandler\n      segmentPath={segmentPath}\n      focusAndScrollRef={context.focusAndScrollRef}\n    >\n      {children}\n    </InnerScrollAndFocusHandler>\n  )\n}\n\n/**\n * InnerLayoutRouter handles rendering the provided segment based on the cache.\n */\nfunction InnerLayoutRouter({\n  tree,\n  segmentPath,\n  cacheNode,\n  url,\n}: {\n  tree: FlightRouterState\n  segmentPath: FlightSegmentPath\n  cacheNode: CacheNode\n  url: string\n}) {\n  const context = useContext(GlobalLayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant global layout router not mounted')\n  }\n\n  const { tree: fullTree } = context\n\n  // `rsc` represents the renderable node for this segment.\n\n  // If this segment has a `prefetchRsc`, it's the statically prefetched data.\n  // We should use that on initial render instead of `rsc`. Then we'll switch\n  // to `rsc` when the dynamic response streams in.\n  //\n  // If no prefetch data is available, then we go straight to rendering `rsc`.\n  const resolvedPrefetchRsc =\n    cacheNode.prefetchRsc !== null ? cacheNode.prefetchRsc : cacheNode.rsc\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  const rsc: any = useDeferredValue(cacheNode.rsc, resolvedPrefetchRsc)\n\n  // `rsc` is either a React node or a promise for a React node, except we\n  // special case `null` to represent that this segment's data is missing. If\n  // it's a promise, we need to unwrap it so we can determine whether or not the\n  // data is missing.\n  const resolvedRsc: React.ReactNode =\n    typeof rsc === 'object' && rsc !== null && typeof rsc.then === 'function'\n      ? use(rsc)\n      : rsc\n\n  if (!resolvedRsc) {\n    // The data for this segment is not available, and there's no pending\n    // navigation that will be able to fulfill it. We need to fetch more from\n    // the server and patch the cache.\n\n    // Check if there's already a pending request.\n    let lazyData = cacheNode.lazyData\n    if (lazyData === null) {\n      /**\n       * Router state with refetch marker added\n       */\n      // TODO-APP: remove ''\n      const refetchTree = walkAddRefetch(['', ...segmentPath], fullTree)\n      const includeNextUrl = hasInterceptionRouteInCurrentTree(fullTree)\n      const navigatedAt = Date.now()\n      cacheNode.lazyData = lazyData = fetchServerResponse(\n        new URL(url, location.origin),\n        {\n          flightRouterState: refetchTree,\n          nextUrl: includeNextUrl ? context.nextUrl : null,\n        }\n      ).then((serverResponse) => {\n        startTransition(() => {\n          dispatchAppRouterAction({\n            type: ACTION_SERVER_PATCH,\n            previousTree: fullTree,\n            serverResponse,\n            navigatedAt,\n          })\n        })\n\n        return serverResponse\n      })\n\n      // Suspend while waiting for lazyData to resolve\n      use(lazyData)\n    }\n    // Suspend infinitely as `changeByServerResponse` will cause a different part of the tree to be rendered.\n    // A falsey `resolvedRsc` indicates missing data -- we should not commit that branch, and we need to wait for the data to arrive.\n    use(unresolvedThenable) as never\n  }\n\n  // If we get to this point, then we know we have something we can render.\n  const subtree = (\n    // The layout router context narrows down tree and childNodes at each level.\n    <LayoutRouterContext.Provider\n      value={{\n        parentTree: tree,\n        parentCacheNode: cacheNode,\n        parentSegmentPath: segmentPath,\n\n        // TODO-APP: overriding of url for parallel routes\n        url: url,\n      }}\n    >\n      {resolvedRsc}\n    </LayoutRouterContext.Provider>\n  )\n  // Ensure root layout is not wrapped in a div as the root layout renders `<html>`\n  return subtree\n}\n\n/**\n * Renders suspense boundary with the provided \"loading\" property as the fallback.\n * If no loading property is provided it renders the children without a suspense boundary.\n */\nfunction LoadingBoundary({\n  loading,\n  children,\n}: {\n  loading: LoadingModuleData | Promise<LoadingModuleData>\n  children: React.ReactNode\n}): JSX.Element {\n  // If loading is a promise, unwrap it. This happens in cases where we haven't\n  // yet received the loading data from the server — which includes whether or\n  // not this layout has a loading component at all.\n  //\n  // It's OK to suspend here instead of inside the fallback because this\n  // promise will resolve simultaneously with the data for the segment itself.\n  // So it will never suspend for longer than it would have if we didn't use\n  // a Suspense fallback at all.\n  let loadingModuleData\n  if (\n    typeof loading === 'object' &&\n    loading !== null &&\n    typeof (loading as any).then === 'function'\n  ) {\n    const promiseForLoading = loading as Promise<LoadingModuleData>\n    loadingModuleData = use(promiseForLoading)\n  } else {\n    loadingModuleData = loading as LoadingModuleData\n  }\n\n  if (loadingModuleData) {\n    const loadingRsc = loadingModuleData[0]\n    const loadingStyles = loadingModuleData[1]\n    const loadingScripts = loadingModuleData[2]\n    return (\n      <Suspense\n        fallback={\n          <>\n            {loadingStyles}\n            {loadingScripts}\n            {loadingRsc}\n          </>\n        }\n      >\n        {children}\n      </Suspense>\n    )\n  }\n\n  return <>{children}</>\n}\n\n/**\n * OuterLayoutRouter handles the current segment as well as <Offscreen> rendering of other segments.\n * It can be rendered next to each other with a different `parallelRouterKey`, allowing for Parallel routes.\n */\nexport default function OuterLayoutRouter({\n  parallelRouterKey,\n  error,\n  errorStyles,\n  errorScripts,\n  templateStyles,\n  templateScripts,\n  template,\n  notFound,\n  forbidden,\n  unauthorized,\n  segmentViewBoundaries,\n}: {\n  parallelRouterKey: string\n  error: ErrorComponent | undefined\n  errorStyles: React.ReactNode | undefined\n  errorScripts: React.ReactNode | undefined\n  templateStyles: React.ReactNode | undefined\n  templateScripts: React.ReactNode | undefined\n  template: React.ReactNode\n  notFound: React.ReactNode | undefined\n  forbidden: React.ReactNode | undefined\n  unauthorized: React.ReactNode | undefined\n  segmentViewBoundaries?: React.ReactNode\n}) {\n  const context = useContext(LayoutRouterContext)\n  if (!context) {\n    throw new Error('invariant expected layout router to be mounted')\n  }\n\n  const { parentTree, parentCacheNode, parentSegmentPath, url } = context\n\n  // Get the CacheNode for this segment by reading it from the parent segment's\n  // child map.\n  const parentParallelRoutes = parentCacheNode.parallelRoutes\n  let segmentMap = parentParallelRoutes.get(parallelRouterKey)\n  // If the parallel router cache node does not exist yet, create it.\n  // This writes to the cache when there is no item in the cache yet. It never *overwrites* existing cache items which is why it's safe in concurrent mode.\n  if (!segmentMap) {\n    segmentMap = new Map()\n    parentParallelRoutes.set(parallelRouterKey, segmentMap)\n  }\n  const parentTreeSegment = parentTree[0]\n  const segmentPath =\n    parentSegmentPath === null\n      ? // TODO: The root segment value is currently omitted from the segment\n        // path. This has led to a bunch of special cases scattered throughout\n        // the code. We should clean this up.\n        [parallelRouterKey]\n      : parentSegmentPath.concat([parentTreeSegment, parallelRouterKey])\n\n  // The \"state\" key of a segment is the one passed to React — it represents the\n  // identity of the UI tree. Whenever the state key changes, the tree is\n  // recreated and the state is reset. In the App Router model, search params do\n  // not cause state to be lost, so two segments with the same segment path but\n  // different search params should have the same state key.\n  //\n  // The \"cache\" key of a segment, however, *does* include the search params, if\n  // it's possible that the segment accessed the search params on the server.\n  // (This only applies to page segments; layout segments cannot access search\n  // params on the server.)\n  const activeTree = parentTree[1][parallelRouterKey]\n  const activeSegment = activeTree[0]\n  const activeStateKey = createRouterCacheKey(activeSegment, true) // no search params\n\n  // At each level of the route tree, not only do we render the currently\n  // active segment — we also render the last N segments that were active at\n  // this level inside a hidden <Activity> boundary, to preserve their state\n  // if or when the user navigates to them again.\n  //\n  // bfcacheEntry is a linked list of FlightRouterStates.\n  let bfcacheEntry: RouterBFCacheEntry | null = useRouterBFCache(\n    activeTree,\n    activeStateKey\n  )\n  let children: Array<React.ReactNode> = []\n  do {\n    const tree = bfcacheEntry.tree\n    const stateKey = bfcacheEntry.stateKey\n    const segment = tree[0]\n    const cacheKey = createRouterCacheKey(segment)\n\n    // Read segment path from the parallel router cache node.\n    let cacheNode = segmentMap.get(cacheKey)\n    if (cacheNode === undefined) {\n      // When data is not available during rendering client-side we need to fetch\n      // it from the server.\n      const newLazyCacheNode: LazyCacheNode = {\n        lazyData: null,\n        rsc: null,\n        prefetchRsc: null,\n        head: null,\n        prefetchHead: null,\n        parallelRoutes: new Map(),\n        loading: null,\n        navigatedAt: -1,\n      }\n\n      // Flight data fetch kicked off during render and put into the cache.\n      cacheNode = newLazyCacheNode\n      segmentMap.set(cacheKey, newLazyCacheNode)\n    }\n\n    /*\n    - Error boundary\n      - Only renders error boundary if error component is provided.\n      - Rendered for each segment to ensure they have their own error state.\n      - When gracefully degrade for bots, skip rendering error boundary.\n    - Loading boundary\n      - Only renders suspense boundary if loading components is provided.\n      - Rendered for each segment to ensure they have their own loading state.\n      - Passed to the router during rendering to ensure it can be immediately rendered when suspending on a Flight fetch.\n  */\n\n    let segmentBoundaryTriggerNode: React.ReactNode = null\n    let segmentViewStateNode: React.ReactNode = null\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      process.env.__NEXT_DEVTOOL_SEGMENT_EXPLORER\n    ) {\n      const { SegmentBoundaryTriggerNode, SegmentViewStateNode } =\n        require('../../next-devtools/userspace/app/segment-explorer-node') as typeof import('../../next-devtools/userspace/app/segment-explorer-node')\n\n      const pagePrefix = normalizeAppPath(url)\n      segmentViewStateNode = (\n        <SegmentViewStateNode key={pagePrefix} page={pagePrefix} />\n      )\n\n      segmentBoundaryTriggerNode = (\n        <>\n          <SegmentBoundaryTriggerNode />\n        </>\n      )\n    }\n\n    // TODO: The loading module data for a segment is stored on the parent, then\n    // applied to each of that parent segment's parallel route slots. In the\n    // simple case where there's only one parallel route (the `children` slot),\n    // this is no different from if the loading module data where stored on the\n    // child directly. But I'm not sure this actually makes sense when there are\n    // multiple parallel routes. It's not a huge issue because you always have\n    // the option to define a narrower loading boundary for a particular slot. But\n    // this sort of smells like an implementation accident to me.\n    const loadingModuleData = parentCacheNode.loading\n    let child = (\n      <TemplateContext.Provider\n        key={stateKey}\n        value={\n          <ScrollAndFocusHandler segmentPath={segmentPath}>\n            <ErrorBoundary\n              errorComponent={error}\n              errorStyles={errorStyles}\n              errorScripts={errorScripts}\n            >\n              <LoadingBoundary loading={loadingModuleData}>\n                <HTTPAccessFallbackBoundary\n                  notFound={notFound}\n                  forbidden={forbidden}\n                  unauthorized={unauthorized}\n                >\n                  <RedirectBoundary>\n                    <InnerLayoutRouter\n                      url={url}\n                      tree={tree}\n                      cacheNode={cacheNode}\n                      segmentPath={segmentPath}\n                    />\n                    {segmentBoundaryTriggerNode}\n                  </RedirectBoundary>\n                </HTTPAccessFallbackBoundary>\n              </LoadingBoundary>\n            </ErrorBoundary>\n            {segmentViewStateNode}\n          </ScrollAndFocusHandler>\n        }\n      >\n        {templateStyles}\n        {templateScripts}\n        {template}\n      </TemplateContext.Provider>\n    )\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { SegmentStateProvider } =\n        require('../../next-devtools/userspace/app/segment-explorer-node') as typeof import('../../next-devtools/userspace/app/segment-explorer-node')\n\n      child = (\n        <SegmentStateProvider key={stateKey}>\n          {child}\n          {segmentViewBoundaries}\n        </SegmentStateProvider>\n      )\n    }\n\n    if (process.env.__NEXT_ROUTER_BF_CACHE) {\n      child = (\n        <Activity\n          key={stateKey}\n          mode={stateKey === activeStateKey ? 'visible' : 'hidden'}\n        >\n          {child}\n        </Activity>\n      )\n    }\n\n    children.push(child)\n\n    bfcacheEntry = bfcacheEntry.next\n  } while (bfcacheEntry !== null)\n\n  return children\n}\n","import { COOKIE_NAME_PRERENDER_BYPASS, checkIsOnDemandRevalidate } from '../api-utils';\nexport class DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && checkIsOnDemandRevalidate(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this._isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && (cookieValue === previewProps.previewModeId || // In dev mode, the cookie can be actual hash value preview id but the preview props can still be `development-id`.\n        process.env.NODE_ENV !== 'production' && previewProps.previewModeId === 'development-id'));\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    get isEnabled() {\n        return this._isEnabled;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw Object.defineProperty(new Error('Invariant: previewProps missing previewModeId this should never happen'), \"__NEXT_ERROR_CODE\", {\n                value: \"E93\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/'\n        });\n        this._isEnabled = true;\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: COOKIE_NAME_PRERENDER_BYPASS,\n            value: '',\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            expires: new Date(0)\n        });\n        this._isEnabled = false;\n    }\n}\n\n//# sourceMappingURL=draft-mode-provider.js.map","import { FLIGHT_HEADERS } from '../../client/components/app-router-headers';\nimport { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { MutableRequestCookiesAdapter, RequestCookiesAdapter, responseCookiesToRequestCookies, createCookiesWithMutableAccessCheck } from '../web/spec-extension/adapters/request-cookies';\nimport { ResponseCookies, RequestCookies } from '../web/spec-extension/cookies';\nimport { DraftModeProvider } from './draft-mode-provider';\nimport { splitCookiesString } from '../web/utils';\nfunction getHeaders(headers) {\n    const cleaned = HeadersAdapter.from(headers);\n    for (const header of FLIGHT_HEADERS){\n        cleaned.delete(header);\n    }\n    return HeadersAdapter.seal(cleaned);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new RequestCookies(HeadersAdapter.from(headers));\n    return MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\n/**\n * If middleware set cookies in this request (indicated by `x-middleware-set-cookie`),\n * then merge those into the existing cookie object, so that when `cookies()` is accessed\n * it's able to read the newly set cookies.\n */ function mergeMiddlewareCookies(req, existingCookies) {\n    if ('x-middleware-set-cookie' in req.headers && typeof req.headers['x-middleware-set-cookie'] === 'string') {\n        const setCookieValue = req.headers['x-middleware-set-cookie'];\n        const responseHeaders = new Headers();\n        for (const cookie of splitCookiesString(setCookieValue)){\n            responseHeaders.append('set-cookie', cookie);\n        }\n        const responseCookies = new ResponseCookies(responseHeaders);\n        // Transfer cookies from ResponseCookies to RequestCookies\n        for (const cookie of responseCookies.getAll()){\n            existingCookies.set(cookie);\n        }\n    }\n}\nexport function createRequestStoreForRender(req, res, url, rootParams, implicitTags, onUpdateCookies, previewProps, isHmrRefresh, serverComponentsHmrCache, renderResumeDataCache, devFallbackParams) {\n    return createRequestStoreImpl(// Pages start in render phase by default\n    'render', req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache, devFallbackParams);\n}\nexport function createRequestStoreForAPI(req, url, implicitTags, onUpdateCookies, previewProps) {\n    return createRequestStoreImpl(// API routes start in action phase by default\n    'action', req, undefined, url, {}, implicitTags, onUpdateCookies, undefined, previewProps, false, undefined, null);\n}\nfunction createRequestStoreImpl(phase, req, res, url, rootParams, implicitTags, onUpdateCookies, renderResumeDataCache, previewProps, isHmrRefresh, serverComponentsHmrCache, devFallbackParams) {\n    function defaultOnUpdateCookies(cookies) {\n        if (res) {\n            res.setHeader('Set-Cookie', cookies);\n        }\n    }\n    const cache = {};\n    return {\n        type: 'request',\n        phase,\n        implicitTags,\n        // Rather than just using the whole `url` here, we pull the parts we want\n        // to ensure we don't use parts of the URL that we shouldn't. This also\n        // lets us avoid requiring an empty string for `search` in the type.\n        url: {\n            pathname: url.pathname,\n            search: url.search ?? ''\n        },\n        rootParams,\n        get headers () {\n            if (!cache.headers) {\n                // Seal the headers object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.headers = getHeaders(req.headers);\n            }\n            return cache.headers;\n        },\n        get cookies () {\n            if (!cache.cookies) {\n                // if middleware is setting cookie(s), then include those in\n                // the initial cached cookies so they can be read in render\n                const requestCookies = new RequestCookies(HeadersAdapter.from(req.headers));\n                mergeMiddlewareCookies(req, requestCookies);\n                // Seal the cookies object that'll freeze out any methods that could\n                // mutate the underlying data.\n                cache.cookies = RequestCookiesAdapter.seal(requestCookies);\n            }\n            return cache.cookies;\n        },\n        set cookies (value){\n            cache.cookies = value;\n        },\n        get mutableCookies () {\n            if (!cache.mutableCookies) {\n                const mutableCookies = getMutableCookies(req.headers, onUpdateCookies || (res ? defaultOnUpdateCookies : undefined));\n                mergeMiddlewareCookies(req, mutableCookies);\n                cache.mutableCookies = mutableCookies;\n            }\n            return cache.mutableCookies;\n        },\n        get userspaceMutableCookies () {\n            if (!cache.userspaceMutableCookies) {\n                const userspaceMutableCookies = createCookiesWithMutableAccessCheck(this);\n                cache.userspaceMutableCookies = userspaceMutableCookies;\n            }\n            return cache.userspaceMutableCookies;\n        },\n        get draftMode () {\n            if (!cache.draftMode) {\n                cache.draftMode = new DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n            }\n            return cache.draftMode;\n        },\n        renderResumeDataCache: renderResumeDataCache ?? null,\n        isHmrRefresh,\n        serverComponentsHmrCache: serverComponentsHmrCache || globalThis.__serverComponentsHmrCache,\n        devFallbackParams\n    };\n}\nexport function synchronizeMutableCookies(store) {\n    // TODO: does this need to update headers as well?\n    store.cookies = RequestCookiesAdapter.seal(responseCookiesToRequestCookies(store.mutableCookies));\n}\n\n//# sourceMappingURL=request-store.js.map","export class ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","import { flightRouterStateSchema } from './types';\nimport { assert } from 'next/dist/compiled/superstruct';\nexport function parseAndValidateFlightRouterState(stateHeader) {\n    if (typeof stateHeader === 'undefined') {\n        return undefined;\n    }\n    if (Array.isArray(stateHeader)) {\n        throw Object.defineProperty(new Error('Multiple router state headers were sent. This is not allowed.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E418\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    // We limit the size of the router state header to ~40kb. This is to prevent\n    // a malicious user from sending a very large header and slowing down the\n    // resolving of the router state.\n    // This is around 2,000 nested or parallel route segment states:\n    // '{\"children\":[\"\",{}]}'.length === 20.\n    if (stateHeader.length > 20 * 2000) {\n        throw Object.defineProperty(new Error('The router state header was too large.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E142\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    try {\n        const state = JSON.parse(decodeURIComponent(stateHeader));\n        assert(state, flightRouterStateSchema);\n        return state;\n    } catch  {\n        throw Object.defineProperty(new Error('The router state header was sent but could not be parsed.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E10\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n\n//# sourceMappingURL=parse-and-validate-flight-router-state.js.map","(()=>{\"use strict\";var e={695:e=>{\n/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\nvar r=/(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;e.exports=fresh;function fresh(e,a){var t=e[\"if-modified-since\"];var s=e[\"if-none-match\"];if(!t&&!s){return false}var i=e[\"cache-control\"];if(i&&r.test(i)){return false}if(s&&s!==\"*\"){var f=a[\"etag\"];if(!f){return false}var n=true;var u=parseTokenList(s);for(var _=0;_<u.length;_++){var o=u[_];if(o===f||o===\"W/\"+f||\"W/\"+o===f){n=false;break}}if(n){return false}}if(t){var p=a[\"last-modified\"];var v=!p||!(parseHttpDate(p)<=parseHttpDate(t));if(v){return false}}return true}function parseHttpDate(e){var r=e&&Date.parse(e);return typeof r===\"number\"?r:NaN}function parseTokenList(e){var r=0;var a=[];var t=0;for(var s=0,i=e.length;s<i;s++){switch(e.charCodeAt(s)){case 32:if(t===r){t=r=s+1}break;case 44:a.push(e.substring(t,r));t=r=s+1;break;default:r=s+1;break}}a.push(e.substring(t,r));return a}}};var r={};function __nccwpck_require__(a){var t=r[a];if(t!==undefined){return t.exports}var s=r[a]={exports:{}};var i=true;try{e[a](s,s.exports,__nccwpck_require__);i=false}finally{if(i)delete r[a]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var a=__nccwpck_require__(695);module.exports=a})();","'use client'\n\nimport { Suspense, use } from 'react'\nimport type { StreamingMetadataResolvedState } from './types'\n\nfunction MetadataOutlet({\n  promise,\n}: {\n  promise: Promise<StreamingMetadataResolvedState>\n}) {\n  const { error, digest } = use(promise)\n  if (error) {\n    if (digest) {\n      // The error will lose its original digest after passing from server layer to client layer；\n      // We recover the digest property here to override the React created one if original digest exists.\n      ;(error as any).digest = digest\n    }\n    throw error\n  }\n  return null\n}\n\nexport function AsyncMetadataOutlet({\n  promise,\n}: {\n  promise: Promise<StreamingMetadataResolvedState>\n}) {\n  return (\n    <Suspense fallback={null}>\n      <MetadataOutlet promise={promise} />\n    </Suspense>\n  )\n}\n","'use client'\n\nimport React, { useContext } from 'react'\n\nexport type ServerInsertedHTMLHook = (callbacks: () => React.ReactNode) => void\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nexport const ServerInsertedHTMLContext =\n  React.createContext<ServerInsertedHTMLHook | null>(null as any)\n\nexport function useServerInsertedHTML(callback: () => React.ReactNode): void {\n  const addInsertedServerHTMLCallback = useContext(ServerInsertedHTMLContext)\n  // Should have no effects on client where there's no flush effects provider\n  if (addInsertedServerHTMLCallback) {\n    addInsertedServerHTMLCallback(callback)\n  }\n}\n","if (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-page/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js');\n            }\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js');\n            }\n        } else {\n            if (process.env.TURBOPACK) {\n                module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js');\n            } else {\n                module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js');\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport default registerClientReference(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/builtin/global-error.js\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/builtin/global-error.js\",\n\"default\",\n);\n","/**\n * This module is for next.js server internal usage of path module.\n * It will use native path module for nodejs runtime.\n * It will use path-browserify polyfill for edge runtime.\n */\nlet path\n\nif (process.env.NEXT_RUNTIME === 'edge') {\n  path = require('next/dist/compiled/path-browserify')\n} else {\n  path = require('path')\n}\n\nmodule.exports = path\n","'use client'\n\nimport { HandleISRError } from '../handle-isr-error'\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nfunction DefaultGlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default DefaultGlobalError\n","import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers';\nconst DUMMY_ORIGIN = 'http://n';\nexport function isFullStringUrl(url) {\n    return /https?:\\/\\//.test(url);\n}\nexport function parseUrl(url) {\n    let parsed = undefined;\n    try {\n        parsed = new URL(url, DUMMY_ORIGIN);\n    } catch  {}\n    return parsed;\n}\nexport function parseReqUrl(url) {\n    const parsedUrl = parseUrl(url);\n    if (!parsedUrl) {\n        return;\n    }\n    const query = {};\n    for (const key of parsedUrl.searchParams.keys()){\n        const values = parsedUrl.searchParams.getAll(key);\n        query[key] = values.length > 1 ? values : values[0];\n    }\n    const legacyUrl = {\n        query,\n        hash: parsedUrl.hash,\n        search: parsedUrl.search,\n        path: parsedUrl.pathname,\n        pathname: parsedUrl.pathname,\n        href: `${parsedUrl.pathname}${parsedUrl.search}${parsedUrl.hash}`,\n        host: '',\n        hostname: '',\n        auth: '',\n        protocol: '',\n        slashes: null,\n        port: ''\n    };\n    return legacyUrl;\n}\nexport function stripNextRscUnionQuery(relativeUrl) {\n    const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN);\n    urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY);\n    return urlInstance.pathname + urlInstance.search;\n}\n\n//# sourceMappingURL=url.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const HTTPAccessFallbackBoundary = registerClientReference(\nfunction() { throw new Error(\"Attempted to call HTTPAccessFallbackBoundary() from the server but HTTPAccessFallbackBoundary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/http-access-fallback/error-boundary.js\",\n\"HTTPAccessFallbackBoundary\",\n);","import { HeadersAdapter } from '../web/spec-extension/adapters/headers';\nimport { PRERENDER_REVALIDATE_HEADER, PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER } from '../../lib/constants';\nimport { getTracer } from '../lib/trace/tracer';\nimport { NodeSpan } from '../lib/trace/constants';\nexport function wrapApiHandler(page, handler) {\n    return (...args)=>{\n        getTracer().setRootSpanAttribute('next.route', page);\n        // Call API route method\n        return getTracer().trace(NodeSpan.runHandler, {\n            spanName: `executing api route (pages) ${page}`\n        }, ()=>handler(...args));\n    };\n}\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ export function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ export function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === 'string') {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== 'number' || typeof url !== 'string') {\n        throw Object.defineProperty(new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`), \"__NEXT_ERROR_CODE\", {\n            value: \"E389\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nexport function checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nexport const COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nexport const COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nexport const RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nexport const SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nexport const SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nexport function clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = require('next/dist/compiled/cookie');\n    const previous = res.getHeader('Set-Cookie');\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === 'string' ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, '', {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite: process.env.NODE_ENV !== 'development' ? 'none' : 'lax',\n            secure: process.env.NODE_ENV !== 'development',\n            path: '/',\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ export class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ export function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ export function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n}\n\n//# sourceMappingURL=index.js.map","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const AppRouterContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call AppRouterContext() from the server but AppRouterContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\",\n\"AppRouterContext\",\n);export const LayoutRouterContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call LayoutRouterContext() from the server but LayoutRouterContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\",\n\"LayoutRouterContext\",\n);export const GlobalLayoutRouterContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call GlobalLayoutRouterContext() from the server but GlobalLayoutRouterContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\",\n\"GlobalLayoutRouterContext\",\n);export const TemplateContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call TemplateContext() from the server but TemplateContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\",\n\"TemplateContext\",\n);export const MissingSlotContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call MissingSlotContext() from the server but MissingSlotContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\",\n\"MissingSlotContext\",\n);","(()=>{\"use strict\";var e={328:e=>{function hash(e){var r=5381,_=e.length;while(_){r=r*33^e.charCodeAt(--_)}return r>>>0}e.exports=hash}};var r={};function __nccwpck_require__(_){var a=r[_];if(a!==undefined){return a.exports}var t=r[_]={exports:{}};var i=true;try{e[_](t,t.exports,__nccwpck_require__);i=false}finally{if(i)delete r[_]}return t.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var _=__nccwpck_require__(328);module.exports=_})();","import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../../server/app-render/work-unit-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-runtime':\n      case 'prerender-client':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        throw new BailoutToCSRError(reason)\n      case 'request':\n      case 'cache':\n      case 'private-cache':\n      case 'unstable-cache':\n        break\n      default:\n        workUnitStore satisfies never\n    }\n  }\n}\n","const sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nexport function createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nexport function bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nexport function createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { NEXT_INTERCEPTION_MARKER_PREFIX, NEXT_QUERY_PARAM_PREFIX } from '../../lib/constants';\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ export function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === 'undefined') continue;\n            if (typeof v === 'number') {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== '=' && ch !== ';' && ch !== ',';\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === ',') {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === '=') {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ export function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === 'set-cookie') {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw Object.defineProperty(new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        }), \"__NEXT_ERROR_CODE\", {\n            value: \"E61\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\n/**\n * Normalizes `nxtP` and `nxtI` query param values to remove the prefix.\n * This function does not mutate the input key.\n */ export function normalizeNextQueryParam(key) {\n    const prefixes = [\n        NEXT_QUERY_PARAM_PREFIX,\n        NEXT_INTERCEPTION_MARKER_PREFIX\n    ];\n    for (const prefix of prefixes){\n        if (key !== prefix && key.startsWith(prefix)) {\n            return key.substring(prefix.length);\n        }\n    }\n    return null;\n}\n\n//# sourceMappingURL=utils.js.map","export const styles: Record<string, React.CSSProperties> = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  desc: {\n    display: 'inline-block',\n  },\n\n  h1: {\n    display: 'inline-block',\n    margin: '0 20px 0 0',\n    padding: '0 23px 0 0',\n    fontSize: 24,\n    fontWeight: 500,\n    verticalAlign: 'top',\n    lineHeight: '49px',\n  },\n\n  h2: {\n    fontSize: 14,\n    fontWeight: 400,\n    lineHeight: '49px',\n    margin: 0,\n  },\n}\n","import { styles } from '../styles/access-error-styles'\n\nexport function HTTPAccessErrorFallback({\n  status,\n  message,\n}: {\n  status: number\n  message: string\n}) {\n  return (\n    <>\n      {/* <head> */}\n      <title>{`${status}: ${message}`}</title>\n      {/* </head> */}\n      <div style={styles.error}>\n        <div>\n          <style\n            dangerouslySetInnerHTML={{\n              /* Minified CSS from\n                body { margin: 0; color: #000; background: #fff; }\n                .next-error-h1 {\n                  border-right: 1px solid rgba(0, 0, 0, .3);\n                }\n\n                @media (prefers-color-scheme: dark) {\n                  body { color: #fff; background: #000; }\n                  .next-error-h1 {\n                    border-right: 1px solid rgba(255, 255, 255, .3);\n                  }\n                }\n              */\n              __html: `body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}`,\n            }}\n          />\n          <h1 className=\"next-error-h1\" style={styles.h1}>\n            {status}\n          </h1>\n          <div style={styles.desc}>\n            <h2 style={styles.h2}>{message}</h2>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","'use strict';\n\nvar s;\nif (process.env.NODE_ENV === 'production') {\n  s = require('./cjs/react-dom-server.edge.production.js');\n} else {\n  s = require('./cjs/react-dom-server.edge.development.js');\n}\n\nexports.version = s.version;\nexports.prerender = s.prerender;\nexports.resumeAndPrerender = s.resumeAndPrerender;\n","import type { Segment } from '../../../server/app-render/types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\nexport function createRouterCacheKey(\n  segment: Segment,\n  withoutSearchParameters: boolean = false\n) {\n  // if the segment is an array, it means it's a dynamic segment\n  // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n  if (Array.isArray(segment)) {\n    return `${segment[0]}|${segment[1]}|${segment[2]}`\n  }\n\n  // Page segments might have search parameters, ie __PAGE__?foo=bar\n  // When `withoutSearchParameters` is true, we only want to return the page segment\n  if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n    return PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nexport function isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","import { createAsyncLocalStorage } from './async-local-storage';\nexport const dynamicAccessAsyncStorageInstance = createAsyncLocalStorage();\n\n//# sourceMappingURL=dynamic-access-async-storage-instance.js.map","// Share the instance module in the next-shared layer\nimport { dynamicAccessAsyncStorageInstance } from './dynamic-access-async-storage-instance' with {\n    'turbopack-transition': 'next-shared'\n};\nexport { dynamicAccessAsyncStorageInstance as dynamicAccessAsyncStorage };\n\n//# sourceMappingURL=dynamic-access-async-storage.external.js.map","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */ export const scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */ export const scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */ export function atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */ export function waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","const workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nexport function HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n","import { NextURL } from '../next-url';\nimport { toNodeOutgoingHttpHeaders, validateURL } from '../utils';\nimport { RemovedUAError, RemovedPageError } from '../error';\nimport { RequestCookies } from './cookies';\nexport const INTERNALS = Symbol('internal request');\n/**\n * This class extends the [Web `Request` API](https://developer.mozilla.org/docs/Web/API/Request) with additional convenience methods.\n *\n * Read more: [Next.js Docs: `NextRequest`](https://nextjs.org/docs/app/api-reference/functions/next-request)\n */ export class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== 'string' && 'url' in input ? input.url : String(input);\n        validateURL(url);\n        // node Request instance requires duplex option when a body\n        // is present or it errors, we don't handle this for\n        // Request being passed in since it would have already\n        // errored if this wasn't configured\n        if (process.env.NEXT_RUNTIME !== 'edge') {\n            if (init.body && init.duplex !== 'half') {\n                init.duplex = 'half';\n            }\n        }\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new NextURL(url, {\n            headers: toNodeOutgoingHttpHeaders(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            nextUrl,\n            url: process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE ? url : nextUrl.toString()\n        };\n    }\n    [Symbol.for('edge-runtime.inspect.custom')]() {\n        return {\n            cookies: this.cookies,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n}\n\n//# sourceMappingURL=request.js.map","/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */ export class DetachedPromise {\n    constructor(){\n        let resolve;\n        let reject;\n        // Create the promise and assign the resolvers to the object.\n        this.promise = new Promise((res, rej)=>{\n            resolve = res;\n            reject = rej;\n        });\n        // We know that resolvers is defined because the Promise constructor runs\n        // synchronously.\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n}\n\n//# sourceMappingURL=detached-promise.js.map","import { NEXT_CACHE_IMPLICIT_TAG_ID } from '../../lib/constants';\nimport { getCacheHandlerEntries } from '../use-cache/handlers';\nimport { createLazyResult } from './lazy-result';\nconst getDerivedTags = (pathname)=>{\n    const derivedTags = [\n        `/layout`\n    ];\n    // we automatically add the current path segments as tags\n    // for revalidatePath handling\n    if (pathname.startsWith('/')) {\n        const pathnameParts = pathname.split('/');\n        for(let i = 1; i < pathnameParts.length + 1; i++){\n            let curPathname = pathnameParts.slice(0, i).join('/');\n            if (curPathname) {\n                // all derived tags other than the page are layout tags\n                if (!curPathname.endsWith('/page') && !curPathname.endsWith('/route')) {\n                    curPathname = `${curPathname}${!curPathname.endsWith('/') ? '/' : ''}layout`;\n                }\n                derivedTags.push(curPathname);\n            }\n        }\n    }\n    return derivedTags;\n};\n/**\n * Creates a map with lazy results that fetch the expiration value for the given\n * tags and respective cache kind when they're awaited for the first time.\n */ function createTagsExpirationsByCacheKind(tags) {\n    const expirationsByCacheKind = new Map();\n    const cacheHandlers = getCacheHandlerEntries();\n    if (cacheHandlers) {\n        for (const [kind, cacheHandler] of cacheHandlers){\n            if ('getExpiration' in cacheHandler) {\n                expirationsByCacheKind.set(kind, createLazyResult(async ()=>cacheHandler.getExpiration(...tags)));\n            }\n        }\n    }\n    return expirationsByCacheKind;\n}\nexport async function getImplicitTags(page, url, fallbackRouteParams) {\n    const tags = [];\n    const hasFallbackRouteParams = fallbackRouteParams && fallbackRouteParams.size > 0;\n    // Add the derived tags from the page.\n    const derivedTags = getDerivedTags(page);\n    for (let tag of derivedTags){\n        tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`;\n        tags.push(tag);\n    }\n    // Add the tags from the pathname. If the route has unknown params, we don't\n    // want to add the pathname as a tag, as it will be invalid.\n    if (url.pathname && !hasFallbackRouteParams) {\n        const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`;\n        tags.push(tag);\n    }\n    return {\n        tags,\n        expirationsByCacheKind: createTagsExpirationsByCacheKind(tags)\n    };\n}\n\n//# sourceMappingURL=implicit-tags.js.map","import { useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport type { FlightRouterState } from '../../server/app-render/types'\n\nconst ANNOUNCER_TYPE = 'next-route-announcer'\nconst ANNOUNCER_ID = '__next-route-announcer__'\n\nfunction getAnnouncerNode() {\n  const existingAnnouncer = document.getElementsByName(ANNOUNCER_TYPE)[0]\n  if (existingAnnouncer?.shadowRoot?.childNodes[0]) {\n    return existingAnnouncer.shadowRoot.childNodes[0] as HTMLElement\n  } else {\n    const container = document.createElement(ANNOUNCER_TYPE)\n    container.style.cssText = 'position:absolute'\n    const announcer = document.createElement('div')\n    announcer.ariaLive = 'assertive'\n    announcer.id = ANNOUNCER_ID\n    announcer.role = 'alert'\n    announcer.style.cssText =\n      'position:absolute;border:0;height:1px;margin:-1px;padding:0;width:1px;clip:rect(0 0 0 0);overflow:hidden;white-space:nowrap;word-wrap:normal'\n\n    // Use shadow DOM here to avoid any potential CSS bleed\n    const shadow = container.attachShadow({ mode: 'open' })\n    shadow.appendChild(announcer)\n    document.body.appendChild(container)\n    return announcer\n  }\n}\n\nexport function AppRouterAnnouncer({ tree }: { tree: FlightRouterState }) {\n  const [portalNode, setPortalNode] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    const announcer = getAnnouncerNode()\n    setPortalNode(announcer)\n    return () => {\n      const container = document.getElementsByTagName(ANNOUNCER_TYPE)[0]\n      if (container?.isConnected) {\n        document.body.removeChild(container)\n      }\n    }\n  }, [])\n\n  const [routeAnnouncement, setRouteAnnouncement] = useState('')\n  const previousTitle = useRef<string | undefined>(undefined)\n\n  useEffect(() => {\n    let currentTitle = ''\n    if (document.title) {\n      currentTitle = document.title\n    } else {\n      const pageHeader = document.querySelector('h1')\n      if (pageHeader) {\n        currentTitle = pageHeader.innerText || pageHeader.textContent || ''\n      }\n    }\n\n    // Only announce the title change, but not for the first load because screen\n    // readers do that automatically.\n    if (\n      previousTitle.current !== undefined &&\n      previousTitle.current !== currentTitle\n    ) {\n      setRouteAnnouncement(currentTitle)\n    }\n    previousTitle.current = currentTitle\n  }, [tree])\n\n  return portalNode ? createPortal(routeAnnouncement, portalNode) : null\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport type { CacheNode } from '../../../../shared/lib/app-router-context.shared-runtime'\nimport { DEFAULT_SEGMENT_KEY } from '../../../../shared/lib/segment'\nimport { createRouterCacheKey } from '../create-router-cache-key'\n\nexport function findHeadInCache(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1]\n): [CacheNode, string, string] | null {\n  return findHeadInCacheImpl(cache, parallelRoutes, '', '')\n}\n\nfunction findHeadInCacheImpl(\n  cache: CacheNode,\n  parallelRoutes: FlightRouterState[1],\n  keyPrefix: string,\n  keyPrefixWithoutSearchParams: string\n): [CacheNode, string, string] | null {\n  const isLastItem = Object.keys(parallelRoutes).length === 0\n  if (isLastItem) {\n    // Returns the entire Cache Node of the segment whose head we will render.\n    return [cache, keyPrefix, keyPrefixWithoutSearchParams]\n  }\n\n  // First try the 'children' parallel route if it exists\n  // when starting from the \"root\", this corresponds with the main page component\n  const parallelRoutesKeys = Object.keys(parallelRoutes).filter(\n    (key) => key !== 'children'\n  )\n\n  // if we are at the root, we need to check the children slot first\n  if ('children' in parallelRoutes) {\n    parallelRoutesKeys.unshift('children')\n  }\n\n  for (const key of parallelRoutesKeys) {\n    const [segment, childParallelRoutes] = parallelRoutes[key]\n    // If the parallel is not matched and using the default segment,\n    // skip searching the head from it.\n    if (segment === DEFAULT_SEGMENT_KEY) {\n      continue\n    }\n    const childSegmentMap = cache.parallelRoutes.get(key)\n    if (!childSegmentMap) {\n      continue\n    }\n\n    const cacheKey = createRouterCacheKey(segment)\n    const cacheKeyWithoutSearchParams = createRouterCacheKey(segment, true)\n\n    const cacheNode = childSegmentMap.get(cacheKey)\n    if (!cacheNode) {\n      continue\n    }\n\n    const item = findHeadInCacheImpl(\n      cacheNode,\n      childParallelRoutes,\n      keyPrefix + '/' + cacheKey,\n      keyPrefix + '/' + cacheKeyWithoutSearchParams\n    )\n\n    if (item) {\n      return item\n    }\n  }\n\n  return null\n}\n","import { hasBasePath } from './has-base-path'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function removeBasePath(path: string): string {\n  if (process.env.__NEXT_MANUAL_CLIENT_BASE_PATH) {\n    if (!hasBasePath(path)) {\n      return path\n    }\n  }\n\n  // Can't trim the basePath if it has zero length!\n  if (basePath.length === 0) return path\n\n  path = path.slice(basePath.length)\n  if (!path.startsWith('/')) path = `/${path}`\n  return path\n}\n","import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n","'use client'\n\nimport { Component, createRef, type ReactNode } from 'react'\n\ninterface ErrorBoundaryProps {\n  children: ReactNode\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean\n}\n\nfunction getDomNodeAttributes(node: HTMLElement): Record<string, string> {\n  const result: Record<string, string> = {}\n  for (let i = 0; i < node.attributes.length; i++) {\n    const attr = node.attributes[i]\n    result[attr.name] = attr.value\n  }\n  return result\n}\n\nexport class GracefulDegradeBoundary extends Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  private rootHtml: string\n  private htmlAttributes: Record<string, string>\n  private htmlRef: React.RefObject<HTMLHtmlElement | null>\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props)\n    this.state = { hasError: false }\n    this.rootHtml = ''\n    this.htmlAttributes = {}\n    this.htmlRef = createRef<HTMLHtmlElement>()\n  }\n\n  static getDerivedStateFromError(_: unknown): ErrorBoundaryState {\n    return { hasError: true }\n  }\n\n  componentDidMount() {\n    const htmlNode = this.htmlRef.current\n    if (this.state.hasError && htmlNode) {\n      // Reapply the cached HTML attributes to the root element\n      Object.entries(this.htmlAttributes).forEach(([key, value]) => {\n        htmlNode.setAttribute(key, value)\n      })\n    }\n  }\n\n  render() {\n    const { hasError } = this.state\n    // Cache the root HTML content on the first render\n    if (typeof window !== 'undefined' && !this.rootHtml) {\n      this.rootHtml = document.documentElement.innerHTML\n      this.htmlAttributes = getDomNodeAttributes(document.documentElement)\n    }\n\n    if (hasError) {\n      // Render the current HTML content without hydration\n      return (\n        <html\n          ref={this.htmlRef}\n          suppressHydrationWarning\n          dangerouslySetInnerHTML={{\n            __html: this.rootHtml,\n          }}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default GracefulDegradeBoundary\n","'use client'\n\nimport React, { type JSX } from 'react'\nimport GracefulDegradeBoundary from './graceful-degrade-boundary'\nimport { ErrorBoundary, type ErrorBoundaryProps } from '../error-boundary'\nimport { isBot } from '../../../shared/lib/router/utils/is-bot'\n\nconst isBotUserAgent =\n  typeof window !== 'undefined' && isBot(window.navigator.userAgent)\n\nexport default function RootErrorBoundary({\n  children,\n  errorComponent,\n  errorStyles,\n  errorScripts,\n}: ErrorBoundaryProps & { children: React.ReactNode }): JSX.Element {\n  if (isBotUserAgent) {\n    // Preserve existing DOM/HTML for bots to avoid replacing content with an error UI\n    // and to keep the original SSR output intact.\n    return <GracefulDegradeBoundary>{children}</GracefulDegradeBoundary>\n  }\n\n  return (\n    <ErrorBoundary\n      errorComponent={errorComponent}\n      errorStyles={errorStyles}\n      errorScripts={errorScripts}\n    >\n      {children}\n    </ErrorBoundary>\n  )\n}\n","'use client'\n\nimport React, {\n  useEffect,\n  useMemo,\n  startTransition,\n  useInsertionEffect,\n  useDeferredValue,\n} from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  GlobalLayoutRouterContext,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport type { CacheNode } from '../../shared/lib/app-router-context.shared-runtime'\nimport { ACTION_RESTORE } from './router-reducer/router-reducer-types'\nimport type { AppRouterState } from './router-reducer/router-reducer-types'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { dispatchAppRouterAction, useActionQueue } from './use-action-queue'\nimport { isBot } from '../../shared/lib/router/utils/is-bot'\nimport { addBasePath } from '../add-base-path'\nimport { AppRouterAnnouncer } from './app-router-announcer'\nimport { RedirectBoundary } from './redirect-boundary'\nimport { findHeadInCache } from './router-reducer/reducers/find-head-in-cache'\nimport { unresolvedThenable } from './unresolved-thenable'\nimport { removeBasePath } from '../remove-base-path'\nimport { hasBasePath } from '../has-base-path'\nimport { getSelectedParams } from './router-reducer/compute-changed-path'\nimport type { FlightRouterState } from '../../server/app-render/types'\nimport { useNavFailureHandler } from './nav-failure-handler'\nimport {\n  dispatchTraverseAction,\n  publicAppRouterInstance,\n  type AppRouterActionQueue,\n  type GlobalErrorState,\n} from './app-router-instance'\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect'\nimport { isRedirectError, RedirectType } from './redirect-error'\nimport { pingVisibleLinks } from './links'\nimport RootErrorBoundary from './errors/root-error-boundary'\nimport DefaultGlobalError from './builtin/global-error'\nimport { RootLayoutBoundary } from '../../lib/framework/boundary-components'\n\nconst globalMutable: {\n  pendingMpaPath?: string\n} = {}\n\nexport function isExternalURL(url: URL) {\n  return url.origin !== window.location.origin\n}\n\n/**\n * Given a link href, constructs the URL that should be prefetched. Returns null\n * in cases where prefetching should be disabled, like external URLs, or\n * during development.\n * @param href The href passed to <Link>, router.prefetch(), or similar\n * @returns A URL object to prefetch, or null if prefetching should be disabled\n */\nexport function createPrefetchURL(href: string): URL | null {\n  // Don't prefetch for bots as they don't navigate.\n  if (isBot(window.navigator.userAgent)) {\n    return null\n  }\n\n  let url: URL\n  try {\n    url = new URL(addBasePath(href), window.location.href)\n  } catch (_) {\n    // TODO: Does this need to throw or can we just console.error instead? Does\n    // anyone rely on this throwing? (Seems unlikely.)\n    throw new Error(\n      `Cannot prefetch '${href}' because it cannot be converted to a URL.`\n    )\n  }\n\n  // Don't prefetch during development (improves compilation performance)\n  if (process.env.NODE_ENV === 'development') {\n    return null\n  }\n\n  // External urls can't be prefetched in the same way.\n  if (isExternalURL(url)) {\n    return null\n  }\n\n  return url\n}\n\nfunction HistoryUpdater({\n  appRouterState,\n}: {\n  appRouterState: AppRouterState\n}) {\n  useInsertionEffect(() => {\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      // clear pending URL as navigation is no longer\n      // in flight\n      window.next.__pendingUrl = undefined\n    }\n\n    const { tree, pushRef, canonicalUrl } = appRouterState\n    const historyState = {\n      ...(pushRef.preserveCustomHistoryState ? window.history.state : {}),\n      // Identifier is shortened intentionally.\n      // __NA is used to identify if the history entry can be handled by the app-router.\n      // __N is used to identify if the history entry can be handled by the old router.\n      __NA: true,\n      __PRIVATE_NEXTJS_INTERNALS_TREE: tree,\n    }\n    if (\n      pushRef.pendingPush &&\n      // Skip pushing an additional history entry if the canonicalUrl is the same as the current url.\n      // This mirrors the browser behavior for normal navigation.\n      createHrefFromUrl(new URL(window.location.href)) !== canonicalUrl\n    ) {\n      // This intentionally mutates React state, pushRef is overwritten to ensure additional push/replace calls do not trigger an additional history entry.\n      pushRef.pendingPush = false\n      window.history.pushState(historyState, '', canonicalUrl)\n    } else {\n      window.history.replaceState(historyState, '', canonicalUrl)\n    }\n  }, [appRouterState])\n\n  useEffect(() => {\n    // The Next-Url and the base tree may affect the result of a prefetch\n    // task. Re-prefetch all visible links with the updated values. In most\n    // cases, this will not result in any new network requests, only if\n    // the prefetch result actually varies on one of these inputs.\n    if (process.env.__NEXT_CLIENT_SEGMENT_CACHE) {\n      pingVisibleLinks(appRouterState.nextUrl, appRouterState.tree)\n    }\n  }, [appRouterState.nextUrl, appRouterState.tree])\n\n  return null\n}\n\nexport function createEmptyCacheNode(): CacheNode {\n  return {\n    lazyData: null,\n    rsc: null,\n    prefetchRsc: null,\n    head: null,\n    prefetchHead: null,\n    parallelRoutes: new Map(),\n    loading: null,\n    navigatedAt: -1,\n  }\n}\n\nfunction copyNextJsInternalHistoryState(data: any) {\n  if (data == null) data = {}\n  const currentState = window.history.state\n  const __NA = currentState?.__NA\n  if (__NA) {\n    data.__NA = __NA\n  }\n  const __PRIVATE_NEXTJS_INTERNALS_TREE =\n    currentState?.__PRIVATE_NEXTJS_INTERNALS_TREE\n  if (__PRIVATE_NEXTJS_INTERNALS_TREE) {\n    data.__PRIVATE_NEXTJS_INTERNALS_TREE = __PRIVATE_NEXTJS_INTERNALS_TREE\n  }\n\n  return data\n}\n\nfunction Head({\n  headCacheNode,\n}: {\n  headCacheNode: CacheNode | null\n}): React.ReactNode {\n  // If this segment has a `prefetchHead`, it's the statically prefetched data.\n  // We should use that on initial render instead of `head`. Then we'll switch\n  // to `head` when the dynamic response streams in.\n  const head = headCacheNode !== null ? headCacheNode.head : null\n  const prefetchHead =\n    headCacheNode !== null ? headCacheNode.prefetchHead : null\n\n  // If no prefetch data is available, then we go straight to rendering `head`.\n  const resolvedPrefetchRsc = prefetchHead !== null ? prefetchHead : head\n\n  // We use `useDeferredValue` to handle switching between the prefetched and\n  // final values. The second argument is returned on initial render, then it\n  // re-renders with the first argument.\n  return useDeferredValue(head, resolvedPrefetchRsc)\n}\n\n/**\n * The global router that wraps the application components.\n */\nfunction Router({\n  actionQueue,\n  assetPrefix,\n  globalError,\n}: {\n  actionQueue: AppRouterActionQueue\n  assetPrefix: string\n  globalError: GlobalErrorState\n}) {\n  const state = useActionQueue(actionQueue)\n  const { canonicalUrl } = state\n  // Add memoized pathname/query for useSearchParams and usePathname.\n  const { searchParams, pathname } = useMemo(() => {\n    const url = new URL(\n      canonicalUrl,\n      typeof window === 'undefined' ? 'http://n' : window.location.href\n    )\n\n    return {\n      // This is turned into a readonly class in `useSearchParams`\n      searchParams: url.searchParams,\n      pathname: hasBasePath(url.pathname)\n        ? removeBasePath(url.pathname)\n        : url.pathname,\n    }\n  }, [canonicalUrl])\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { cache, prefetchCache, tree } = state\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      // Add `window.nd` for debugging purposes.\n      // This is not meant for use in applications as concurrent rendering will affect the cache/tree/router.\n      // @ts-ignore this is for debugging\n      window.nd = {\n        router: publicAppRouterInstance,\n        cache,\n        prefetchCache,\n        tree,\n      }\n    }, [cache, prefetchCache, tree])\n  }\n\n  useEffect(() => {\n    // If the app is restored from bfcache, it's possible that\n    // pushRef.mpaNavigation is true, which would mean that any re-render of this component\n    // would trigger the mpa navigation logic again from the lines below.\n    // This will restore the router to the initial state in the event that the app is restored from bfcache.\n    function handlePageShow(event: PageTransitionEvent) {\n      if (\n        !event.persisted ||\n        !window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n      ) {\n        return\n      }\n\n      // Clear the pendingMpaPath value so that a subsequent MPA navigation to the same URL can be triggered.\n      // This is necessary because if the browser restored from bfcache, the pendingMpaPath would still be set to the value\n      // of the last MPA navigation.\n      globalMutable.pendingMpaPath = undefined\n\n      dispatchAppRouterAction({\n        type: ACTION_RESTORE,\n        url: new URL(window.location.href),\n        tree: window.history.state.__PRIVATE_NEXTJS_INTERNALS_TREE,\n      })\n    }\n\n    window.addEventListener('pageshow', handlePageShow)\n\n    return () => {\n      window.removeEventListener('pageshow', handlePageShow)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Ensure that any redirect errors that bubble up outside of the RedirectBoundary\n    // are caught and handled by the router.\n    function handleUnhandledRedirect(\n      event: ErrorEvent | PromiseRejectionEvent\n    ) {\n      const error = 'reason' in event ? event.reason : event.error\n      if (isRedirectError(error)) {\n        event.preventDefault()\n        const url = getURLFromRedirectError(error)\n        const redirectType = getRedirectTypeFromError(error)\n        // TODO: This should access the router methods directly, rather than\n        // go through the public interface.\n        if (redirectType === RedirectType.push) {\n          publicAppRouterInstance.push(url, {})\n        } else {\n          publicAppRouterInstance.replace(url, {})\n        }\n      }\n    }\n    window.addEventListener('error', handleUnhandledRedirect)\n    window.addEventListener('unhandledrejection', handleUnhandledRedirect)\n\n    return () => {\n      window.removeEventListener('error', handleUnhandledRedirect)\n      window.removeEventListener('unhandledrejection', handleUnhandledRedirect)\n    }\n  }, [])\n\n  // When mpaNavigation flag is set do a hard navigation to the new url.\n  // Infinitely suspend because we don't actually want to rerender any child\n  // components with the new URL and any entangled state updates shouldn't\n  // commit either (eg: useTransition isPending should stay true until the page\n  // unloads).\n  //\n  // This is a side effect in render. Don't try this at home, kids. It's\n  // probably safe because we know this is a singleton component and it's never\n  // in <Offscreen>. At least I hope so. (It will run twice in dev strict mode,\n  // but that's... fine?)\n  const { pushRef } = state\n  if (pushRef.mpaNavigation) {\n    // if there's a re-render, we don't want to trigger another redirect if one is already in flight to the same URL\n    if (globalMutable.pendingMpaPath !== canonicalUrl) {\n      const location = window.location\n      if (pushRef.pendingPush) {\n        location.assign(canonicalUrl)\n      } else {\n        location.replace(canonicalUrl)\n      }\n\n      globalMutable.pendingMpaPath = canonicalUrl\n    }\n    // TODO-APP: Should we listen to navigateerror here to catch failed\n    // navigations somehow? And should we call window.stop() if a SPA navigation\n    // should interrupt an MPA one?\n    // NOTE: This is intentionally using `throw` instead of `use` because we're\n    // inside an externally mutable condition (pushRef.mpaNavigation), which\n    // violates the rules of hooks.\n    throw unresolvedThenable\n  }\n\n  useEffect(() => {\n    const originalPushState = window.history.pushState.bind(window.history)\n    const originalReplaceState = window.history.replaceState.bind(\n      window.history\n    )\n\n    // Ensure the canonical URL in the Next.js Router is updated when the URL is changed so that `usePathname` and `useSearchParams` hold the pushed values.\n    const applyUrlFromHistoryPushReplace = (\n      url: string | URL | null | undefined\n    ) => {\n      const href = window.location.href\n      const tree: FlightRouterState | undefined =\n        window.history.state?.__PRIVATE_NEXTJS_INTERNALS_TREE\n\n      startTransition(() => {\n        dispatchAppRouterAction({\n          type: ACTION_RESTORE,\n          url: new URL(url ?? href, href),\n          tree,\n        })\n      })\n    }\n\n    /**\n     * Patch pushState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.pushState = function pushState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalPushState(data, _unused, url)\n      }\n\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n\n      return originalPushState(data, _unused, url)\n    }\n\n    /**\n     * Patch replaceState to ensure external changes to the history are reflected in the Next.js Router.\n     * Ensures Next.js internal history state is copied to the new history entry.\n     * Ensures usePathname and useSearchParams hold the newly provided url.\n     */\n    window.history.replaceState = function replaceState(\n      data: any,\n      _unused: string,\n      url?: string | URL | null\n    ): void {\n      // Avoid a loop when Next.js internals trigger pushState/replaceState\n      if (data?.__NA || data?._N) {\n        return originalReplaceState(data, _unused, url)\n      }\n      data = copyNextJsInternalHistoryState(data)\n\n      if (url) {\n        applyUrlFromHistoryPushReplace(url)\n      }\n      return originalReplaceState(data, _unused, url)\n    }\n\n    /**\n     * Handle popstate event, this is used to handle back/forward in the browser.\n     * By default dispatches ACTION_RESTORE, however if the history entry was not pushed/replaced by app-router it will reload the page.\n     * That case can happen when the old router injected the history entry.\n     */\n    const onPopState = (event: PopStateEvent) => {\n      if (!event.state) {\n        // TODO-APP: this case only happens when pushState/replaceState was called outside of Next.js. It should probably reload the page in this case.\n        return\n      }\n\n      // This case happens when the history entry was pushed by the `pages` router.\n      if (!event.state.__NA) {\n        window.location.reload()\n        return\n      }\n\n      // TODO-APP: Ideally the back button should not use startTransition as it should apply the updates synchronously\n      // Without startTransition works if the cache is there for this path\n      startTransition(() => {\n        dispatchTraverseAction(\n          window.location.href,\n          event.state.__PRIVATE_NEXTJS_INTERNALS_TREE\n        )\n      })\n    }\n\n    // Register popstate event to call onPopstate.\n    window.addEventListener('popstate', onPopState)\n    return () => {\n      window.history.pushState = originalPushState\n      window.history.replaceState = originalReplaceState\n      window.removeEventListener('popstate', onPopState)\n    }\n  }, [])\n\n  const { cache, tree, nextUrl, focusAndScrollRef } = state\n\n  const matchingHead = useMemo(() => {\n    return findHeadInCache(cache, tree[1])\n  }, [cache, tree])\n\n  // Add memoized pathParams for useParams.\n  const pathParams = useMemo(() => {\n    return getSelectedParams(tree)\n  }, [tree])\n\n  const layoutRouterContext = useMemo(() => {\n    return {\n      parentTree: tree,\n      parentCacheNode: cache,\n      parentSegmentPath: null,\n      // Root node always has `url`\n      // Provided in AppTreeContext to ensure it can be overwritten in layout-router\n      url: canonicalUrl,\n    }\n  }, [tree, cache, canonicalUrl])\n\n  const globalLayoutRouterContext = useMemo(() => {\n    return {\n      tree,\n      focusAndScrollRef,\n      nextUrl,\n    }\n  }, [tree, focusAndScrollRef, nextUrl])\n\n  let head\n  if (matchingHead !== null) {\n    // The head is wrapped in an extra component so we can use\n    // `useDeferredValue` to swap between the prefetched and final versions of\n    // the head. (This is what LayoutRouter does for segment data, too.)\n    //\n    // The `key` is used to remount the component whenever the head moves to\n    // a different segment.\n    const [headCacheNode, headKey, headKeyWithoutSearchParams] = matchingHead\n\n    head = (\n      <Head\n        key={\n          // Necessary for PPR: omit search params from the key to match prerendered keys\n          typeof window === 'undefined' ? headKeyWithoutSearchParams : headKey\n        }\n        headCacheNode={headCacheNode}\n      />\n    )\n  } else {\n    head = null\n  }\n\n  let content = (\n    <RedirectBoundary>\n      {head}\n      {/* RootLayoutBoundary enables detection of Suspense boundaries around the root layout.\n          When users wrap their layout in <Suspense>, this creates the component stack pattern\n          \"Suspense -> RootLayoutBoundary\" which dynamic-rendering.ts uses to allow dynamic rendering. */}\n      <RootLayoutBoundary>{cache.rsc}</RootLayoutBoundary>\n      <AppRouterAnnouncer tree={tree} />\n    </RedirectBoundary>\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    // In development, we apply few error boundaries and hot-reloader:\n    // - DevRootHTTPAccessFallbackBoundary: avoid using navigation API like notFound() in root layout\n    // - HotReloader:\n    //  - hot-reload the app when the code changes\n    //  - render dev overlay\n    //  - catch runtime errors and display global-error when necessary\n    if (typeof window !== 'undefined') {\n      const { DevRootHTTPAccessFallbackBoundary } =\n        require('./dev-root-http-access-fallback-boundary') as typeof import('./dev-root-http-access-fallback-boundary')\n      content = (\n        <DevRootHTTPAccessFallbackBoundary>\n          {content}\n        </DevRootHTTPAccessFallbackBoundary>\n      )\n    }\n    const HotReloader: typeof import('../dev/hot-reloader/app/hot-reloader-app').default =\n      (\n        require('../dev/hot-reloader/app/hot-reloader-app') as typeof import('../dev/hot-reloader/app/hot-reloader-app')\n      ).default\n\n    content = (\n      <HotReloader assetPrefix={assetPrefix} globalError={globalError}>\n        {content}\n      </HotReloader>\n    )\n  } else {\n    content = (\n      <RootErrorBoundary\n        errorComponent={globalError[0]}\n        errorStyles={globalError[1]}\n      >\n        {content}\n      </RootErrorBoundary>\n    )\n  }\n\n  return (\n    <>\n      <HistoryUpdater appRouterState={state} />\n      <RuntimeStyles />\n      <PathParamsContext.Provider value={pathParams}>\n        <PathnameContext.Provider value={pathname}>\n          <SearchParamsContext.Provider value={searchParams}>\n            <GlobalLayoutRouterContext.Provider\n              value={globalLayoutRouterContext}\n            >\n              {/* TODO: We should be able to remove this context. useRouter\n                  should import from app-router-instance instead. It's only\n                  necessary because useRouter is shared between Pages and\n                  App Router. We should fork that module, then remove this\n                  context provider. */}\n              <AppRouterContext.Provider value={publicAppRouterInstance}>\n                <LayoutRouterContext.Provider value={layoutRouterContext}>\n                  {content}\n                </LayoutRouterContext.Provider>\n              </AppRouterContext.Provider>\n            </GlobalLayoutRouterContext.Provider>\n          </SearchParamsContext.Provider>\n        </PathnameContext.Provider>\n      </PathParamsContext.Provider>\n    </>\n  )\n}\n\nexport default function AppRouter({\n  actionQueue,\n  globalErrorState,\n  assetPrefix,\n}: {\n  actionQueue: AppRouterActionQueue\n  globalErrorState: GlobalErrorState\n  assetPrefix: string\n}) {\n  useNavFailureHandler()\n\n  const router = (\n    <Router\n      actionQueue={actionQueue}\n      assetPrefix={assetPrefix}\n      globalError={globalErrorState}\n    />\n  )\n\n  // At the very top level, use the default GlobalError component as the final fallback.\n  // When the app router itself fails, which means the framework itself fails, we show the default error.\n  return (\n    <RootErrorBoundary errorComponent={DefaultGlobalError}>\n      {router}\n    </RootErrorBoundary>\n  )\n}\n\nconst runtimeStyles = new Set<string>()\nlet runtimeStyleChanged = new Set<() => void>()\n\nglobalThis._N_E_STYLE_LOAD = function (href: string) {\n  let len = runtimeStyles.size\n  runtimeStyles.add(href)\n  if (runtimeStyles.size !== len) {\n    runtimeStyleChanged.forEach((cb) => cb())\n  }\n  // TODO figure out how to get a promise here\n  // But maybe it's not necessary as react would block rendering until it's loaded\n  return Promise.resolve()\n}\n\nfunction RuntimeStyles() {\n  const [, forceUpdate] = React.useState(0)\n  const renderedStylesSize = runtimeStyles.size\n  useEffect(() => {\n    const changed = () => forceUpdate((c) => c + 1)\n    runtimeStyleChanged.add(changed)\n    if (renderedStylesSize !== runtimeStyles.size) {\n      changed()\n    }\n    return () => {\n      runtimeStyleChanged.delete(changed)\n    }\n  }, [renderedStylesSize, forceUpdate])\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n  return [...runtimeStyles].map((href, i) => (\n    <link\n      key={i}\n      rel=\"stylesheet\"\n      href={`${href}${dplId}`}\n      // @ts-ignore\n      precedence=\"next\"\n      // TODO figure out crossOrigin and nonce\n      // crossOrigin={TODO}\n      // nonce={TODO}\n    />\n  ))\n}\n","/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */ /**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */ const PARAM_SEPARATOR = '_NEXTSEP_';\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */ export function hasAdjacentParameterIssues(route) {\n    if (typeof route !== 'string') return false;\n    // Check for interception route markers followed immediately by parameters\n    // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n    // These patterns cause \"Must have text between two parameters\" errors\n    if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n        return true;\n    }\n    // Check for basic adjacent parameters without separators\n    // Pattern: :param1:param2 (but not :param* or other URL patterns)\n    if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n        return true;\n    }\n    return false;\n}\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */ export function normalizeAdjacentParameters(route) {\n    let normalized = route;\n    // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n    normalized = normalized.replace(/(\\([^)]*\\)):([^/\\s]+)/g, `$1${PARAM_SEPARATOR}:$2`);\n    // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n    normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`);\n    return normalized;\n}\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */ export function normalizeTokensForRegexp(tokens) {\n    return tokens.map((token)=>{\n        // Token union type: Token = string | TokenObject\n        // Literal path segments are strings, parameters/wildcards are objects\n        if (typeof token === 'object' && token !== null && // Not all token objects have 'modifier' property (e.g., simple text tokens)\n        'modifier' in token && // Only repeating modifiers (* or +) cause the validation error\n        // Other modifiers like '?' (optional) are fine\n        (token.modifier === '*' || token.modifier === '+') && // Token objects can have different shapes depending on route pattern\n        'prefix' in token && 'suffix' in token && // Both prefix and suffix must be empty strings\n        // This is what causes the validation error in path-to-regexp\n        token.prefix === '' && token.suffix === '') {\n            // Add minimal prefix to satisfy path-to-regexp validation\n            // We use '/' as it's the most common path delimiter and won't break route matching\n            // The prefix gets used in regex generation but doesn't affect parameter extraction\n            return {\n                ...token,\n                prefix: '/'\n            };\n        }\n        return token;\n    });\n}\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */ export function stripParameterSeparators(params) {\n    const cleaned = {};\n    for (const [key, value] of Object.entries(params)){\n        if (typeof value === 'string') {\n            // Remove the separator if it appears at the start of parameter values\n            cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '');\n        } else if (Array.isArray(value)) {\n            // Handle array parameters (from repeated route segments)\n            cleaned[key] = value.map((item)=>typeof item === 'string' ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '') : item);\n        } else {\n            cleaned[key] = value;\n        }\n    }\n    return cleaned;\n}\n\n//# sourceMappingURL=route-pattern-normalizer.js.map","/**\n * Calls the given async function only when the returned promise-like object is\n * awaited. Afterwards, it provides the resolved value synchronously as `value`\n * property.\n */ export function createLazyResult(fn) {\n    let pendingResult;\n    const result = {\n        then (onfulfilled, onrejected) {\n            if (!pendingResult) {\n                pendingResult = fn();\n            }\n            pendingResult.then((value)=>{\n                result.value = value;\n            }).catch(()=>{\n            // The externally awaited result will be rejected via `onrejected`. We\n            // don't need to handle it here. But we do want to avoid an unhandled\n            // rejection.\n            });\n            return pendingResult.then(onfulfilled, onrejected);\n        }\n    };\n    return result;\n}\nexport function isResolvedLazyResult(result) {\n    return result.hasOwnProperty('value');\n}\n\n//# sourceMappingURL=lazy-result.js.map","/**\n * In edge runtime, these props directly accessed from environment variables.\n *   - local: env vars will be injected through edge-runtime as runtime env vars\n *   - deployment: env vars will be replaced by edge build pipeline\n */ export function getEdgePreviewProps() {\n    return {\n        previewModeId: process.env.__NEXT_PREVIEW_MODE_ID || '',\n        previewModeSigningKey: process.env.__NEXT_PREVIEW_MODE_SIGNING_KEY || '',\n        previewModeEncryptionKey: process.env.__NEXT_PREVIEW_MODE_ENCRYPTION_KEY || ''\n    };\n}\n\n//# sourceMappingURL=get-edge-preview-props.js.map","import { HTTPAccessErrorFallback } from '../http-access-fallback/error-fallback'\n\nexport default function Forbidden() {\n  return (\n    <HTTPAccessErrorFallback\n      status={403}\n      message=\"This page could not be accessed.\"\n    />\n  )\n}\n","// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str: string) {\n  let hash = 5381\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) + hash + char) & 0xffffffff\n  }\n  return hash >>> 0\n}\n\nexport function hexHash(str: string) {\n  return djb2Hash(str).toString(36).slice(0, 5)\n}\n","import { hexHash } from '../../hash'\n\nexport function computeCacheBustingSearchParam(\n  prefetchHeader: '1' | '2' | '0' | undefined,\n  segmentPrefetchHeader: string | string[] | undefined,\n  stateTreeHeader: string | string[] | undefined,\n  nextUrlHeader: string | string[] | undefined\n): string {\n  if (\n    (prefetchHeader === undefined || prefetchHeader === '0') &&\n    segmentPrefetchHeader === undefined &&\n    stateTreeHeader === undefined &&\n    nextUrlHeader === undefined\n  ) {\n    return ''\n  }\n  return hexHash(\n    [\n      prefetchHeader || '0',\n      segmentPrefetchHeader || '0',\n      stateTreeHeader || '0',\n      nextUrlHeader || '0',\n    ].join(',')\n  )\n}\n","'use client'\n\nimport { computeCacheBustingSearchParam } from '../../../shared/lib/router/utils/cache-busting-search-param'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  NEXT_RSC_UNION_QUERY,\n} from '../app-router-headers'\nimport type { RequestHeaders } from './fetch-server-response'\n\n/**\n * Mutates the provided URL by adding a cache-busting search parameter for CDNs that don't\n * support custom headers. This helps avoid caching conflicts by making each request unique.\n *\n * Rather than relying on the Vary header which some CDNs ignore, we append a search param\n * to create a unique URL that forces a fresh request.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * Note: This function mutates the input URL directly and does not return anything.\n *\n * TODO: Since we need to use a search param anyway, we could simplify by removing the custom\n * headers approach entirely and just use search params.\n */\nexport const setCacheBustingSearchParam = (\n  url: URL,\n  headers: RequestHeaders\n): void => {\n  const uniqueCacheKey = computeCacheBustingSearchParam(\n    headers[NEXT_ROUTER_PREFETCH_HEADER],\n    headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER],\n    headers[NEXT_ROUTER_STATE_TREE_HEADER],\n    headers[NEXT_URL]\n  )\n  setCacheBustingSearchParamWithHash(url, uniqueCacheKey)\n}\n\n/**\n * Sets a cache-busting search parameter on a URL using a provided hash value.\n *\n * This function performs the same logic as `setCacheBustingSearchParam` but accepts\n * a pre-computed hash instead of computing it from headers.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * hash: \"abc123\"\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * If the hash is null, we will set `_rsc` search param without a value.\n * Like this: https://example.com/path?query=1&_rsc\n *\n * Note: This function mutates the input URL directly and does not return anything.\n */\nexport const setCacheBustingSearchParamWithHash = (\n  url: URL,\n  hash: string\n): void => {\n  /**\n   * Note that we intentionally do not use `url.searchParams.set` here:\n   *\n   * const url = new URL('https://example.com/search?q=custom%20spacing');\n   * url.searchParams.set('_rsc', 'abc123');\n   * console.log(url.toString()); // Outputs: https://example.com/search?q=custom+spacing&_rsc=abc123\n   *                                                                             ^ <--- this is causing confusion\n   * This is in fact intended based on https://url.spec.whatwg.org/#interface-urlsearchparams, but\n   * we want to preserve the %20 as %20 if that's what the user passed in, hence the custom\n   * logic below.\n   */\n  const existingSearch = url.search\n  const rawQuery = existingSearch.startsWith('?')\n    ? existingSearch.slice(1)\n    : existingSearch\n\n  // Always remove any existing cache busting param and add a fresh one to ensure\n  // we have the correct value based on current request headers\n  const pairs = rawQuery\n    .split('&')\n    .filter((pair) => pair && !pair.startsWith(`${NEXT_RSC_UNION_QUERY}=`))\n\n  if (hash.length > 0) {\n    pairs.push(`${NEXT_RSC_UNION_QUERY}=${hash}`)\n  } else {\n    pairs.push(`${NEXT_RSC_UNION_QUERY}`)\n  }\n  url.search = pairs.length ? `?${pairs.join('&')}` : ''\n}\n","/**\n * Parse cookies from the `headers` of request\n * @param req request object\n */ export function getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = require('next/dist/compiled/cookie');\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join('; ') : cookie);\n    };\n}\n\n//# sourceMappingURL=get-cookie-parser.js.map","import s from 'next/dist/compiled/superstruct';\nconst dynamicParamTypesSchema = s.enums([\n    'c',\n    'ci',\n    'oc',\n    'd',\n    'di'\n]);\nconst segmentSchema = s.union([\n    s.string(),\n    s.tuple([\n        // Param name\n        s.string(),\n        // Param cache key (almost the same as the value, but arrays are\n        // concatenated into strings)\n        // TODO: We should change this to just be the value. Currently we convert\n        // it back to a value when passing to useParams. It only needs to be\n        // a string when converted to a a cache key, but that doesn't mean we\n        // need to store it as that representation.\n        s.string(),\n        // Dynamic param type\n        dynamicParamTypesSchema\n    ])\n]);\n// unfortunately the tuple is not understood well by Describe so we have to\n// use any here. This does not have any impact on the runtime type since the validation\n// does work correctly.\nexport const flightRouterStateSchema = s.tuple([\n    segmentSchema,\n    s.record(s.string(), s.lazy(()=>flightRouterStateSchema)),\n    s.optional(s.nullable(s.string())),\n    s.optional(s.nullable(s.union([\n        s.literal('refetch'),\n        s.literal('refresh'),\n        s.literal('inside-shared-layout'),\n        s.literal('metadata-only')\n    ]))),\n    s.optional(s.boolean())\n]);\nexport var HasLoadingBoundary = /*#__PURE__*/ function(HasLoadingBoundary) {\n    // There is a loading boundary in this particular segment\n    HasLoadingBoundary[HasLoadingBoundary[\"SegmentHasLoadingBoundary\"] = 1] = \"SegmentHasLoadingBoundary\";\n    // There is a loading boundary somewhere in the subtree (but not in\n    // this segment)\n    HasLoadingBoundary[HasLoadingBoundary[\"SubtreeHasLoadingBoundary\"] = 2] = \"SubtreeHasLoadingBoundary\";\n    // There is no loading boundary in this segment or any of its descendants\n    HasLoadingBoundary[HasLoadingBoundary[\"SubtreeHasNoLoadingBoundary\"] = 3] = \"SubtreeHasNoLoadingBoundary\";\n    return HasLoadingBoundary;\n}({});\n\n//# sourceMappingURL=types.js.map","(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();","'use client'\n\nimport type { ParsedUrlQuery } from 'querystring'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */\nexport function ClientPageRoot({\n  Component,\n  searchParams,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promises,\n}: {\n  Component: React.ComponentType<any>\n  searchParams: ParsedUrlQuery\n  params: Params\n  promises?: Array<Promise<any>>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientSearchParams: Promise<ParsedUrlQuery>\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling searchParams in a client Page.'\n      )\n    }\n\n    const { createSearchParamsFromClient } =\n      require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n    clientSearchParams = createSearchParamsFromClient(searchParams, store)\n\n    const { createParamsFromClient } =\n      require('../../server/request/params') as typeof import('../../server/request/params')\n    clientParams = createParamsFromClient(params, store)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  } else {\n    const { createRenderSearchParamsFromClient } =\n      require('../request/search-params.browser') as typeof import('../request/search-params.browser')\n    const clientSearchParams = createRenderSearchParamsFromClient(searchParams)\n    const { createRenderParamsFromClient } =\n      require('../request/params.browser') as typeof import('../request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","'use client'\n\nimport { createContext } from 'react'\nimport type { Params } from '../../server/request/params'\n\nexport const SearchParamsContext = createContext<URLSearchParams | null>(null)\nexport const PathnameContext = createContext<string | null>(null)\nexport const PathParamsContext = createContext<Params | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  SearchParamsContext.displayName = 'SearchParamsContext'\n  PathnameContext.displayName = 'PathnameContext'\n  PathParamsContext.displayName = 'PathParamsContext'\n}\n","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport const SearchParamsContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call SearchParamsContext() from the server but SearchParamsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\",\n\"SearchParamsContext\",\n);export const PathnameContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call PathnameContext() from the server but PathnameContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\",\n\"PathnameContext\",\n);export const PathParamsContext = registerClientReference(\nfunction() { throw new Error(\"Attempted to call PathParamsContext() from the server but PathParamsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\",\n\"PathParamsContext\",\n);","// This file is generated by the Webpack next-flight-loader.\nimport { registerClientReference } from \"react-server-dom-webpack/server\";\nexport default registerClientReference(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/layout-router.js\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/KoichiOkawa/Desktop/stem-separator-v2/node_modules/next/dist/esm/client/components/layout-router.js\",\n\"default\",\n);\n","export var CachedRouteKind = /*#__PURE__*/ function(CachedRouteKind) {\n    CachedRouteKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    CachedRouteKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    CachedRouteKind[\"PAGES\"] = \"PAGES\";\n    CachedRouteKind[\"FETCH\"] = \"FETCH\";\n    CachedRouteKind[\"REDIRECT\"] = \"REDIRECT\";\n    CachedRouteKind[\"IMAGE\"] = \"IMAGE\";\n    return CachedRouteKind;\n}({});\nexport var IncrementalCacheKind = /*#__PURE__*/ function(IncrementalCacheKind) {\n    IncrementalCacheKind[\"APP_PAGE\"] = \"APP_PAGE\";\n    IncrementalCacheKind[\"APP_ROUTE\"] = \"APP_ROUTE\";\n    IncrementalCacheKind[\"PAGES\"] = \"PAGES\";\n    IncrementalCacheKind[\"FETCH\"] = \"FETCH\";\n    IncrementalCacheKind[\"IMAGE\"] = \"IMAGE\";\n    return IncrementalCacheKind;\n}({});\n\n//# sourceMappingURL=types.js.map","// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */\nconst MODERN_BROWSERSLIST_TARGET = [\n  'chrome 64',\n  'edge 79',\n  'firefox 67',\n  'opera 51',\n  'safari 12',\n]\n\nmodule.exports = MODERN_BROWSERSLIST_TARGET\n"],"names":["Unauthorized","HTTPAccessErrorFallback","status","message","memoryCache","LRUCache","entry","size","pendingSets","Map","debug","process","env","NEXT_PRIVATE_DEBUG_CACHE","console","bind","undefined","get","cacheKey","DefaultCacheHandler","pendingPromise","privateEntry","performance","timeOrigin","now","timestamp","revalidate","isStale","tags","returnStream","newSaved","value","tee","expire","set","pendingEntry","resolvePending","Promise","resolve","clonedValue","reader","getReader","chunk","read","Buffer","from","byteLength","isErrored","errorRetryCount","err","delete","refreshTags","getExpiration","expiration","Math","max","map","tagsManifest","tag","expireTags","round","useRouter","router","useContext","AppRouterContext","HandleRedirect","redirect","reset","redirectType","HTTP_ERROR_FALLBACK_ERROR_CODE","require","RedirectErrorBoundary","React","getDerivedStateFromError","error","isRedirectError","getURLFromRedirectError","getRedirectTypeFromError","render","state","setState","props","children","constructor","RedirectBoundary","RedirectStatusCode","useNavFailureHandler","addBasePath","path","required","addPathPrefix","startsWith","pathname","query","hash","parsePath","removeTrailingSlash","linkForMostRecentNavigation","PENDING_LINK_STATUS","pending","IDLE_LINK_STATUS","setLinkForCurrentNavigation","link","startTransition","setOptimisticLinkStatus","prefetchable","WeakMap","prefetchableAndVisible","Set","IntersectionObserver","handleIntersect","entries","isVisible","intersectionRatio","element","target","instance","add","rescheduleLinkPrefetch","priority","existingPrefetchTask","prefetchTask","cancelPrefetchTask","PrefetchPriority","Default","rootMargin","InvariantError","Error","options","endsWith","name","NameSpace","METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","ROOT_LAYOUT_BOUNDARY_NAME","MetadataBoundary","slice","RootLayoutBoundary","callServer","actionId","actionArgs","reject","dispatchAppRouterAction","type","ACTION_SERVER_ACTION","ReactDOM","REACT_LEGACY_ELEMENT_TYPE","Symbol","for","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_MEMO_CACHE_SENTINEL","MAYBE_ITERATOR_SYMBOL","iterator","getIteratorFn","maybeIterable","ASYNC_ITERATOR","asyncIterator","handleErrorInNextTick","setTimeout","LocalPromise","scheduleMicrotask","queueMicrotask","callback","then","catch","currentView","writtenBytes","writeChunkAndReturn","destination","enqueue","Uint8Array","buffer","allowableBytes","length","subarray","textEncoder","TextEncoder","stringToChunk","content","encode","byteLengthOfChunk","closeWithError","close","CLIENT_REFERENCE_TAG$1","SERVER_REFERENCE_TAG","registerClientReferenceImpl","proxyImplementation","id","async","Object","defineProperties","$$typeof","$$id","$$async","FunctionBind","Function","prototype","ArraySlice","Array","newFn","apply","arguments","args","call","$$bound","concat","configurable","PROMISE_PROTOTYPE","deepProxyHandlers","toPrimitive","toStringTag","String","getReference","moduleId","default","clientReference","proxy","Proxy","proxyHandlers$1","defineProperty","getOwnPropertyDescriptor","descriptor","writable","enumerable","getPrototypeOf","ReactDOMSharedInternals","__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","previousDispatcher","d","trimOptions","key","hasProperties","trimmed","f","r","D","prefetchDNS","href","request","resolveRequest","hints","has","emitHint","C","preconnect","crossOrigin","L","preload","as","imageSrcSet","imageSizes","uniquePart","m","preloadModule$1","X","preinitScript","src","S","preinitStyle","precedence","M","preinitModuleScript","supportsRequestStorage","AsyncLocalStorage","requestStorage","TEMPORARY_REFERENCE_TAG","proxyHandlers","noop","SuspenseException","suspendedThenable","getSuspendedThenable","thenable","currentRequest$1","thenableIndexCounter","thenableState","getThenableStateAfterSuspending","HooksDispatcher","readContext","unsupportedContext","use","usable","index","push","reason","fulfilledValue","fulfilledThenable","rejectedThenable","useCallback","useEffect","unsupportedHook","useImperativeHandle","useLayoutEffect","useInsertionEffect","useMemo","nextCreate","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useSyncExternalStore","useId","identifierCount","identifierPrefix","toString","useHostTransitionStatus","useFormState","useActionState","useOptimistic","useMemoCache","data","i","useCacheRefresh","unsupportedRefresh","DefaultAsyncDispatcher","getCacheForType","resourceType","JSCompiler_inline_result","cache","cacheSignal","cacheController","signal","ReactSharedInternalsServer","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","isArrayImpl","isArray","objectName","object","describeValueForErrorMessage","JSON","stringify","CLIENT_REFERENCE_TAG","displayName","describeObjectForErrorMessage","objectOrArray","expandedName","objKind","str","describeElementType","payload","_payload","_init","x","keys","encodedKey","repeat","hasOwnProperty","ObjectPrototype","defaultErrorHandler","RequestInstance","model","bundlerConfig","onError","onPostpone","onAllReady","onFatalError","temporaryReferences","A","abortSet","pingedTasks","flushScheduled","fatalError","AbortController","pendingChunks","nextChunkId","abortableTasks","completedImportChunks","completedHintChunks","completedRegularChunks","completedErrorChunks","writtenSymbols","writtenClientReferences","writtenServerReferences","writtenObjects","taintCleanupQueue","createTask","currentRequest","store","getStore","serializeThenable","task","newTask","keyPath","implicitSlot","pingTask","erroredTask","abortTask","finishAbortedTask","enqueueFlush","code","readThenable","voidHandler","renderFunctionComponent","Component","prevThenableState","processServerComponentReturnValue","result","createLazyWrapperAroundWakeable","wakeable","iteratorFn","ReadableStream","renderModelDestructive","emptyRoot","renderFragment","serializedSize","deferTask","performWork","serializeByValueID","ping","toJSON","parentPropertyName","prevKeyPath","prevImplicitSlot","thrownValue","logRecoverableError","emitErrorChunk","encodeReferenceChunk","reference","serializeClientReference","parent","clientReferenceKey","existingId","config","modulePath","resolvedModuleData","idx","lastIndexOf","chunks","importId","json","row","processedChunk","outlineModel","retryTask","serializeTypedArray","typedArray","bufferId","emitTypedArrayChunk","modelRoot","elementReference","existingReference","indexOf","ref","renderElement","init","FormData","ArrayBuffer","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","DataView","Blob","serializeBlob","blob","removeEventListener","abortBlob","cancel","stream","addEventListener","progress","done","serializeReadableStream","streamTask","abortStream","supportsBYOB","mode","releaseLock","callOnAllReadyIfReady","tryStreamTask","x$8","serializeAsyncIterable","iterable","abortIterable","throw","next","endStreamRow","chunkId","x$9","Date","emitTextChunk","Number","isFinite","Infinity","bound","test","description","prevRequest","errorDigest","run","abort","cause","digest","emitModelChunk","pendingDebugChunks","byteOffset","text","emitChunk","parentSerializedSize","resolvedModel","errorId","prevDispatcher","H","flushCompletedChunks","importsChunks","splice","hintChunks","regularChunks","errorChunks","startWork","startFlowing","forEach","error$23","resolveServerReference","chunkCache","requireAsyncModule","promise","globalThis","__next_require__","ignoreReject","preloadModule","metadata","promises","__webpack_chunk_load__","all","requireModule","moduleExports","__esModule","Chunk","response","_response","createPendingChunk","wakeChunk","listeners","triggerErrorOnChunk","resolveModelChunk","enqueueModel","resolveListeners","rejectListeners","initializeModelChunk","createResolvedIteratorResultChunk","resolveIteratorResultChunk","create","initializingChunk","initializingChunkBlockedModel","prevChunk","prevBlocked","rootReference","rawModel","parse","reviveModel","parentObj","parentKey","parseModelString","obj","parseInt","getOutlinedModel","createModel","loadServerReference$1","parentChunk","parentObject","serverReference","_bundlerConfig","_ref","fn","createModelResolver","createModelReject","_temporaryReferences","createMap","createSet","formPrefix","_prefix","_formData","entryKey","append","extractIterator","NaN","BigInt","parseTypedArray","parseReadableStream","parseAsyncIterable","deps","reportGlobalError","_closed","_closedReason","_chunks","getChunk","cyclic","blocked","split","bytesPerElement","arrayBuffer","resolveStream","controller","getAll","start","c","previousBlockedChunk","v","e","chunk$26","blockedChunk","closed","nextWriteIndex","$jscomp$compprop2","nextReadIndex","arg","createResponse","formFieldPrefix","backingFormData","loadServerReference","decodeBoundActionMetaData","body","serverManifest","exports","formData","action","actionResult","metaData","referenceId","webpackMap","form","prefix","exportName","aborted","listener","pull","highWaterMark","prelude","DYNAMIC_ERROR_CODE","DynamicServerError","isDynamicServerError","PromiseQueue","promiseFn","taskResolve","taskReject","taskPromise","enqueueResult","bump","findIndex","item","bumpedItem","unshift","maxConcurrency","forced","shift","prefetchQueue","prefetchReducer","prefetchReducerImpl","prunePrefetchCache","prefetchCache","identityReducerWhenSegmentCacheIsEnabled","url","getOrCreatePrefetchCacheEntry","nextUrl","kind","tree","allowAliasing","invalidServerComponentReactHooks","setMessage","stack","lines","join","getStackWithoutErrorMessage","formatServerError","includes","addedMessage","clientHook","regex","isPlainObject","encodeURIPath","file","encodeURIComponent","p","infoByte","argMask","usedArgs","bit","bitPosition","typeBit","hasRestArgs","stringifyResumeDataCache","resumeDataCache","createPrerenderResumeDataCache","fetch","encryptedBoundArgs","decryptedBoundArgs","createRenderResumeDataCache","resumeDataCacheOrPersistedCache","createInitialRouterState","initialSeedData","navigatedAt","initialFlightData","initialCanonicalUrlParts","initialParallelRoutes","location","couldBeIntercepted","postponed","prerendered","initialCanonicalUrl","normalizedFlightData","getFlightDataPartsFromPath","initialTree","seedData","head","initialHead","lazyData","rsc","prefetchRsc","prefetchHead","parallelRoutes","loading","canonicalUrl","createHrefFromUrl","addRefreshMarkerToActiveParallelSegments","fillLazyItemsTillLeafWithHead","initialState","pushRef","pendingPush","mpaNavigation","preserveCustomHistoryState","focusAndScrollRef","onlyHashChange","hashFragment","segmentPaths","extractPathFromFlightRouterState","URL","search","origin","createSeededPrefetchCacheEntry","flightData","staleTime","STATIC_STALETIME_MS","PrefetchKind","FULL","AUTO","createPromiseWithResolvers","res","rej","COMPILER_NAMES","client","server","edgeServer","normalizeDataPath","pathHasPrefix","replace","segment","escapeEncoded","char","RouterContext","AmpStateContext","deviceSizes","loader","loaderFile","domains","disableStaticImages","minimumCacheTTL","formats","dangerouslyAllowSVG","contentSecurityPolicy","contentDispositionType","localPatterns","remotePatterns","qualities","unoptimized","normalizeAppPath","route","ensureLeadingSlash","reduce","segments","isGroupSegment","normalizeRscURL","addSearchParamsIfPageSegment","searchParams","isPageSegment","PAGE_SEGMENT_KEY","stringifiedQuery","normalizePagePath","page","normalized","isDynamicRoute","getSelectedParams","currentTree","params","parallelRoute","values","isDynamicParameter","segmentValue","flightRouterState","DEFAULT_SEGMENT_KEY","INTERCEPTION_ROUTE_MARKERS","some","childrenPath","childPath","acc","removeLeadingSlash","NotFound","isDefinitelyAValidIdentifier","describeStringPropertyAccess","prop","describeHasCheckingStringProperty","stringifiedProp","wellKnownProperties","runRemainingActions","actionQueue","runAction","needsRefresh","dispatch","ACTION_REFRESH","window","prevState","handleResult","nextState","discarded","isThenable","createMutableActionQueue","instrumentationHooks","dispatchAction","resolvers","ACTION_RESTORE","deferredPromise","newAction","last","ACTION_NAVIGATE","onRouterTransitionStart","getCurrentAppRouterState","globalActionQueue","dispatchNavigateAction","navigateType","shouldScroll","linkInstanceRef","isExternalUrl","isExternalURL","locationSearch","dispatchTraverseAction","publicAppRouterInstance","back","history","forward","prefetch","getAppRouterActionQueue","createPrefetchURL","ACTION_PREFETCH","scroll","refresh","hmrRefresh","getRouteRegex","normalizedRoute","includeSuffix","includePrefix","excludeOptionalTrailingSlash","parameterizedRoute","groups","getParametrizedRoute","groupIndex","markerMatch","find","paramMatches","match","PARAMETER_PATTERN","optional","parseMatchedParameter","pos","escapeStringRegexp","s","substring","re","getSafeKeyFromSegment","pattern","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","duplicateKey","interceptionPrefix","getNamedRouteRegex","getNamedParametrizedRoute","prefixRouteKeys","routeKey","buildGetSafeRouteKey","j","fromCharCode","floor","hasInterceptionMarker","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_QUERY_PARAM_PREFIX","namedParameterizedRoute","namedRegex","hasPostpone","unstable_postpone","markCurrentScopeAsDynamic","workUnitStore","expression","forceDynamic","forceStatic","dynamicShouldError","StaticGenBailoutError","postponeWithTracking","dynamicTracking","dynamicUsageDescription","dynamicUsageStack","throwToInterruptStaticGeneration","prerenderStore","trackDynamicDataInDynamicRender","Postpone","workUnitAsyncStorage","assertPostpone","dynamicAccesses","isDebugDynamicAccesses","createPostponeReason","isDynamicPostpone","isDynamicPostponeReason","isPrerenderInterruptedError","NEXT_PRERENDER_INTERRUPTED","annotateDynamicAccess","delayUntilRuntimeStage","runtimeStagePromise","RegExp","bodyAndImplicitTags","matchSegment","existingSegment","decoderOptions","knownServerReferences","boundCache","defaultEncodeFormAction","referenceClosure","processReply","blobId","nextPartId","resolveToJSON","parentReference","pendingParts","lazyId","partJSON","serializeModel","lazyId$23","partJSON$24","data$25","promiseId","partValue","partJSON$27","data$31","originalValue","originalKey","streamId","binaryReader","serializeReader","serializeBinaryReader","partJSON$21","x$22","serializeNumber","number","root","encodeFormData","prefixedData","method","encType","isSignatureEqual","numberOfBoundArgs","boundPromise","boundArgs","registerBoundServerReference","encodeFormAction","originalBind","$$FORM_ACTION","$$IS_SIGNATURE_EQUAL","ReactPromise","readChunk","initializeModuleChunk","fulfillReference","rejectChunk","rejectReference","resolveBlockedCycle","resolvedChunk","referencedChunk","handler","wakeChunkIfInitialized","cyclicHandler","resolveModuleChunk","initializingHandler","prevHandler","_fromJSON","errored","weakResponse","createLazyChunkWrapper","waitForReference","_serverReferenceConfig","createBoundServerReference","_callServer","_encodeFormAction","resolvedValue","createBlob","createFormData","missingCall","ResponseInstance","serverReferenceConfig","moduleLoading","nonce","_moduleLoading","_nonce","_stringDecoder","TextDecoder","_tempRefs","createFromJSONCallback","resolveErrorProd","resolveBuffer","enqueueValue","startReadableStream","chunk$52","startAsyncIterable","mergeBuffer","lastChunk","l","i$53","resolveTypedArray","noServerCall","startReadingFromStream","streamState","_rowState","_rowID","_rowTag","_rowLength","_buffer","rowState","rowTag","rowLength","chunkLength","lastIdx","offset","processFullBinaryRow","stringDecoder","decode","resolveClientReference","prepareDestinationWithChunks","nonce$jscomp$0","JSCompiler_temp_const$jscomp$0","JSCompiler_temp_const","JSCompiler_temp_const$jscomp$1","serverConsumerManifest","moduleMap","serverModuleMap","notEnabled","schedulePrefetchTask","reschedulePrefetchTask","createCacheKey","FetchStrategy","HTTPAccessFallbackErrorBoundary","componentDidCatch","isHTTPAccessFallbackError","triggeredStatus","getAccessFallbackHTTPStatus","getDerivedStateFromProps","previousPathname","notFound","forbidden","unauthorized","errorComponents","HTTPAccessErrorStatus","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","isNotFound","isForbidden","isUnauthorized","meta","HTTPAccessFallbackBoundary","useUntrackedPathname","missingSlots","MissingSlotContext","hasErrorFallback","ACTION_SERVER_PATCH","PrefetchCacheEntryStatus","RenderFromTemplateContext","TemplateContext","useActionQueue","unescapeSegments","compileNonPath","safeCompile","validate","slashedProtocols","getPathMatch","regexp","pathToRegexp","delimiter","sensitive","strict","matcher","regexpToFunction","regexModifier","source","flags","removeUnnamedParams","matchHas","missing","hasMatch","hasItem","toLowerCase","req","headers","cookies","getCookieParser","host","getSafeParamName","newParamName","paramName","charCode","charCodeAt","matches","groupKey","allMatch","every","prepareDestination","destHostnameCompiler","newUrl","parsedDestination","parseDestination","escaped","param","escapeSegment","segmentName","parsed","parseUrl","parseRelativeUrl","parsedURL","hostname","port","protocol","searchParamsToUrlQuery","slashes","destHostname","destQuery","destSearch","destPath","destParams","destPathParamKeys","safePathToRegexp","destHostnameParamKeys","destPathCompiler","strOrArray","paramKeys","filter","appendParamsToQuery","isInterceptionRouteAppPath","marker","auth","urlObj","querystring","ErrorBoundaryHandler","isNextRouterError","isBotUserAgent","HandleISRError","errorStyles","errorScripts","this","errorComponent","ErrorBoundary","createDynamicTrackingState","syncDynamicErrorWithStack","createDynamicValidationState","hasSuspenseAboveBody","hasDynamicMetadata","hasDynamicViewport","hasAllowedDynamic","dynamicErrors","warnOnSyncDynamicError","accessedDynamicData","consumeDynamicAccess","serverDynamic","clientDynamic","formatDynamicAPIAccesses","access","line","createRenderInBrowserAbortSignal","BailoutToCSRError","useDynamicRouteParams","workStore","workAsyncStorage","fallbackParams","fallbackRouteParams","makeHangingPromise","renderSignal","hasSuspenseRegex","hasSuspenseBeforeRootLayoutWithoutBodyOrImplicitBodyRegex","hasMetadataRegex","hasViewportRegex","hasOutletRegex","trackAllowedDynamicAccess","componentStack","dynamicValidation","createErrorWithComponentOrOwnerStack","ownerStack","PreludeState","logDisallowedDynamicError","dev","hasReadableErrorStacks","throwIfDisallowedDynamic","removePathPrefix","withoutPrefix","unresolvedThenable","BAILOUT_TO_CSR","isBailoutToCSRError","includeHash","parseRelativeURL","base","baseURL","relative","isRelative","ACTION_HEADER","NEXT_ROUTER_PREFETCH_HEADER","DecodeError","reHasRegExp","reReplaceRegExp","getRouteMatcher","safeRouteMatcher","routeMatch","exec","rawMatcher","decodeURIComponent","group","matcherFn","SERVER_ACTION_MANIFESTS_SINGLETON","HTML_LIMITED_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","getBotType","userAgent","isDomBotUA","hashIndex","queryIndex","hasQuery","addPathSuffix","suffix","normalizeLocalePath","locales","detectedLocale","lowercasedLocales","locale","getNextPathnameInfo","basePath","i18n","trailingSlash","nextConfig","info","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","getHostname","detectDomainLocale","domainItems","domainHostname","domain","defaultLocale","addLocale","ignorePrefix","lower","finished","headersSent","NoFallbackError","throwWithStaticGenerationBailoutErrorWithDynamicError","createServerSearchParamsForServerPage","underlyingSearchParams","createStaticPrerenderSearchParams","cachedSearchParams","CachedSearchParams","proxiedPromise","receiver","hasOwn","ReflectAdapter","ownKeys","createRuntimePrerenderSearchParams","makeUntrackedExoticSearchParams","makeUntrackedSearchParams","createRenderSearchParams","throwInvariantForMissingStore","createPrerenderSearchParamsForClientPage","createDedupedByCallsiteServerErrorLoggerDev","createSearchAccessError","missingProperties","createIncompleteEnumerationError","describeListOfPropertyNames","properties","simpleParamValueRegex","encodeToFilesystemAndURLSafeString","btoa","base64url","childRequestKeyPart","paramType","encodedName","safeName","parallelRouteKey","slotKey","clientReferenceManifest","serverActionsManifest","clientReferenceManifestsPerPage","DOCTYPE_PREFIX","originalHtml","escapeBuildId","truncated","MAX_BUILD_ID_LENGTH","IconMark","newCache","existingCache","routerState","cacheNodeSeedData","prefetchEntry","isLastSegment","newCacheNode","parallelRouteState","segmentForParallelRoute","createRouterCacheKey","parallelSeedData","existingParallelRoutesCacheNode","hasReusablePrefetch","reusable","parallelRouteCacheNode","existingCacheNode","seedNode","existingParallelRoutes","findSourceMapURL","HeadManagerContext","ClientSegmentRoot","slots","clientParams","createParamsFromClient","revalidatedAt","throwForSearchParamsAccessInUseCache","constructorOpt","captureStackTrace","invalidDynamicUsageError","createSearchParamsFromClient","createServerSearchParamsForMetadata","CachedSearchParamsForUseCache","makeErroringSearchParamsForUseCache","createPrefetchCacheKeyImpl","includeSearchParams","pathnameFromUrl","INTERCEPTION_CACHE_KEY_MARKER","createPrefetchCacheKey","existingCacheEntry","getExistingCacheEntry","maybeNextUrl","TEMPORARY","cacheKeyWithParams","cacheKeyWithoutParams","cacheKeyToUse","existingEntry","isAliased","aliased","entryWithoutParams","cacheEntry","getPrefetchEntryCacheStatus","switchedToFullPrefetch","isFullPrefetch","prefetchResponse","isRootRender","createLazyPrefetchEntry","prefetchCacheKey","treeAtTimeOfPrefetch","prefetchTime","lastUsedTime","fresh","fetchServerResponse","prefetchKind","newCacheKey","prefixExistingPrefetchCacheEntry","existingCacheKey","prefetchCacheEntry","DYNAMIC_STALETIME_MS","stale","urlToUrlWithoutFlightMarker","urlWithoutFlightParameters","NEXT_RSC_UNION_QUERY","createFromReadableStream","createFromReadableStreamBrowser","doMpaNavigation","abortController","RSC_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","prepareFlightRouterStateForRequest","isHmrRefresh","NEXT_URL","fetchPriority","createFetch","responseUrl","redirected","contentType","interception","NEXT_DID_POSTPONE_HEADER","staleTimeHeaderSeconds","NEXT_ROUTER_STALE_TIME_HEADER","RSC_CONTENT_TYPE_HEADER","ok","flightStream","createUnclosingPrefetchStream","originalFlightStream","createFromNextReadableStream","getAppBuildId","b","normalizeFlightData","fetchUrl","setCacheBustingSearchParam","browserResponse","credentials","fetchOptions","NEXT_STATIC_GEN_BAILOUT","isStaticGenBailoutError","httpStatus","ALLOWED_CODES","getAccessFallbackErrorTypeByStatus","hasFallbackRouteParams","PathnameContext","dynamic","RootLayout","html","lang","className","refetchMarker","NEXT_HMR_REFRESH_HASH_COOKIE","NEXT_HMR_REFRESH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","getDynamicParam","segmentKey","dynamicParamType","pagePath","isOptionalCatchall","isCatchall","treeSegment","parseParameter","pathSegment","flightDataPath","segmentPath","isHeadPartial","flightDataPathLength","pathToSegment","stripClientOnlyDataFromFlightRouterState","_url","refreshMarker","isRootLayout","hasLoadingBoundary","cleanedSegment","stripSearchParamsFromPageSegment","cleanedParallelRoutes","childState","shouldPreserveRefreshMarker","actionAsyncStorage","RootRedirect","sid","random","isAction","RedirectType","getRedirectError","statusCode","TemporaryRedirect","REDIRECT_ERROR_CODE","errorCode","at","isNaN","rectProperties","topOfElementInViewport","viewportHeight","rect","getBoundingClientRect","top","InnerScrollAndFocusHandler","componentDidMount","handlePotentialScroll","componentDidUpdate","scrollRefSegmentPath","domNode","getHashFragmentDomNode","document","getElementById","getElementsByName","findDOMNode","Element","HTMLElement","shouldSkipElement","getComputedStyle","position","nextElementSibling","disableSmoothScrollDuringRouteTransition","htmlElement","documentElement","dataset","scrollBehavior","style","dontForceLayout","getClientRects","existing","scrollIntoView","clientHeight","scrollTop","focus","ScrollAndFocusHandler","context","GlobalLayoutRouterContext","InnerLayoutRouter","cacheNode","fullTree","resolvedPrefetchRsc","resolvedRsc","refetchTree","walkAddRefetch","segmentPathToWalk","treeToRecreate","isLast","subTree","includeNextUrl","hasInterceptionRouteInCurrentTree","previousTree","serverResponse","LayoutRouterContext","Provider","parentTree","parentCacheNode","parentSegmentPath","LoadingBoundary","loadingModuleData","loadingRsc","loadingStyles","loadingScripts","Suspense","fallback","OuterLayoutRouter","parallelRouterKey","templateStyles","templateScripts","template","segmentViewBoundaries","parentParallelRoutes","segmentMap","parentTreeSegment","activeTree","activeSegment","bfcacheEntry","useRouterBFCache","activeStateKey","prevActiveEntry","setPrevActiveEntry","stateKey","newActiveEntry","n","oldEntry","clonedEntry","MAX_BF_CACHE_ENTRIES","newLazyCacheNode","child","setReferenceManifestsSingleton","getServerModuleMap","serverActionsManifestSingleton","MetadataOutlet","AsyncMetadataOutlet","ServerInsertedHTMLContext","useServerInsertedHTML","addInsertedServerHTMLCallback","module","styles","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","fontSize","fontWeight","lineHeight","margin","DefaultGlobalError","div","h2","bailoutToClientRendering","desc","h1","padding","verticalAlign","title","dangerouslySetInnerHTML","__html","withoutSearchParameters","parseQuery","globalBase","resolvedBase","getLocationOrigin","extractInterceptionRouteInformation","interceptingRoute","interceptedRoute","splitInterceptingRoute","createIterator","createResponseFromOptions","promiseForResponse","unstable_rethrow","isPostpone","isHangingPromiseRejectionError","TEST_ROUTE","TEST_STRICT_ROUTE","isRevalidate","isStaticGeneration","getRedirectStatusCodeFromError","AppRouterAnnouncer","portalNode","setPortalNode","routeAnnouncement","setRouteAnnouncement","createPortal","RootErrorBoundary","globalMutable","isBot","navigator","_","HistoryUpdater","appRouterState","historyState","__NA","__PRIVATE_NEXTJS_INTERNALS_TREE","pushState","replaceState","createEmptyCacheNode","Head","headCacheNode","Router","assetPrefix","globalError","hasBasePath","removeBasePath","pendingMpaPath","assign","matchingHead","findHeadInCacheImpl","keyPrefixWithoutSearchParams","isLastItem","parallelRoutesKeys","childParallelRoutes","childSegmentMap","cacheKeyWithoutSearchParams","pathParams","layoutRouterContext","globalLayoutRouterContext","headKey","headKeyWithoutSearchParams","RuntimeStyles","PathParamsContext","SearchParamsContext","AppRouter","globalErrorState","runtimeStyles","runtimeStyleChanged","forceUpdate","rel","dplId","_N_E_STYLE_LOAD","len","cb","needsNormalization","hasAdjacentParameterIssues","routeToUse","normalizeAdjacentParameters","retryError","compile","isHtmlLimitedBotUA","HEADLESS_BROWSER_BOT_UA_RE","Forbidden","setCacheBustingSearchParamWithHash","computeCacheBustingSearchParam","uniqueCacheKey","segmentPrefetchHeader","stateTreeHeader","nextUrlHeader","prefetchHeader","djb2Hash","existingSearch","pairs","rawQuery","pair","ClientPageRoot","clientSearchParams","stringifyUrlQueryParam","urlQueryToSearchParams","URLSearchParams","createContext","MODERN_BROWSERSLIST_TARGET"],"sourceRoot":"","ignoreList":[0,1,2,5,6,13,14,16,18,20,24,27,29,30,32,35,37,38,40,41,42,43,44,45,46,47,48,49,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,96,97,99,100,101,102,103,104,105,106,107,109,112,113,115,116,121,122,123,124,125,128,129,134,136,150,153,154,155,156,157,158,161,162,163,164,165,169,170,171,173,174,175,179,180,181,182,184,189,191,193,194,195,196,197,200,202,204,205,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,227,233,238,240,241,242,243,244,245,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,312,313,314,316,317,320,321,323,324,325,326,327,328,329,330,333,336,337,339,342,343,345,351,353,356,357,358,360,361,362,364,366,367,369,370,371,372,374,382,383,384,385,386,389,390,393,394,395,396,397,399,400,403,406,408,409,410,412,414,415,416,424,425,426,431,432,433,437,438,439]}